{"(*archive/tar.Format).String":[[0],[]],"(*archive/tar.Format).has":[[0],[1]],"(*archive/tar.Format).mayBe":[[0,1]],"(*archive/tar.Format).mayOnlyBe":[[0,1]],"(*archive/tar.Format).mustNotBe":[[0,1]],"(*archive/tar.Header).FileInfo":[[0],[0]],"(*archive/tar.Header).allowedFormats":[[0],[],[],[]],"(*archive/tar.Reader).Next":[[0],[0],[0]],"(*archive/tar.Reader).Read":[[0],[],[0]],"(*archive/tar.Reader).handleRegularFile":[[0,1],[]],"(*archive/tar.Reader).handleSparseFile":[[0,1,2],[0]],"(*archive/tar.Reader).next":[[0],[0],[0]],"(*archive/tar.Reader).readGNUSparsePAXHeaders":[[0],[1],[]],"(*archive/tar.Reader).readHeader":[[0],[0],[0],[0]],"(*archive/tar.Reader).readHeader$1":[[0]],"(*archive/tar.Reader).readHeader$2":[[0]],"(*archive/tar.Reader).readOldGNUSparseMap":[[0],[2],[0]],"(*archive/tar.Reader).writeTo":[[0,1],[],[0,1]],"(*archive/tar.Writer).Close":[[0],[0]],"(*archive/tar.Writer).Flush":[[0],[0]],"(*archive/tar.Writer).Write":[[0],[],[0]],"(*archive/tar.Writer).WriteHeader":[[0,1],[0,1]],"(*archive/tar.Writer).readFrom":[[0,1],[0],[0,1]],"(*archive/tar.Writer).templateV7Plus":[[0],[0]],"(*archive/tar.Writer).writeGNUHeader":[[0,1],[0,1]],"(*archive/tar.Writer).writePAXHeader":[[0,1],[0]],"(*archive/tar.Writer).writePAXHeader$1":[],"(*archive/tar.Writer).writeRawFile":[[0],[0]],"(*archive/tar.Writer).writeRawHeader":[[0,2],[0]],"(*archive/tar.Writer).writeUSTARHeader":[[0,1],[0]],"(*archive/tar.block).computeChecksum":[[0],[0],[0]],"(*archive/tar.block).getFormat":[[0],[]],"(*archive/tar.block).reset":[[0]],"(*archive/tar.block).setFormat":[[0]],"(*archive/tar.block).toGNU":[[0],[0]],"(*archive/tar.block).toSTAR":[[0],[0]],"(*archive/tar.block).toSparse":[[0],[0]],"(*archive/tar.block).toUSTAR":[[0],[0]],"(*archive/tar.block).toV7":[[0],[0]],"(*archive/tar.formatter).formatNumeric":[[0]],"(*archive/tar.formatter).formatNumeric$bound":[],"(*archive/tar.formatter).formatOctal":[[0]],"(*archive/tar.formatter).formatOctal$bound":[],"(*archive/tar.formatter).formatString":[[0]],"(*archive/tar.formatter).formatString$bound":[],"(*archive/tar.headerError).Error":[[0],[]],"(*archive/tar.headerFileInfo).IsDir":[[0],[]],"(*archive/tar.headerFileInfo).ModTime":[[0],[]],"(*archive/tar.headerFileInfo).Mode":[[0],[]],"(*archive/tar.headerFileInfo).Name":[[0],[]],"(*archive/tar.headerFileInfo).Size":[[0],[]],"(*archive/tar.headerFileInfo).Sys":[[0],[]],"(*archive/tar.headerGNU).accessTime":[[0],[0]],"(*archive/tar.headerGNU).changeTime":[[0],[0]],"(*archive/tar.headerGNU).devMajor":[[0],[0]],"(*archive/tar.headerGNU).devMinor":[[0],[0]],"(*archive/tar.headerGNU).groupName":[[0],[0]],"(*archive/tar.headerGNU).magic":[[0],[0]],"(*archive/tar.headerGNU).realSize":[[0],[0]],"(*archive/tar.headerGNU).sparse":[[0],[0]],"(*archive/tar.headerGNU).userName":[[0],[0]],"(*archive/tar.headerGNU).v7":[[0],[0]],"(*archive/tar.headerGNU).version":[[0],[0]],"(*archive/tar.headerSTAR).accessTime":[[0],[0]],"(*archive/tar.headerSTAR).changeTime":[[0],[0]],"(*archive/tar.headerSTAR).devMajor":[[0],[0]],"(*archive/tar.headerSTAR).devMinor":[[0],[0]],"(*archive/tar.headerSTAR).groupName":[[0],[0]],"(*archive/tar.headerSTAR).magic":[[0],[0]],"(*archive/tar.headerSTAR).prefix":[[0],[0]],"(*archive/tar.headerSTAR).trailer":[[0],[0]],"(*archive/tar.headerSTAR).userName":[[0],[0]],"(*archive/tar.headerSTAR).v7":[[0],[0]],"(*archive/tar.headerSTAR).version":[[0],[0]],"(*archive/tar.headerUSTAR).devMajor":[[0],[0]],"(*archive/tar.headerUSTAR).devMinor":[[0],[0]],"(*archive/tar.headerUSTAR).groupName":[[0],[0]],"(*archive/tar.headerUSTAR).magic":[[0],[0]],"(*archive/tar.headerUSTAR).prefix":[[0],[0]],"(*archive/tar.headerUSTAR).userName":[[0],[0]],"(*archive/tar.headerUSTAR).v7":[[0],[0]],"(*archive/tar.headerUSTAR).version":[[0],[0]],"(*archive/tar.headerV7).chksum":[[0],[0]],"(*archive/tar.headerV7).gid":[[0],[0]],"(*archive/tar.headerV7).linkName":[[0],[0]],"(*archive/tar.headerV7).modTime":[[0],[0]],"(*archive/tar.headerV7).mode":[[0],[0]],"(*archive/tar.headerV7).name":[[0],[0]],"(*archive/tar.headerV7).size":[[0],[0]],"(*archive/tar.headerV7).typeFlag":[[0],[0]],"(*archive/tar.headerV7).uid":[[0],[0]],"(*archive/tar.parser).parseNumeric":[[0],[1]],"(*archive/tar.parser).parseOctal":[[0],[1]],"(*archive/tar.parser).parseString":[[0],[1]],"(*archive/tar.regFileReader).Read":[[0],[],[0]],"(*archive/tar.regFileReader).WriteTo":[[0],[],[0,1]],"(*archive/tar.regFileReader).logicalRemaining":[[0],[]],"(*archive/tar.regFileReader).physicalRemaining":[[0],[]],"(*archive/tar.regFileWriter).ReadFrom":[[0],[],[0,1]],"(*archive/tar.regFileWriter).Write":[[0],[],[0]],"(*archive/tar.regFileWriter).logicalRemaining":[[0],[]],"(*archive/tar.regFileWriter).physicalRemaining":[[0],[]],"(*archive/tar.sparseArray).entry":[[0],[]],"(*archive/tar.sparseArray).isExtended":[[0],[]],"(*archive/tar.sparseArray).maxEntries":[[0],[]],"(*archive/tar.sparseElem).length":[[0],[]],"(*archive/tar.sparseElem).offset":[[0],[]],"(*archive/tar.sparseEntry).endOffset":[[0],[]],"(*archive/tar.sparseFileReader).Read":[[0],[],[0]],"(*archive/tar.sparseFileReader).WriteTo":[[0],[0],[0,1]],"(*archive/tar.sparseFileReader).logicalRemaining":[[0],[]],"(*archive/tar.sparseFileReader).physicalRemaining":[[0],[]],"(*archive/tar.sparseFileWriter).ReadFrom":[[0],[0],[0,1]],"(*archive/tar.sparseFileWriter).Write":[[0],[],[0]],"(*archive/tar.sparseFileWriter).logicalRemaining":[[0],[]],"(*archive/tar.sparseFileWriter).physicalRemaining":[[0],[]],"(*archive/tar.zeroReader).Read":[[0],[],[]],"(*archive/zip.File).DataOffset":[[0],[0],[]],"(*archive/zip.File).FileInfo":[[0],[0]],"(*archive/zip.File).ModTime":[[0],[0]],"(*archive/zip.File).Mode":[[0],[0]],"(*archive/zip.File).Open":[[0],[0],[]],"(*archive/zip.File).OpenRaw":[[0],[0],[]],"(*archive/zip.File).SetModTime":[[0,1]],"(*archive/zip.File).SetMode":[[0,1]],"(*archive/zip.File).findBodyOffset":[[0],[],[]],"(*archive/zip.File).hasDataDescriptor":[[0],[0]],"(*archive/zip.File).isZip64":[[0],[0]],"(*archive/zip.FileHeader).FileInfo":[[0],[0]],"(*archive/zip.FileHeader).ModTime":[[0],[0]],"(*archive/zip.FileHeader).Mode":[[0],[0]],"(*archive/zip.FileHeader).SetModTime":[[0,1]],"(*archive/zip.FileHeader).SetMode":[[0,1]],"(*archive/zip.FileHeader).hasDataDescriptor":[[0],[0]],"(*archive/zip.FileHeader).isZip64":[[0],[0]],"(*archive/zip.ReadCloser).Close":[[0],[0]],"(*archive/zip.ReadCloser).Open":[[0],[0],[1]],"(*archive/zip.ReadCloser).RegisterDecompressor":[[0]],"(*archive/zip.ReadCloser).decompressor":[[0],[0,1]],"(*archive/zip.ReadCloser).init":[[0,1,2],[0,1,2]],"(*archive/zip.ReadCloser).initFileList":[[0]],"(*archive/zip.ReadCloser).openLookup":[[0],[0]],"(*archive/zip.ReadCloser).openReadDir":[[0],[0]],"(*archive/zip.Reader).Open":[[0],[0],[1]],"(*archive/zip.Reader).RegisterDecompressor":[[0]],"(*archive/zip.Reader).decompressor":[[0],[0,1]],"(*archive/zip.Reader).init":[[0,1,2],[0,1,2]],"(*archive/zip.Reader).initFileList":[[0]],"(*archive/zip.Reader).initFileList$1":[],"(*archive/zip.Reader).initFileList$1$1":[[]],"(*archive/zip.Reader).openLookup":[[0],[0]],"(*archive/zip.Reader).openLookup$1":[[]],"(*archive/zip.Reader).openReadDir":[[0],[0]],"(*archive/zip.Reader).openReadDir$1":[[]],"(*archive/zip.Reader).openReadDir$2":[[]],"(*archive/zip.Writer).Close":[[0],[0]],"(*archive/zip.Writer).Copy":[[0,1],[0,1]],"(*archive/zip.Writer).Create":[[0,1],[0,1],[0,1]],"(*archive/zip.Writer).CreateHeader":[[0,1],[0,1],[0,1]],"(*archive/zip.Writer).CreateRaw":[[0,1],[0,1],[0,1]],"(*archive/zip.Writer).Flush":[[0],[0]],"(*archive/zip.Writer).RegisterCompressor":[[0]],"(*archive/zip.Writer).SetComment":[[0,1],[]],"(*archive/zip.Writer).SetOffset":[[0,1]],"(*archive/zip.Writer).compressor":[[0],[0,1]],"(*archive/zip.Writer).prepare":[[0],[0]],"(*archive/zip.checksumReader).Close":[[0],[]],"(*archive/zip.checksumReader).Read":[[0],[],[0]],"(*archive/zip.checksumReader).Stat":[[0],[0],[]],"(*archive/zip.countWriter).Write":[[0],[],[0]],"(*archive/zip.dirWriter).Write":[[0],[],[]],"(*archive/zip.fileListEntry).Info":[[0],[0],[]],"(*archive/zip.fileListEntry).IsDir":[[0],[]],"(*archive/zip.fileListEntry).ModTime":[[0],[0]],"(*archive/zip.fileListEntry).Mode":[[0],[]],"(*archive/zip.fileListEntry).Name":[[0],[0]],"(*archive/zip.fileListEntry).Size":[[0],[]],"(*archive/zip.fileListEntry).Sys":[[0],[]],"(*archive/zip.fileListEntry).Type":[[0],[]],"(*archive/zip.fileListEntry).stat":[[0],[0],[0]],"(*archive/zip.fileWriter).FileInfo":[[0],[0]],"(*archive/zip.fileWriter).ModTime":[[0],[0]],"(*archive/zip.fileWriter).Mode":[[0],[0]],"(*archive/zip.fileWriter).SetModTime":[[0]],"(*archive/zip.fileWriter).SetMode":[[0]],"(*archive/zip.fileWriter).Write":[[0],[],[0]],"(*archive/zip.fileWriter).close":[[0],[0]],"(*archive/zip.fileWriter).hasDataDescriptor":[[0],[0]],"(*archive/zip.fileWriter).isZip64":[[0],[0]],"(*archive/zip.fileWriter).writeDataDescriptor":[[0],[0]],"(*archive/zip.header).FileInfo":[[0],[0]],"(*archive/zip.header).ModTime":[[0],[0]],"(*archive/zip.header).Mode":[[0],[0]],"(*archive/zip.header).SetModTime":[[0,1]],"(*archive/zip.header).SetMode":[[0,1]],"(*archive/zip.header).hasDataDescriptor":[[0],[0]],"(*archive/zip.header).isZip64":[[0],[0]],"(*archive/zip.headerFileInfo).Info":[[0],[],[]],"(*archive/zip.headerFileInfo).IsDir":[[0],[]],"(*archive/zip.headerFileInfo).ModTime":[[0],[]],"(*archive/zip.headerFileInfo).Mode":[[0],[]],"(*archive/zip.headerFileInfo).Name":[[0],[]],"(*archive/zip.headerFileInfo).Size":[[0],[]],"(*archive/zip.headerFileInfo).Sys":[[0],[]],"(*archive/zip.headerFileInfo).Type":[[0],[]],"(*archive/zip.nopCloser).Close":[[0],[]],"(*archive/zip.nopCloser).Write":[[0],[],[0]],"(*archive/zip.openDir).Close":[[0],[]],"(*archive/zip.openDir).Read":[[0],[],[0]],"(*archive/zip.openDir).ReadDir":[[0,1],[0],[0]],"(*archive/zip.openDir).Stat":[[0],[0],[0]],"(*archive/zip.pooledFlateReader).Close":[[0],[]],"(*archive/zip.pooledFlateReader).Read":[[0],[],[]],"(*archive/zip.pooledFlateWriter).Close":[[0],[0]],"(*archive/zip.pooledFlateWriter).Write":[[0],[],[0]],"(*archive/zip.readBuf).sub":[[0],[0]],"(*archive/zip.readBuf).uint16":[[0],[0]],"(*archive/zip.readBuf).uint32":[[0],[0]],"(*archive/zip.readBuf).uint64":[[0],[0]],"(*archive/zip.readBuf).uint8":[[0],[0]],"(*archive/zip.writeBuf).uint16":[[0]],"(*archive/zip.writeBuf).uint32":[[0]],"(*archive/zip.writeBuf).uint64":[[0]],"(*archive/zip.writeBuf).uint8":[[0]],"(*bufio.ReadWriter).Available":[[0],[0]],"(*bufio.ReadWriter).AvailableBuffer":[[0],[0]],"(*bufio.ReadWriter).Discard":[[0,1],[0,1],[0,1]],"(*bufio.ReadWriter).Flush":[[0],[0]],"(*bufio.ReadWriter).Peek":[[0],[0],[0]],"(*bufio.ReadWriter).Read":[[0],[],[0]],"(*bufio.ReadWriter).ReadByte":[[0],[0],[0]],"(*bufio.ReadWriter).ReadBytes":[[0],[],[0]],"(*bufio.ReadWriter).ReadFrom":[[0],[],[0,1]],"(*bufio.ReadWriter).ReadLine":[[0],[0],[],[0]],"(*bufio.ReadWriter).ReadRune":[[0],[0],[],[0]],"(*bufio.ReadWriter).ReadSlice":[[0],[0],[0]],"(*bufio.ReadWriter).ReadString":[[0],[0],[0]],"(*bufio.ReadWriter).UnreadByte":[[0],[]],"(*bufio.ReadWriter).UnreadRune":[[0],[]],"(*bufio.ReadWriter).Write":[[0],[],[0]],"(*bufio.ReadWriter).WriteByte":[[0],[0]],"(*bufio.ReadWriter).WriteRune":[[0],[],[0]],"(*bufio.ReadWriter).WriteString":[[0],[],[0]],"(*bufio.ReadWriter).WriteTo":[[0],[],[0,1]],"(*bufio.ReadWriter).collectFragments":[[0],[0],[0],[],[0]],"(*bufio.ReadWriter).fill":[[0]],"(*bufio.ReadWriter).readErr":[[0],[0]],"(*bufio.ReadWriter).reset":[[0,1,2]],"(*bufio.ReadWriter).writeBuf":[[0],[],[1]],"(*bufio.Reader).Buffered":[[0],[0]],"(*bufio.Reader).Discard":[[0,1],[0,1],[0]],"(*bufio.Reader).Peek":[[0],[0],[0]],"(*bufio.Reader).Read":[[0],[],[0]],"(*bufio.Reader).ReadByte":[[0],[0],[0]],"(*bufio.Reader).ReadBytes":[[0],[],[0]],"(*bufio.Reader).ReadLine":[[0],[0],[],[0]],"(*bufio.Reader).ReadRune":[[0],[0],[],[0]],"(*bufio.Reader).ReadSlice":[[0],[0],[0]],"(*bufio.Reader).ReadString":[[0],[0],[0]],"(*bufio.Reader).Reset":[[0,1]],"(*bufio.Reader).Size":[[0],[]],"(*bufio.Reader).UnreadByte":[[0],[]],"(*bufio.Reader).UnreadRune":[[0],[]],"(*bufio.Reader).WriteTo":[[0],[],[0,1]],"(*bufio.Reader).collectFragments":[[0],[0],[0],[],[0]],"(*bufio.Reader).fill":[[0]],"(*bufio.Reader).readErr":[[0],[0]],"(*bufio.Reader).reset":[[0,1,2]],"(*bufio.Reader).writeBuf":[[0],[],[1]],"(*bufio.Scanner).Buffer":[[0,1,2]],"(*bufio.Scanner).Bytes":[[0],[0]],"(*bufio.Scanner).Err":[[0],[0]],"(*bufio.Scanner).Scan":[[0],[]],"(*bufio.Scanner).Split":[[0,1]],"(*bufio.Scanner).Text":[[0],[0]],"(*bufio.Scanner).advance":[[0,1],[]],"(*bufio.Scanner).setErr":[[0,1]],"(*bufio.Writer).Available":[[0],[0]],"(*bufio.Writer).AvailableBuffer":[[0],[0]],"(*bufio.Writer).Buffered":[[0],[0]],"(*bufio.Writer).Flush":[[0],[0]],"(*bufio.Writer).ReadFrom":[[0],[],[0,1]],"(*bufio.Writer).Reset":[[0,1]],"(*bufio.Writer).Size":[[0],[]],"(*bufio.Writer).Write":[[0],[],[0]],"(*bufio.Writer).WriteByte":[[0],[0]],"(*bufio.Writer).WriteRune":[[0],[],[0]],"(*bufio.Writer).WriteString":[[0],[],[0]],"(*bytes.Buffer).Bytes":[[0],[0]],"(*bytes.Buffer).Cap":[[0],[]],"(*bytes.Buffer).Grow":[[0]],"(*bytes.Buffer).Len":[[0],[0]],"(*bytes.Buffer).Next":[[0,1],[0]],"(*bytes.Buffer).Read":[[0],[],[]],"(*bytes.Buffer).ReadByte":[[0],[0],[]],"(*bytes.Buffer).ReadBytes":[[0],[],[]],"(*bytes.Buffer).ReadFrom":[[0],[],[1]],"(*bytes.Buffer).ReadRune":[[0],[0],[],[]],"(*bytes.Buffer).ReadString":[[0],[0],[]],"(*bytes.Buffer).Reset":[[0]],"(*bytes.Buffer).String":[[0],[0]],"(*bytes.Buffer).Truncate":[[0]],"(*bytes.Buffer).UnreadByte":[[0],[]],"(*bytes.Buffer).UnreadRune":[[0],[]],"(*bytes.Buffer).Write":[[0],[],[]],"(*bytes.Buffer).WriteByte":[[0],[]],"(*bytes.Buffer).WriteRune":[[0],[],[]],"(*bytes.Buffer).WriteString":[[0],[],[]],"(*bytes.Buffer).WriteTo":[[0],[],[1]],"(*bytes.Buffer).empty":[[0],[0]],"(*bytes.Buffer).grow":[[0],[0]],"(*bytes.Buffer).readSlice":[[0],[0],[]],"(*bytes.Buffer).tryGrowByReslice":[[0],[],[]],"(*bytes.Reader).Len":[[0],[0]],"(*bytes.Reader).Read":[[0],[],[]],"(*bytes.Reader).ReadAt":[[0],[],[]],"(*bytes.Reader).ReadByte":[[0],[0],[]],"(*bytes.Reader).ReadRune":[[0],[0],[],[]],"(*bytes.Reader).Reset":[[0,1]],"(*bytes.Reader).Seek":[[0,1],[0,1],[]],"(*bytes.Reader).Size":[[0],[]],"(*bytes.Reader).UnreadByte":[[0],[]],"(*bytes.Reader).UnreadRune":[[0],[]],"(*bytes.Reader).WriteTo":[[0],[],[1]],"(*bytes.asciiSet).contains":[[0],[0,1]],"(*compress/bzip2.StructuralError).Error":[[0],[]],"(*compress/bzip2.bitReader).Err":[[0],[0]],"(*compress/bzip2.bitReader).ReadBit":[[0],[0]],"(*compress/bzip2.bitReader).ReadBits":[[0,1],[0,1]],"(*compress/bzip2.bitReader).ReadBits64":[[0,1],[0,1]],"(*compress/bzip2.huffmanTree).Decode":[[0],[0]],"(*compress/bzip2.reader).Read":[[0],[],[0]],"(*compress/bzip2.reader).read":[[0],[],[0]],"(*compress/bzip2.reader).readBlock":[[0],[]],"(*compress/bzip2.reader).readFromBlock":[[0],[]],"(*compress/bzip2.reader).setup":[[0],[]],"(*compress/flate.CorruptInputError).Error":[[0],[]],"(*compress/flate.InternalError).Error":[[0],[]],"(*compress/flate.ReadError).Error":[[0],[0]],"(*compress/flate.WriteError).Error":[[0],[0]],"(*compress/flate.Writer).Close":[[0],[0]],"(*compress/flate.Writer).Flush":[[0],[0]],"(*compress/flate.Writer).Reset":[[0,1]],"(*compress/flate.Writer).Write":[[0],[],[0]],"(*compress/flate.byFreq).Len":[[0],[]],"(*compress/flate.byFreq).Less":[[0],[]],"(*compress/flate.byFreq).Swap":[[0]],"(*compress/flate.byFreq).sort":[[0,1]],"(*compress/flate.byLiteral).Len":[[0],[]],"(*compress/flate.byLiteral).Less":[[0],[]],"(*compress/flate.byLiteral).Swap":[[0]],"(*compress/flate.byLiteral).sort":[[0,1]],"(*compress/flate.compressor).close":[[0],[0]],"(*compress/flate.compressor).deflate":[[0]],"(*compress/flate.compressor).deflate$thunk":[],"(*compress/flate.compressor).encSpeed":[[0]],"(*compress/flate.compressor).encSpeed$thunk":[],"(*compress/flate.compressor).fillDeflate":[[0],[]],"(*compress/flate.compressor).fillDeflate$thunk":[[]],"(*compress/flate.compressor).fillStore":[[0],[]],"(*compress/flate.compressor).fillStore$thunk":[[]],"(*compress/flate.compressor).fillWindow":[[0]],"(*compress/flate.compressor).findMatch":[[0],[3,4],[0,1,2],[]],"(*compress/flate.compressor).init":[[0,1],[2]],"(*compress/flate.compressor).initDeflate":[[0]],"(*compress/flate.compressor).reset":[[0,1]],"(*compress/flate.compressor).store":[[0]],"(*compress/flate.compressor).store$thunk":[],"(*compress/flate.compressor).storeHuff":[[0]],"(*compress/flate.compressor).storeHuff$thunk":[],"(*compress/flate.compressor).syncFlush":[[0],[0]],"(*compress/flate.compressor).write":[[0],[],[0]],"(*compress/flate.compressor).writeBlock":[[0,1,2],[0,1,2]],"(*compress/flate.compressor).writeStoredBlock":[[0],[0]],"(*compress/flate.decompressor).Close":[[0],[0]],"(*compress/flate.decompressor).Read":[[0],[],[0]],"(*compress/flate.decompressor).Reset":[[0,1],[]],"(*compress/flate.decompressor).copyData":[[0]],"(*compress/flate.decompressor).copyData$thunk":[],"(*compress/flate.decompressor).dataBlock":[[0]],"(*compress/flate.decompressor).finishBlock":[[0]],"(*compress/flate.decompressor).huffSym":[[0,1],[1],[0]],"(*compress/flate.decompressor).huffmanBlock":[[0]],"(*compress/flate.decompressor).huffmanBlock$thunk":[],"(*compress/flate.decompressor).moreBits":[[0],[]],"(*compress/flate.decompressor).nextBlock":[[0]],"(*compress/flate.decompressor).nextBlock$thunk":[],"(*compress/flate.decompressor).readHuffman":[[0],[0]],"(*compress/flate.deflateFast).encode":[[0],[0,1,2]],"(*compress/flate.deflateFast).matchLen":[[0],[]],"(*compress/flate.deflateFast).reset":[[0]],"(*compress/flate.deflateFast).shiftOffsets":[[0]],"(*compress/flate.dictDecoder).availRead":[[0],[0]],"(*compress/flate.dictDecoder).availWrite":[[0],[0]],"(*compress/flate.dictDecoder).histSize":[[0],[0]],"(*compress/flate.dictDecoder).init":[[0]],"(*compress/flate.dictDecoder).readFlush":[[0],[0]],"(*compress/flate.dictDecoder).tryWriteCopy":[[0],[0]],"(*compress/flate.dictDecoder).writeByte":[[0]],"(*compress/flate.dictDecoder).writeCopy":[[0],[0]],"(*compress/flate.dictDecoder).writeMark":[[0,1]],"(*compress/flate.dictDecoder).writeSlice":[[0],[0]],"(*compress/flate.dictWriter).Write":[[0],[],[0]],"(*compress/flate.hcode).set":[[0,1,2]],"(*compress/flate.huffmanBitWriter).dynamicSize":[[0],[0,1,2,3],[]],"(*compress/flate.huffmanBitWriter).fixedSize":[[0],[0,1]],"(*compress/flate.huffmanBitWriter).flush":[[0]],"(*compress/flate.huffmanBitWriter).generateCodegen":[[0]],"(*compress/flate.huffmanBitWriter).indexTokens":[[0],[],[]],"(*compress/flate.huffmanBitWriter).reset":[[0,1]],"(*compress/flate.huffmanBitWriter).storedSize":[[0],[],[]],"(*compress/flate.huffmanBitWriter).write":[[0]],"(*compress/flate.huffmanBitWriter).writeBits":[[0,1,2]],"(*compress/flate.huffmanBitWriter).writeBlock":[[0,1]],"(*compress/flate.huffmanBitWriter).writeBlockDynamic":[[0,1]],"(*compress/flate.huffmanBitWriter).writeBlockHuff":[[0]],"(*compress/flate.huffmanBitWriter).writeBytes":[[0]],"(*compress/flate.huffmanBitWriter).writeCode":[[0,1]],"(*compress/flate.huffmanBitWriter).writeDynamicHeader":[[0,3]],"(*compress/flate.huffmanBitWriter).writeFixedHeader":[[0]],"(*compress/flate.huffmanBitWriter).writeStoredHeader":[[0,1]],"(*compress/flate.huffmanBitWriter).writeTokens":[[0,1,2,3]],"(*compress/flate.huffmanDecoder).init":[[0,1],[]],"(*compress/flate.huffmanEncoder).assignEncodingAndSize":[[0,2]],"(*compress/flate.huffmanEncoder).bitCounts":[[0],[0]],"(*compress/flate.huffmanEncoder).bitLength":[[0],[0,1]],"(*compress/flate.huffmanEncoder).generate":[[0]],"(*compress/flate.token).length":[[0],[]],"(*compress/flate.token).literal":[[0],[]],"(*compress/flate.token).offset":[[0],[]],"(*compress/gzip.Reader).Close":[[0],[]],"(*compress/gzip.Reader).Multistream":[[0,1]],"(*compress/gzip.Reader).Read":[[0],[],[0]],"(*compress/gzip.Reader).Reset":[[0,1],[0,1]],"(*compress/gzip.Reader).readHeader":[[0],[0],[0]],"(*compress/gzip.Reader).readString":[[0],[0],[]],"(*compress/gzip.Writer).Close":[[0],[0]],"(*compress/gzip.Writer).Flush":[[0],[0]],"(*compress/gzip.Writer).Reset":[[0,1]],"(*compress/gzip.Writer).Write":[[0],[],[0]],"(*compress/gzip.Writer).init":[[0,1,2]],"(*compress/gzip.Writer).writeBytes":[[0],[0]],"(*compress/gzip.Writer).writeString":[[0],[0]],"(*compress/lzw.Reader).Close":[[0],[]],"(*compress/lzw.Reader).Read":[[0],[],[0]],"(*compress/lzw.Reader).Reset":[[0,1,3]],"(*compress/lzw.Reader).decode":[[0]],"(*compress/lzw.Reader).init":[[0,1,3]],"(*compress/lzw.Reader).readLSB":[[0],[0],[]],"(*compress/lzw.Reader).readLSB$thunk":[[0],[]],"(*compress/lzw.Reader).readMSB":[[0],[0],[]],"(*compress/lzw.Reader).readMSB$thunk":[[0],[]],"(*compress/lzw.Writer).Close":[[0],[0]],"(*compress/lzw.Writer).Reset":[[0,1,2,3]],"(*compress/lzw.Writer).Write":[[0,1],[],[0]],"(*compress/lzw.Writer).incHi":[[0],[]],"(*compress/lzw.Writer).init":[[0,1,2,3]],"(*compress/lzw.Writer).writeLSB":[[0,1],[]],"(*compress/lzw.Writer).writeLSB$thunk":[[]],"(*compress/lzw.Writer).writeMSB":[[0,1],[]],"(*compress/lzw.Writer).writeMSB$thunk":[[]],"(*compress/zlib.Writer).Close":[[0],[0]],"(*compress/zlib.Writer).Flush":[[0],[0]],"(*compress/zlib.Writer).Reset":[[0,1]],"(*compress/zlib.Writer).Write":[[0],[],[0]],"(*compress/zlib.Writer).writeHeader":[[0],[0]],"(*compress/zlib.reader).Close":[[0],[0]],"(*compress/zlib.reader).Read":[[0],[],[0]],"(*compress/zlib.reader).Reset":[[0,1],[0,1]],"(*container/list.Element).Next":[[0],[0]],"(*container/list.Element).Prev":[[0],[0]],"(*container/list.List).Back":[[0],[0]],"(*container/list.List).Front":[[0],[0]],"(*container/list.List).Init":[[0],[0]],"(*container/list.List).InsertAfter":[[0],[0,1,2]],"(*container/list.List).InsertBefore":[[0],[0,1,2]],"(*container/list.List).Len":[[0],[0]],"(*container/list.List).MoveAfter":[[0]],"(*container/list.List).MoveBefore":[[0]],"(*container/list.List).MoveToBack":[[0]],"(*container/list.List).MoveToFront":[[0]],"(*container/list.List).PushBack":[[0],[0,1]],"(*container/list.List).PushBackList":[[0]],"(*container/list.List).PushFront":[[0],[0,1]],"(*container/list.List).PushFrontList":[[0]],"(*container/list.List).Remove":[[0],[1]],"(*container/list.List).insert":[[0],[0,1,2]],"(*container/list.List).insertValue":[[0],[0,1,2]],"(*container/list.List).lazyInit":[[0]],"(*container/list.List).move":[[0]],"(*container/list.List).remove":[[0]],"(*container/ring.Ring).Do":[[0]],"(*container/ring.Ring).Len":[[0],[]],"(*container/ring.Ring).Link":[[0,1],[0,1]],"(*container/ring.Ring).Move":[[0],[0]],"(*container/ring.Ring).Next":[[0],[0]],"(*container/ring.Ring).Prev":[[0],[0]],"(*container/ring.Ring).Unlink":[[0],[0]],"(*container/ring.Ring).init":[[0],[0]],"(*context.cancelCtx).Deadline":[[0],[0],[]],"(*context.cancelCtx).Done":[[0],[]],"(*context.cancelCtx).Err":[[0],[0]],"(*context.cancelCtx).String":[[0],[]],"(*context.cancelCtx).Value":[[0],[0]],"(*context.cancelCtx).cancel":[[0,2]],"(*context.deadlineExceededError).Error":[[0],[]],"(*context.deadlineExceededError).Temporary":[[0],[]],"(*context.deadlineExceededError).Timeout":[[0],[]],"(*context.emptyCtx).Deadline":[[0],[],[]],"(*context.emptyCtx).Done":[[0],[]],"(*context.emptyCtx).Err":[[0],[]],"(*context.emptyCtx).String":[[0],[]],"(*context.emptyCtx).Value":[[0],[]],"(*context.timerCtx).Deadline":[[0],[0],[]],"(*context.timerCtx).Done":[[0],[]],"(*context.timerCtx).Err":[[0],[0]],"(*context.timerCtx).String":[[0],[0]],"(*context.timerCtx).Value":[[0],[0]],"(*context.timerCtx).cancel":[[0,2]],"(*context.valueCtx).Deadline":[[0],[0],[]],"(*context.valueCtx).Done":[[0],[]],"(*context.valueCtx).Err":[[0],[]],"(*context.valueCtx).String":[[0],[0]],"(*context.valueCtx).Value":[[0],[0]],"(*crypto.Hash).Available":[[0],[]],"(*crypto.Hash).HashFunc":[[0],[]],"(*crypto.Hash).New":[[0],[]],"(*crypto.Hash).Size":[[0],[]],"(*crypto.Hash).String":[[0],[]],"(*crypto/aes.KeySizeError).Error":[[0],[]],"(*crypto/aes.aesCipher).BlockSize":[[0],[]],"(*crypto/aes.aesCipher).Decrypt":[[0]],"(*crypto/aes.aesCipher).Encrypt":[[0]],"(*crypto/aes.aesCipherAsm).BlockSize":[[0],[]],"(*crypto/aes.aesCipherAsm).Decrypt":[[0]],"(*crypto/aes.aesCipherAsm).Encrypt":[[0]],"(*crypto/aes.aesCipherGCM).BlockSize":[[0],[]],"(*crypto/aes.aesCipherGCM).Decrypt":[[0]],"(*crypto/aes.aesCipherGCM).Encrypt":[[0]],"(*crypto/aes.aesCipherGCM).NewGCM":[[0],[0,1,2],[]],"(*crypto/aes.gcmAsm).NonceSize":[[0],[0]],"(*crypto/aes.gcmAsm).Open":[[0],[1],[]],"(*crypto/aes.gcmAsm).Overhead":[[0],[0]],"(*crypto/aes.gcmAsm).Seal":[[0],[1]],"(*crypto/cipher.StreamReader).Read":[[0],[],[]],"(*crypto/cipher.StreamWriter).Close":[[0],[]],"(*crypto/cipher.StreamWriter).Write":[[0],[],[]],"(*crypto/cipher.cbcDecrypter).BlockSize":[[0],[0]],"(*crypto/cipher.cbcDecrypter).CryptBlocks":[[0]],"(*crypto/cipher.cbcDecrypter).SetIV":[[0]],"(*crypto/cipher.cbcEncrypter).BlockSize":[[0],[0]],"(*crypto/cipher.cbcEncrypter).CryptBlocks":[[0]],"(*crypto/cipher.cbcEncrypter).SetIV":[[0]],"(*crypto/cipher.cfb).XORKeyStream":[[0]],"(*crypto/cipher.ctr).XORKeyStream":[[0]],"(*crypto/cipher.ctr).refill":[[0]],"(*crypto/cipher.gcm).NonceSize":[[0],[0]],"(*crypto/cipher.gcm).Open":[[0],[1],[]],"(*crypto/cipher.gcm).Overhead":[[0],[0]],"(*crypto/cipher.gcm).Seal":[[0],[1]],"(*crypto/cipher.gcm).auth":[[0]],"(*crypto/cipher.gcm).counterCrypt":[[0]],"(*crypto/cipher.gcm).deriveCounter":[[0]],"(*crypto/cipher.gcm).mul":[[0]],"(*crypto/cipher.gcm).update":[[0]],"(*crypto/cipher.gcm).updateBlocks":[[0]],"(*crypto/cipher.ofb).XORKeyStream":[[0]],"(*crypto/cipher.ofb).refill":[[0]],"(*crypto/des.KeySizeError).Error":[[0],[]],"(*crypto/des.desCipher).BlockSize":[[0],[]],"(*crypto/des.desCipher).Decrypt":[[0]],"(*crypto/des.desCipher).Encrypt":[[0]],"(*crypto/des.desCipher).generateSubkeys":[[0]],"(*crypto/des.tripleDESCipher).BlockSize":[[0],[]],"(*crypto/des.tripleDESCipher).Decrypt":[[0]],"(*crypto/des.tripleDESCipher).Encrypt":[[0]],"(*crypto/ecdsa.PrivateKey).Add":[[0],[],[]],"(*crypto/ecdsa.PrivateKey).Double":[[0],[],[]],"(*crypto/ecdsa.PrivateKey).Equal":[[0],[]],"(*crypto/ecdsa.PrivateKey).IsOnCurve":[[0],[]],"(*crypto/ecdsa.PrivateKey).Params":[[0],[]],"(*crypto/ecdsa.PrivateKey).Public":[[0],[0]],"(*crypto/ecdsa.PrivateKey).ScalarBaseMult":[[0],[],[]],"(*crypto/ecdsa.PrivateKey).ScalarMult":[[0],[],[]],"(*crypto/ecdsa.PrivateKey).Sign":[[0],[],[1]],"(*crypto/ecdsa.PrivateKey).Sign$1":[],"(*crypto/ecdsa.PublicKey).Add":[[0],[],[]],"(*crypto/ecdsa.PublicKey).Double":[[0],[],[]],"(*crypto/ecdsa.PublicKey).Equal":[[0],[0,1]],"(*crypto/ecdsa.PublicKey).IsOnCurve":[[0],[]],"(*crypto/ecdsa.PublicKey).Params":[[0],[]],"(*crypto/ecdsa.PublicKey).ScalarBaseMult":[[0],[],[]],"(*crypto/ecdsa.PublicKey).ScalarMult":[[0],[],[]],"(*crypto/ecdsa.zr).Read":[[0],[],[]],"(*crypto/ed25519.PrivateKey).Equal":[[0],[1]],"(*crypto/ed25519.PrivateKey).Public":[[0],[]],"(*crypto/ed25519.PrivateKey).Seed":[[0],[]],"(*crypto/ed25519.PrivateKey).Sign":[[0],[],[]],"(*crypto/ed25519.PublicKey).Equal":[[0],[1]],"(*crypto/elliptic.CurveParams).Add":[[0],[0,1,2,3,4],[0,1,2,3,4]],"(*crypto/elliptic.CurveParams).Double":[[0],[0,1,2],[0,1,2]],"(*crypto/elliptic.CurveParams).IsOnCurve":[[0],[]],"(*crypto/elliptic.CurveParams).Params":[[0],[0]],"(*crypto/elliptic.CurveParams).ScalarBaseMult":[[0],[0],[0]],"(*crypto/elliptic.CurveParams).ScalarMult":[[0],[0,1,2],[0,1,2]],"(*crypto/elliptic.CurveParams).addJacobian":[[0],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,6]],"(*crypto/elliptic.CurveParams).affineFromJacobian":[[0],[0,1],[0,2]],"(*crypto/elliptic.CurveParams).doubleJacobian":[[0],[0,1,2,3],[0,1,2,3],[0,2,3]],"(*crypto/elliptic.CurveParams).polynomial":[[0],[0,1]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).Add[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).CombinedMult[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).Double[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).IsOnCurve[*crypto/internal/nistec.P224Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).Params[*crypto/internal/nistec.P224Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).ScalarBaseMult[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).ScalarMult[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).UnmarshalCompressed[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).Unmarshal[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).normalizeScalar[*crypto/internal/nistec.P224Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).pointFromAffine[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]).pointToAffine[*crypto/internal/nistec.P224Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).Add[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).CombinedMult[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).Double[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).IsOnCurve[*crypto/internal/nistec.P256Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).Params[*crypto/internal/nistec.P256Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarBaseMult[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).UnmarshalCompressed[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).Unmarshal[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).normalizeScalar[*crypto/internal/nistec.P256Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointFromAffine[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).Add[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).CombinedMult[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).Double[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).IsOnCurve[*crypto/internal/nistec.P384Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).Params[*crypto/internal/nistec.P384Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).ScalarBaseMult[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).ScalarMult[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).UnmarshalCompressed[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).Unmarshal[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).normalizeScalar[*crypto/internal/nistec.P384Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).pointFromAffine[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]).pointToAffine[*crypto/internal/nistec.P384Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).Add[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).CombinedMult[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).Double[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).IsOnCurve[*crypto/internal/nistec.P521Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).Params[*crypto/internal/nistec.P521Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).ScalarBaseMult[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).ScalarMult[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).UnmarshalCompressed[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).Unmarshal[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).normalizeScalar[*crypto/internal/nistec.P521Point]":[[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).pointFromAffine[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]).pointToAffine[*crypto/internal/nistec.P521Point]":[[],[],[]],"(*crypto/elliptic.p256Curve).Add":[[0],[],[]],"(*crypto/elliptic.p256Curve).CombinedMult":[[0],[],[]],"(*crypto/elliptic.p256Curve).Double":[[0],[],[]],"(*crypto/elliptic.p256Curve).Inverse":[[0],[]],"(*crypto/elliptic.p256Curve).IsOnCurve":[[0],[]],"(*crypto/elliptic.p256Curve).Params":[[0],[]],"(*crypto/elliptic.p256Curve).ScalarBaseMult":[[0],[],[]],"(*crypto/elliptic.p256Curve).ScalarMult":[[0],[],[]],"(*crypto/elliptic.p256Curve).Unmarshal":[[0],[],[]],"(*crypto/elliptic.p256Curve).UnmarshalCompressed":[[0],[],[]],"(*crypto/elliptic.p256Curve).normalizeScalar":[[0],[]],"(*crypto/elliptic.p256Curve).pointFromAffine":[[0],[],[]],"(*crypto/elliptic.p256Curve).pointToAffine":[[0],[],[]],"(*crypto/hmac.hmac).BlockSize":[[0],[]],"(*crypto/hmac.hmac).Reset":[[0]],"(*crypto/hmac.hmac).Size":[[0],[]],"(*crypto/hmac.hmac).Sum":[[0],[0,1]],"(*crypto/hmac.hmac).Write":[[0],[],[]],"(*crypto/internal/boring.randReader).Read":[[0],[],[]],"(*crypto/internal/boring/bcache.Cache).Clear":[[0]],"(*crypto/internal/boring/bcache.Cache).Get":[[0],[]],"(*crypto/internal/boring/bcache.Cache).Put":[[0]],"(*crypto/internal/boring/bcache.Cache).Register":[[0]],"(*crypto/internal/boring/bcache.Cache).table":[[0],[]],"(*crypto/internal/edwards25519.Point).Add":[[0],[0]],"(*crypto/internal/edwards25519.Point).Bytes":[[0],[]],"(*crypto/internal/edwards25519.Point).Equal":[[0],[]],"(*crypto/internal/edwards25519.Point).Negate":[[0,1],[0,1]],"(*crypto/internal/edwards25519.Point).ScalarBaseMult":[[0],[0]],"(*crypto/internal/edwards25519.Point).ScalarMult":[[0],[0]],"(*crypto/internal/edwards25519.Point).Set":[[0,1],[0,1]],"(*crypto/internal/edwards25519.Point).SetBytes":[[0,1],[0,1],[]],"(*crypto/internal/edwards25519.Point).Subtract":[[0],[0]],"(*crypto/internal/edwards25519.Point).VarTimeDoubleScalarBaseMult":[[0],[0]],"(*crypto/internal/edwards25519.Point).bytes":[[0],[1]],"(*crypto/internal/edwards25519.Point).fromP1xP1":[[0],[0]],"(*crypto/internal/edwards25519.Point).fromP2":[[0],[0]],"(*crypto/internal/edwards25519.Scalar).Add":[[0],[0]],"(*crypto/internal/edwards25519.Scalar).Bytes":[[0],[0]],"(*crypto/internal/edwards25519.Scalar).Equal":[[0],[0,1]],"(*crypto/internal/edwards25519.Scalar).Multiply":[[0],[0]],"(*crypto/internal/edwards25519.Scalar).MultiplyAdd":[[0],[0]],"(*crypto/internal/edwards25519.Scalar).Negate":[[0],[0]],"(*crypto/internal/edwards25519.Scalar).Set":[[0,1],[0,1]],"(*crypto/internal/edwards25519.Scalar).SetBytesWithClamping":[[0],[0],[]],"(*crypto/internal/edwards25519.Scalar).SetCanonicalBytes":[[0],[0],[]],"(*crypto/internal/edwards25519.Scalar).SetUniformBytes":[[0],[0],[]],"(*crypto/internal/edwards25519.Scalar).Subtract":[[0],[0]],"(*crypto/internal/edwards25519.Scalar).nonAdjacentForm":[[0],[0,1]],"(*crypto/internal/edwards25519.Scalar).signedRadix16":[[0],[0]],"(*crypto/internal/edwards25519.affineCached).CondNeg":[[0,1],[0,1]],"(*crypto/internal/edwards25519.affineCached).FromP3":[[0],[0]],"(*crypto/internal/edwards25519.affineCached).Select":[[0,1,2,3],[0,1,2,3]],"(*crypto/internal/edwards25519.affineCached).Zero":[[0],[0]],"(*crypto/internal/edwards25519.affineLookupTable).FromP3":[[0]],"(*crypto/internal/edwards25519.affineLookupTable).SelectInto":[[0]],"(*crypto/internal/edwards25519.nafLookupTable5).FromP3":[[0]],"(*crypto/internal/edwards25519.nafLookupTable5).SelectInto":[[0]],"(*crypto/internal/edwards25519.nafLookupTable8).FromP3":[[0]],"(*crypto/internal/edwards25519.nafLookupTable8).SelectInto":[[0]],"(*crypto/internal/edwards25519.projCached).CondNeg":[[0,1],[0,1]],"(*crypto/internal/edwards25519.projCached).FromP3":[[0,1],[0,1]],"(*crypto/internal/edwards25519.projCached).Select":[[0,1,2,3],[0,1,2,3]],"(*crypto/internal/edwards25519.projCached).Zero":[[0],[0]],"(*crypto/internal/edwards25519.projLookupTable).FromP3":[[0]],"(*crypto/internal/edwards25519.projLookupTable).SelectInto":[[0]],"(*crypto/internal/edwards25519.projP1xP1).Add":[[0],[0]],"(*crypto/internal/edwards25519.projP1xP1).AddAffine":[[0],[0]],"(*crypto/internal/edwards25519.projP1xP1).Double":[[0],[0]],"(*crypto/internal/edwards25519.projP1xP1).Sub":[[0],[0]],"(*crypto/internal/edwards25519.projP1xP1).SubAffine":[[0],[0]],"(*crypto/internal/edwards25519.projP2).FromP1xP1":[[0],[0]],"(*crypto/internal/edwards25519.projP2).FromP3":[[0,1],[0,1]],"(*crypto/internal/edwards25519.projP2).Zero":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).Absolute":[[0,1],[0,1]],"(*crypto/internal/edwards25519/field.Element).Add":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).Bytes":[[0],[]],"(*crypto/internal/edwards25519/field.Element).Equal":[[0],[]],"(*crypto/internal/edwards25519/field.Element).Invert":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).IsNegative":[[0],[]],"(*crypto/internal/edwards25519/field.Element).Mult32":[[0,1,2],[0,1,2]],"(*crypto/internal/edwards25519/field.Element).Multiply":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).Negate":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).One":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).Pow22523":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).Select":[[0,1,2,3],[0,1,2,3]],"(*crypto/internal/edwards25519/field.Element).Set":[[0,1],[0,1]],"(*crypto/internal/edwards25519/field.Element).SetBytes":[[0,1],[0,1],[]],"(*crypto/internal/edwards25519/field.Element).SqrtRatio":[[0],[0],[]],"(*crypto/internal/edwards25519/field.Element).Square":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).Subtract":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).Swap":[[0,1,2]],"(*crypto/internal/edwards25519/field.Element).Zero":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).bytes":[[0],[1]],"(*crypto/internal/edwards25519/field.Element).carryPropagate":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).carryPropagateGeneric":[[0],[0]],"(*crypto/internal/edwards25519/field.Element).reduce":[[0],[0]],"(*crypto/internal/nistec.P224Point).Add":[[0],[0]],"(*crypto/internal/nistec.P224Point).Bytes":[[0],[]],"(*crypto/internal/nistec.P224Point).BytesCompressed":[[0],[]],"(*crypto/internal/nistec.P224Point).Double":[[0],[0]],"(*crypto/internal/nistec.P224Point).ScalarBaseMult":[[0],[0],[]],"(*crypto/internal/nistec.P224Point).ScalarMult":[[0],[0],[]],"(*crypto/internal/nistec.P224Point).Select":[[0],[0]],"(*crypto/internal/nistec.P224Point).Set":[[0,1],[0,1]],"(*crypto/internal/nistec.P224Point).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec.P224Point).bytes":[[0],[1]],"(*crypto/internal/nistec.P224Point).bytesCompressed":[[0],[1]],"(*crypto/internal/nistec.P224Point).generatorTable":[[0],[]],"(*crypto/internal/nistec.P224Point).generatorTable$1":[],"(*crypto/internal/nistec.P256Point).Add":[[0],[0]],"(*crypto/internal/nistec.P256Point).Bytes":[[0],[]],"(*crypto/internal/nistec.P256Point).BytesCompressed":[[0],[]],"(*crypto/internal/nistec.P256Point).Double":[[0],[0]],"(*crypto/internal/nistec.P256Point).ScalarBaseMult":[[0],[0],[]],"(*crypto/internal/nistec.P256Point).ScalarMult":[[0,1],[0,1],[]],"(*crypto/internal/nistec.P256Point).Select":[[0],[0]],"(*crypto/internal/nistec.P256Point).Set":[[0,1],[0,1]],"(*crypto/internal/nistec.P256Point).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec.P256Point).affineFromMont":[[0]],"(*crypto/internal/nistec.P256Point).bytes":[[0],[1]],"(*crypto/internal/nistec.P256Point).bytesCompressed":[[0],[1]],"(*crypto/internal/nistec.P256Point).isInfinity":[[0],[0]],"(*crypto/internal/nistec.P256Point).p256BaseMult":[[0]],"(*crypto/internal/nistec.P256Point).p256ScalarMult":[[0]],"(*crypto/internal/nistec.P384Point).Add":[[0],[0]],"(*crypto/internal/nistec.P384Point).Bytes":[[0],[]],"(*crypto/internal/nistec.P384Point).BytesCompressed":[[0],[]],"(*crypto/internal/nistec.P384Point).Double":[[0],[0]],"(*crypto/internal/nistec.P384Point).ScalarBaseMult":[[0],[0],[]],"(*crypto/internal/nistec.P384Point).ScalarMult":[[0],[0],[]],"(*crypto/internal/nistec.P384Point).Select":[[0],[0]],"(*crypto/internal/nistec.P384Point).Set":[[0,1],[0,1]],"(*crypto/internal/nistec.P384Point).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec.P384Point).bytes":[[0],[1]],"(*crypto/internal/nistec.P384Point).bytesCompressed":[[0],[1]],"(*crypto/internal/nistec.P384Point).generatorTable":[[0],[]],"(*crypto/internal/nistec.P384Point).generatorTable$1":[],"(*crypto/internal/nistec.P521Point).Add":[[0],[0]],"(*crypto/internal/nistec.P521Point).Bytes":[[0],[]],"(*crypto/internal/nistec.P521Point).BytesCompressed":[[0],[]],"(*crypto/internal/nistec.P521Point).Double":[[0],[0]],"(*crypto/internal/nistec.P521Point).ScalarBaseMult":[[0],[0],[]],"(*crypto/internal/nistec.P521Point).ScalarMult":[[0],[0],[]],"(*crypto/internal/nistec.P521Point).Select":[[0],[0]],"(*crypto/internal/nistec.P521Point).Set":[[0,1],[0,1]],"(*crypto/internal/nistec.P521Point).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec.P521Point).bytes":[[0],[1]],"(*crypto/internal/nistec.P521Point).bytesCompressed":[[0],[1]],"(*crypto/internal/nistec.P521Point).generatorTable":[[0],[]],"(*crypto/internal/nistec.P521Point).generatorTable$1":[],"(*crypto/internal/nistec.p224Table).Select":[[0]],"(*crypto/internal/nistec.p384Table).Select":[[0]],"(*crypto/internal/nistec.p521Table).Select":[[0]],"(*crypto/internal/nistec/fiat.P224Element).Add":[[0],[0]],"(*crypto/internal/nistec/fiat.P224Element).Bytes":[[0],[]],"(*crypto/internal/nistec/fiat.P224Element).Equal":[[0],[]],"(*crypto/internal/nistec/fiat.P224Element).Invert":[[0],[0]],"(*crypto/internal/nistec/fiat.P224Element).IsZero":[[0],[]],"(*crypto/internal/nistec/fiat.P224Element).Mul":[[0],[0]],"(*crypto/internal/nistec/fiat.P224Element).One":[[0],[0]],"(*crypto/internal/nistec/fiat.P224Element).Select":[[0],[0]],"(*crypto/internal/nistec/fiat.P224Element).Set":[[0,1],[0,1]],"(*crypto/internal/nistec/fiat.P224Element).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec/fiat.P224Element).Square":[[0],[0]],"(*crypto/internal/nistec/fiat.P224Element).Sub":[[0],[0]],"(*crypto/internal/nistec/fiat.P224Element).bytes":[[0],[1]],"(*crypto/internal/nistec/fiat.P256Element).Add":[[0],[0]],"(*crypto/internal/nistec/fiat.P256Element).Bytes":[[0],[]],"(*crypto/internal/nistec/fiat.P256Element).Equal":[[0],[]],"(*crypto/internal/nistec/fiat.P256Element).Invert":[[0],[0]],"(*crypto/internal/nistec/fiat.P256Element).IsZero":[[0],[]],"(*crypto/internal/nistec/fiat.P256Element).Mul":[[0],[0]],"(*crypto/internal/nistec/fiat.P256Element).One":[[0],[0]],"(*crypto/internal/nistec/fiat.P256Element).Select":[[0],[0]],"(*crypto/internal/nistec/fiat.P256Element).Set":[[0,1],[0,1]],"(*crypto/internal/nistec/fiat.P256Element).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec/fiat.P256Element).Square":[[0],[0]],"(*crypto/internal/nistec/fiat.P256Element).Sub":[[0],[0]],"(*crypto/internal/nistec/fiat.P256Element).bytes":[[0],[1]],"(*crypto/internal/nistec/fiat.P384Element).Add":[[0],[0]],"(*crypto/internal/nistec/fiat.P384Element).Bytes":[[0],[]],"(*crypto/internal/nistec/fiat.P384Element).Equal":[[0],[]],"(*crypto/internal/nistec/fiat.P384Element).Invert":[[0],[0]],"(*crypto/internal/nistec/fiat.P384Element).IsZero":[[0],[]],"(*crypto/internal/nistec/fiat.P384Element).Mul":[[0],[0]],"(*crypto/internal/nistec/fiat.P384Element).One":[[0],[0]],"(*crypto/internal/nistec/fiat.P384Element).Select":[[0],[0]],"(*crypto/internal/nistec/fiat.P384Element).Set":[[0,1],[0,1]],"(*crypto/internal/nistec/fiat.P384Element).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec/fiat.P384Element).Square":[[0],[0]],"(*crypto/internal/nistec/fiat.P384Element).Sub":[[0],[0]],"(*crypto/internal/nistec/fiat.P384Element).bytes":[[0],[1]],"(*crypto/internal/nistec/fiat.P521Element).Add":[[0],[0]],"(*crypto/internal/nistec/fiat.P521Element).Bytes":[[0],[]],"(*crypto/internal/nistec/fiat.P521Element).Equal":[[0],[]],"(*crypto/internal/nistec/fiat.P521Element).Invert":[[0],[0]],"(*crypto/internal/nistec/fiat.P521Element).IsZero":[[0],[]],"(*crypto/internal/nistec/fiat.P521Element).Mul":[[0],[0]],"(*crypto/internal/nistec/fiat.P521Element).One":[[0],[0]],"(*crypto/internal/nistec/fiat.P521Element).Select":[[0],[0]],"(*crypto/internal/nistec/fiat.P521Element).Set":[[0,1],[0,1]],"(*crypto/internal/nistec/fiat.P521Element).SetBytes":[[0],[0],[]],"(*crypto/internal/nistec/fiat.P521Element).Square":[[0],[0]],"(*crypto/internal/nistec/fiat.P521Element).Sub":[[0],[0]],"(*crypto/internal/nistec/fiat.P521Element).bytes":[[0],[1]],"(*crypto/md5.digest).BlockSize":[[0],[]],"(*crypto/md5.digest).MarshalBinary":[[0],[0],[]],"(*crypto/md5.digest).Reset":[[0]],"(*crypto/md5.digest).Size":[[0],[]],"(*crypto/md5.digest).Sum":[[0],[1]],"(*crypto/md5.digest).UnmarshalBinary":[[0,1],[]],"(*crypto/md5.digest).Write":[[0],[],[]],"(*crypto/md5.digest).checkSum":[[0],[]],"(*crypto/rand.hideAgainReader).Read":[[0],[],[]],"(*crypto/rand.reader).Read":[[0],[],[0]],"(*crypto/rc4.Cipher).Reset":[[0]],"(*crypto/rc4.Cipher).XORKeyStream":[[0]],"(*crypto/rc4.KeySizeError).Error":[[0],[]],"(*crypto/rsa.PSSOptions).HashFunc":[[0],[0]],"(*crypto/rsa.PSSOptions).saltLength":[[0],[0]],"(*crypto/rsa.PrivateKey).Decrypt":[[0],[],[1]],"(*crypto/rsa.PrivateKey).Equal":[[0],[]],"(*crypto/rsa.PrivateKey).Precompute":[[0]],"(*crypto/rsa.PrivateKey).Public":[[0],[0]],"(*crypto/rsa.PrivateKey).Sign":[[0],[],[1]],"(*crypto/rsa.PrivateKey).Size":[[0],[0]],"(*crypto/rsa.PrivateKey).Validate":[[0],[]],"(*crypto/rsa.PublicKey).Equal":[[0],[0,1]],"(*crypto/rsa.PublicKey).Size":[[0],[0]],"(*crypto/sha1.digest).BlockSize":[[0],[]],"(*crypto/sha1.digest).ConstantTimeSum":[[0],[0,1]],"(*crypto/sha1.digest).MarshalBinary":[[0],[0],[]],"(*crypto/sha1.digest).Reset":[[0]],"(*crypto/sha1.digest).Size":[[0],[]],"(*crypto/sha1.digest).Sum":[[0],[1]],"(*crypto/sha1.digest).UnmarshalBinary":[[0,1],[]],"(*crypto/sha1.digest).Write":[[0],[],[]],"(*crypto/sha1.digest).checkSum":[[0],[]],"(*crypto/sha1.digest).constSum":[[0],[0]],"(*crypto/sha256.digest).BlockSize":[[0],[]],"(*crypto/sha256.digest).MarshalBinary":[[0],[0],[]],"(*crypto/sha256.digest).Reset":[[0]],"(*crypto/sha256.digest).Size":[[0],[]],"(*crypto/sha256.digest).Sum":[[0],[1]],"(*crypto/sha256.digest).UnmarshalBinary":[[0,1],[]],"(*crypto/sha256.digest).Write":[[0],[],[]],"(*crypto/sha256.digest).checkSum":[[0],[]],"(*crypto/sha512.digest).BlockSize":[[0],[]],"(*crypto/sha512.digest).MarshalBinary":[[0],[0],[]],"(*crypto/sha512.digest).Reset":[[0]],"(*crypto/sha512.digest).Size":[[0],[]],"(*crypto/sha512.digest).Sum":[[0],[1]],"(*crypto/sha512.digest).UnmarshalBinary":[[0,1],[]],"(*crypto/sha512.digest).Write":[[0],[],[]],"(*crypto/sha512.digest).checkSum":[[0],[]],"(*crypto/tls.Certificate).leaf":[[0],[0],[]],"(*crypto/tls.CertificateRequestInfo).Context":[[0],[0]],"(*crypto/tls.CertificateRequestInfo).SupportsCertificate":[[0],[1]],"(*crypto/tls.ClientAuthType).String":[[0],[]],"(*crypto/tls.ClientHelloInfo).Context":[[0],[0]],"(*crypto/tls.ClientHelloInfo).SupportsCertificate":[[0],[0,1]],"(*crypto/tls.ClientHelloInfo).SupportsCertificate$1":[[0]],"(*crypto/tls.ClientHelloInfo).SupportsCertificate$1$1":[[]],"(*crypto/tls.ClientHelloInfo).SupportsCertificate$2":[[]],"(*crypto/tls.Config).BuildNameToCertificate":[[0]],"(*crypto/tls.Config).Clone":[[0],[0]],"(*crypto/tls.Config).SetSessionTicketKeys":[[0]],"(*crypto/tls.Config).cipherSuites":[[0],[0]],"(*crypto/tls.Config).curvePreferences":[[0],[0]],"(*crypto/tls.Config).getCertificate":[[0],[0,1],[]],"(*crypto/tls.Config).initLegacySessionTicketKeyRLocked":[[0]],"(*crypto/tls.Config).maxSupportedVersion":[[0],[]],"(*crypto/tls.Config).mutualVersion":[[0],[],[]],"(*crypto/tls.Config).rand":[[0],[0]],"(*crypto/tls.Config).supportedVersions":[[0],[]],"(*crypto/tls.Config).supportsCurve":[[0],[]],"(*crypto/tls.Config).ticketKeyFromBytes":[[0],[]],"(*crypto/tls.Config).ticketKeys":[[0],[0,1]],"(*crypto/tls.Config).time":[[0],[]],"(*crypto/tls.Config).writeKeyLog":[[0],[0]],"(*crypto/tls.Conn).Close":[[0],[0]],"(*crypto/tls.Conn).CloseWrite":[[0],[0]],"(*crypto/tls.Conn).ConnectionState":[[0],[0]],"(*crypto/tls.Conn).Handshake":[[0],[0]],"(*crypto/tls.Conn).HandshakeContext":[[0],[0]],"(*crypto/tls.Conn).LocalAddr":[[0],[]],"(*crypto/tls.Conn).NetConn":[[0],[0]],"(*crypto/tls.Conn).OCSPResponse":[[0],[0]],"(*crypto/tls.Conn).Read":[[0],[],[0]],"(*crypto/tls.Conn).RemoteAddr":[[0],[0]],"(*crypto/tls.Conn).SetDeadline":[[0],[0]],"(*crypto/tls.Conn).SetReadDeadline":[[0],[0]],"(*crypto/tls.Conn).SetWriteDeadline":[[0],[]],"(*crypto/tls.Conn).VerifyHostname":[[0],[0,1]],"(*crypto/tls.Conn).Write":[[0,1],[0],[0,1]],"(*crypto/tls.Conn).clientHandshake":[[0],[0,1]],"(*crypto/tls.Conn).clientHandshake$1":[],"(*crypto/tls.Conn).clientHandshake$bound":[[0]],"(*crypto/tls.Conn).closeNotify":[[0],[0]],"(*crypto/tls.Conn).connectionStateLocked":[[0],[0]],"(*crypto/tls.Conn).decryptTicket":[[0],[],[]],"(*crypto/tls.Conn).encryptTicket":[[0],[],[0]],"(*crypto/tls.Conn).flush":[[0],[],[]],"(*crypto/tls.Conn).getClientCertificate":[[0],[0],[]],"(*crypto/tls.Conn).handleKeyUpdate":[[0],[0]],"(*crypto/tls.Conn).handleNewSessionTicket":[[0],[0]],"(*crypto/tls.Conn).handlePostHandshakeMessage":[[0],[0]],"(*crypto/tls.Conn).handleRenegotiation":[[0],[0]],"(*crypto/tls.Conn).handshakeComplete":[[0],[]],"(*crypto/tls.Conn).handshakeContext":[[0],[0]],"(*crypto/tls.Conn).handshakeContext$1":[],"(*crypto/tls.Conn).handshakeContext$2":[],"(*crypto/tls.Conn).loadSession":[[0],[0],[0],[],[]],"(*crypto/tls.Conn).makeClientHello":[[0],[0],[0],[0]],"(*crypto/tls.Conn).maxPayloadSizeForWrite":[[0],[0]],"(*crypto/tls.Conn).newRecordHeaderError":[[0],[1,2]],"(*crypto/tls.Conn).pickTLSVersion":[[0],[1]],"(*crypto/tls.Conn).processCertsFromClient":[[0,1],[0,1]],"(*crypto/tls.Conn).readChangeCipherSpec":[[0],[0]],"(*crypto/tls.Conn).readClientHello":[[0],[0],[0]],"(*crypto/tls.Conn).readFromUntil":[[0],[0,1,2]],"(*crypto/tls.Conn).readHandshake":[[0],[0],[0]],"(*crypto/tls.Conn).readRecord":[[0],[0]],"(*crypto/tls.Conn).readRecordOrCCS":[[0],[0]],"(*crypto/tls.Conn).retryReadRecord":[[0],[0]],"(*crypto/tls.Conn).sendAlert":[[0,1],[0,1]],"(*crypto/tls.Conn).sendAlertLocked":[[0,1],[0,1]],"(*crypto/tls.Conn).serverHandshake":[[0],[0,1]],"(*crypto/tls.Conn).serverHandshake$bound":[[0]],"(*crypto/tls.Conn).verifyServerCertificate":[[0,1],[0,1]],"(*crypto/tls.Conn).write":[[0,1],[],[]],"(*crypto/tls.Conn).writeRecord":[[0,2],[0],[0]],"(*crypto/tls.Conn).writeRecordLocked":[[0,2],[0],[0]],"(*crypto/tls.Conn).writeRecordLocked$1":[],"(*crypto/tls.ConnectionState).ExportKeyingMaterial":[[0],[],[1]],"(*crypto/tls.CurveID).String":[[0],[]],"(*crypto/tls.Dialer).Dial":[[0],[0,1,2],[0,1,2]],"(*crypto/tls.Dialer).DialContext":[[0],[0,2,3],[0,2,3]],"(*crypto/tls.Dialer).netDialer":[[0],[0]],"(*crypto/tls.RecordHeaderError).Error":[[0],[]],"(*crypto/tls.SignatureScheme).String":[[0],[]],"(*crypto/tls.alert).Error":[[0],[]],"(*crypto/tls.alert).String":[[0],[]],"(*crypto/tls.atLeastReader).Read":[[0],[],[0]],"(*crypto/tls.certificateMsg).marshal":[[0],[0]],"(*crypto/tls.certificateMsg).unmarshal":[[0,1],[]],"(*crypto/tls.certificateMsgTLS13).marshal":[[0],[0]],"(*crypto/tls.certificateMsgTLS13).marshal$1":[],"(*crypto/tls.certificateMsgTLS13).unmarshal":[[0,1],[]],"(*crypto/tls.certificateRequestMsg).marshal":[[0],[0]],"(*crypto/tls.certificateRequestMsg).unmarshal":[[0,1],[]],"(*crypto/tls.certificateRequestMsgTLS13).marshal":[[0],[0]],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1$1":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1$1$1":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1$2":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1$2$1":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1$3":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1$3$1":[],"(*crypto/tls.certificateRequestMsgTLS13).marshal$1$1$3$1$1":[],"(*crypto/tls.certificateRequestMsgTLS13).unmarshal":[[0,1],[]],"(*crypto/tls.certificateStatusMsg).marshal":[[0],[0]],"(*crypto/tls.certificateStatusMsg).marshal$1":[],"(*crypto/tls.certificateStatusMsg).marshal$1$1":[],"(*crypto/tls.certificateStatusMsg).unmarshal":[[0,1],[]],"(*crypto/tls.certificateVerifyMsg).marshal":[[0],[0]],"(*crypto/tls.certificateVerifyMsg).marshal$1":[],"(*crypto/tls.certificateVerifyMsg).marshal$1$1":[],"(*crypto/tls.certificateVerifyMsg).unmarshal":[[0,1],[]],"(*crypto/tls.cipherSuiteTLS13).deriveSecret":[[0],[]],"(*crypto/tls.cipherSuiteTLS13).expandLabel":[[0],[]],"(*crypto/tls.cipherSuiteTLS13).expandLabel$1":[],"(*crypto/tls.cipherSuiteTLS13).expandLabel$2":[],"(*crypto/tls.cipherSuiteTLS13).exportKeyingMaterial":[[0],[]],"(*crypto/tls.cipherSuiteTLS13).exportKeyingMaterial$1":[[],[]],"(*crypto/tls.cipherSuiteTLS13).extract":[[0],[]],"(*crypto/tls.cipherSuiteTLS13).finishedHash":[[0],[]],"(*crypto/tls.cipherSuiteTLS13).nextTrafficSecret":[[0],[]],"(*crypto/tls.cipherSuiteTLS13).trafficKey":[[0],[],[]],"(*crypto/tls.clientHandshakeState).doFullHandshake":[[0],[0]],"(*crypto/tls.clientHandshakeState).establishKeys":[[0],[]],"(*crypto/tls.clientHandshakeState).handshake":[[0],[0]],"(*crypto/tls.clientHandshakeState).pickCipherSuite":[[0],[]],"(*crypto/tls.clientHandshakeState).processServerHello":[[0],[],[]],"(*crypto/tls.clientHandshakeState).readFinished":[[0],[0]],"(*crypto/tls.clientHandshakeState).readSessionTicket":[[0],[0]],"(*crypto/tls.clientHandshakeState).sendFinished":[[0],[0]],"(*crypto/tls.clientHandshakeState).serverResumedSession":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).checkServerHelloOrHRR":[[0],[]],"(*crypto/tls.clientHandshakeStateTLS13).establishHandshakeKeys":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).handshake":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).processHelloRetryRequest":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).processServerHello":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).readServerCertificate":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).readServerFinished":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).readServerParameters":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).sendClientCertificate":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).sendClientFinished":[[0],[0]],"(*crypto/tls.clientHandshakeStateTLS13).sendDummyChangeCipherSpec":[[0],[0]],"(*crypto/tls.clientHelloMsg).marshal":[[0],[0]],"(*crypto/tls.clientHelloMsg).marshal$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$2":[],"(*crypto/tls.clientHelloMsg).marshal$1$3":[],"(*crypto/tls.clientHelloMsg).marshal$1$4":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$1$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$1$1$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$10":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$10$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$11":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$11$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$12":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$12$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$12$1$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$13":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$13$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$14":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$14$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$14$1$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$14$2":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$14$2$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$2":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$3":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$3$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$4":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$4$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$5":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$6":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$6$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$7":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$7$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$8":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$8$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$9":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$9$1":[],"(*crypto/tls.clientHelloMsg).marshal$1$4$9$1$1":[],"(*crypto/tls.clientHelloMsg).marshalWithoutBinders":[[0],[0]],"(*crypto/tls.clientHelloMsg).unmarshal":[[0,1],[]],"(*crypto/tls.clientHelloMsg).updateBinders":[[0]],"(*crypto/tls.clientHelloMsg).updateBinders$1":[],"(*crypto/tls.clientHelloMsg).updateBinders$1$1":[],"(*crypto/tls.clientKeyExchangeMsg).marshal":[[0],[0]],"(*crypto/tls.clientKeyExchangeMsg).unmarshal":[[0,1],[]],"(*crypto/tls.cthWrapper).BlockSize":[[0],[]],"(*crypto/tls.cthWrapper).Reset":[[0]],"(*crypto/tls.cthWrapper).Size":[[0],[]],"(*crypto/tls.cthWrapper).Sum":[[0],[0,1]],"(*crypto/tls.cthWrapper).Write":[[0],[],[]],"(*crypto/tls.ecdheKeyAgreement).generateClientKeyExchange":[[0],[0],[0],[]],"(*crypto/tls.ecdheKeyAgreement).generateServerKeyExchange":[[0,3],[],[1,2,3]],"(*crypto/tls.ecdheKeyAgreement).processClientKeyExchange":[[0],[],[]],"(*crypto/tls.ecdheKeyAgreement).processServerKeyExchange":[[0,5],[1,4,5]],"(*crypto/tls.encryptedExtensionsMsg).marshal":[[0],[0]],"(*crypto/tls.encryptedExtensionsMsg).marshal$1":[],"(*crypto/tls.encryptedExtensionsMsg).marshal$1$1":[],"(*crypto/tls.encryptedExtensionsMsg).marshal$1$1$1":[],"(*crypto/tls.encryptedExtensionsMsg).marshal$1$1$1$1":[],"(*crypto/tls.encryptedExtensionsMsg).marshal$1$1$1$1$1":[],"(*crypto/tls.encryptedExtensionsMsg).unmarshal":[[0,1],[]],"(*crypto/tls.endOfEarlyDataMsg).marshal":[[0],[]],"(*crypto/tls.endOfEarlyDataMsg).unmarshal":[[0],[]],"(*crypto/tls.finishedHash).Write":[[0,1],[],[]],"(*crypto/tls.finishedHash).discardHandshakeBuffer":[[0]],"(*crypto/tls.finishedMsg).marshal":[[0],[0]],"(*crypto/tls.finishedMsg).marshal$1":[],"(*crypto/tls.finishedMsg).unmarshal":[[0,1],[]],"(*crypto/tls.halfConn).Lock":[[0]],"(*crypto/tls.halfConn).TryLock":[[0],[]],"(*crypto/tls.halfConn).Unlock":[[0]],"(*crypto/tls.halfConn).changeCipherSpec":[[0],[]],"(*crypto/tls.halfConn).decrypt":[[0],[1],[1],[]],"(*crypto/tls.halfConn).encrypt":[[0],[0,1,2],[3]],"(*crypto/tls.halfConn).explicitNonceLen":[[0],[0]],"(*crypto/tls.halfConn).incSeq":[[0]],"(*crypto/tls.halfConn).lockSlow":[[0]],"(*crypto/tls.halfConn).prepareCipherSpec":[[0,1,2,3]],"(*crypto/tls.halfConn).setErrorLocked":[[0,1],[0,1]],"(*crypto/tls.halfConn).setTrafficSecret":[[0,2]],"(*crypto/tls.halfConn).unlockSlow":[[0]],"(*crypto/tls.helloRequestMsg).marshal":[[0],[]],"(*crypto/tls.helloRequestMsg).unmarshal":[[0],[]],"(*crypto/tls.keyUpdateMsg).marshal":[[0],[0]],"(*crypto/tls.keyUpdateMsg).marshal$1":[],"(*crypto/tls.keyUpdateMsg).unmarshal":[[0,1],[]],"(*crypto/tls.listener).Accept":[[0],[0],[0]],"(*crypto/tls.listener).Addr":[[0],[0]],"(*crypto/tls.listener).Close":[[0],[]],"(*crypto/tls.lruSessionCache).Get":[[0],[0,1],[]],"(*crypto/tls.lruSessionCache).Lock":[[0]],"(*crypto/tls.lruSessionCache).Put":[[0]],"(*crypto/tls.lruSessionCache).TryLock":[[0],[]],"(*crypto/tls.lruSessionCache).Unlock":[[0]],"(*crypto/tls.lruSessionCache).lockSlow":[[0]],"(*crypto/tls.lruSessionCache).unlockSlow":[[0]],"(*crypto/tls.marshalingFunction).Marshal":[[0],[]],"(*crypto/tls.newSessionTicketMsg).marshal":[[0],[0]],"(*crypto/tls.newSessionTicketMsg).unmarshal":[[0,1],[]],"(*crypto/tls.newSessionTicketMsgTLS13).marshal":[[0],[0]],"(*crypto/tls.newSessionTicketMsgTLS13).marshal$1":[],"(*crypto/tls.newSessionTicketMsgTLS13).marshal$1$1":[],"(*crypto/tls.newSessionTicketMsgTLS13).marshal$1$2":[],"(*crypto/tls.newSessionTicketMsgTLS13).marshal$1$3":[],"(*crypto/tls.newSessionTicketMsgTLS13).marshal$1$3$1":[],"(*crypto/tls.newSessionTicketMsgTLS13).unmarshal":[[0,1],[]],"(*crypto/tls.nistParameters).CurveID":[[0],[0]],"(*crypto/tls.nistParameters).PublicKey":[[0],[]],"(*crypto/tls.nistParameters).SharedKey":[[0],[]],"(*crypto/tls.permanentError).Error":[[0],[0]],"(*crypto/tls.permanentError).Temporary":[[0],[]],"(*crypto/tls.permanentError).Timeout":[[0],[]],"(*crypto/tls.permanentError).Unwrap":[[0],[0]],"(*crypto/tls.prefixNonceAEAD).NonceSize":[[0],[]],"(*crypto/tls.prefixNonceAEAD).Open":[[0],[],[]],"(*crypto/tls.prefixNonceAEAD).Overhead":[[0],[0]],"(*crypto/tls.prefixNonceAEAD).Seal":[[0],[1]],"(*crypto/tls.prefixNonceAEAD).explicitNonceLen":[[0],[]],"(*crypto/tls.rsaKeyAgreement).generateClientKeyExchange":[[0],[2],[],[1]],"(*crypto/tls.rsaKeyAgreement).generateServerKeyExchange":[[0],[],[]],"(*crypto/tls.rsaKeyAgreement).processClientKeyExchange":[[0],[],[1]],"(*crypto/tls.rsaKeyAgreement).processServerKeyExchange":[[0],[]],"(*crypto/tls.serverHandshakeState).checkForResumption":[[0],[]],"(*crypto/tls.serverHandshakeState).cipherSuiteOk":[[0],[]],"(*crypto/tls.serverHandshakeState).cipherSuiteOk$bound":[[]],"(*crypto/tls.serverHandshakeState).doFullHandshake":[[0],[0]],"(*crypto/tls.serverHandshakeState).doResumeHandshake":[[0],[0]],"(*crypto/tls.serverHandshakeState).establishKeys":[[0],[]],"(*crypto/tls.serverHandshakeState).handshake":[[0],[0]],"(*crypto/tls.serverHandshakeState).pickCipherSuite":[[0],[]],"(*crypto/tls.serverHandshakeState).processClientHello":[[0],[0]],"(*crypto/tls.serverHandshakeState).readFinished":[[0],[0]],"(*crypto/tls.serverHandshakeState).sendFinished":[[0],[0]],"(*crypto/tls.serverHandshakeState).sendSessionTicket":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).checkForResumption":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).doHelloRetryRequest":[[0,1],[0,1]],"(*crypto/tls.serverHandshakeStateTLS13).handshake":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).pickCertificate":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).processClientHello":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).readClientCertificate":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).readClientFinished":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).requestClientCert":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).sendDummyChangeCipherSpec":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).sendServerCertificate":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).sendServerFinished":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).sendServerParameters":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).sendSessionTickets":[[0],[0]],"(*crypto/tls.serverHandshakeStateTLS13).shouldSendSessionTickets":[[0],[]],"(*crypto/tls.serverHelloDoneMsg).marshal":[[0],[]],"(*crypto/tls.serverHelloDoneMsg).unmarshal":[[0],[]],"(*crypto/tls.serverHelloMsg).marshal":[[0],[0]],"(*crypto/tls.serverHelloMsg).marshal$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$1$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$2":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$2$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$2$1$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$3":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$3$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$3$1$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$4":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$5":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$5$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$6":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$7":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$7$1":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$8":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$9":[],"(*crypto/tls.serverHelloMsg).marshal$1$2$9$1":[],"(*crypto/tls.serverHelloMsg).unmarshal":[[0,1],[]],"(*crypto/tls.serverKeyExchangeMsg).marshal":[[0],[0]],"(*crypto/tls.serverKeyExchangeMsg).unmarshal":[[0,1],[]],"(*crypto/tls.sessionState).marshal":[[0],[0]],"(*crypto/tls.sessionState).marshal$1":[],"(*crypto/tls.sessionState).marshal$2":[],"(*crypto/tls.sessionState).marshal$2$1":[],"(*crypto/tls.sessionState).unmarshal":[[0],[]],"(*crypto/tls.sessionStateTLS13).marshal":[[0],[0]],"(*crypto/tls.sessionStateTLS13).marshal$1":[],"(*crypto/tls.sessionStateTLS13).unmarshal":[[0],[]],"(*crypto/tls.x25519Parameters).CurveID":[[0],[]],"(*crypto/tls.x25519Parameters).PublicKey":[[0],[0]],"(*crypto/tls.x25519Parameters).SharedKey":[[0],[]],"(*crypto/tls.xorNonceAEAD).NonceSize":[[0],[]],"(*crypto/tls.xorNonceAEAD).Open":[[0],[],[]],"(*crypto/tls.xorNonceAEAD).Overhead":[[0],[0]],"(*crypto/tls.xorNonceAEAD).Seal":[[0],[1]],"(*crypto/tls.xorNonceAEAD).explicitNonceLen":[[0],[]],"(*crypto/x509.CertPool).AddCert":[[0,1]],"(*crypto/x509.CertPool).AddCert$1":[[],[]],"(*crypto/x509.CertPool).AppendCertsFromPEM":[[0,1],[]],"(*crypto/x509.CertPool).AppendCertsFromPEM$1":[[],[]],"(*crypto/x509.CertPool).AppendCertsFromPEM$1$1":[],"(*crypto/x509.CertPool).Clone":[[0],[0]],"(*crypto/x509.CertPool).Equal":[[0],[0,1]],"(*crypto/x509.CertPool).Subjects":[[0],[0]],"(*crypto/x509.CertPool).addCertFunc":[[0,2,3]],"(*crypto/x509.CertPool).cert":[[0],[],[]],"(*crypto/x509.CertPool).contains":[[0],[0]],"(*crypto/x509.CertPool).findPotentialParents":[[0],[]],"(*crypto/x509.CertPool).len":[[0],[]],"(*crypto/x509.Certificate).CheckCRLSignature":[[0],[0]],"(*crypto/x509.Certificate).CheckSignature":[[0],[0,1]],"(*crypto/x509.Certificate).CheckSignatureFrom":[[0],[0,1]],"(*crypto/x509.Certificate).CreateCRL":[[0],[],[]],"(*crypto/x509.Certificate).Equal":[[0],[0,1]],"(*crypto/x509.Certificate).Verify":[[0],[0],[0,1]],"(*crypto/x509.Certificate).VerifyHostname":[[0],[0,1]],"(*crypto/x509.Certificate).buildChains":[[0],[],[0]],"(*crypto/x509.Certificate).buildChains$1":[],"(*crypto/x509.Certificate).checkNameConstraints":[[0],[0,5,7,8]],"(*crypto/x509.Certificate).getSANExtension":[[0],[0]],"(*crypto/x509.Certificate).hasNameConstraints":[[0],[]],"(*crypto/x509.Certificate).hasSANExtension":[[0],[]],"(*crypto/x509.Certificate).isValid":[[0],[0]],"(*crypto/x509.Certificate).isValid$1":[[1]],"(*crypto/x509.Certificate).isValid$1$1":[[0,1],[0,1]],"(*crypto/x509.Certificate).isValid$1$2":[[],[0,1]],"(*crypto/x509.Certificate).isValid$1$3":[[],[0,1]],"(*crypto/x509.Certificate).isValid$1$4":[[],[]],"(*crypto/x509.Certificate).systemVerify":[[0],[],[0,1]],"(*crypto/x509.CertificateInvalidError).Error":[[0],[]],"(*crypto/x509.CertificateRequest).CheckSignature":[[0],[0]],"(*crypto/x509.ConstraintViolationError).Error":[[0],[]],"(*crypto/x509.HostnameError).Error":[[0],[]],"(*crypto/x509.InsecureAlgorithmError).Error":[[0],[]],"(*crypto/x509.PublicKeyAlgorithm).String":[[0],[]],"(*crypto/x509.RevocationList).CheckSignatureFrom":[[0],[0,1]],"(*crypto/x509.SignatureAlgorithm).String":[[0],[]],"(*crypto/x509.SignatureAlgorithm).isRSAPSS":[[0],[]],"(*crypto/x509.SystemRootsError).Error":[[0],[]],"(*crypto/x509.SystemRootsError).Unwrap":[[0],[]],"(*crypto/x509.UnhandledCriticalExtension).Error":[[0],[]],"(*crypto/x509.UnknownAuthorityError).Error":[[0],[]],"(*crypto/x509/internal/macos.OSStatus).Error":[[0],[]],"(*crypto/x509/pkix.CertificateList).HasExpired":[[0],[0,1]],"(*crypto/x509/pkix.Name).FillFromRDNSequence":[[0,1]],"(*crypto/x509/pkix.Name).String":[[0],[]],"(*crypto/x509/pkix.Name).ToRDNSequence":[[0],[]],"(*crypto/x509/pkix.Name).appendRDNs":[[0],[1]],"(*crypto/x509/pkix.RDNSequence).String":[[0],[]],"(*database/sql.ColumnType).DatabaseTypeName":[[0],[0]],"(*database/sql.ColumnType).DecimalSize":[[0],[0],[0],[0]],"(*database/sql.ColumnType).Length":[[0],[0],[0]],"(*database/sql.ColumnType).Name":[[0],[0]],"(*database/sql.ColumnType).Nullable":[[0],[0],[0]],"(*database/sql.ColumnType).ScanType":[[0],[0]],"(*database/sql.Conn).BeginTx":[[0],[0,1],[]],"(*database/sql.Conn).Close":[[0],[]],"(*database/sql.Conn).ExecContext":[[0],[0],[3]],"(*database/sql.Conn).PingContext":[[0],[]],"(*database/sql.Conn).PrepareContext":[[0],[0,2],[]],"(*database/sql.Conn).QueryContext":[[0],[0],[3]],"(*database/sql.Conn).QueryRowContext":[[0],[0,3]],"(*database/sql.Conn).Raw":[[0],[]],"(*database/sql.Conn).Raw$1":[],"(*database/sql.Conn).close":[[0],[1]],"(*database/sql.Conn).closemuRUnlockCondReleaseConn":[[0]],"(*database/sql.Conn).closemuRUnlockCondReleaseConn$bound":[],"(*database/sql.Conn).grabConn":[[0],[0],[],[]],"(*database/sql.Conn).txCtx":[[0],[]],"(*database/sql.DB).Begin":[[0],[0],[]],"(*database/sql.DB).BeginTx":[[0],[0,1],[]],"(*database/sql.DB).Close":[[0],[0]],"(*database/sql.DB).Conn":[[0],[0],[]],"(*database/sql.DB).Driver":[[0],[]],"(*database/sql.DB).Exec":[[0],[0],[2]],"(*database/sql.DB).ExecContext":[[0],[0],[3]],"(*database/sql.DB).Ping":[[0],[]],"(*database/sql.DB).PingContext":[[0],[]],"(*database/sql.DB).Prepare":[[0],[0,1],[]],"(*database/sql.DB).PrepareContext":[[0],[0,2],[]],"(*database/sql.DB).Query":[[0],[0],[2]],"(*database/sql.DB).QueryContext":[[0],[0],[3]],"(*database/sql.DB).QueryRow":[[0],[0,2]],"(*database/sql.DB).QueryRowContext":[[0],[0,3]],"(*database/sql.DB).SetConnMaxIdleTime":[[0]],"(*database/sql.DB).SetConnMaxLifetime":[[0]],"(*database/sql.DB).SetMaxIdleConns":[[0]],"(*database/sql.DB).SetMaxOpenConns":[[0,1]],"(*database/sql.DB).Stats":[[0],[0]],"(*database/sql.DB).addDep":[[0]],"(*database/sql.DB).addDepLocked":[[0]],"(*database/sql.DB).begin":[[0],[0,1],[]],"(*database/sql.DB).beginDC":[[0],[0,1,2,3],[]],"(*database/sql.DB).beginDC$1":[],"(*database/sql.DB).conn":[[0],[0],[]],"(*database/sql.DB).connectionCleaner":[[0]],"(*database/sql.DB).connectionCleanerRunLocked":[[0],[0,1],[0]],"(*database/sql.DB).connectionOpener":[[0]],"(*database/sql.DB).exec":[[0],[0],[3]],"(*database/sql.DB).execDC":[[0],[2],[5]],"(*database/sql.DB).execDC$1":[],"(*database/sql.DB).execDC$2":[],"(*database/sql.DB).execDC$3":[],"(*database/sql.DB).maxIdleConnsLocked":[[0],[0]],"(*database/sql.DB).maybeOpenNewConnections":[[0]],"(*database/sql.DB).nextRequestKeyLocked":[[0],[0]],"(*database/sql.DB).noteUnusedDriverStatement":[[0]],"(*database/sql.DB).noteUnusedDriverStatement$1":[],"(*database/sql.DB).openNewConnection":[[0]],"(*database/sql.DB).pingDC":[[0],[]],"(*database/sql.DB).pingDC$1":[],"(*database/sql.DB).prepare":[[0],[0,2],[]],"(*database/sql.DB).prepareDC":[[0],[0,4,5],[]],"(*database/sql.DB).prepareDC$1":[],"(*database/sql.DB).prepareDC$2":[],"(*database/sql.DB).putConn":[[0]],"(*database/sql.DB).putConnDBLocked":[[0],[]],"(*database/sql.DB).query":[[0],[0],[3]],"(*database/sql.DB).queryDC":[[0],[3,4],[6]],"(*database/sql.DB).queryDC$1":[],"(*database/sql.DB).queryDC$2":[],"(*database/sql.DB).removeDep":[[0],[]],"(*database/sql.DB).removeDepLocked":[[0],[]],"(*database/sql.DB).removeDepLocked$1":[[]],"(*database/sql.DB).shortestIdleTimeLocked":[[0],[0]],"(*database/sql.DB).startCleanerLocked":[[0]],"(*database/sql.IsolationLevel).String":[[0],[]],"(*database/sql.NullBool).Scan":[[0],[]],"(*database/sql.NullBool).Value":[[0],[],[]],"(*database/sql.NullByte).Scan":[[0],[]],"(*database/sql.NullByte).Value":[[0],[],[]],"(*database/sql.NullFloat64).Scan":[[0],[]],"(*database/sql.NullFloat64).Value":[[0],[],[]],"(*database/sql.NullInt16).Scan":[[0],[]],"(*database/sql.NullInt16).Value":[[0],[],[]],"(*database/sql.NullInt32).Scan":[[0],[]],"(*database/sql.NullInt32).Value":[[0],[],[]],"(*database/sql.NullInt64).Scan":[[0],[]],"(*database/sql.NullInt64).Value":[[0],[],[]],"(*database/sql.NullString).Scan":[[0],[]],"(*database/sql.NullString).Value":[[0],[],[]],"(*database/sql.NullTime).Scan":[[0],[]],"(*database/sql.NullTime).Value":[[0],[],[]],"(*database/sql.Row).Err":[[0],[0]],"(*database/sql.Row).Scan":[[0],[0,1]],"(*database/sql.Rows).Close":[[0],[]],"(*database/sql.Rows).ColumnTypes":[[0],[],[0]],"(*database/sql.Rows).Columns":[[0],[],[0]],"(*database/sql.Rows).Err":[[0],[0]],"(*database/sql.Rows).Next":[[0],[]],"(*database/sql.Rows).Next$1":[],"(*database/sql.Rows).NextResultSet":[[0],[]],"(*database/sql.Rows).NextResultSet$1":[],"(*database/sql.Rows).Scan":[[0],[0,1]],"(*database/sql.Rows).awaitDone":[[0]],"(*database/sql.Rows).close":[[0],[1]],"(*database/sql.Rows).close$1":[],"(*database/sql.Rows).initContextClose":[[0]],"(*database/sql.Rows).lasterrOrErrLocked":[[0],[0,1]],"(*database/sql.Rows).nextLocked":[[0],[],[]],"(*database/sql.Stmt).Close":[[0],[0]],"(*database/sql.Stmt).Exec":[[0],[0],[0,1]],"(*database/sql.Stmt).ExecContext":[[0],[0],[0,2]],"(*database/sql.Stmt).Query":[[0],[0],[0,1]],"(*database/sql.Stmt).QueryContext":[[0],[0],[0,2]],"(*database/sql.Stmt).QueryContext$1":[],"(*database/sql.Stmt).QueryRow":[[0],[0,1]],"(*database/sql.Stmt).QueryRowContext":[[0],[0,2]],"(*database/sql.Stmt).connStmt":[[0],[0],[],[0],[0]],"(*database/sql.Stmt).connStmt$1":[],"(*database/sql.Stmt).finalClose":[[0],[]],"(*database/sql.Stmt).prepareOnConnLocked":[[0,2],[2],[]],"(*database/sql.Stmt).removeClosedStmtLocked":[[0]],"(*database/sql.Tx).Commit":[[0],[]],"(*database/sql.Tx).Commit$1":[],"(*database/sql.Tx).Exec":[[0],[0],[2]],"(*database/sql.Tx).ExecContext":[[0],[0],[3]],"(*database/sql.Tx).Prepare":[[0,1],[0,1],[]],"(*database/sql.Tx).PrepareContext":[[0,2],[0,2],[]],"(*database/sql.Tx).Query":[[0],[0],[2]],"(*database/sql.Tx).QueryContext":[[0],[0],[3]],"(*database/sql.Tx).QueryRow":[[0],[0,2]],"(*database/sql.Tx).QueryRowContext":[[0],[0,3]],"(*database/sql.Tx).Rollback":[[0],[]],"(*database/sql.Tx).Stmt":[[0,1],[0,1]],"(*database/sql.Tx).StmtContext":[[0,2],[0,2]],"(*database/sql.Tx).StmtContext$1":[],"(*database/sql.Tx).StmtContext$2":[],"(*database/sql.Tx).awaitDone":[[0]],"(*database/sql.Tx).close":[[0]],"(*database/sql.Tx).closePrepared":[[0]],"(*database/sql.Tx).closemuRUnlockRelease":[[0]],"(*database/sql.Tx).closemuRUnlockRelease$bound":[],"(*database/sql.Tx).grabConn":[[0],[0],[],[]],"(*database/sql.Tx).isDone":[[0],[]],"(*database/sql.Tx).rollback":[[0],[]],"(*database/sql.Tx).rollback$1":[],"(*database/sql.Tx).txCtx":[[0],[0]],"(*database/sql.driverConn).Close":[[0],[]],"(*database/sql.driverConn).Lock":[[0]],"(*database/sql.driverConn).TryLock":[[0],[]],"(*database/sql.driverConn).Unlock":[[0]],"(*database/sql.driverConn).closeDBLocked":[[0],[]],"(*database/sql.driverConn).closeDBLocked$1":[[]],"(*database/sql.driverConn).expired":[[0],[0,1]],"(*database/sql.driverConn).finalClose":[[0],[]],"(*database/sql.driverConn).finalClose$1":[],"(*database/sql.driverConn).finalClose$2":[],"(*database/sql.driverConn).lockSlow":[[0]],"(*database/sql.driverConn).prepareLocked":[[0],[0],[]],"(*database/sql.driverConn).releaseConn":[[0]],"(*database/sql.driverConn).releaseConn$bound":[],"(*database/sql.driverConn).removeOpenStmt":[[0]],"(*database/sql.driverConn).resetSession":[[0],[]],"(*database/sql.driverConn).unlockSlow":[[0]],"(*database/sql.driverConn).validateConnection":[[0],[0]],"(*database/sql.driverResult).LastInsertId":[[0],[],[]],"(*database/sql.driverResult).Lock":[[0]],"(*database/sql.driverResult).RowsAffected":[[0],[],[]],"(*database/sql.driverResult).Unlock":[[0]],"(*database/sql.driverStmt).Close":[[0],[0]],"(*database/sql.driverStmt).Lock":[[0]],"(*database/sql.driverStmt).Unlock":[[0]],"(*database/sql.dsnConnector).Connect":[[0],[],[]],"(*database/sql.dsnConnector).Driver":[[0],[]],"(*database/sql/driver.NotNull).ConvertValue":[[0],[1],[1]],"(*database/sql/driver.Null).ConvertValue":[[0],[1],[1]],"(*database/sql/driver.RowsAffected).LastInsertId":[[0],[],[]],"(*database/sql/driver.RowsAffected).RowsAffected":[[0],[],[]],"(*database/sql/driver.boolType).ConvertValue":[[0],[1],[1]],"(*database/sql/driver.boolType).String":[[0],[]],"(*database/sql/driver.defaultConverter).ConvertValue":[[0],[1],[1]],"(*database/sql/driver.int32Type).ConvertValue":[[0],[1],[1]],"(*database/sql/driver.noRows).LastInsertId":[[0],[],[]],"(*database/sql/driver.noRows).RowsAffected":[[0],[],[]],"(*database/sql/driver.stringType).ConvertValue":[[0],[1],[]],"(*debug/buildinfo.elfExe).DataStart":[[0],[0]],"(*debug/buildinfo.elfExe).ReadData":[[0],[],[]],"(*debug/buildinfo.machoExe).DataStart":[[0],[0]],"(*debug/buildinfo.machoExe).ReadData":[[0],[],[]],"(*debug/buildinfo.peExe).DataStart":[[0],[0]],"(*debug/buildinfo.peExe).ReadData":[[0],[],[]],"(*debug/buildinfo.peExe).imageBase":[[0],[0]],"(*debug/buildinfo.xcoffExe).DataStart":[[0],[0]],"(*debug/buildinfo.xcoffExe).ReadData":[[0],[],[]],"(*debug/dwarf.AddrType).Basic":[[0],[0]],"(*debug/dwarf.AddrType).Common":[[0],[0]],"(*debug/dwarf.AddrType).Size":[[0],[0]],"(*debug/dwarf.AddrType).String":[[0],[0]],"(*debug/dwarf.ArrayType).Common":[[0],[0]],"(*debug/dwarf.ArrayType).Size":[[0],[0]],"(*debug/dwarf.ArrayType).String":[[0],[0]],"(*debug/dwarf.Attr).GoString":[[0],[]],"(*debug/dwarf.Attr).String":[[0],[]],"(*debug/dwarf.BasicType).Basic":[[0],[0]],"(*debug/dwarf.BasicType).Common":[[0],[0]],"(*debug/dwarf.BasicType).Size":[[0],[0]],"(*debug/dwarf.BasicType).String":[[0],[0]],"(*debug/dwarf.BoolType).Basic":[[0],[0]],"(*debug/dwarf.BoolType).Common":[[0],[0]],"(*debug/dwarf.BoolType).Size":[[0],[0]],"(*debug/dwarf.BoolType).String":[[0],[0]],"(*debug/dwarf.CharType).Basic":[[0],[0]],"(*debug/dwarf.CharType).Common":[[0],[0]],"(*debug/dwarf.CharType).Size":[[0],[0]],"(*debug/dwarf.CharType).String":[[0],[0]],"(*debug/dwarf.Class).GoString":[[0],[]],"(*debug/dwarf.Class).String":[[0],[]],"(*debug/dwarf.CommonType).Common":[[0],[0]],"(*debug/dwarf.CommonType).Size":[[0],[0]],"(*debug/dwarf.ComplexType).Basic":[[0],[0]],"(*debug/dwarf.ComplexType).Common":[[0],[0]],"(*debug/dwarf.ComplexType).Size":[[0],[0]],"(*debug/dwarf.ComplexType).String":[[0],[0]],"(*debug/dwarf.Data).AddSection":[[0,2],[]],"(*debug/dwarf.Data).AddTypes":[[0],[0,1,2]],"(*debug/dwarf.Data).LineReader":[[0],[0,1],[0,1]],"(*debug/dwarf.Data).Ranges":[[0],[0,1],[0,1]],"(*debug/dwarf.Data).Reader":[[0],[0]],"(*debug/dwarf.Data).Type":[[0],[0,1],[0,1]],"(*debug/dwarf.Data).baseAddressForEntry":[[0],[0,1],[0,1],[0]],"(*debug/dwarf.Data).debugAddr":[[0],[0,1,2,3],[0,1,2,3]],"(*debug/dwarf.Data).dwarf2Ranges":[[0],[0,1,2,3,4],[]],"(*debug/dwarf.Data).dwarf5Ranges":[[0],[0,1,2,3,4,5],[0,1,2,4]],"(*debug/dwarf.Data).offsetToUnit":[[0],[]],"(*debug/dwarf.Data).offsetToUnit$1":[[]],"(*debug/dwarf.Data).parseAbbrev":[[0],[0,1],[0]],"(*debug/dwarf.Data).parseTypes":[[0],[0,1,2]],"(*debug/dwarf.Data).parseUnits":[[0],[],[0]],"(*debug/dwarf.Data).readType":[[0],[3,4],[0,1,2,3]],"(*debug/dwarf.Data).readType$1":[],"(*debug/dwarf.Data).readType$2":[[]],"(*debug/dwarf.Data).readType$3":[[0]],"(*debug/dwarf.Data).sigToType":[[0],[0,1],[1]],"(*debug/dwarf.DecodeError).Error":[[0],[]],"(*debug/dwarf.DotDotDotType).Common":[[0],[0]],"(*debug/dwarf.DotDotDotType).Size":[[0],[0]],"(*debug/dwarf.DotDotDotType).String":[[0],[]],"(*debug/dwarf.Entry).AttrField":[[0],[0]],"(*debug/dwarf.Entry).Val":[[0],[0]],"(*debug/dwarf.EnumType).Common":[[0],[0]],"(*debug/dwarf.EnumType).Size":[[0],[0]],"(*debug/dwarf.EnumType).String":[[0],[0]],"(*debug/dwarf.FloatType).Basic":[[0],[0]],"(*debug/dwarf.FloatType).Common":[[0],[0]],"(*debug/dwarf.FloatType).Size":[[0],[0]],"(*debug/dwarf.FloatType).String":[[0],[0]],"(*debug/dwarf.FuncType).Common":[[0],[0]],"(*debug/dwarf.FuncType).Size":[[0],[0]],"(*debug/dwarf.FuncType).String":[[0],[0]],"(*debug/dwarf.IntType).Basic":[[0],[0]],"(*debug/dwarf.IntType).Common":[[0],[0]],"(*debug/dwarf.IntType).Size":[[0],[0]],"(*debug/dwarf.IntType).String":[[0],[0]],"(*debug/dwarf.LineReader).Files":[[0],[0]],"(*debug/dwarf.LineReader).Next":[[0],[0]],"(*debug/dwarf.LineReader).Reset":[[0]],"(*debug/dwarf.LineReader).Seek":[[0,1]],"(*debug/dwarf.LineReader).SeekPC":[[0],[0]],"(*debug/dwarf.LineReader).Tell":[[0],[0]],"(*debug/dwarf.LineReader).advancePC":[[0,1]],"(*debug/dwarf.LineReader).readFileEntry":[[0],[],[0]],"(*debug/dwarf.LineReader).readHeader":[[0,1],[0]],"(*debug/dwarf.LineReader).readLNCT":[[0],[0],[0],[0],[0]],"(*debug/dwarf.LineReader).readLNCTFormat":[[0],[]],"(*debug/dwarf.LineReader).resetState":[[0]],"(*debug/dwarf.LineReader).step":[[0],[]],"(*debug/dwarf.LineReader).updateFile":[[0]],"(*debug/dwarf.PtrType).Common":[[0],[0]],"(*debug/dwarf.PtrType).Size":[[0],[0]],"(*debug/dwarf.PtrType).String":[[0],[0]],"(*debug/dwarf.QualType).Common":[[0],[0]],"(*debug/dwarf.QualType).Size":[[0],[0]],"(*debug/dwarf.QualType).String":[[0],[0]],"(*debug/dwarf.Reader).AddressSize":[[0],[0]],"(*debug/dwarf.Reader).ByteOrder":[[0],[0]],"(*debug/dwarf.Reader).Next":[[0],[0],[0]],"(*debug/dwarf.Reader).Seek":[[0,1]],"(*debug/dwarf.Reader).SeekPC":[[0],[0],[0]],"(*debug/dwarf.Reader).SkipChildren":[[0]],"(*debug/dwarf.Reader).clone":[[0],[0]],"(*debug/dwarf.Reader).maybeNextUnit":[[0]],"(*debug/dwarf.Reader).nextUnit":[[0]],"(*debug/dwarf.Reader).offset":[[0],[0]],"(*debug/dwarf.StructField).bitOffset":[[0],[0]],"(*debug/dwarf.StructType).Common":[[0],[0]],"(*debug/dwarf.StructType).Defn":[[0],[0]],"(*debug/dwarf.StructType).Size":[[0],[0]],"(*debug/dwarf.StructType).String":[[0],[0]],"(*debug/dwarf.Tag).GoString":[[0],[]],"(*debug/dwarf.Tag).String":[[0],[]],"(*debug/dwarf.TypedefType).Common":[[0],[0]],"(*debug/dwarf.TypedefType).Size":[[0],[0]],"(*debug/dwarf.TypedefType).String":[[0],[0]],"(*debug/dwarf.UcharType).Basic":[[0],[0]],"(*debug/dwarf.UcharType).Common":[[0],[0]],"(*debug/dwarf.UcharType).Size":[[0],[0]],"(*debug/dwarf.UcharType).String":[[0],[0]],"(*debug/dwarf.UintType).Basic":[[0],[0]],"(*debug/dwarf.UintType).Common":[[0],[0]],"(*debug/dwarf.UintType).Size":[[0],[0]],"(*debug/dwarf.UintType).String":[[0],[0]],"(*debug/dwarf.UnspecifiedType).Basic":[[0],[0]],"(*debug/dwarf.UnspecifiedType).Common":[[0],[0]],"(*debug/dwarf.UnspecifiedType).Size":[[0],[0]],"(*debug/dwarf.UnspecifiedType).String":[[0],[0]],"(*debug/dwarf.UnsupportedType).Common":[[0],[0]],"(*debug/dwarf.UnsupportedType).Size":[[0],[0]],"(*debug/dwarf.UnsupportedType).String":[[0],[0]],"(*debug/dwarf.VoidType).Common":[[0],[0]],"(*debug/dwarf.VoidType).Size":[[0],[0]],"(*debug/dwarf.VoidType).String":[[0],[]],"(*debug/dwarf.buf).addr":[[0],[0]],"(*debug/dwarf.buf).bytes":[[0,1],[0]],"(*debug/dwarf.buf).entry":[[0],[0,2]],"(*debug/dwarf.buf).entry$1":[[0,1]],"(*debug/dwarf.buf).entry$2":[[0,1]],"(*debug/dwarf.buf).error":[[0,1]],"(*debug/dwarf.buf).int":[[0],[0]],"(*debug/dwarf.buf).skip":[[0,1]],"(*debug/dwarf.buf).string":[[0],[0]],"(*debug/dwarf.buf).uint":[[0],[0]],"(*debug/dwarf.buf).uint16":[[0],[0]],"(*debug/dwarf.buf).uint24":[[0],[0]],"(*debug/dwarf.buf).uint32":[[0],[0]],"(*debug/dwarf.buf).uint64":[[0],[0]],"(*debug/dwarf.buf).uint8":[[0],[0]],"(*debug/dwarf.buf).unitLength":[[0],[0],[]],"(*debug/dwarf.buf).varint":[[0],[0],[]],"(*debug/dwarf.typeFixer).apply":[[0]],"(*debug/dwarf.typeFixer).recordArrayType":[[0,1]],"(*debug/dwarf.typeUnit).addrsize":[[0],[0]],"(*debug/dwarf.typeUnit).dwarf64":[[0],[0],[]],"(*debug/dwarf.typeUnit).version":[[0],[0]],"(*debug/dwarf.typeUnitReader).AddressSize":[[0],[0]],"(*debug/dwarf.typeUnitReader).Next":[[0],[0],[0]],"(*debug/dwarf.typeUnitReader).Seek":[[0,1]],"(*debug/dwarf.typeUnitReader).clone":[[0],[0]],"(*debug/dwarf.typeUnitReader).offset":[[0],[0]],"(*debug/dwarf.unit).addrsize":[[0],[0]],"(*debug/dwarf.unit).dwarf64":[[0],[0],[]],"(*debug/dwarf.unit).version":[[0],[0]],"(*debug/dwarf.unknownFormat).addrsize":[[0],[]],"(*debug/dwarf.unknownFormat).dwarf64":[[0],[],[]],"(*debug/dwarf.unknownFormat).version":[[0],[]],"(*debug/elf.Class).GoString":[[0],[]],"(*debug/elf.Class).String":[[0],[]],"(*debug/elf.CompressionType).GoString":[[0],[]],"(*debug/elf.CompressionType).String":[[0],[]],"(*debug/elf.Data).GoString":[[0],[]],"(*debug/elf.Data).String":[[0],[]],"(*debug/elf.DynFlag).GoString":[[0],[]],"(*debug/elf.DynFlag).String":[[0],[]],"(*debug/elf.DynTag).GoString":[[0],[]],"(*debug/elf.DynTag).String":[[0],[]],"(*debug/elf.File).Close":[[0],[0]],"(*debug/elf.File).DWARF":[[0],[0],[0]],"(*debug/elf.File).DWARF$1":[[0]],"(*debug/elf.File).DWARF$2":[[],[1]],"(*debug/elf.File).DynString":[[0],[],[0,1]],"(*debug/elf.File).DynamicSymbols":[[0],[],[0]],"(*debug/elf.File).ImportedLibraries":[[0],[],[0]],"(*debug/elf.File).ImportedSymbols":[[0],[],[0]],"(*debug/elf.File).Section":[[0],[0]],"(*debug/elf.File).SectionByType":[[0],[0]],"(*debug/elf.File).Symbols":[[0],[],[0]],"(*debug/elf.File).applyRelocations":[[0],[0]],"(*debug/elf.File).applyRelocations386":[[0],[0]],"(*debug/elf.File).applyRelocationsAMD64":[[0],[0]],"(*debug/elf.File).applyRelocationsARM":[[0],[0]],"(*debug/elf.File).applyRelocationsARM64":[[0],[0]],"(*debug/elf.File).applyRelocationsLOONG64":[[0],[0]],"(*debug/elf.File).applyRelocationsMIPS":[[0],[0]],"(*debug/elf.File).applyRelocationsMIPS64":[[0],[0]],"(*debug/elf.File).applyRelocationsPPC":[[0],[0]],"(*debug/elf.File).applyRelocationsPPC64":[[0],[0]],"(*debug/elf.File).applyRelocationsRISCV64":[[0],[0]],"(*debug/elf.File).applyRelocationsSPARC64":[[0],[0]],"(*debug/elf.File).applyRelocationss390x":[[0],[0]],"(*debug/elf.File).getSymbols":[[0],[],[],[0]],"(*debug/elf.File).getSymbols32":[[0],[],[],[0]],"(*debug/elf.File).getSymbols64":[[0],[],[],[0]],"(*debug/elf.File).gnuVersion":[[0],[0],[0]],"(*debug/elf.File).gnuVersionInit":[[0],[]],"(*debug/elf.File).stringTable":[[0],[],[0]],"(*debug/elf.FormatError).Error":[[0],[0]],"(*debug/elf.Machine).GoString":[[0],[]],"(*debug/elf.Machine).String":[[0],[]],"(*debug/elf.NType).GoString":[[0],[]],"(*debug/elf.NType).String":[[0],[]],"(*debug/elf.OSABI).GoString":[[0],[]],"(*debug/elf.OSABI).String":[[0],[]],"(*debug/elf.Prog).Open":[[0],[0]],"(*debug/elf.Prog).ReadAt":[[0],[],[]],"(*debug/elf.ProgFlag).GoString":[[0],[]],"(*debug/elf.ProgFlag).String":[[0],[]],"(*debug/elf.ProgType).GoString":[[0],[]],"(*debug/elf.ProgType).String":[[0],[]],"(*debug/elf.R_386).GoString":[[0],[]],"(*debug/elf.R_386).String":[[0],[]],"(*debug/elf.R_390).GoString":[[0],[]],"(*debug/elf.R_390).String":[[0],[]],"(*debug/elf.R_AARCH64).GoString":[[0],[]],"(*debug/elf.R_AARCH64).String":[[0],[]],"(*debug/elf.R_ALPHA).GoString":[[0],[]],"(*debug/elf.R_ALPHA).String":[[0],[]],"(*debug/elf.R_ARM).GoString":[[0],[]],"(*debug/elf.R_ARM).String":[[0],[]],"(*debug/elf.R_LARCH).GoString":[[0],[]],"(*debug/elf.R_LARCH).String":[[0],[]],"(*debug/elf.R_MIPS).GoString":[[0],[]],"(*debug/elf.R_MIPS).String":[[0],[]],"(*debug/elf.R_PPC).GoString":[[0],[]],"(*debug/elf.R_PPC).String":[[0],[]],"(*debug/elf.R_PPC64).GoString":[[0],[]],"(*debug/elf.R_PPC64).String":[[0],[]],"(*debug/elf.R_RISCV).GoString":[[0],[]],"(*debug/elf.R_RISCV).String":[[0],[]],"(*debug/elf.R_SPARC).GoString":[[0],[]],"(*debug/elf.R_SPARC).String":[[0],[]],"(*debug/elf.R_X86_64).GoString":[[0],[]],"(*debug/elf.R_X86_64).String":[[0],[]],"(*debug/elf.Section).Data":[[0],[],[0]],"(*debug/elf.Section).Open":[[0],[0]],"(*debug/elf.Section).Open$1":[[],[]],"(*debug/elf.Section).ReadAt":[[0],[],[]],"(*debug/elf.SectionFlag).GoString":[[0],[]],"(*debug/elf.SectionFlag).String":[[0],[]],"(*debug/elf.SectionIndex).GoString":[[0],[]],"(*debug/elf.SectionIndex).String":[[0],[]],"(*debug/elf.SectionType).GoString":[[0],[]],"(*debug/elf.SectionType).String":[[0],[]],"(*debug/elf.SymBind).GoString":[[0],[]],"(*debug/elf.SymBind).String":[[0],[]],"(*debug/elf.SymType).GoString":[[0],[]],"(*debug/elf.SymType).String":[[0],[]],"(*debug/elf.SymVis).GoString":[[0],[]],"(*debug/elf.SymVis).String":[[0],[]],"(*debug/elf.Type).GoString":[[0],[]],"(*debug/elf.Type).String":[[0],[]],"(*debug/elf.Version).GoString":[[0],[]],"(*debug/elf.Version).String":[[0],[]],"(*debug/elf.errorReader).Close":[[0],[]],"(*debug/elf.errorReader).Error":[[0],[0]],"(*debug/elf.errorReader).Read":[[0],[],[]],"(*debug/elf.errorReader).ReadAt":[[0],[],[]],"(*debug/elf.errorReader).Seek":[[0],[],[]],"(*debug/elf.readSeekerFromReader).Read":[[0],[],[0]],"(*debug/elf.readSeekerFromReader).Seek":[[0,1],[0,1],[0]],"(*debug/elf.readSeekerFromReader).start":[[0]],"(*debug/elf.zeroReader).ReadAt":[[0],[],[]],"(*debug/gosym.DecodingError).Error":[[0],[0]],"(*debug/gosym.Func).BaseName":[[0],[0]],"(*debug/gosym.Func).PackageName":[[0],[0]],"(*debug/gosym.Func).ReceiverName":[[0],[0]],"(*debug/gosym.Func).Static":[[0],[0]],"(*debug/gosym.Func).nameWithoutInst":[[0],[0]],"(*debug/gosym.LineTable).LineToPC":[[0],[0]],"(*debug/gosym.LineTable).PCToLine":[[0],[0]],"(*debug/gosym.LineTable).findFileLine":[[0],[1]],"(*debug/gosym.LineTable).findFunc":[[0],[0]],"(*debug/gosym.LineTable).findFunc$1":[[]],"(*debug/gosym.LineTable).funcData":[[0],[0]],"(*debug/gosym.LineTable).funcName":[[0],[0,1]],"(*debug/gosym.LineTable).funcTab":[[0],[0]],"(*debug/gosym.LineTable).functabFieldSize":[[0],[0]],"(*debug/gosym.LineTable).go12Funcs":[[0],[]],"(*debug/gosym.LineTable).go12Funcs$1":[],"(*debug/gosym.LineTable).go12LineToPC":[[0],[0]],"(*debug/gosym.LineTable).go12LineToPC$1":[],"(*debug/gosym.LineTable).go12MapFiles":[[0]],"(*debug/gosym.LineTable).go12MapFiles$1":[],"(*debug/gosym.LineTable).go12PCToFile":[[0],[0]],"(*debug/gosym.LineTable).go12PCToFile$1":[],"(*debug/gosym.LineTable).go12PCToLine":[[0],[]],"(*debug/gosym.LineTable).go12PCToLine$1":[],"(*debug/gosym.LineTable).initFileMap":[[0]],"(*debug/gosym.LineTable).isGo12":[[0],[0]],"(*debug/gosym.LineTable).parse":[[0],[0],[0],[0]],"(*debug/gosym.LineTable).parsePclnTab":[[0]],"(*debug/gosym.LineTable).parsePclnTab$1":[],"(*debug/gosym.LineTable).parsePclnTab$2":[[]],"(*debug/gosym.LineTable).parsePclnTab$3":[[]],"(*debug/gosym.LineTable).pcvalue":[[0],[]],"(*debug/gosym.LineTable).readvarint":[[0],[1]],"(*debug/gosym.LineTable).slice":[[0],[0]],"(*debug/gosym.LineTable).step":[[0],[]],"(*debug/gosym.LineTable).string":[[0],[0,1]],"(*debug/gosym.LineTable).stringFrom":[[0],[0,1,2]],"(*debug/gosym.LineTable).uintptr":[[0],[1]],"(*debug/gosym.Obj).alineFromLine":[[0],[0,2],[0,1,2]],"(*debug/gosym.Obj).lineFromAline":[[0],[0],[0,1]],"(*debug/gosym.Sym).BaseName":[[0],[0]],"(*debug/gosym.Sym).PackageName":[[0],[0]],"(*debug/gosym.Sym).ReceiverName":[[0],[0]],"(*debug/gosym.Sym).Static":[[0],[0]],"(*debug/gosym.Sym).nameWithoutInst":[[0],[0]],"(*debug/gosym.Table).LineToPC":[[0],[0,1],[0,1],[0,1,2]],"(*debug/gosym.Table).LookupFunc":[[0],[0]],"(*debug/gosym.Table).LookupSym":[[0],[0]],"(*debug/gosym.Table).PCToFunc":[[0],[0]],"(*debug/gosym.Table).PCToLine":[[0],[0],[0],[0]],"(*debug/gosym.Table).SymByAddr":[[0],[0]],"(*debug/gosym.UnknownFileError).Error":[[0],[]],"(*debug/gosym.UnknownLineError).Error":[[0],[0]],"(*debug/gosym.funcData).IsZero":[[0],[]],"(*debug/gosym.funcData).cuOffset":[[0],[]],"(*debug/gosym.funcData).deferreturn":[[0],[]],"(*debug/gosym.funcData).entryPC":[[0],[0]],"(*debug/gosym.funcData).field":[[0],[]],"(*debug/gosym.funcData).nameoff":[[0],[]],"(*debug/gosym.funcData).pcfile":[[0],[]],"(*debug/gosym.funcData).pcln":[[0],[]],"(*debug/gosym.funcTab).Count":[[0],[]],"(*debug/gosym.funcTab).LineToPC":[[0],[0]],"(*debug/gosym.funcTab).PCToLine":[[0],[0]],"(*debug/gosym.funcTab).findFileLine":[[0],[1]],"(*debug/gosym.funcTab).findFunc":[[0],[0]],"(*debug/gosym.funcTab).funcData":[[0],[0]],"(*debug/gosym.funcTab).funcName":[[0],[0,1]],"(*debug/gosym.funcTab).funcOff":[[0],[]],"(*debug/gosym.funcTab).funcTab":[[0],[0]],"(*debug/gosym.funcTab).functabFieldSize":[[0],[0]],"(*debug/gosym.funcTab).go12Funcs":[[0],[]],"(*debug/gosym.funcTab).go12LineToPC":[[0],[0]],"(*debug/gosym.funcTab).go12MapFiles":[[0]],"(*debug/gosym.funcTab).go12PCToFile":[[0],[0]],"(*debug/gosym.funcTab).go12PCToLine":[[0],[]],"(*debug/gosym.funcTab).initFileMap":[[0]],"(*debug/gosym.funcTab).isGo12":[[0],[0]],"(*debug/gosym.funcTab).parse":[[0],[0],[0],[0]],"(*debug/gosym.funcTab).parsePclnTab":[[0]],"(*debug/gosym.funcTab).pc":[[0],[]],"(*debug/gosym.funcTab).pcvalue":[[0],[]],"(*debug/gosym.funcTab).readvarint":[[0],[1]],"(*debug/gosym.funcTab).slice":[[0],[0]],"(*debug/gosym.funcTab).step":[[0],[]],"(*debug/gosym.funcTab).string":[[0],[0,1]],"(*debug/gosym.funcTab).stringFrom":[[0],[0,1,2]],"(*debug/gosym.funcTab).uint":[[0],[1]],"(*debug/gosym.funcTab).uintptr":[[0],[1]],"(*debug/macho.Cpu).GoString":[[0],[]],"(*debug/macho.Cpu).String":[[0],[]],"(*debug/macho.Dylib).Raw":[[0],[0]],"(*debug/macho.Dysymtab).Raw":[[0],[0]],"(*debug/macho.FatArch).Close":[[0],[0]],"(*debug/macho.FatArch).DWARF":[[0],[0],[0]],"(*debug/macho.FatArch).ImportedLibraries":[[0],[0],[]],"(*debug/macho.FatArch).ImportedSymbols":[[0],[0],[]],"(*debug/macho.FatArch).Section":[[0],[0]],"(*debug/macho.FatArch).Segment":[[0],[0]],"(*debug/macho.FatArch).parseSymtab":[[0],[3],[1,5]],"(*debug/macho.FatArch).pushSection":[[0,1],[]],"(*debug/macho.FatFile).Close":[[0],[0]],"(*debug/macho.File).Close":[[0],[0]],"(*debug/macho.File).DWARF":[[0],[0],[0]],"(*debug/macho.File).DWARF$1":[[0]],"(*debug/macho.File).DWARF$2":[[],[]],"(*debug/macho.File).ImportedLibraries":[[0],[0],[]],"(*debug/macho.File).ImportedSymbols":[[0],[0],[]],"(*debug/macho.File).Section":[[0],[0]],"(*debug/macho.File).Segment":[[0],[0]],"(*debug/macho.File).parseSymtab":[[0],[3],[1,5]],"(*debug/macho.File).pushSection":[[0,1],[]],"(*debug/macho.FormatError).Error":[[0],[0]],"(*debug/macho.LoadBytes).Raw":[[0],[]],"(*debug/macho.LoadCmd).GoString":[[0],[]],"(*debug/macho.LoadCmd).String":[[0],[]],"(*debug/macho.RelocTypeARM).GoString":[[0],[]],"(*debug/macho.RelocTypeARM).String":[[0],[]],"(*debug/macho.RelocTypeARM64).GoString":[[0],[]],"(*debug/macho.RelocTypeARM64).String":[[0],[]],"(*debug/macho.RelocTypeGeneric).GoString":[[0],[]],"(*debug/macho.RelocTypeGeneric).String":[[0],[]],"(*debug/macho.RelocTypeX86_64).GoString":[[0],[]],"(*debug/macho.RelocTypeX86_64).String":[[0],[]],"(*debug/macho.Rpath).Raw":[[0],[0]],"(*debug/macho.Section).Data":[[0],[],[]],"(*debug/macho.Section).Open":[[0],[0]],"(*debug/macho.Section).ReadAt":[[0],[],[]],"(*debug/macho.Segment).Data":[[0],[],[]],"(*debug/macho.Segment).Open":[[0],[0]],"(*debug/macho.Segment).Raw":[[0],[0]],"(*debug/macho.Segment).ReadAt":[[0],[],[]],"(*debug/macho.Symtab).Raw":[[0],[0]],"(*debug/macho.Type).GoString":[[0],[]],"(*debug/macho.Type).String":[[0],[]],"(*debug/pe.COFFSymbol).FullName":[[0],[0,1],[0]],"(*debug/pe.File).COFFSymbolReadSectionDefAux":[[0],[0],[]],"(*debug/pe.File).Close":[[0],[0]],"(*debug/pe.File).DWARF":[[0],[0],[0]],"(*debug/pe.File).DWARF$1":[[0]],"(*debug/pe.File).DWARF$2":[[],[]],"(*debug/pe.File).ImportedLibraries":[[0],[],[]],"(*debug/pe.File).ImportedSymbols":[[0],[],[]],"(*debug/pe.File).Section":[[0],[0]],"(*debug/pe.FormatError).Error":[[0],[]],"(*debug/pe.Section).Data":[[0],[],[]],"(*debug/pe.Section).Open":[[0],[0]],"(*debug/pe.Section).ReadAt":[[0],[],[]],"(*debug/pe.SectionHeader32).fullName":[[0],[0,1],[0]],"(*debug/pe.StringTable).String":[[0],[],[1]],"(*debug/pe.zeroReaderAt).ReadAt":[[0],[],[]],"(*debug/plan9obj.File).Close":[[0],[0]],"(*debug/plan9obj.File).Section":[[0],[0]],"(*debug/plan9obj.File).Symbols":[[0],[],[]],"(*debug/plan9obj.Section).Data":[[0],[],[]],"(*debug/plan9obj.Section).Open":[[0],[0]],"(*debug/plan9obj.Section).ReadAt":[[0],[],[]],"(*debug/plan9obj.formatError).Error":[[0],[0]],"(*embed.FS).Open":[[0],[],[1]],"(*embed.FS).ReadDir":[[0],[],[1]],"(*embed.FS).ReadFile":[[0],[],[1]],"(*embed.FS).lookup":[[0],[]],"(*embed.FS).readDir":[[0],[]],"(*embed.file).Info":[[0],[0],[]],"(*embed.file).IsDir":[[0],[]],"(*embed.file).ModTime":[[0],[]],"(*embed.file).Mode":[[0],[]],"(*embed.file).Name":[[0],[0]],"(*embed.file).Size":[[0],[]],"(*embed.file).Sys":[[0],[]],"(*embed.file).Type":[[0],[]],"(*embed.openDir).Close":[[0],[]],"(*embed.openDir).Read":[[0],[],[0]],"(*embed.openDir).ReadDir":[[0,1],[0],[]],"(*embed.openDir).Stat":[[0],[0],[]],"(*embed.openFile).Close":[[0],[]],"(*embed.openFile).Read":[[0],[],[0]],"(*embed.openFile).Seek":[[0,1],[0,1],[0]],"(*embed.openFile).Stat":[[0],[0],[]],"(*encoding/ascii85.CorruptInputError).Error":[[0],[]],"(*encoding/ascii85.decoder).Read":[[0],[],[0]],"(*encoding/ascii85.encoder).Close":[[0],[0]],"(*encoding/ascii85.encoder).Write":[[0],[],[0]],"(*encoding/asn1.BitString).At":[[0],[1]],"(*encoding/asn1.BitString).RightAlign":[[0],[]],"(*encoding/asn1.ObjectIdentifier).Equal":[[0],[]],"(*encoding/asn1.ObjectIdentifier).String":[[0],[]],"(*encoding/asn1.StructuralError).Error":[[0],[]],"(*encoding/asn1.SyntaxError).Error":[[0],[]],"(*encoding/asn1.bitStringEncoder).Encode":[[0]],"(*encoding/asn1.bitStringEncoder).Len":[[0],[]],"(*encoding/asn1.byteEncoder).Encode":[[0]],"(*encoding/asn1.byteEncoder).Len":[[0],[]],"(*encoding/asn1.bytesEncoder).Encode":[[0]],"(*encoding/asn1.bytesEncoder).Len":[[0],[]],"(*encoding/asn1.int64Encoder).Encode":[[0]],"(*encoding/asn1.int64Encoder).Len":[[0],[]],"(*encoding/asn1.invalidUnmarshalError).Error":[[0],[]],"(*encoding/asn1.multiEncoder).Encode":[[0]],"(*encoding/asn1.multiEncoder).Len":[[0],[]],"(*encoding/asn1.oidEncoder).Encode":[[0]],"(*encoding/asn1.oidEncoder).Len":[[0],[]],"(*encoding/asn1.setEncoder).Encode":[[0]],"(*encoding/asn1.setEncoder).Len":[[0],[]],"(*encoding/asn1.stringEncoder).Encode":[[0]],"(*encoding/asn1.stringEncoder).Len":[[0],[]],"(*encoding/asn1.taggedEncoder).Encode":[[0]],"(*encoding/asn1.taggedEncoder).Len":[[0],[]],"(*encoding/base32.CorruptInputError).Error":[[0],[]],"(*encoding/base32.Encoding).Decode":[[0],[],[]],"(*encoding/base32.Encoding).DecodeString":[[0],[1],[]],"(*encoding/base32.Encoding).DecodedLen":[[0],[1]],"(*encoding/base32.Encoding).Encode":[[0]],"(*encoding/base32.Encoding).EncodeToString":[[0],[]],"(*encoding/base32.Encoding).EncodedLen":[[0],[1]],"(*encoding/base32.Encoding).WithPadding":[[0],[1]],"(*encoding/base32.Encoding).decode":[[0],[],[],[]],"(*encoding/base32.decoder).Read":[[0],[],[0]],"(*encoding/base32.encoder).Close":[[0],[0]],"(*encoding/base32.encoder).Write":[[0],[],[0]],"(*encoding/base32.newlineFilteringReader).Read":[[0],[],[0]],"(*encoding/base64.CorruptInputError).Error":[[0],[]],"(*encoding/base64.Encoding).Decode":[[0],[],[]],"(*encoding/base64.Encoding).DecodeString":[[0],[],[]],"(*encoding/base64.Encoding).DecodedLen":[[0],[1]],"(*encoding/base64.Encoding).Encode":[[0]],"(*encoding/base64.Encoding).EncodeToString":[[0],[]],"(*encoding/base64.Encoding).EncodedLen":[[0],[1]],"(*encoding/base64.Encoding).Strict":[[0],[]],"(*encoding/base64.Encoding).WithPadding":[[0],[1]],"(*encoding/base64.Encoding).decodeQuantum":[[0],[3],[],[3]],"(*encoding/base64.decoder).Read":[[0],[],[0]],"(*encoding/base64.encoder).Close":[[0],[0]],"(*encoding/base64.encoder).Write":[[0],[],[0]],"(*encoding/base64.newlineFilteringReader).Read":[[0],[],[0]],"(*encoding/binary.bigEndian).AppendUint16":[[0],[1,2]],"(*encoding/binary.bigEndian).AppendUint32":[[0],[1,2]],"(*encoding/binary.bigEndian).AppendUint64":[[0],[1,2]],"(*encoding/binary.bigEndian).GoString":[[0],[]],"(*encoding/binary.bigEndian).PutUint16":[[0]],"(*encoding/binary.bigEndian).PutUint32":[[0]],"(*encoding/binary.bigEndian).PutUint64":[[0]],"(*encoding/binary.bigEndian).String":[[0],[]],"(*encoding/binary.bigEndian).Uint16":[[0],[1]],"(*encoding/binary.bigEndian).Uint32":[[0],[1]],"(*encoding/binary.bigEndian).Uint64":[[0],[1]],"(*encoding/binary.decoder).bool":[[0],[0]],"(*encoding/binary.decoder).int16":[[0],[0]],"(*encoding/binary.decoder).int32":[[0],[0]],"(*encoding/binary.decoder).int64":[[0],[0]],"(*encoding/binary.decoder).int8":[[0],[0]],"(*encoding/binary.decoder).skip":[[0,1]],"(*encoding/binary.decoder).uint16":[[0],[0]],"(*encoding/binary.decoder).uint32":[[0],[0]],"(*encoding/binary.decoder).uint64":[[0],[0]],"(*encoding/binary.decoder).uint8":[[0],[0]],"(*encoding/binary.decoder).value":[[0,1]],"(*encoding/binary.encoder).bool":[[0]],"(*encoding/binary.encoder).int16":[[0]],"(*encoding/binary.encoder).int32":[[0]],"(*encoding/binary.encoder).int64":[[0]],"(*encoding/binary.encoder).int8":[[0]],"(*encoding/binary.encoder).skip":[[0,1]],"(*encoding/binary.encoder).uint16":[[0]],"(*encoding/binary.encoder).uint32":[[0]],"(*encoding/binary.encoder).uint64":[[0]],"(*encoding/binary.encoder).uint8":[[0]],"(*encoding/binary.encoder).value":[[0,1]],"(*encoding/binary.littleEndian).AppendUint16":[[0],[1,2]],"(*encoding/binary.littleEndian).AppendUint32":[[0],[1,2]],"(*encoding/binary.littleEndian).AppendUint64":[[0],[1,2]],"(*encoding/binary.littleEndian).GoString":[[0],[]],"(*encoding/binary.littleEndian).PutUint16":[[0]],"(*encoding/binary.littleEndian).PutUint32":[[0]],"(*encoding/binary.littleEndian).PutUint64":[[0]],"(*encoding/binary.littleEndian).String":[[0],[]],"(*encoding/binary.littleEndian).Uint16":[[0],[1]],"(*encoding/binary.littleEndian).Uint32":[[0],[1]],"(*encoding/binary.littleEndian).Uint64":[[0],[1]],"(*encoding/csv.ParseError).Error":[[0],[]],"(*encoding/csv.ParseError).Unwrap":[[0],[0]],"(*encoding/csv.Reader).FieldPos":[[0],[0],[0]],"(*encoding/csv.Reader).InputOffset":[[0],[0]],"(*encoding/csv.Reader).Read":[[0],[0],[0]],"(*encoding/csv.Reader).ReadAll":[[0],[0],[0]],"(*encoding/csv.Reader).readLine":[[0],[0],[0]],"(*encoding/csv.Reader).readRecord":[[0],[0,1],[0]],"(*encoding/csv.Reader).readRecord$1":[[0]],"(*encoding/csv.Writer).Error":[[0],[0]],"(*encoding/csv.Writer).Flush":[[0]],"(*encoding/csv.Writer).Write":[[0],[0]],"(*encoding/csv.Writer).WriteAll":[[0],[0]],"(*encoding/csv.Writer).fieldNeedsQuotes":[[0],[1]],"(*encoding/gob.CommonType).id":[[0],[0]],"(*encoding/gob.CommonType).name":[[0],[0]],"(*encoding/gob.CommonType).safeString":[[0],[0]],"(*encoding/gob.CommonType).setId":[[0,1]],"(*encoding/gob.CommonType).string":[[0],[0]],"(*encoding/gob.Decoder).Decode":[[0],[0]],"(*encoding/gob.Decoder).DecodeValue":[[0],[0]],"(*encoding/gob.Decoder).compatibleType":[[0],[1,2,3]],"(*encoding/gob.Decoder).compileDec":[[0],[],[0,1]],"(*encoding/gob.Decoder).compileIgnoreSingle":[[0],[]],"(*encoding/gob.Decoder).compileSingle":[[0],[],[0,1]],"(*encoding/gob.Decoder).decIgnoreOpFor":[[0],[1,2]],"(*encoding/gob.Decoder).decIgnoreOpFor$1":[],"(*encoding/gob.Decoder).decIgnoreOpFor$2":[],"(*encoding/gob.Decoder).decIgnoreOpFor$3":[],"(*encoding/gob.Decoder).decIgnoreOpFor$4":[],"(*encoding/gob.Decoder).decIgnoreOpFor$5":[],"(*encoding/gob.Decoder).decIgnoreOpFor$6":[],"(*encoding/gob.Decoder).decOpFor":[[0],[2,4]],"(*encoding/gob.Decoder).decOpFor$1":[],"(*encoding/gob.Decoder).decOpFor$2":[],"(*encoding/gob.Decoder).decOpFor$3":[],"(*encoding/gob.Decoder).decOpFor$4":[],"(*encoding/gob.Decoder).decOpFor$5":[],"(*encoding/gob.Decoder).decodeArray":[[0]],"(*encoding/gob.Decoder).decodeArrayHelper":[[0]],"(*encoding/gob.Decoder).decodeGobDecoder":[[0]],"(*encoding/gob.Decoder).decodeIgnoredValue":[[0,1]],"(*encoding/gob.Decoder).decodeInterface":[[0]],"(*encoding/gob.Decoder).decodeMap":[[0]],"(*encoding/gob.Decoder).decodeSingle":[[0]],"(*encoding/gob.Decoder).decodeSlice":[[0]],"(*encoding/gob.Decoder).decodeStruct":[[0]],"(*encoding/gob.Decoder).decodeTypeSequence":[[0],[0]],"(*encoding/gob.Decoder).decodeValue":[[0,1]],"(*encoding/gob.Decoder).freeDecoderState":[[0,1]],"(*encoding/gob.Decoder).getDecEnginePtr":[[0],[0,1,2],[]],"(*encoding/gob.Decoder).getIgnoreEnginePtr":[[0],[0,1],[0,1]],"(*encoding/gob.Decoder).gobDecodeOpFor":[[0],[]],"(*encoding/gob.Decoder).gobDecodeOpFor$1":[],"(*encoding/gob.Decoder).ignoreArray":[[0]],"(*encoding/gob.Decoder).ignoreArrayHelper":[[0]],"(*encoding/gob.Decoder).ignoreGobDecoder":[[0]],"(*encoding/gob.Decoder).ignoreInterface":[[0]],"(*encoding/gob.Decoder).ignoreMap":[[0]],"(*encoding/gob.Decoder).ignoreSingle":[[0]],"(*encoding/gob.Decoder).ignoreSlice":[[0]],"(*encoding/gob.Decoder).ignoreStruct":[[0]],"(*encoding/gob.Decoder).newDecoderState":[[0],[0,1]],"(*encoding/gob.Decoder).nextInt":[[0],[0]],"(*encoding/gob.Decoder).nextUint":[[0],[0]],"(*encoding/gob.Decoder).readMessage":[[0]],"(*encoding/gob.Decoder).recvMessage":[[0],[0]],"(*encoding/gob.Decoder).recvType":[[0]],"(*encoding/gob.Decoder).typeString":[[0],[0,1]],"(*encoding/gob.Encoder).Encode":[[0],[0]],"(*encoding/gob.Encoder).EncodeValue":[[0],[0]],"(*encoding/gob.Encoder).encode":[[0]],"(*encoding/gob.Encoder).encodeArray":[[0]],"(*encoding/gob.Encoder).encodeGobEncoder":[[0,1,3]],"(*encoding/gob.Encoder).encodeInterface":[[0,1]],"(*encoding/gob.Encoder).encodeMap":[[0,1,2]],"(*encoding/gob.Encoder).encodeSingle":[[0]],"(*encoding/gob.Encoder).encodeStruct":[[0]],"(*encoding/gob.Encoder).freeEncoderState":[[0,1]],"(*encoding/gob.Encoder).newEncoderState":[[0],[0,1]],"(*encoding/gob.Encoder).popWriter":[[0]],"(*encoding/gob.Encoder).pushWriter":[[0,1]],"(*encoding/gob.Encoder).sendActualType":[[0,1],[]],"(*encoding/gob.Encoder).sendType":[[0,1],[]],"(*encoding/gob.Encoder).sendTypeDescriptor":[[0,1]],"(*encoding/gob.Encoder).sendTypeId":[[0]],"(*encoding/gob.Encoder).setError":[[0,1]],"(*encoding/gob.Encoder).writeMessage":[[0,1]],"(*encoding/gob.Encoder).writer":[[0],[0]],"(*encoding/gob.arrayType).id":[[0],[0]],"(*encoding/gob.arrayType).init":[[0,1,2]],"(*encoding/gob.arrayType).name":[[0],[0]],"(*encoding/gob.arrayType).safeString":[[0],[0]],"(*encoding/gob.arrayType).setId":[[0,1]],"(*encoding/gob.arrayType).string":[[0],[0]],"(*encoding/gob.decBuffer).Bytes":[[0],[0]],"(*encoding/gob.decBuffer).Drop":[[0,1]],"(*encoding/gob.decBuffer).Len":[[0],[0]],"(*encoding/gob.decBuffer).Read":[[0],[],[]],"(*encoding/gob.decBuffer).ReadByte":[[0],[0],[]],"(*encoding/gob.decBuffer).Reset":[[0]],"(*encoding/gob.decBuffer).Size":[[0]],"(*encoding/gob.decoderState).decodeInt":[[0],[0]],"(*encoding/gob.decoderState).decodeUint":[[0],[0]],"(*encoding/gob.decoderState).getLength":[[0],[0],[]],"(*encoding/gob.encBuffer).Bytes":[[0],[0]],"(*encoding/gob.encBuffer).Len":[[0],[]],"(*encoding/gob.encBuffer).Reset":[[0]],"(*encoding/gob.encBuffer).Write":[[0,1],[],[]],"(*encoding/gob.encBuffer).WriteString":[[0,1]],"(*encoding/gob.encBuffer).writeByte":[[0,1]],"(*encoding/gob.encoderState).encodeInt":[[0,1]],"(*encoding/gob.encoderState).encodeUint":[[0,1]],"(*encoding/gob.encoderState).update":[[0,1]],"(*encoding/gob.gobEncoderType).id":[[0],[0]],"(*encoding/gob.gobEncoderType).name":[[0],[0]],"(*encoding/gob.gobEncoderType).safeString":[[0],[0]],"(*encoding/gob.gobEncoderType).setId":[[0,1]],"(*encoding/gob.gobEncoderType).string":[[0],[0]],"(*encoding/gob.mapType).id":[[0],[0]],"(*encoding/gob.mapType).init":[[0,1,2]],"(*encoding/gob.mapType).name":[[0],[0]],"(*encoding/gob.mapType).safeString":[[0],[0]],"(*encoding/gob.mapType).setId":[[0,1]],"(*encoding/gob.mapType).string":[[0],[0]],"(*encoding/gob.sliceType).id":[[0],[0]],"(*encoding/gob.sliceType).init":[[0,1]],"(*encoding/gob.sliceType).name":[[0],[0]],"(*encoding/gob.sliceType).safeString":[[0],[0]],"(*encoding/gob.sliceType).setId":[[0,1]],"(*encoding/gob.sliceType).string":[[0],[0]],"(*encoding/gob.structType).id":[[0],[0]],"(*encoding/gob.structType).name":[[0],[0]],"(*encoding/gob.structType).safeString":[[0],[0]],"(*encoding/gob.structType).setId":[[0,1]],"(*encoding/gob.structType).string":[[0],[0]],"(*encoding/gob.typeId).gobType":[[0],[]],"(*encoding/gob.typeId).name":[[0],[]],"(*encoding/gob.typeId).string":[[0],[]],"(*encoding/gob.wireType).string":[[0],[0]],"(*encoding/hex.InvalidByteError).Error":[[0],[]],"(*encoding/hex.decoder).Read":[[0],[],[0]],"(*encoding/hex.dumper).Close":[[0],[0]],"(*encoding/hex.dumper).Write":[[0],[],[0]],"(*encoding/hex.encoder).Write":[[0],[],[0]],"(*encoding/json.Decoder).Buffered":[[0],[0]],"(*encoding/json.Decoder).Decode":[[0],[0,1]],"(*encoding/json.Decoder).DisallowUnknownFields":[[0]],"(*encoding/json.Decoder).InputOffset":[[0],[0]],"(*encoding/json.Decoder).More":[[0],[0]],"(*encoding/json.Decoder).Token":[[0],[],[0]],"(*encoding/json.Decoder).UseNumber":[[0]],"(*encoding/json.Decoder).peek":[[0],[0],[0]],"(*encoding/json.Decoder).readValue":[[0],[0],[0]],"(*encoding/json.Decoder).refill":[[0],[0]],"(*encoding/json.Decoder).tokenError":[[0],[],[0,1]],"(*encoding/json.Decoder).tokenPrepareForDecode":[[0],[0]],"(*encoding/json.Decoder).tokenValueAllowed":[[0],[]],"(*encoding/json.Decoder).tokenValueEnd":[[0]],"(*encoding/json.Delim).String":[[0],[]],"(*encoding/json.Encoder).Encode":[[0],[0]],"(*encoding/json.Encoder).SetEscapeHTML":[[0,1]],"(*encoding/json.Encoder).SetIndent":[[0,1,2]],"(*encoding/json.InvalidUTF8Error).Error":[[0],[0]],"(*encoding/json.InvalidUnmarshalError).Error":[[0],[]],"(*encoding/json.MarshalerError).Error":[[0],[0]],"(*encoding/json.MarshalerError).Unwrap":[[0],[0]],"(*encoding/json.Number).Float64":[[0],[],[]],"(*encoding/json.Number).Int64":[[0],[],[]],"(*encoding/json.Number).String":[[0],[]],"(*encoding/json.RawMessage).MarshalJSON":[[0],[],[]],"(*encoding/json.RawMessage).UnmarshalJSON":[[0,1],[]],"(*encoding/json.SyntaxError).Error":[[0],[0]],"(*encoding/json.UnmarshalFieldError).Error":[[0],[0]],"(*encoding/json.UnmarshalTypeError).Error":[[0],[0]],"(*encoding/json.UnsupportedTypeError).Error":[[0],[]],"(*encoding/json.UnsupportedValueError).Error":[[0],[0]],"(*encoding/json.byIndex).Len":[[0],[]],"(*encoding/json.byIndex).Less":[[0],[]],"(*encoding/json.byIndex).Swap":[[0]],"(*encoding/json.decodeState).addErrorContext":[[0],[1]],"(*encoding/json.decodeState).array":[[0],[]],"(*encoding/json.decodeState).arrayInterface":[[0],[]],"(*encoding/json.decodeState).convertNumber":[[0],[1],[0,1]],"(*encoding/json.decodeState).init":[[0,1],[0,1]],"(*encoding/json.decodeState).literalInterface":[[0],[0]],"(*encoding/json.decodeState).literalStore":[[0,1,2],[1,2]],"(*encoding/json.decodeState).object":[[0,1],[0,1]],"(*encoding/json.decodeState).objectInterface":[[0],[0]],"(*encoding/json.decodeState).readIndex":[[0],[0]],"(*encoding/json.decodeState).rescanLiteral":[[0]],"(*encoding/json.decodeState).saveError":[[0,1]],"(*encoding/json.decodeState).scanNext":[[0]],"(*encoding/json.decodeState).scanWhile":[[0]],"(*encoding/json.decodeState).skip":[[0]],"(*encoding/json.decodeState).unmarshal":[[0,1],[0,1]],"(*encoding/json.decodeState).value":[[0,1],[0,1]],"(*encoding/json.decodeState).valueInterface":[[0],[0]],"(*encoding/json.decodeState).valueQuoted":[[0],[0]],"(*encoding/json.encodeState).Bytes":[[0],[0]],"(*encoding/json.encodeState).Cap":[[0],[]],"(*encoding/json.encodeState).Grow":[[0]],"(*encoding/json.encodeState).Len":[[0],[0]],"(*encoding/json.encodeState).Next":[[0,1],[0,1]],"(*encoding/json.encodeState).Read":[[0],[],[]],"(*encoding/json.encodeState).ReadByte":[[0],[0],[]],"(*encoding/json.encodeState).ReadBytes":[[0],[],[]],"(*encoding/json.encodeState).ReadFrom":[[0],[],[1]],"(*encoding/json.encodeState).ReadRune":[[0],[0],[],[]],"(*encoding/json.encodeState).ReadString":[[0],[0],[]],"(*encoding/json.encodeState).Reset":[[0]],"(*encoding/json.encodeState).String":[[0],[0]],"(*encoding/json.encodeState).Truncate":[[0]],"(*encoding/json.encodeState).UnreadByte":[[0],[]],"(*encoding/json.encodeState).UnreadRune":[[0],[]],"(*encoding/json.encodeState).Write":[[0],[],[]],"(*encoding/json.encodeState).WriteByte":[[0],[]],"(*encoding/json.encodeState).WriteRune":[[0],[],[]],"(*encoding/json.encodeState).WriteString":[[0],[],[]],"(*encoding/json.encodeState).WriteTo":[[0],[],[1]],"(*encoding/json.encodeState).empty":[[0],[0]],"(*encoding/json.encodeState).error":[[0]],"(*encoding/json.encodeState).grow":[[0],[0]],"(*encoding/json.encodeState).marshal":[[0],[]],"(*encoding/json.encodeState).marshal$1":[],"(*encoding/json.encodeState).readSlice":[[0],[0],[]],"(*encoding/json.encodeState).reflectValue":[[0]],"(*encoding/json.encodeState).string":[[0]],"(*encoding/json.encodeState).stringBytes":[[0]],"(*encoding/json.encodeState).tryGrowByReslice":[[0],[],[]],"(*encoding/json.jsonError).Error":[[0],[0]],"(*encoding/json.reflectWithString).resolve":[[0],[]],"(*encoding/json.scanner).eof":[[0],[]],"(*encoding/json.scanner).error":[[0,1,2],[]],"(*encoding/json.scanner).popParseState":[[0]],"(*encoding/json.scanner).pushParseState":[[0,1,2],[3]],"(*encoding/json.scanner).reset":[[0]],"(*encoding/pem.lineBreaker).Close":[[0],[0]],"(*encoding/pem.lineBreaker).Write":[[0],[],[0]],"(*encoding/xml.CharData).Copy":[[0],[]],"(*encoding/xml.Comment).Copy":[[0],[]],"(*encoding/xml.Decoder).Decode":[[0],[0,1]],"(*encoding/xml.Decoder).DecodeElement":[[0],[0,1,2]],"(*encoding/xml.Decoder).InputOffset":[[0],[0]],"(*encoding/xml.Decoder).InputPos":[[0],[0],[0]],"(*encoding/xml.Decoder).RawToken":[[0],[0],[0]],"(*encoding/xml.Decoder).Skip":[[0],[0]],"(*encoding/xml.Decoder).Token":[[0],[0],[0]],"(*encoding/xml.Decoder).attrval":[[0],[0]],"(*encoding/xml.Decoder).autoClose":[[0],[0],[]],"(*encoding/xml.Decoder).getc":[[0],[0],[]],"(*encoding/xml.Decoder).mustgetc":[[0],[0],[]],"(*encoding/xml.Decoder).name":[[0],[0],[]],"(*encoding/xml.Decoder).nsname":[[0],[0],[]],"(*encoding/xml.Decoder).pop":[[0],[0]],"(*encoding/xml.Decoder).popEOF":[[0],[]],"(*encoding/xml.Decoder).popElement":[[0,1],[]],"(*encoding/xml.Decoder).push":[[0,1],[0,1]],"(*encoding/xml.Decoder).pushEOF":[[0]],"(*encoding/xml.Decoder).pushElement":[[0]],"(*encoding/xml.Decoder).pushNs":[[0]],"(*encoding/xml.Decoder).rawToken":[[0],[0],[0]],"(*encoding/xml.Decoder).readName":[[0],[]],"(*encoding/xml.Decoder).savedOffset":[[0],[0]],"(*encoding/xml.Decoder).space":[[0]],"(*encoding/xml.Decoder).switchToReader":[[0,1]],"(*encoding/xml.Decoder).syntaxError":[[0],[0,1]],"(*encoding/xml.Decoder).text":[[0],[0]],"(*encoding/xml.Decoder).translate":[[0]],"(*encoding/xml.Decoder).ungetc":[[0,1]],"(*encoding/xml.Decoder).unmarshal":[[0],[0,1,2]],"(*encoding/xml.Decoder).unmarshalAttr":[[0],[1,2]],"(*encoding/xml.Decoder).unmarshalInterface":[[0],[2]],"(*encoding/xml.Decoder).unmarshalPath":[[0],[],[0,2,4]],"(*encoding/xml.Decoder).unmarshalTextInterface":[[0],[0]],"(*encoding/xml.Directive).Copy":[[0],[]],"(*encoding/xml.Encoder).Encode":[[0],[0,1]],"(*encoding/xml.Encoder).EncodeElement":[[0],[0,1,2]],"(*encoding/xml.Encoder).EncodeToken":[[0],[0,1]],"(*encoding/xml.Encoder).Flush":[[0],[0]],"(*encoding/xml.Encoder).Indent":[[0,1,2]],"(*encoding/xml.ProcInst).Copy":[[0],[]],"(*encoding/xml.StartElement).Copy":[[0],[]],"(*encoding/xml.StartElement).End":[[0],[]],"(*encoding/xml.SyntaxError).Error":[[0],[0]],"(*encoding/xml.TagPathError).Error":[[0],[]],"(*encoding/xml.UnmarshalError).Error":[[0],[]],"(*encoding/xml.UnsupportedTypeError).Error":[[0],[]],"(*encoding/xml.fieldInfo).value":[[0],[1]],"(*encoding/xml.parentStack).push":[[0,1],[]],"(*encoding/xml.parentStack).trim":[[0],[0]],"(*encoding/xml.printer).Available":[[0],[0]],"(*encoding/xml.printer).AvailableBuffer":[[0],[0]],"(*encoding/xml.printer).Buffered":[[0],[0]],"(*encoding/xml.printer).EscapeString":[[0]],"(*encoding/xml.printer).Flush":[[0],[0]],"(*encoding/xml.printer).ReadFrom":[[0],[],[0,1]],"(*encoding/xml.printer).Reset":[[0,1]],"(*encoding/xml.printer).Size":[[0],[]],"(*encoding/xml.printer).Write":[[0],[],[0]],"(*encoding/xml.printer).WriteByte":[[0],[0]],"(*encoding/xml.printer).WriteRune":[[0],[],[0]],"(*encoding/xml.printer).WriteString":[[0],[],[0]],"(*encoding/xml.printer).cachedWriteError":[[0],[0]],"(*encoding/xml.printer).createAttrPrefix":[[0,1],[0,1]],"(*encoding/xml.printer).deleteAttrPrefix":[[0]],"(*encoding/xml.printer).markPrefix":[[0]],"(*encoding/xml.printer).marshalAttr":[[0],[3]],"(*encoding/xml.printer).marshalInterface":[[0],[0]],"(*encoding/xml.printer).marshalSimple":[[0],[2],[2],[1]],"(*encoding/xml.printer).marshalStruct":[[0],[0,1,2]],"(*encoding/xml.printer).marshalTextInterface":[[0],[0,2]],"(*encoding/xml.printer).marshalValue":[[0],[0,1,2,3]],"(*encoding/xml.printer).popPrefix":[[0]],"(*encoding/xml.printer).writeEnd":[[0],[0,1]],"(*encoding/xml.printer).writeIndent":[[0]],"(*encoding/xml.printer).writeStart":[[0],[]],"(*errors.errorString).Error":[[0],[0]],"(*expvar.Float).Add":[[0]],"(*expvar.Float).Set":[[0]],"(*expvar.Float).String":[[0],[]],"(*expvar.Float).Value":[[0],[]],"(*expvar.Func).String":[[0],[]],"(*expvar.Func).Value":[[0],[]],"(*expvar.Int).Add":[[0]],"(*expvar.Int).Set":[[0]],"(*expvar.Int).String":[[0],[]],"(*expvar.Int).Value":[[0],[]],"(*expvar.Map).Add":[[0,1]],"(*expvar.Map).AddFloat":[[0,1]],"(*expvar.Map).Delete":[[0]],"(*expvar.Map).Do":[[0]],"(*expvar.Map).Get":[[0],[]],"(*expvar.Map).Init":[[0],[0]],"(*expvar.Map).Init$1":[[]],"(*expvar.Map).Set":[[0,1]],"(*expvar.Map).String":[[0],[]],"(*expvar.Map).String$1":[],"(*expvar.Map).addKey":[[0,1]],"(*expvar.String).Set":[[0]],"(*expvar.String).String":[[0],[]],"(*expvar.String).Value":[[0],[]],"(*flag.FlagSet).Arg":[[0],[0]],"(*flag.FlagSet).Args":[[0],[0]],"(*flag.FlagSet).Bool":[[0],[]],"(*flag.FlagSet).BoolVar":[[0]],"(*flag.FlagSet).Duration":[[0],[]],"(*flag.FlagSet).DurationVar":[[0]],"(*flag.FlagSet).ErrorHandling":[[0],[0]],"(*flag.FlagSet).Float64":[[0],[]],"(*flag.FlagSet).Float64Var":[[0]],"(*flag.FlagSet).Func":[[0]],"(*flag.FlagSet).Init":[[0,1,2]],"(*flag.FlagSet).Int":[[0],[]],"(*flag.FlagSet).Int64":[[0],[]],"(*flag.FlagSet).Int64Var":[[0]],"(*flag.FlagSet).IntVar":[[0]],"(*flag.FlagSet).Lookup":[[0],[0,1]],"(*flag.FlagSet).NArg":[[0],[]],"(*flag.FlagSet).NFlag":[[0],[]],"(*flag.FlagSet).Name":[[0],[0]],"(*flag.FlagSet).Output":[[0],[0]],"(*flag.FlagSet).Parse":[[0],[]],"(*flag.FlagSet).Parsed":[[0],[0]],"(*flag.FlagSet).PrintDefaults":[[0]],"(*flag.FlagSet).PrintDefaults$1":[],"(*flag.FlagSet).Set":[[0],[1]],"(*flag.FlagSet).SetOutput":[[0,1]],"(*flag.FlagSet).String":[[0],[]],"(*flag.FlagSet).StringVar":[[0]],"(*flag.FlagSet).TextVar":[[0]],"(*flag.FlagSet).Uint":[[0],[]],"(*flag.FlagSet).Uint64":[[0],[]],"(*flag.FlagSet).Uint64Var":[[0]],"(*flag.FlagSet).UintVar":[[0]],"(*flag.FlagSet).Var":[[0]],"(*flag.FlagSet).Visit":[[0]],"(*flag.FlagSet).VisitAll":[[0]],"(*flag.FlagSet).defaultUsage":[[0]],"(*flag.FlagSet).defaultUsage$bound":[],"(*flag.FlagSet).failf":[[0],[]],"(*flag.FlagSet).parseOne":[[0],[],[]],"(*flag.FlagSet).sprintf":[[0],[]],"(*flag.FlagSet).usage":[[0]],"(*flag.boolValue).Get":[[0],[0]],"(*flag.boolValue).IsBoolFlag":[[0],[]],"(*flag.boolValue).Set":[[0],[1]],"(*flag.boolValue).String":[[0],[]],"(*flag.durationValue).Get":[[0],[0]],"(*flag.durationValue).Set":[[0,1],[1]],"(*flag.durationValue).String":[[0],[]],"(*flag.float64Value).Get":[[0],[0]],"(*flag.float64Value).Set":[[0,1],[1]],"(*flag.float64Value).String":[[0],[0]],"(*flag.funcValue).Set":[[0],[]],"(*flag.funcValue).String":[[0],[]],"(*flag.int64Value).Get":[[0],[0]],"(*flag.int64Value).Set":[[0,1],[1]],"(*flag.int64Value).String":[[0],[0]],"(*flag.intValue).Get":[[0],[0]],"(*flag.intValue).Set":[[0,1],[1]],"(*flag.intValue).String":[[0],[0]],"(*flag.stringValue).Get":[[0],[0]],"(*flag.stringValue).Set":[[0,1],[]],"(*flag.stringValue).String":[[0],[0]],"(*flag.textValue).Get":[[0],[]],"(*flag.textValue).Set":[[0],[1]],"(*flag.textValue).String":[[0],[]],"(*flag.uint64Value).Get":[[0],[0]],"(*flag.uint64Value).Set":[[0,1],[1]],"(*flag.uint64Value).String":[[0],[0]],"(*flag.uintValue).Get":[[0],[0]],"(*flag.uintValue).Set":[[0,1],[1]],"(*flag.uintValue).String":[[0],[0]],"(*fmt.buffer).write":[[0,1]],"(*fmt.buffer).writeByte":[[0,1]],"(*fmt.buffer).writeRune":[[0,1]],"(*fmt.buffer).writeString":[[0,1]],"(*fmt.fmt).clearflags":[[0]],"(*fmt.fmt).fmtBoolean":[[0]],"(*fmt.fmt).fmtBs":[[0,1]],"(*fmt.fmt).fmtBx":[[0]],"(*fmt.fmt).fmtC":[[0]],"(*fmt.fmt).fmtFloat":[[0,1,3,4]],"(*fmt.fmt).fmtInteger":[[0,1,5]],"(*fmt.fmt).fmtQ":[[0,1]],"(*fmt.fmt).fmtQc":[[0]],"(*fmt.fmt).fmtS":[[0,1]],"(*fmt.fmt).fmtSbx":[[0]],"(*fmt.fmt).fmtSx":[[0]],"(*fmt.fmt).fmtUnicode":[[0,1]],"(*fmt.fmt).init":[[0]],"(*fmt.fmt).pad":[[0,1]],"(*fmt.fmt).padString":[[0,1]],"(*fmt.fmt).truncate":[[0],[1]],"(*fmt.fmt).truncateString":[[0],[1]],"(*fmt.fmt).writePadding":[[0]],"(*fmt.pp).Flag":[[0],[0]],"(*fmt.pp).Precision":[[0],[0],[0]],"(*fmt.pp).Width":[[0],[0],[0]],"(*fmt.pp).Write":[[0,1],[],[]],"(*fmt.pp).WriteString":[[0,1],[],[]],"(*fmt.pp).argNumber":[[0],[1,2],[3],[]],"(*fmt.pp).badArgNum":[[0,1]],"(*fmt.pp).badVerb":[[0,1]],"(*fmt.pp).catchPanic":[[0]],"(*fmt.pp).doPrint":[[0]],"(*fmt.pp).doPrintf":[[0,1,2]],"(*fmt.pp).doPrintln":[[0,1]],"(*fmt.pp).fmt0x64":[[0,1]],"(*fmt.pp).fmtBool":[[0]],"(*fmt.pp).fmtBytes":[[0,1,3]],"(*fmt.pp).fmtComplex":[[0,3]],"(*fmt.pp).fmtFloat":[[0,1,3]],"(*fmt.pp).fmtInteger":[[0,1]],"(*fmt.pp).fmtPointer":[[0,1]],"(*fmt.pp).fmtString":[[0,1,2]],"(*fmt.pp).free":[[0]],"(*fmt.pp).handleMethods":[[0,1],[]],"(*fmt.pp).missingArg":[[0,1]],"(*fmt.pp).printArg":[[0,1,2]],"(*fmt.pp).printValue":[[0,1,2]],"(*fmt.pp).unknownType":[[0]],"(*fmt.readRune).ReadRune":[[0],[0],[],[0]],"(*fmt.readRune).UnreadRune":[[0],[]],"(*fmt.readRune).readByte":[[0],[0],[0]],"(*fmt.ss).Read":[[0],[],[]],"(*fmt.ss).ReadRune":[[0],[0],[],[]],"(*fmt.ss).SkipSpace":[[0]],"(*fmt.ss).Token":[[0],[0],[]],"(*fmt.ss).Token$1":[],"(*fmt.ss).UnreadRune":[[0],[]],"(*fmt.ss).Width":[[0],[0],[]],"(*fmt.ss).accept":[[0],[]],"(*fmt.ss).advance":[[0],[]],"(*fmt.ss).complexTokens":[[0],[0],[0]],"(*fmt.ss).consume":[[0],[]],"(*fmt.ss).convertFloat":[[0],[1]],"(*fmt.ss).convertString":[[0],[0]],"(*fmt.ss).doScan":[[0],[],[]],"(*fmt.ss).doScanf":[[0],[],[]],"(*fmt.ss).error":[[0]],"(*fmt.ss).errorString":[[0]],"(*fmt.ss).floatToken":[[0],[0]],"(*fmt.ss).free":[[0,1]],"(*fmt.ss).getBase":[[0],[],[]],"(*fmt.ss).getRune":[[0],[0]],"(*fmt.ss).hexByte":[[0],[0],[]],"(*fmt.ss).hexString":[[0],[0]],"(*fmt.ss).mustReadRune":[[0],[0]],"(*fmt.ss).notEOF":[[0]],"(*fmt.ss).okVerb":[[0],[]],"(*fmt.ss).peek":[[0],[1]],"(*fmt.ss).quotedString":[[0],[0]],"(*fmt.ss).scanBasePrefix":[[0],[],[],[]],"(*fmt.ss).scanBool":[[0],[]],"(*fmt.ss).scanComplex":[[0],[]],"(*fmt.ss).scanInt":[[0],[0]],"(*fmt.ss).scanNumber":[[0],[0]],"(*fmt.ss).scanOne":[[0]],"(*fmt.ss).scanPercent":[[0]],"(*fmt.ss).scanRune":[[0],[0]],"(*fmt.ss).scanUint":[[0],[0]],"(*fmt.ss).token":[[0],[0]],"(*fmt.stringReader).Read":[[0],[],[]],"(*fmt.wrapError).Error":[[0],[0]],"(*fmt.wrapError).Unwrap":[[0],[0]],"(*github.com/cokeBeer/goot/pkg/bench/compose.Controller).Get":[[0]],"(*github.com/cokeBeer/goot/pkg/bench/compose.SinkController).Get":[[0]],"(*github.com/cokeBeer/goot/pkg/bench/interfac.J).Pure":[[0],[1]],"(*github.com/cokeBeer/goot/pkg/bench/pointer.J).F":[[0]],"(*github.com/cokeBeer/goot/pkg/bench/pointer.K).F":[[0]],"(*github.com/cokeBeer/goot/pkg/bench/pta.D).Dance":[[0]],"(*github.com/cokeBeer/goot/pkg/bench/pta.F).Party":[[0]],"(*github.com/cokeBeer/goot/pkg/bench/pta.S).Dance":[[0]],"(*github.com/cokeBeer/goot/pkg/bench/workhorse.cleaner).startProcessing":[[0,1],[0,1]],"(*go/ast.ArrayType).End":[[0],[]],"(*go/ast.ArrayType).Pos":[[0],[0]],"(*go/ast.ArrayType).exprNode":[[0]],"(*go/ast.AssignStmt).End":[[0],[]],"(*go/ast.AssignStmt).Pos":[[0],[0]],"(*go/ast.AssignStmt).stmtNode":[[0]],"(*go/ast.BadDecl).End":[[0],[0]],"(*go/ast.BadDecl).Pos":[[0],[0]],"(*go/ast.BadDecl).declNode":[[0]],"(*go/ast.BadExpr).End":[[0],[0]],"(*go/ast.BadExpr).Pos":[[0],[0]],"(*go/ast.BadExpr).exprNode":[[0]],"(*go/ast.BadStmt).End":[[0],[0]],"(*go/ast.BadStmt).Pos":[[0],[0]],"(*go/ast.BadStmt).stmtNode":[[0]],"(*go/ast.BasicLit).End":[[0],[0]],"(*go/ast.BasicLit).Pos":[[0],[0]],"(*go/ast.BasicLit).exprNode":[[0]],"(*go/ast.BinaryExpr).End":[[0],[]],"(*go/ast.BinaryExpr).Pos":[[0],[0]],"(*go/ast.BinaryExpr).exprNode":[[0]],"(*go/ast.BlockStmt).End":[[0],[0]],"(*go/ast.BlockStmt).Pos":[[0],[0]],"(*go/ast.BlockStmt).stmtNode":[[0]],"(*go/ast.BranchStmt).End":[[0],[0]],"(*go/ast.BranchStmt).Pos":[[0],[0]],"(*go/ast.BranchStmt).stmtNode":[[0]],"(*go/ast.CallExpr).End":[[0],[0]],"(*go/ast.CallExpr).Pos":[[0],[0]],"(*go/ast.CallExpr).exprNode":[[0]],"(*go/ast.CaseClause).End":[[0],[0]],"(*go/ast.CaseClause).Pos":[[0],[0]],"(*go/ast.CaseClause).stmtNode":[[0]],"(*go/ast.ChanType).End":[[0],[]],"(*go/ast.ChanType).Pos":[[0],[0]],"(*go/ast.ChanType).exprNode":[[0]],"(*go/ast.CommClause).End":[[0],[0]],"(*go/ast.CommClause).Pos":[[0],[0]],"(*go/ast.CommClause).stmtNode":[[0]],"(*go/ast.Comment).End":[[0],[0]],"(*go/ast.Comment).Pos":[[0],[0]],"(*go/ast.CommentGroup).End":[[0],[0]],"(*go/ast.CommentGroup).Pos":[[0],[0]],"(*go/ast.CommentGroup).Text":[[0],[0]],"(*go/ast.CommentMap).Comments":[[0],[]],"(*go/ast.CommentMap).Filter":[[0],[]],"(*go/ast.CommentMap).String":[[0],[]],"(*go/ast.CommentMap).Update":[[0],[2]],"(*go/ast.CommentMap).addComment":[[0]],"(*go/ast.CompositeLit).End":[[0],[0]],"(*go/ast.CompositeLit).Pos":[[0],[0]],"(*go/ast.CompositeLit).exprNode":[[0]],"(*go/ast.DeclStmt).End":[[0],[0]],"(*go/ast.DeclStmt).Pos":[[0],[0]],"(*go/ast.DeclStmt).stmtNode":[[0]],"(*go/ast.DeferStmt).End":[[0],[0]],"(*go/ast.DeferStmt).Pos":[[0],[0]],"(*go/ast.DeferStmt).stmtNode":[[0]],"(*go/ast.Ellipsis).End":[[0],[0]],"(*go/ast.Ellipsis).Pos":[[0],[0]],"(*go/ast.Ellipsis).exprNode":[[0]],"(*go/ast.EmptyStmt).End":[[0],[0]],"(*go/ast.EmptyStmt).Pos":[[0],[0]],"(*go/ast.EmptyStmt).stmtNode":[[0]],"(*go/ast.ExprStmt).End":[[0],[]],"(*go/ast.ExprStmt).Pos":[[0],[0]],"(*go/ast.ExprStmt).stmtNode":[[0]],"(*go/ast.Field).End":[[0],[0]],"(*go/ast.Field).Pos":[[0],[0]],"(*go/ast.FieldList).End":[[0],[0]],"(*go/ast.FieldList).NumFields":[[0],[]],"(*go/ast.FieldList).Pos":[[0],[0]],"(*go/ast.File).End":[[0],[0]],"(*go/ast.File).Pos":[[0],[0]],"(*go/ast.ForStmt).End":[[0],[0]],"(*go/ast.ForStmt).Pos":[[0],[0]],"(*go/ast.ForStmt).stmtNode":[[0]],"(*go/ast.FuncDecl).End":[[0],[0]],"(*go/ast.FuncDecl).Pos":[[0],[0]],"(*go/ast.FuncDecl).declNode":[[0]],"(*go/ast.FuncLit).End":[[0],[0]],"(*go/ast.FuncLit).Pos":[[0],[0]],"(*go/ast.FuncLit).exprNode":[[0]],"(*go/ast.FuncType).End":[[0],[0]],"(*go/ast.FuncType).Pos":[[0],[0]],"(*go/ast.FuncType).exprNode":[[0]],"(*go/ast.GenDecl).End":[[0],[0]],"(*go/ast.GenDecl).Pos":[[0],[0]],"(*go/ast.GenDecl).declNode":[[0]],"(*go/ast.GoStmt).End":[[0],[0]],"(*go/ast.GoStmt).Pos":[[0],[0]],"(*go/ast.GoStmt).stmtNode":[[0]],"(*go/ast.Ident).End":[[0],[0]],"(*go/ast.Ident).IsExported":[[0],[0]],"(*go/ast.Ident).Pos":[[0],[0]],"(*go/ast.Ident).String":[[0],[0]],"(*go/ast.Ident).exprNode":[[0]],"(*go/ast.IfStmt).End":[[0],[0]],"(*go/ast.IfStmt).Pos":[[0],[0]],"(*go/ast.IfStmt).stmtNode":[[0]],"(*go/ast.ImportSpec).End":[[0],[0]],"(*go/ast.ImportSpec).Pos":[[0],[0]],"(*go/ast.ImportSpec).specNode":[[0]],"(*go/ast.IncDecStmt).End":[[0],[0]],"(*go/ast.IncDecStmt).Pos":[[0],[0]],"(*go/ast.IncDecStmt).stmtNode":[[0]],"(*go/ast.IndexExpr).End":[[0],[0]],"(*go/ast.IndexExpr).Pos":[[0],[0]],"(*go/ast.IndexExpr).exprNode":[[0]],"(*go/ast.IndexListExpr).End":[[0],[0]],"(*go/ast.IndexListExpr).Pos":[[0],[0]],"(*go/ast.IndexListExpr).exprNode":[[0]],"(*go/ast.InterfaceType).End":[[0],[]],"(*go/ast.InterfaceType).Pos":[[0],[0]],"(*go/ast.InterfaceType).exprNode":[[0]],"(*go/ast.KeyValueExpr).End":[[0],[]],"(*go/ast.KeyValueExpr).Pos":[[0],[0]],"(*go/ast.KeyValueExpr).exprNode":[[0]],"(*go/ast.LabeledStmt).End":[[0],[0]],"(*go/ast.LabeledStmt).Pos":[[0],[0]],"(*go/ast.LabeledStmt).stmtNode":[[0]],"(*go/ast.MapType).End":[[0],[]],"(*go/ast.MapType).Pos":[[0],[0]],"(*go/ast.MapType).exprNode":[[0]],"(*go/ast.ObjKind).String":[[0],[]],"(*go/ast.Object).Pos":[[0],[0]],"(*go/ast.Package).End":[[0],[]],"(*go/ast.Package).Pos":[[0],[]],"(*go/ast.ParenExpr).End":[[0],[0]],"(*go/ast.ParenExpr).Pos":[[0],[0]],"(*go/ast.ParenExpr).exprNode":[[0]],"(*go/ast.RangeStmt).End":[[0],[0]],"(*go/ast.RangeStmt).Pos":[[0],[0]],"(*go/ast.RangeStmt).stmtNode":[[0]],"(*go/ast.ReturnStmt).End":[[0],[0]],"(*go/ast.ReturnStmt).Pos":[[0],[0]],"(*go/ast.ReturnStmt).stmtNode":[[0]],"(*go/ast.Scope).Insert":[[0],[0,1]],"(*go/ast.Scope).Lookup":[[0],[0,1]],"(*go/ast.Scope).String":[[0],[]],"(*go/ast.SelectStmt).End":[[0],[0]],"(*go/ast.SelectStmt).Pos":[[0],[0]],"(*go/ast.SelectStmt).stmtNode":[[0]],"(*go/ast.SelectorExpr).End":[[0],[0]],"(*go/ast.SelectorExpr).Pos":[[0],[0]],"(*go/ast.SelectorExpr).exprNode":[[0]],"(*go/ast.SendStmt).End":[[0],[]],"(*go/ast.SendStmt).Pos":[[0],[0]],"(*go/ast.SendStmt).stmtNode":[[0]],"(*go/ast.SliceExpr).End":[[0],[0]],"(*go/ast.SliceExpr).Pos":[[0],[0]],"(*go/ast.SliceExpr).exprNode":[[0]],"(*go/ast.StarExpr).End":[[0],[]],"(*go/ast.StarExpr).Pos":[[0],[0]],"(*go/ast.StarExpr).exprNode":[[0]],"(*go/ast.StructType).End":[[0],[0]],"(*go/ast.StructType).Pos":[[0],[0]],"(*go/ast.StructType).exprNode":[[0]],"(*go/ast.SwitchStmt).End":[[0],[0]],"(*go/ast.SwitchStmt).Pos":[[0],[0]],"(*go/ast.SwitchStmt).stmtNode":[[0]],"(*go/ast.TypeAssertExpr).End":[[0],[0]],"(*go/ast.TypeAssertExpr).Pos":[[0],[0]],"(*go/ast.TypeAssertExpr).exprNode":[[0]],"(*go/ast.TypeSpec).End":[[0],[]],"(*go/ast.TypeSpec).Pos":[[0],[0]],"(*go/ast.TypeSpec).specNode":[[0]],"(*go/ast.TypeSwitchStmt).End":[[0],[0]],"(*go/ast.TypeSwitchStmt).Pos":[[0],[0]],"(*go/ast.TypeSwitchStmt).stmtNode":[[0]],"(*go/ast.UnaryExpr).End":[[0],[]],"(*go/ast.UnaryExpr).Pos":[[0],[0]],"(*go/ast.UnaryExpr).exprNode":[[0]],"(*go/ast.ValueSpec).End":[[0],[0]],"(*go/ast.ValueSpec).Pos":[[0],[0]],"(*go/ast.ValueSpec).specNode":[[0]],"(*go/ast.byInterval).Len":[[0],[]],"(*go/ast.byInterval).Less":[[0],[]],"(*go/ast.byInterval).Swap":[[0]],"(*go/ast.byPos).Len":[[0],[]],"(*go/ast.byPos).Less":[[0],[]],"(*go/ast.byPos).Swap":[[0]],"(*go/ast.commentListReader).eol":[[0],[0]],"(*go/ast.commentListReader).next":[[0]],"(*go/ast.inspector).Visit":[[0],[]],"(*go/ast.nodeStack).pop":[[0],[0]],"(*go/ast.nodeStack).push":[[0,1]],"(*go/ast.pkgBuilder).declare":[[0,3]],"(*go/ast.pkgBuilder).error":[[0,1,2]],"(*go/ast.pkgBuilder).errorf":[[0,1]],"(*go/ast.printer).Write":[[0,1],[],[0,1]],"(*go/ast.printer).print":[[0]],"(*go/ast.printer).printf":[[0]],"(*go/build.Context).Import":[[0],[1],[0,1,2]],"(*go/build.Context).Import$1":[],"(*go/build.Context).Import$2":[[0]],"(*go/build.Context).Import$3":[[]],"(*go/build.Context).Import$4":[],"(*go/build.Context).Import$thunk":[[1],[0,1,2]],"(*go/build.Context).ImportDir":[[0],[],[0,1]],"(*go/build.Context).MatchFile":[[0],[1,2],[1,2]],"(*go/build.Context).SrcDirs":[[0],[0]],"(*go/build.Context).eval":[[0],[]],"(*go/build.Context).eval$1":[[]],"(*go/build.Context).goodOSArchFile":[[0],[]],"(*go/build.Context).gopath":[[0],[0]],"(*go/build.Context).hasSubdir":[[0],[2],[]],"(*go/build.Context).importGo":[[0],[0,2,3]],"(*go/build.Context).isAbsPath":[[0],[1]],"(*go/build.Context).isDir":[[0],[]],"(*go/build.Context).isFile":[[0],[]],"(*go/build.Context).joinPath":[[0],[1]],"(*go/build.Context).makePathsAbsolute":[[0]],"(*go/build.Context).matchAuto":[[0],[]],"(*go/build.Context).matchFile":[[0],[1,2,5],[1,2,5]],"(*go/build.Context).matchTag":[[0],[]],"(*go/build.Context).openFile":[[0],[1],[1]],"(*go/build.Context).readDir":[[0],[1],[1]],"(*go/build.Context).saveCgo":[[0],[1,2,3]],"(*go/build.Context).shouldBuild":[[0],[],[],[]],"(*go/build.Context).splitPathList":[[0],[1]],"(*go/build.MultiplePackageError).Error":[[0],[]],"(*go/build.NoGoError).Error":[[0],[0]],"(*go/build.Package).IsCommand":[[0],[0]],"(*go/build.importReader).findEmbed":[[0],[]],"(*go/build.importReader).nextByte":[[0],[0]],"(*go/build.importReader).peekByte":[[0],[0]],"(*go/build.importReader).readByte":[[0],[0]],"(*go/build.importReader).readByteNoBuf":[[0],[0]],"(*go/build.importReader).readIdent":[[0]],"(*go/build.importReader).readImport":[[0]],"(*go/build.importReader).readKeyword":[[0]],"(*go/build.importReader).readString":[[0]],"(*go/build.importReader).syntaxError":[[0]],"(*go/build/constraint.AndExpr).Eval":[[0],[]],"(*go/build/constraint.AndExpr).String":[[0],[]],"(*go/build/constraint.AndExpr).isExpr":[[0]],"(*go/build/constraint.NotExpr).Eval":[[0],[]],"(*go/build/constraint.NotExpr).String":[[0],[]],"(*go/build/constraint.NotExpr).isExpr":[[0]],"(*go/build/constraint.OrExpr).Eval":[[0],[]],"(*go/build/constraint.OrExpr).String":[[0],[]],"(*go/build/constraint.OrExpr).isExpr":[[0]],"(*go/build/constraint.SyntaxError).Error":[[0],[0]],"(*go/build/constraint.TagExpr).Eval":[[0],[]],"(*go/build/constraint.TagExpr).String":[[0],[0]],"(*go/build/constraint.TagExpr).isExpr":[[0]],"(*go/build/constraint.exprParser).and":[[0],[0]],"(*go/build/constraint.exprParser).atom":[[0],[0]],"(*go/build/constraint.exprParser).atom$1":[],"(*go/build/constraint.exprParser).lex":[[0]],"(*go/build/constraint.exprParser).not":[[0],[0]],"(*go/build/constraint.exprParser).or":[[0],[0]],"(*go/constant.Kind).String":[[0],[]],"(*go/constant.boolVal).ExactString":[[0],[]],"(*go/constant.boolVal).Kind":[[0],[]],"(*go/constant.boolVal).String":[[0],[]],"(*go/constant.boolVal).implementsValue":[[0]],"(*go/constant.complexVal).ExactString":[[0],[]],"(*go/constant.complexVal).Kind":[[0],[]],"(*go/constant.complexVal).String":[[0],[]],"(*go/constant.complexVal).implementsValue":[[0]],"(*go/constant.floatVal).ExactString":[[0],[]],"(*go/constant.floatVal).Kind":[[0],[]],"(*go/constant.floatVal).String":[[0],[]],"(*go/constant.floatVal).implementsValue":[[0]],"(*go/constant.int64Val).ExactString":[[0],[]],"(*go/constant.int64Val).Kind":[[0],[]],"(*go/constant.int64Val).String":[[0],[]],"(*go/constant.int64Val).implementsValue":[[0]],"(*go/constant.intVal).ExactString":[[0],[]],"(*go/constant.intVal).Kind":[[0],[]],"(*go/constant.intVal).String":[[0],[]],"(*go/constant.intVal).implementsValue":[[0]],"(*go/constant.ratVal).ExactString":[[0],[]],"(*go/constant.ratVal).Kind":[[0],[]],"(*go/constant.ratVal).String":[[0],[]],"(*go/constant.ratVal).implementsValue":[[0]],"(*go/constant.stringVal).ExactString":[[0],[0]],"(*go/constant.stringVal).Kind":[[0],[]],"(*go/constant.stringVal).String":[[0],[0]],"(*go/constant.stringVal).appendReverse":[[0],[0,1]],"(*go/constant.stringVal).implementsValue":[[0]],"(*go/constant.stringVal).string":[[0],[0]],"(*go/constant.unknownVal).ExactString":[[0],[]],"(*go/constant.unknownVal).Kind":[[0],[]],"(*go/constant.unknownVal).String":[[0],[]],"(*go/constant.unknownVal).implementsValue":[[0]],"(*go/doc.Package).Filter":[[0]],"(*go/doc.Package).HTML":[[0],[]],"(*go/doc.Package).Markdown":[[0],[]],"(*go/doc.Package).Parser":[[0],[]],"(*go/doc.Package).Printer":[[0],[]],"(*go/doc.Package).Synopsis":[[0],[]],"(*go/doc.Package).Text":[[0],[]],"(*go/doc.Package).collectFuncs":[[0]],"(*go/doc.Package).collectTypes":[[0]],"(*go/doc.Package).collectValues":[[0]],"(*go/doc.Package).lookupPackage":[[0],[0,1],[]],"(*go/doc.Package).lookupPackage$bound":[[0],[]],"(*go/doc.Package).lookupSym":[[0],[0,1,2]],"(*go/doc.Package).lookupSym$bound":[[0,1]],"(*go/doc.data).Len":[[0],[0]],"(*go/doc.data).Less":[[0],[]],"(*go/doc.data).Swap":[[0]],"(*go/doc.reader).cleanupTypes":[[0]],"(*go/doc.reader).collectEmbeddedMethods":[[0]],"(*go/doc.reader).computeMethodSets":[[0]],"(*go/doc.reader).fileExports":[[0]],"(*go/doc.reader).filterDecl":[[0],[1]],"(*go/doc.reader).filterFieldList":[[0],[]],"(*go/doc.reader).filterParamList":[[0]],"(*go/doc.reader).filterSpec":[[0],[]],"(*go/doc.reader).filterSpecList":[[0],[1]],"(*go/doc.reader).filterType":[[0]],"(*go/doc.reader).isPredeclared":[[0],[0,1]],"(*go/doc.reader).isVisible":[[0],[1]],"(*go/doc.reader).lookupType":[[0],[0,1]],"(*go/doc.reader).readDoc":[[0,1]],"(*go/doc.reader).readFile":[[0]],"(*go/doc.reader).readFunc":[[0]],"(*go/doc.reader).readNote":[[0]],"(*go/doc.reader).readNotes":[[0]],"(*go/doc.reader).readPackage":[[0,2]],"(*go/doc.reader).readType":[[0]],"(*go/doc.reader).readValue":[[0]],"(*go/doc.reader).recordAnonymousField":[[0],[2]],"(*go/doc.reader).remember":[[0]],"(*go/doc/comment.Code).block":[[0]],"(*go/doc/comment.DocLink).DefaultURL":[[0],[0,1]],"(*go/doc/comment.DocLink).text":[[0]],"(*go/doc/comment.Heading).DefaultID":[[0],[]],"(*go/doc/comment.Heading).block":[[0]],"(*go/doc/comment.Italic).text":[[0]],"(*go/doc/comment.Link).text":[[0]],"(*go/doc/comment.List).BlankBefore":[[0],[]],"(*go/doc/comment.List).BlankBetween":[[0],[]],"(*go/doc/comment.List).block":[[0]],"(*go/doc/comment.Paragraph).block":[[0]],"(*go/doc/comment.Parser).Parse":[[0],[0,1]],"(*go/doc/comment.Parser).Parse$1":[[]],"(*go/doc/comment.Plain).text":[[0]],"(*go/doc/comment.Printer).Comment":[[0],[]],"(*go/doc/comment.Printer).HTML":[[0],[]],"(*go/doc/comment.Printer).Markdown":[[0],[]],"(*go/doc/comment.Printer).Text":[[0],[]],"(*go/doc/comment.Printer).docLinkURL":[[0],[0,1]],"(*go/doc/comment.Printer).headingID":[[0],[]],"(*go/doc/comment.Printer).headingLevel":[[0],[0]],"(*go/doc/comment.commentPrinter).block":[[0]],"(*go/doc/comment.commentPrinter).indent":[[0]],"(*go/doc/comment.commentPrinter).text":[[0]],"(*go/doc/comment.htmlPrinter).block":[[0]],"(*go/doc/comment.htmlPrinter).escape":[[0]],"(*go/doc/comment.htmlPrinter).text":[[0]],"(*go/doc/comment.mdPrinter).block":[[0]],"(*go/doc/comment.mdPrinter).escape":[[0]],"(*go/doc/comment.mdPrinter).rawText":[[0]],"(*go/doc/comment.mdPrinter).text":[[0]],"(*go/doc/comment.parseDoc).code":[[0],[]],"(*go/doc/comment.parseDoc).docLink":[[0],[1],[]],"(*go/doc/comment.parseDoc).heading":[[0],[1]],"(*go/doc/comment.parseDoc).list":[[0],[1,2]],"(*go/doc/comment.parseDoc).list$1":[],"(*go/doc/comment.parseDoc).lookupPkg":[[0],[1],[]],"(*go/doc/comment.parseDoc).oldHeading":[[0],[1]],"(*go/doc/comment.parseDoc).paragraph":[[0,1],[1]],"(*go/doc/comment.parseDoc).parseLinkedText":[[0],[0,1]],"(*go/doc/comment.parseDoc).parseLinkedText$1":[],"(*go/doc/comment.parseDoc).parseText":[[0],[0,1,2]],"(*go/doc/comment.parseDoc).parseText$1":[],"(*go/doc/comment.parseDoc).parseText$2":[],"(*go/doc/comment.textPrinter).block":[[0]],"(*go/doc/comment.textPrinter).oneLongLine":[[0]],"(*go/doc/comment.textPrinter).text":[[0]],"(*go/importer.gccgoimports).Import":[[0],[0,1],[1]],"(*go/importer.gccgoimports).ImportFrom":[[0],[0,1],[1]],"(*go/importer.gcimports).Import":[[0],[0,1],[1]],"(*go/importer.gcimports).ImportFrom":[[0],[0,1,2],[1,2]],"(*go/internal/gccgoimporter.GccgoInstallation).GetImporter":[[0],[]],"(*go/internal/gccgoimporter.GccgoInstallation).InitFromDriver":[[0],[1,2]],"(*go/internal/gccgoimporter.GccgoInstallation).SearchPaths":[[0],[0]],"(*go/internal/gccgoimporter.importError).Error":[[0],[]],"(*go/internal/gccgoimporter.parser).error":[[0]],"(*go/internal/gccgoimporter.parser).errorf":[[0]],"(*go/internal/gccgoimporter.parser).expect":[[0],[0]],"(*go/internal/gccgoimporter.parser).expectEOL":[[0]],"(*go/internal/gccgoimporter.parser).expectKeyword":[[0]],"(*go/internal/gccgoimporter.parser).getPkg":[[0],[0,1,2]],"(*go/internal/gccgoimporter.parser).init":[[0,3]],"(*go/internal/gccgoimporter.parser).initScanner":[[0]],"(*go/internal/gccgoimporter.parser).initScanner$1":[],"(*go/internal/gccgoimporter.parser).maybeCreatePackage":[[0]],"(*go/internal/gccgoimporter.parser).next":[[0]],"(*go/internal/gccgoimporter.parser).parseArrayOrSliceType":[[0],[0]],"(*go/internal/gccgoimporter.parser).parseChanType":[[0],[]],"(*go/internal/gccgoimporter.parser).parseConst":[[0],[0,1]],"(*go/internal/gccgoimporter.parser).parseConstValue":[[0],[0],[]],"(*go/internal/gccgoimporter.parser).parseConversion":[[0],[],[]],"(*go/internal/gccgoimporter.parser).parseDirective":[[0]],"(*go/internal/gccgoimporter.parser).parseExportedName":[[0],[0],[0]],"(*go/internal/gccgoimporter.parser).parseField":[[0],[0,1],[0]],"(*go/internal/gccgoimporter.parser).parseFunc":[[0],[1]],"(*go/internal/gccgoimporter.parser).parseFunctionType":[[0],[1]],"(*go/internal/gccgoimporter.parser).parseInitDataDirective":[[0]],"(*go/internal/gccgoimporter.parser).parseInitDataDirective$1":[],"(*go/internal/gccgoimporter.parser).parseInt":[[0],[0]],"(*go/internal/gccgoimporter.parser).parseInt64":[[0],[0]],"(*go/internal/gccgoimporter.parser).parseInterfaceType":[[0],[1]],"(*go/internal/gccgoimporter.parser).parseMapType":[[0],[]],"(*go/internal/gccgoimporter.parser).parseName":[[0],[]],"(*go/internal/gccgoimporter.parser).parseNamedType":[[0],[0]],"(*go/internal/gccgoimporter.parser).parsePackage":[[0],[0]],"(*go/internal/gccgoimporter.parser).parsePackageInit":[[0],[0]],"(*go/internal/gccgoimporter.parser).parseParam":[[0],[1],[]],"(*go/internal/gccgoimporter.parser).parseParamList":[[0],[1],[]],"(*go/internal/gccgoimporter.parser).parsePointerType":[[0],[]],"(*go/internal/gccgoimporter.parser).parseQualifiedName":[[0],[0],[0]],"(*go/internal/gccgoimporter.parser).parseQualifiedNameStr":[[0],[0,1],[1]],"(*go/internal/gccgoimporter.parser).parseResultList":[[0],[1]],"(*go/internal/gccgoimporter.parser).parseSavedType":[[0]],"(*go/internal/gccgoimporter.parser).parseSavedType$1":[],"(*go/internal/gccgoimporter.parser).parseString":[[0],[0]],"(*go/internal/gccgoimporter.parser).parseStructType":[[0],[0,1]],"(*go/internal/gccgoimporter.parser).parseType":[[0],[]],"(*go/internal/gccgoimporter.parser).parseTypeAfterAngle":[[0],[0,1],[0]],"(*go/internal/gccgoimporter.parser).parseTypeExtended":[[0],[0,1],[0]],"(*go/internal/gccgoimporter.parser).parseTypeSpec":[[0],[0,1]],"(*go/internal/gccgoimporter.parser).parseTypes":[[0]],"(*go/internal/gccgoimporter.parser).parseTypes$1":[],"(*go/internal/gccgoimporter.parser).parseUnquotedQualifiedName":[[0],[0],[]],"(*go/internal/gccgoimporter.parser).parseUnquotedString":[[0],[]],"(*go/internal/gccgoimporter.parser).parseVar":[[0],[1]],"(*go/internal/gccgoimporter.parser).reserve":[[0]],"(*go/internal/gccgoimporter.parser).skipInlineBody":[[0]],"(*go/internal/gccgoimporter.parser).skipInlineBody$1":[],"(*go/internal/gccgoimporter.parser).update":[[0]],"(*go/internal/gccgoimporter.seekerReadAt).ReadAt":[[0],[],[]],"(*go/internal/gcimporter.anyType).String":[[0],[]],"(*go/internal/gcimporter.anyType).Underlying":[[0],[]],"(*go/internal/gcimporter.byPath).Len":[[0],[]],"(*go/internal/gcimporter.byPath).Less":[[0],[]],"(*go/internal/gcimporter.byPath).Swap":[[0]],"(*go/internal/gcimporter.fakeFileSet).pos":[[0,1],[0,1,2]],"(*go/internal/gcimporter.fakeFileSet).setLines":[[0]],"(*go/internal/gcimporter.fakeFileSet).setLines$1":[],"(*go/internal/gcimporter.iimporter).doDecl":[[0]],"(*go/internal/gcimporter.iimporter).pkgAt":[[0],[0,1]],"(*go/internal/gcimporter.iimporter).stringAt":[[0],[0,1]],"(*go/internal/gcimporter.iimporter).typAt":[[0],[0,1,2]],"(*go/internal/gcimporter.importReader).bool":[[0],[]],"(*go/internal/gcimporter.importReader).byte":[[0],[0]],"(*go/internal/gcimporter.importReader).declare":[[0]],"(*go/internal/gcimporter.importReader).doType":[[0,1],[0,1]],"(*go/internal/gcimporter.importReader).ident":[[0],[0]],"(*go/internal/gcimporter.importReader).int64":[[0],[]],"(*go/internal/gcimporter.importReader).kind":[[0],[]],"(*go/internal/gcimporter.importReader).mpfloat":[[0],[]],"(*go/internal/gcimporter.importReader).mpint":[[0]],"(*go/internal/gcimporter.importReader).obj":[[0,1]],"(*go/internal/gcimporter.importReader).param":[[0],[0]],"(*go/internal/gcimporter.importReader).paramList":[[0],[0]],"(*go/internal/gcimporter.importReader).pkg":[[0],[0]],"(*go/internal/gcimporter.importReader).pos":[[0],[0]],"(*go/internal/gcimporter.importReader).posv0":[[0]],"(*go/internal/gcimporter.importReader).posv1":[[0]],"(*go/internal/gcimporter.importReader).qualifiedIdent":[[0],[0],[0]],"(*go/internal/gcimporter.importReader).signature":[[0],[0,1,2,3]],"(*go/internal/gcimporter.importReader).string":[[0],[0]],"(*go/internal/gcimporter.importReader).tparamList":[[0],[]],"(*go/internal/gcimporter.importReader).typ":[[0],[0]],"(*go/internal/gcimporter.importReader).uint64":[[0],[]],"(*go/internal/gcimporter.importReader).value":[[0],[0],[0]],"(*go/internal/gcimporter.intReader).Buffered":[[0],[0]],"(*go/internal/gcimporter.intReader).Discard":[[0,1],[0,1],[0,1]],"(*go/internal/gcimporter.intReader).Peek":[[0],[0],[0]],"(*go/internal/gcimporter.intReader).Read":[[0],[],[0]],"(*go/internal/gcimporter.intReader).ReadByte":[[0],[0],[0]],"(*go/internal/gcimporter.intReader).ReadBytes":[[0],[],[0]],"(*go/internal/gcimporter.intReader).ReadLine":[[0],[0],[],[0]],"(*go/internal/gcimporter.intReader).ReadRune":[[0],[0],[],[0]],"(*go/internal/gcimporter.intReader).ReadSlice":[[0],[0],[0]],"(*go/internal/gcimporter.intReader).ReadString":[[0],[0],[0]],"(*go/internal/gcimporter.intReader).Reset":[[0,1]],"(*go/internal/gcimporter.intReader).Size":[[0],[]],"(*go/internal/gcimporter.intReader).UnreadByte":[[0],[]],"(*go/internal/gcimporter.intReader).UnreadRune":[[0],[]],"(*go/internal/gcimporter.intReader).WriteTo":[[0],[],[0,1]],"(*go/internal/gcimporter.intReader).collectFragments":[[0],[0],[0],[],[0]],"(*go/internal/gcimporter.intReader).fill":[[0]],"(*go/internal/gcimporter.intReader).int64":[[0],[]],"(*go/internal/gcimporter.intReader).readErr":[[0],[0]],"(*go/internal/gcimporter.intReader).reset":[[0,1,2]],"(*go/internal/gcimporter.intReader).uint64":[[0],[]],"(*go/internal/gcimporter.intReader).writeBuf":[[0],[],[1]],"(*go/internal/gcimporter.pkgReader).later":[[0,1]],"(*go/internal/gcimporter.pkgReader).newReader":[[0],[0,1,2]],"(*go/internal/gcimporter.pkgReader).objDictIdx":[[0],[]],"(*go/internal/gcimporter.pkgReader).objIdx":[[0],[0,1],[0,1]],"(*go/internal/gcimporter.pkgReader).objIdx$1":[],"(*go/internal/gcimporter.pkgReader).objIdx$2":[],"(*go/internal/gcimporter.pkgReader).pkgIdx":[[0],[0,1]],"(*go/internal/gcimporter.pkgReader).posBaseIdx":[[0],[0,1]],"(*go/internal/gcimporter.pkgReader).typIdx":[[0],[0,1,2]],"(*go/internal/gcimporter.reader).doPkg":[[0],[0]],"(*go/internal/gcimporter.reader).doTyp":[[0],[0]],"(*go/internal/gcimporter.reader).ident":[[0],[0],[0]],"(*go/internal/gcimporter.reader).interfaceType":[[0],[0]],"(*go/internal/gcimporter.reader).localIdent":[[0],[0],[0]],"(*go/internal/gcimporter.reader).method":[[0],[0]],"(*go/internal/gcimporter.reader).obj":[[0],[0],[]],"(*go/internal/gcimporter.reader).param":[[0],[0]],"(*go/internal/gcimporter.reader).params":[[0],[0]],"(*go/internal/gcimporter.reader).pkg":[[0],[0]],"(*go/internal/gcimporter.reader).pos":[[0],[0]],"(*go/internal/gcimporter.reader).posBase":[[0],[0]],"(*go/internal/gcimporter.reader).qualifiedIdent":[[0],[0],[0]],"(*go/internal/gcimporter.reader).selector":[[0],[0],[0]],"(*go/internal/gcimporter.reader).signature":[[0],[0,1,2,3]],"(*go/internal/gcimporter.reader).structType":[[0],[0]],"(*go/internal/gcimporter.reader).typ":[[0],[0]],"(*go/internal/gcimporter.reader).typInfo":[[0],[0]],"(*go/internal/gcimporter.reader).typeParamNames":[[0],[0]],"(*go/internal/gcimporter.reader).typeParamNames$1":[],"(*go/internal/gcimporter.reader).unionType":[[0],[0]],"(*go/internal/srcimporter.Importer).Import":[[0],[0,1],[0,1]],"(*go/internal/srcimporter.Importer).ImportFrom":[[0],[0,1],[0,1,2]],"(*go/internal/srcimporter.Importer).ImportFrom$1":[],"(*go/internal/srcimporter.Importer).ImportFrom$2":[],"(*go/internal/srcimporter.Importer).absPath":[[0],[1],[]],"(*go/internal/srcimporter.Importer).cgo":[[0],[],[1]],"(*go/internal/srcimporter.Importer).isAbsPath":[[0],[1]],"(*go/internal/srcimporter.Importer).joinPath":[[0],[1]],"(*go/internal/srcimporter.Importer).parseFiles":[[0],[],[]],"(*go/internal/srcimporter.Importer).parseFiles$1":[[],[0]],"(*go/internal/srcimporter.Importer).parseFiles$2":[],"(*go/internal/typeparams.IndexExpr).End":[[0],[0]],"(*go/internal/typeparams.IndexExpr).Pos":[[0],[0]],"(*go/internal/typeparams.IndexExpr).exprNode":[[0]],"(*go/parser.parser).advance":[[0]],"(*go/parser.parser).allowGenerics":[[0],[0]],"(*go/parser.parser).allowTypeSets":[[0],[0]],"(*go/parser.parser).atComma":[[0,1],[]],"(*go/parser.parser).checkAssignStmt":[[0,1]],"(*go/parser.parser).checkExpr":[[0],[1]],"(*go/parser.parser).checkExprOrType":[[0],[1]],"(*go/parser.parser).consumeComment":[[0],[0],[0]],"(*go/parser.parser).consumeCommentGroup":[[0],[0],[0]],"(*go/parser.parser).embeddedElem":[[0],[0,1]],"(*go/parser.parser).embeddedTerm":[[0],[0]],"(*go/parser.parser).error":[[0,1,2]],"(*go/parser.parser).error$bound":[],"(*go/parser.parser).errorExpected":[[0,1,2]],"(*go/parser.parser).expect":[[0],[0]],"(*go/parser.parser).expect2":[[0],[0]],"(*go/parser.parser).expectClosing":[[0],[0]],"(*go/parser.parser).expectSemi":[[0]],"(*go/parser.parser).init":[[0]],"(*go/parser.parser).init$1":[],"(*go/parser.parser).isTypeSwitchGuard":[[0,1],[1]],"(*go/parser.parser).makeExpr":[[0],[1]],"(*go/parser.parser).next":[[0]],"(*go/parser.parser).next0":[[0]],"(*go/parser.parser).parseArrayFieldOrTypeInstance":[[0],[1],[0,1]],"(*go/parser.parser).parseArrayType":[[0],[0,1,2]],"(*go/parser.parser).parseBinaryExpr":[[0],[0,1]],"(*go/parser.parser).parseBinaryExpr$1":[],"(*go/parser.parser).parseBlockStmt":[[0],[0]],"(*go/parser.parser).parseBody":[[0],[0]],"(*go/parser.parser).parseBranchStmt":[[0],[0,1]],"(*go/parser.parser).parseCallExpr":[[0],[]],"(*go/parser.parser).parseCallOrConversion":[[0],[0,1]],"(*go/parser.parser).parseCaseClause":[[0],[0]],"(*go/parser.parser).parseChanType":[[0],[0]],"(*go/parser.parser).parseCommClause":[[0],[0]],"(*go/parser.parser).parseDecl":[[0],[0]],"(*go/parser.parser).parseDeferStmt":[[0],[0]],"(*go/parser.parser).parseDotsType":[[0],[0]],"(*go/parser.parser).parseElement":[[0],[0]],"(*go/parser.parser).parseElementList":[[0],[0]],"(*go/parser.parser).parseExpr":[[0],[0]],"(*go/parser.parser).parseExprList":[[0],[]],"(*go/parser.parser).parseFieldDecl":[[0],[0]],"(*go/parser.parser).parseFile":[[0],[0]],"(*go/parser.parser).parseForStmt":[[0],[0]],"(*go/parser.parser).parseFuncDecl":[[0],[0]],"(*go/parser.parser).parseFuncType":[[0],[0]],"(*go/parser.parser).parseFuncTypeOrLit":[[0],[0]],"(*go/parser.parser).parseGenDecl":[[0],[0,1]],"(*go/parser.parser).parseGenericType":[[0]],"(*go/parser.parser).parseGoStmt":[[0],[0]],"(*go/parser.parser).parseIdent":[[0],[0]],"(*go/parser.parser).parseIdentList":[[0],[0]],"(*go/parser.parser).parseIfHeader":[[0],[0],[0]],"(*go/parser.parser).parseIfStmt":[[0],[0]],"(*go/parser.parser).parseImportSpec":[[0,1],[0,1]],"(*go/parser.parser).parseImportSpec$bound":[[0]],"(*go/parser.parser).parseIndexOrSliceOrInstance":[[0],[0,1]],"(*go/parser.parser).parseInterfaceType":[[0],[0]],"(*go/parser.parser).parseList":[[0],[]],"(*go/parser.parser).parseLiteralValue":[[0],[0,1]],"(*go/parser.parser).parseMapType":[[0],[0]],"(*go/parser.parser).parseMethodSpec":[[0],[0]],"(*go/parser.parser).parseOperand":[[0],[0]],"(*go/parser.parser).parseParamDecl":[[0],[0,1]],"(*go/parser.parser).parseParameterList":[[0,1,2],[0,1,2]],"(*go/parser.parser).parseParameterList$1":[],"(*go/parser.parser).parseParameters":[[0],[0],[0]],"(*go/parser.parser).parsePointerType":[[0],[0]],"(*go/parser.parser).parsePrimaryExpr":[[0],[0,1]],"(*go/parser.parser).parsePrimaryExpr$1":[],"(*go/parser.parser).parseQualifiedIdent":[[0],[0,1]],"(*go/parser.parser).parseResult":[[0],[]],"(*go/parser.parser).parseReturnStmt":[[0],[0]],"(*go/parser.parser).parseRhs":[[0],[]],"(*go/parser.parser).parseRhs$bound":[[]],"(*go/parser.parser).parseRhsOrType":[[0],[]],"(*go/parser.parser).parseRhsOrType$bound":[[]],"(*go/parser.parser).parseSelectStmt":[[0],[0]],"(*go/parser.parser).parseSelector":[[0],[0,1]],"(*go/parser.parser).parseSimpleStmt":[[0],[0],[]],"(*go/parser.parser).parseStmt":[[0],[0]],"(*go/parser.parser).parseStmtList":[[0],[0]],"(*go/parser.parser).parseStructType":[[0],[0]],"(*go/parser.parser).parseSwitchStmt":[[0],[0]],"(*go/parser.parser).parseType":[[0],[0]],"(*go/parser.parser).parseTypeAssertion":[[0],[0,1]],"(*go/parser.parser).parseTypeInstance":[[0],[0,1]],"(*go/parser.parser).parseTypeList":[[0],[0]],"(*go/parser.parser).parseTypeName":[[0],[0,1]],"(*go/parser.parser).parseTypeSpec":[[0],[0,1]],"(*go/parser.parser).parseTypeSpec$bound":[[0]],"(*go/parser.parser).parseUnaryExpr":[[0],[0]],"(*go/parser.parser).parseValue":[[0],[]],"(*go/parser.parser).parseValueSpec":[[0],[0,1]],"(*go/parser.parser).parseValueSpec$bound":[[0]],"(*go/parser.parser).printTrace":[[0]],"(*go/parser.parser).safePos":[[0],[1]],"(*go/parser.parser).safePos$1":[],"(*go/parser.parser).tokPrec":[[0],[0],[]],"(*go/parser.parser).tryIdentOrType":[[0],[0]],"(*go/parser.resolver).Visit":[[0,1],[0]],"(*go/parser.resolver).closeLabelScope":[[0]],"(*go/parser.resolver).closeScope":[[0]],"(*go/parser.resolver).declare":[[0]],"(*go/parser.resolver).declareList":[[0]],"(*go/parser.resolver).openLabelScope":[[0]],"(*go/parser.resolver).openScope":[[0]],"(*go/parser.resolver).resolve":[[0,1]],"(*go/parser.resolver).resolveList":[[0]],"(*go/parser.resolver).shortVarDecl":[[0]],"(*go/parser.resolver).sprintf":[[0],[]],"(*go/parser.resolver).trace":[[0]],"(*go/parser.resolver).walkBody":[[0]],"(*go/parser.resolver).walkExprs":[[0]],"(*go/parser.resolver).walkFieldList":[[0]],"(*go/parser.resolver).walkFuncType":[[0]],"(*go/parser.resolver).walkLHS":[[0]],"(*go/parser.resolver).walkRecv":[[0]],"(*go/parser.resolver).walkStmts":[[0]],"(*go/parser.resolver).walkTParams":[[0]],"(*go/printer.Config).Fprint":[[0],[1,3]],"(*go/printer.Config).fprint":[[0],[1,3]],"(*go/printer.printer).binaryExpr":[[0,1]],"(*go/printer.printer).block":[[0,1]],"(*go/printer.printer).bodySize":[[0,1],[0,1,2]],"(*go/printer.printer).commentBefore":[[0],[0]],"(*go/printer.printer).commentSizeBefore":[[0],[]],"(*go/printer.printer).commentSizeBefore$1":[],"(*go/printer.printer).commentTextAt":[[0],[0]],"(*go/printer.printer).commentsHaveNewline":[[0,1],[]],"(*go/printer.printer).containsLinebreak":[[0],[]],"(*go/printer.printer).controlClause":[[0]],"(*go/printer.printer).decl":[[0,1]],"(*go/printer.printer).declList":[[0,1]],"(*go/printer.printer).distanceFrom":[[0],[0,2]],"(*go/printer.printer).expr":[[0,1]],"(*go/printer.printer).expr0":[[0]],"(*go/printer.printer).expr1":[[0,1]],"(*go/printer.printer).exprList":[[0,2]],"(*go/printer.printer).fieldList":[[0,1]],"(*go/printer.printer).file":[[0]],"(*go/printer.printer).fixGoBuildLines":[[0]],"(*go/printer.printer).flush":[[0],[],[]],"(*go/printer.printer).funcBody":[[0]],"(*go/printer.printer).funcBody$1":[],"(*go/printer.printer).funcDecl":[[0]],"(*go/printer.printer).genDecl":[[0,1]],"(*go/printer.printer).identList":[[0,1]],"(*go/printer.printer).indentList":[[0],[]],"(*go/printer.printer).init":[[0,1,2,3]],"(*go/printer.printer).internalError":[[0]],"(*go/printer.printer).intersperseComments":[[0],[],[]],"(*go/printer.printer).isOneLineFieldList":[[0],[0,1]],"(*go/printer.printer).lineAt":[[0],[0]],"(*go/printer.printer).lineFor":[[0,1],[0,1]],"(*go/printer.printer).linebreak":[[0,3],[0,1,2]],"(*go/printer.printer).linesFrom":[[0],[0,1]],"(*go/printer.printer).nextComment":[[0]],"(*go/printer.printer).nodeSize":[[0],[0,1,2]],"(*go/printer.printer).numLines":[[0,1],[0,1]],"(*go/printer.printer).parameters":[[0,1]],"(*go/printer.printer).posFor":[[0],[0,1]],"(*go/printer.printer).possibleSelectorExpr":[[0,1],[]],"(*go/printer.printer).print":[[0,1]],"(*go/printer.printer).printNode":[[0,1],[1]],"(*go/printer.printer).recordLine":[[0,1]],"(*go/printer.printer).selectorExpr":[[0,1],[]],"(*go/printer.printer).setComment":[[0]],"(*go/printer.printer).setLineComment":[[0]],"(*go/printer.printer).signature":[[0,1]],"(*go/printer.printer).spec":[[0,1]],"(*go/printer.printer).stmt":[[0,1]],"(*go/printer.printer).stmtList":[[0,1]],"(*go/printer.printer).valueSpec":[[0,1]],"(*go/printer.printer).writeByte":[[0,1,2]],"(*go/printer.printer).writeComment":[[0]],"(*go/printer.printer).writeComment$1":[],"(*go/printer.printer).writeCommentPrefix":[[0,1]],"(*go/printer.printer).writeCommentSuffix":[[0],[],[]],"(*go/printer.printer).writeIndent":[[0]],"(*go/printer.printer).writeLineDirective":[[0,1]],"(*go/printer.printer).writeString":[[0,1,2]],"(*go/printer.printer).writeWhitespace":[[0]],"(*go/printer.trimmer).Write":[[0,1],[],[0,1]],"(*go/printer.trimmer).resetSpace":[[0]],"(*go/scanner.Error).Error":[[0],[]],"(*go/scanner.ErrorList).Add":[[0,1,2]],"(*go/scanner.ErrorList).Err":[[0],[]],"(*go/scanner.ErrorList).Error":[[0],[]],"(*go/scanner.ErrorList).Len":[[0],[]],"(*go/scanner.ErrorList).Less":[[0],[]],"(*go/scanner.ErrorList).RemoveMultiples":[[0]],"(*go/scanner.ErrorList).Reset":[[0]],"(*go/scanner.ErrorList).Sort":[[0]],"(*go/scanner.ErrorList).Swap":[[0]],"(*go/scanner.Scanner).Init":[[0]],"(*go/scanner.Scanner).Scan":[[0],[0],[0],[0]],"(*go/scanner.Scanner).digits":[[0],[]],"(*go/scanner.Scanner).error":[[0]],"(*go/scanner.Scanner).errorf":[[0]],"(*go/scanner.Scanner).findLineEnd":[[0],[]],"(*go/scanner.Scanner).findLineEnd$1":[],"(*go/scanner.Scanner).next":[[0]],"(*go/scanner.Scanner).peek":[[0],[0]],"(*go/scanner.Scanner).scanComment":[[0],[0]],"(*go/scanner.Scanner).scanEscape":[[0],[]],"(*go/scanner.Scanner).scanIdentifier":[[0],[0]],"(*go/scanner.Scanner).scanNumber":[[0],[],[0]],"(*go/scanner.Scanner).scanRawString":[[0],[0]],"(*go/scanner.Scanner).scanRune":[[0],[0]],"(*go/scanner.Scanner).scanString":[[0],[0]],"(*go/scanner.Scanner).skipWhitespace":[[0]],"(*go/scanner.Scanner).switch2":[[0],[1,2]],"(*go/scanner.Scanner).switch3":[[0],[1,2,4]],"(*go/scanner.Scanner).switch4":[[0],[1,2,4,5]],"(*go/scanner.Scanner).updateLineInfo":[[0,1,2,3]],"(*go/token.File).AddLine":[[0,1]],"(*go/token.File).AddLineColumnInfo":[[0,1,2,3,4]],"(*go/token.File).AddLineInfo":[[0,1,2,3]],"(*go/token.File).Base":[[0],[0]],"(*go/token.File).Line":[[0],[0,1]],"(*go/token.File).LineCount":[[0],[]],"(*go/token.File).LineStart":[[0],[0]],"(*go/token.File).MergeLine":[[0]],"(*go/token.File).Name":[[0],[0]],"(*go/token.File).Offset":[[0],[0,1]],"(*go/token.File).Pos":[[0],[0,1]],"(*go/token.File).Position":[[0],[0,1]],"(*go/token.File).PositionFor":[[0],[0,1]],"(*go/token.File).SetLines":[[0,1],[]],"(*go/token.File).SetLinesForContent":[[0]],"(*go/token.File).Size":[[0],[0]],"(*go/token.File).position":[[0],[0,1]],"(*go/token.File).unpack":[[0],[0],[0],[0,1]],"(*go/token.FileSet).AddFile":[[0,1,2,3],[0,1,2,3]],"(*go/token.FileSet).Base":[[0],[0]],"(*go/token.FileSet).File":[[0],[0]],"(*go/token.FileSet).Iterate":[[0]],"(*go/token.FileSet).Position":[[0],[0,1]],"(*go/token.FileSet).PositionFor":[[0],[0,1]],"(*go/token.FileSet).Read":[[0],[]],"(*go/token.FileSet).Write":[[0],[]],"(*go/token.FileSet).file":[[0],[0]],"(*go/token.Pos).IsValid":[[0],[]],"(*go/token.Position).IsValid":[[0],[0]],"(*go/token.Position).String":[[0],[]],"(*go/token.Token).IsKeyword":[[0],[]],"(*go/token.Token).IsLiteral":[[0],[]],"(*go/token.Token).IsOperator":[[0],[]],"(*go/token.Token).Precedence":[[0],[]],"(*go/token.Token).String":[[0],[]],"(*go/types.ArgumentError).Error":[[0],[0]],"(*go/types.ArgumentError).Unwrap":[[0],[0]],"(*go/types.Array).Elem":[[0],[0]],"(*go/types.Array).Len":[[0],[0]],"(*go/types.Array).String":[[0],[]],"(*go/types.Array).Underlying":[[0],[0]],"(*go/types.Basic).Info":[[0],[0]],"(*go/types.Basic).Kind":[[0],[0]],"(*go/types.Basic).Name":[[0],[0]],"(*go/types.Basic).String":[[0],[]],"(*go/types.Basic).Underlying":[[0],[0]],"(*go/types.Builtin).Exported":[[0],[0]],"(*go/types.Builtin).Id":[[0],[0]],"(*go/types.Builtin).Name":[[0],[0]],"(*go/types.Builtin).Parent":[[0],[0]],"(*go/types.Builtin).Pkg":[[0],[0]],"(*go/types.Builtin).Pos":[[0],[0]],"(*go/types.Builtin).String":[[0],[]],"(*go/types.Builtin).Type":[[0],[0]],"(*go/types.Builtin).color":[[0],[0]],"(*go/types.Builtin).order":[[0],[0]],"(*go/types.Builtin).sameId":[[0],[0,1]],"(*go/types.Builtin).scopePos":[[0],[0]],"(*go/types.Builtin).setColor":[[0,1]],"(*go/types.Builtin).setOrder":[[0,1]],"(*go/types.Builtin).setParent":[[0,1]],"(*go/types.Builtin).setScopePos":[[0,1]],"(*go/types.Builtin).setType":[[0,1]],"(*go/types.Chan).Dir":[[0],[0]],"(*go/types.Chan).Elem":[[0],[0]],"(*go/types.Chan).String":[[0],[]],"(*go/types.Chan).Underlying":[[0],[0]],"(*go/types.Checker).Files":[[0],[]],"(*go/types.Checker).ObjectOf":[[0],[0,1]],"(*go/types.Checker).TypeOf":[[0],[0,1]],"(*go/types.Checker).addDeclDep":[[0]],"(*go/types.Checker).allowVersion":[[0],[0,3]],"(*go/types.Checker).applyTypeFunc":[[0,2],[0,2]],"(*go/types.Checker).applyTypeFunc$1":[[]],"(*go/types.Checker).arguments":[[0,2,4],[0,1,2,3]],"(*go/types.Checker).arityMatch":[[0]],"(*go/types.Checker).arrayLength":[[0],[]],"(*go/types.Checker).assertableTo":[[0],[],[]],"(*go/types.Checker).assignError":[[0]],"(*go/types.Checker).assignVar":[[0],[2]],"(*go/types.Checker).assignVars":[[0]],"(*go/types.Checker).assignment":[[0]],"(*go/types.Checker).binary":[[0]],"(*go/types.Checker).binary$1":[[]],"(*go/types.Checker).blockBranches":[[0],[]],"(*go/types.Checker).blockBranches$1":[],"(*go/types.Checker).blockBranches$2":[[]],"(*go/types.Checker).blockBranches$3":[],"(*go/types.Checker).blockBranches$4":[],"(*go/types.Checker).bound":[[0],[]],"(*go/types.Checker).brokenAlias":[[0]],"(*go/types.Checker).builtin":[[0],[]],"(*go/types.Checker).builtin$1":[],"(*go/types.Checker).builtin$2":[],"(*go/types.Checker).builtin$3":[[]],"(*go/types.Checker).builtin$4":[[]],"(*go/types.Checker).builtin$5":[],"(*go/types.Checker).builtin$6":[[]],"(*go/types.Checker).builtin$7":[[]],"(*go/types.Checker).builtin$8":[[]],"(*go/types.Checker).callExpr":[[0,1,2],[]],"(*go/types.Checker).caseTypes":[[0],[]],"(*go/types.Checker).caseValues":[[0]],"(*go/types.Checker).checkFieldUniqueness":[[0]],"(*go/types.Checker).checkFiles":[[0],[]],"(*go/types.Checker).checkFiles$1":[],"(*go/types.Checker).cleanup":[[0]],"(*go/types.Checker).closeScope":[[0]],"(*go/types.Checker).collectMethods":[[0]],"(*go/types.Checker).collectMethods$1":[],"(*go/types.Checker).collectObjects":[[0]],"(*go/types.Checker).collectObjects$1":[],"(*go/types.Checker).collectParams":[[0],[0,2],[]],"(*go/types.Checker).collectTypeParams":[[0]],"(*go/types.Checker).collectTypeParams$1":[],"(*go/types.Checker).comparison":[[0]],"(*go/types.Checker).constDecl":[[0]],"(*go/types.Checker).constDecl$1":[],"(*go/types.Checker).context":[[0],[0]],"(*go/types.Checker).conversion":[[0]],"(*go/types.Checker).conversion$1":[[]],"(*go/types.Checker).conversion$2":[[]],"(*go/types.Checker).convertUntyped":[[0]],"(*go/types.Checker).cycleError":[[0]],"(*go/types.Checker).cycleError$1":[[]],"(*go/types.Checker).declStmt":[[0]],"(*go/types.Checker).declStmt$1":[],"(*go/types.Checker).declare":[[0]],"(*go/types.Checker).declareInSet":[[0],[]],"(*go/types.Checker).declarePkgObj":[[0]],"(*go/types.Checker).declareTypeParams":[[0],[0,1,2]],"(*go/types.Checker).definedType":[[0],[]],"(*go/types.Checker).dump":[[0]],"(*go/types.Checker).error":[[0,2]],"(*go/types.Checker).errorUnusedPkg":[[0]],"(*go/types.Checker).errorf":[[0,2]],"(*go/types.Checker).exclude":[[0]],"(*go/types.Checker).expr":[[0]],"(*go/types.Checker).exprInternal":[[0],[]],"(*go/types.Checker).exprInternal$1":[],"(*go/types.Checker).exprInternal$2":[[]],"(*go/types.Checker).exprList":[[0],[1],[]],"(*go/types.Checker).exprOrType":[[0]],"(*go/types.Checker).exprWithHint":[[0]],"(*go/types.Checker).filename":[[0],[0]],"(*go/types.Checker).funcBody":[[0]],"(*go/types.Checker).funcBody$1":[],"(*go/types.Checker).funcDecl":[[0]],"(*go/types.Checker).funcDecl$1":[],"(*go/types.Checker).funcInst":[[0]],"(*go/types.Checker).funcString":[[0],[1]],"(*go/types.Checker).funcType":[[0]],"(*go/types.Checker).funcType$1":[],"(*go/types.Checker).funcType$2":[],"(*go/types.Checker).genericType":[[0],[0,1]],"(*go/types.Checker).handleBailout":[[0]],"(*go/types.Checker).ident":[[0]],"(*go/types.Checker).implements":[[0],[]],"(*go/types.Checker).implements$1":[[]],"(*go/types.Checker).implements$2":[[]],"(*go/types.Checker).implicitTypeAndValue":[[0],[1,2],[1],[]],"(*go/types.Checker).implicitTypeAndValue$1":[[0]],"(*go/types.Checker).importPackage":[[0],[0,2,3]],"(*go/types.Checker).incomparableCause":[[0],[]],"(*go/types.Checker).incomparableCause$1":[],"(*go/types.Checker).index":[[0],[],[]],"(*go/types.Checker).indexExpr":[[0],[]],"(*go/types.Checker).indexExpr$1":[[]],"(*go/types.Checker).indexedElts":[[0],[]],"(*go/types.Checker).infer":[[0],[2,3]],"(*go/types.Checker).infer$1":[],"(*go/types.Checker).infer$2":[],"(*go/types.Checker).infer$3":[],"(*go/types.Checker).inferB":[[0],[2,3],[]],"(*go/types.Checker).inferB$1":[],"(*go/types.Checker).initConst":[[0]],"(*go/types.Checker).initFiles":[[0,1]],"(*go/types.Checker).initOrder":[[0]],"(*go/types.Checker).initVar":[[0],[2]],"(*go/types.Checker).initVars":[[0,1,2]],"(*go/types.Checker).instance":[[0,1,2,3,4],[0,1,2,3,4,5]],"(*go/types.Checker).instance$1":[[0]],"(*go/types.Checker).instantiateSignature":[[0],[0,1,2,3]],"(*go/types.Checker).instantiateSignature$1":[],"(*go/types.Checker).instantiateSignature$2":[],"(*go/types.Checker).instantiatedType":[[0],[0,1]],"(*go/types.Checker).instantiatedType$1":[],"(*go/types.Checker).instantiatedType$2":[],"(*go/types.Checker).interfacePtrError":[[0],[]],"(*go/types.Checker).interfaceType":[[0]],"(*go/types.Checker).interfaceType$1":[],"(*go/types.Checker).interfaceType$2":[],"(*go/types.Checker).invalidAST":[[0]],"(*go/types.Checker).invalidArg":[[0,2]],"(*go/types.Checker).invalidConversion":[[0,1]],"(*go/types.Checker).invalidOp":[[0,2]],"(*go/types.Checker).isBrokenAlias":[[0],[0,1]],"(*go/types.Checker).isImportedConstraint":[[0],[]],"(*go/types.Checker).isNil":[[0],[]],"(*go/types.Checker).isTerminating":[[0],[]],"(*go/types.Checker).isTerminatingList":[[0],[]],"(*go/types.Checker).isTerminatingSwitch":[[0],[]],"(*go/types.Checker).isValidIndex":[[0,2],[]],"(*go/types.Checker).kindString":[[0],[]],"(*go/types.Checker).labels":[[0]],"(*go/types.Checker).langCompat":[[0]],"(*go/types.Checker).later":[[0,1],[0,1]],"(*go/types.Checker).lookup":[[0],[0,1]],"(*go/types.Checker).markImports":[[0]],"(*go/types.Checker).missingMethod":[[0],[],[]],"(*go/types.Checker).missingMethodReason":[[0],[]],"(*go/types.Checker).monomorph":[[0]],"(*go/types.Checker).multiExpr":[[0]],"(*go/types.Checker).multipleDefaults":[[0]],"(*go/types.Checker).needsCleanup":[[0,1]],"(*go/types.Checker).newAssertableTo":[[0],[]],"(*go/types.Checker).newInterface":[[0],[0]],"(*go/types.Checker).newNamed":[[0,1,2,3],[0,1,2,3]],"(*go/types.Checker).newNamedInstance":[[0,1,2,3,4],[0,1,2,3,4]],"(*go/types.Checker).newTypeParam":[[0,1,2],[0,1,2]],"(*go/types.Checker).nonGeneric":[[0]],"(*go/types.Checker).objDecl":[[0]],"(*go/types.Checker).objDecl$1":[],"(*go/types.Checker).objDecl$2":[],"(*go/types.Checker).objDecl$3":[],"(*go/types.Checker).op":[[0],[]],"(*go/types.Checker).openScope":[[0,1,2]],"(*go/types.Checker).overflow":[[0]],"(*go/types.Checker).packageObjects":[[0]],"(*go/types.Checker).pop":[[0],[0]],"(*go/types.Checker).processDelayed":[[0]],"(*go/types.Checker).push":[[0,1],[]],"(*go/types.Checker).qualifier":[[0],[1]],"(*go/types.Checker).qualifier$bound":[[0]],"(*go/types.Checker).rawExpr":[[0],[]],"(*go/types.Checker).rawExpr$1":[],"(*go/types.Checker).record":[[0]],"(*go/types.Checker).recordBuiltinType":[[0]],"(*go/types.Checker).recordCommaOkTypes":[[0]],"(*go/types.Checker).recordDef":[[0]],"(*go/types.Checker).recordImplicit":[[0]],"(*go/types.Checker).recordInstance":[[0]],"(*go/types.Checker).recordScope":[[0]],"(*go/types.Checker).recordSelection":[[0]],"(*go/types.Checker).recordTypeAndValue":[[0]],"(*go/types.Checker).recordUntyped":[[0]],"(*go/types.Checker).recordUse":[[0]],"(*go/types.Checker).rememberUntyped":[[0]],"(*go/types.Checker).report":[[0,1]],"(*go/types.Checker).reportAltDecl":[[0]],"(*go/types.Checker).reportCycle":[[0]],"(*go/types.Checker).reportInstanceLoop":[[0]],"(*go/types.Checker).representable":[[0]],"(*go/types.Checker).representation":[[0],[1],[]],"(*go/types.Checker).resolveBaseTypeName":[[0],[1],[0,2]],"(*go/types.Checker).selector":[[0]],"(*go/types.Checker).shift":[[0]],"(*go/types.Checker).shortVarDecl":[[0]],"(*go/types.Checker).simpleStmt":[[0]],"(*go/types.Checker).singleIndex":[[0],[1]],"(*go/types.Checker).singleValue":[[0]],"(*go/types.Checker).sliceExpr":[[0]],"(*go/types.Checker).softErrorf":[[0,2]],"(*go/types.Checker).sprintf":[[0],[]],"(*go/types.Checker).stmt":[[0]],"(*go/types.Checker).stmt$1":[],"(*go/types.Checker).stmtList":[[0]],"(*go/types.Checker).structType":[[0]],"(*go/types.Checker).structType$1":[],"(*go/types.Checker).structType$2":[],"(*go/types.Checker).structType$3":[],"(*go/types.Checker).subst":[[0],[0,1,2,3,4,5]],"(*go/types.Checker).suspendedCall":[[0]],"(*go/types.Checker).tag":[[0],[1]],"(*go/types.Checker).trace":[[0]],"(*go/types.Checker).typ":[[0],[]],"(*go/types.Checker).typInternal":[[0],[0,1]],"(*go/types.Checker).typInternal$1":[],"(*go/types.Checker).typInternal$2":[],"(*go/types.Checker).typeAssertion":[[0]],"(*go/types.Checker).typeDecl":[[0]],"(*go/types.Checker).typeDecl$1":[],"(*go/types.Checker).typeList":[[0],[]],"(*go/types.Checker).typesSummary":[[0],[1]],"(*go/types.Checker).unary":[[0]],"(*go/types.Checker).unpackRecv":[[0],[],[1],[1]],"(*go/types.Checker).unusedImports":[[0]],"(*go/types.Checker).updateExprType":[[0]],"(*go/types.Checker).updateExprType0":[[0]],"(*go/types.Checker).updateExprVal":[[0]],"(*go/types.Checker).usage":[[0]],"(*go/types.Checker).usage$1":[[]],"(*go/types.Checker).use":[[0]],"(*go/types.Checker).useLHS":[[0]],"(*go/types.Checker).validAlias":[[0]],"(*go/types.Checker).validCycle":[[0],[]],"(*go/types.Checker).validCycle$1":[],"(*go/types.Checker).validType":[[0]],"(*go/types.Checker).validType0":[[0],[]],"(*go/types.Checker).validVarType":[[0]],"(*go/types.Checker).validVarType$1":[],"(*go/types.Checker).validateTArgLen":[[0],[]],"(*go/types.Checker).varDecl":[[0,2,4]],"(*go/types.Checker).varType":[[0],[]],"(*go/types.Checker).verify":[[0],[],[]],"(*go/types.Checker).versionErrorf":[[0,2]],"(*go/types.Checker).walkDecl":[[0]],"(*go/types.Checker).walkDecls":[[0]],"(*go/types.Config).Check":[[0],[1],[]],"(*go/types.Config).alignof":[[0],[0]],"(*go/types.Config).offsetof":[[0],[0]],"(*go/types.Config).offsetsof":[[0],[0]],"(*go/types.Config).sizeof":[[0],[0,1]],"(*go/types.Const).Exported":[[0],[0]],"(*go/types.Const).Id":[[0],[0]],"(*go/types.Const).Name":[[0],[0]],"(*go/types.Const).Parent":[[0],[0]],"(*go/types.Const).Pkg":[[0],[0]],"(*go/types.Const).Pos":[[0],[0]],"(*go/types.Const).String":[[0],[]],"(*go/types.Const).Type":[[0],[0]],"(*go/types.Const).Val":[[0],[0]],"(*go/types.Const).color":[[0],[0]],"(*go/types.Const).isDependency":[[0]],"(*go/types.Const).order":[[0],[0]],"(*go/types.Const).sameId":[[0],[0,1]],"(*go/types.Const).scopePos":[[0],[0]],"(*go/types.Const).setColor":[[0,1]],"(*go/types.Const).setOrder":[[0,1]],"(*go/types.Const).setParent":[[0,1]],"(*go/types.Const).setScopePos":[[0,1]],"(*go/types.Const).setType":[[0,1]],"(*go/types.Context).getID":[[0],[0,1]],"(*go/types.Context).instanceHash":[[0],[]],"(*go/types.Context).lookup":[[0],[0,1]],"(*go/types.Context).update":[[0],[0,1,4]],"(*go/types.Error).Error":[[0],[]],"(*go/types.Func).Exported":[[0],[0]],"(*go/types.Func).FullName":[[0],[]],"(*go/types.Func).Id":[[0],[0]],"(*go/types.Func).Name":[[0],[0]],"(*go/types.Func).Origin":[[0],[0]],"(*go/types.Func).Parent":[[0],[0]],"(*go/types.Func).Pkg":[[0],[0]],"(*go/types.Func).Pos":[[0],[0]],"(*go/types.Func).Scope":[[0],[0]],"(*go/types.Func).String":[[0],[]],"(*go/types.Func).Type":[[0],[0]],"(*go/types.Func).color":[[0],[0]],"(*go/types.Func).hasPtrRecv":[[0],[0]],"(*go/types.Func).isDependency":[[0]],"(*go/types.Func).order":[[0],[0]],"(*go/types.Func).sameId":[[0],[0,1]],"(*go/types.Func).scopePos":[[0],[0]],"(*go/types.Func).setColor":[[0,1]],"(*go/types.Func).setOrder":[[0,1]],"(*go/types.Func).setParent":[[0,1]],"(*go/types.Func).setScopePos":[[0,1]],"(*go/types.Func).setType":[[0,1]],"(*go/types.Info).ObjectOf":[[0],[0,1]],"(*go/types.Info).TypeOf":[[0],[0,1]],"(*go/types.Initializer).String":[[0],[]],"(*go/types.Interface).Complete":[[0],[0]],"(*go/types.Interface).Embedded":[[0],[0]],"(*go/types.Interface).EmbeddedType":[[0],[0]],"(*go/types.Interface).Empty":[[0],[]],"(*go/types.Interface).ExplicitMethod":[[0],[0]],"(*go/types.Interface).IsComparable":[[0],[]],"(*go/types.Interface).IsImplicit":[[0],[0]],"(*go/types.Interface).IsMethodSet":[[0],[]],"(*go/types.Interface).MarkImplicit":[[0]],"(*go/types.Interface).Method":[[0],[]],"(*go/types.Interface).NumEmbeddeds":[[0],[]],"(*go/types.Interface).NumExplicitMethods":[[0],[]],"(*go/types.Interface).NumMethods":[[0],[]],"(*go/types.Interface).String":[[0],[]],"(*go/types.Interface).Underlying":[[0],[0]],"(*go/types.Interface).cleanup":[[0]],"(*go/types.Interface).typeSet":[[0],[]],"(*go/types.Label).Exported":[[0],[0]],"(*go/types.Label).Id":[[0],[0]],"(*go/types.Label).Name":[[0],[0]],"(*go/types.Label).Parent":[[0],[0]],"(*go/types.Label).Pkg":[[0],[0]],"(*go/types.Label).Pos":[[0],[0]],"(*go/types.Label).String":[[0],[]],"(*go/types.Label).Type":[[0],[0]],"(*go/types.Label).color":[[0],[0]],"(*go/types.Label).order":[[0],[0]],"(*go/types.Label).sameId":[[0],[0,1]],"(*go/types.Label).scopePos":[[0],[0]],"(*go/types.Label).setColor":[[0,1]],"(*go/types.Label).setOrder":[[0,1]],"(*go/types.Label).setParent":[[0,1]],"(*go/types.Label).setScopePos":[[0,1]],"(*go/types.Label).setType":[[0,1]],"(*go/types.Map).Elem":[[0],[0]],"(*go/types.Map).Key":[[0],[0]],"(*go/types.Map).String":[[0],[]],"(*go/types.Map).Underlying":[[0],[0]],"(*go/types.MethodSet).At":[[0],[0]],"(*go/types.MethodSet).Len":[[0],[]],"(*go/types.MethodSet).Lookup":[[0],[0]],"(*go/types.MethodSet).Lookup$1":[[]],"(*go/types.MethodSet).String":[[0],[]],"(*go/types.Named).AddMethod":[[0,1]],"(*go/types.Named).Method":[[0],[0]],"(*go/types.Named).NumMethods":[[0],[]],"(*go/types.Named).Obj":[[0],[0]],"(*go/types.Named).Origin":[[0],[0]],"(*go/types.Named).SetTypeParams":[[0]],"(*go/types.Named).SetUnderlying":[[0,1]],"(*go/types.Named).String":[[0],[]],"(*go/types.Named).TypeArgs":[[0],[0]],"(*go/types.Named).TypeParams":[[0],[0]],"(*go/types.Named).Underlying":[[0],[]],"(*go/types.Named).cleanup":[[0]],"(*go/types.Named).expandMethod":[[0],[0]],"(*go/types.Named).expandUnderlying":[[0],[0]],"(*go/types.Named).expandUnderlying$1":[],"(*go/types.Named).lookupMethod":[[0],[],[0]],"(*go/types.Named).resolve":[[0],[0]],"(*go/types.Named).setState":[[0]],"(*go/types.Named).setUnderlying":[[0,1]],"(*go/types.Named).state":[[0],[]],"(*go/types.Named).under":[[0],[]],"(*go/types.Nil).Exported":[[0],[0]],"(*go/types.Nil).Id":[[0],[0]],"(*go/types.Nil).Name":[[0],[0]],"(*go/types.Nil).Parent":[[0],[0]],"(*go/types.Nil).Pkg":[[0],[0]],"(*go/types.Nil).Pos":[[0],[0]],"(*go/types.Nil).String":[[0],[]],"(*go/types.Nil).Type":[[0],[0]],"(*go/types.Nil).color":[[0],[0]],"(*go/types.Nil).order":[[0],[0]],"(*go/types.Nil).sameId":[[0],[0,1]],"(*go/types.Nil).scopePos":[[0],[0]],"(*go/types.Nil).setColor":[[0,1]],"(*go/types.Nil).setOrder":[[0,1]],"(*go/types.Nil).setParent":[[0,1]],"(*go/types.Nil).setScopePos":[[0,1]],"(*go/types.Nil).setType":[[0,1]],"(*go/types.Package).Complete":[[0],[0]],"(*go/types.Package).Imports":[[0],[0]],"(*go/types.Package).MarkComplete":[[0]],"(*go/types.Package).Name":[[0],[0]],"(*go/types.Package).Name$thunk":[[0]],"(*go/types.Package).Path":[[0],[0]],"(*go/types.Package).Scope":[[0],[0]],"(*go/types.Package).SetImports":[[0,1]],"(*go/types.Package).SetName":[[0,1]],"(*go/types.Package).String":[[0],[]],"(*go/types.PkgName).Exported":[[0],[0]],"(*go/types.PkgName).Id":[[0],[0]],"(*go/types.PkgName).Imported":[[0],[0]],"(*go/types.PkgName).Name":[[0],[0]],"(*go/types.PkgName).Parent":[[0],[0]],"(*go/types.PkgName).Pkg":[[0],[0]],"(*go/types.PkgName).Pos":[[0],[0]],"(*go/types.PkgName).String":[[0],[]],"(*go/types.PkgName).Type":[[0],[0]],"(*go/types.PkgName).color":[[0],[0]],"(*go/types.PkgName).order":[[0],[0]],"(*go/types.PkgName).sameId":[[0],[0,1]],"(*go/types.PkgName).scopePos":[[0],[0]],"(*go/types.PkgName).setColor":[[0,1]],"(*go/types.PkgName).setOrder":[[0,1]],"(*go/types.PkgName).setParent":[[0,1]],"(*go/types.PkgName).setScopePos":[[0,1]],"(*go/types.PkgName).setType":[[0,1]],"(*go/types.Pointer).Elem":[[0],[0]],"(*go/types.Pointer).String":[[0],[]],"(*go/types.Pointer).Underlying":[[0],[0]],"(*go/types.Scope).Child":[[0],[0]],"(*go/types.Scope).Contains":[[0],[0,1]],"(*go/types.Scope).End":[[0],[0]],"(*go/types.Scope).Innermost":[[0],[0]],"(*go/types.Scope).Insert":[[0],[0,1]],"(*go/types.Scope).Len":[[0],[]],"(*go/types.Scope).Lookup":[[0],[0,1]],"(*go/types.Scope).LookupParent":[[0],[0],[0,1]],"(*go/types.Scope).Names":[[0],[0]],"(*go/types.Scope).NumChildren":[[0],[]],"(*go/types.Scope).Parent":[[0],[0]],"(*go/types.Scope).Pos":[[0],[0]],"(*go/types.Scope).String":[[0],[]],"(*go/types.Scope).WriteTo":[[0]],"(*go/types.Scope)._InsertLazy":[[0],[]],"(*go/types.Scope).insert":[[0]],"(*go/types.Scope).squash":[[0]],"(*go/types.Selection).Index":[[0],[0]],"(*go/types.Selection).Indirect":[[0],[0]],"(*go/types.Selection).Kind":[[0],[0]],"(*go/types.Selection).Obj":[[0],[0]],"(*go/types.Selection).Recv":[[0],[0]],"(*go/types.Selection).String":[[0],[]],"(*go/types.Selection).Type":[[0],[0]],"(*go/types.Signature).Params":[[0],[0]],"(*go/types.Signature).Recv":[[0],[0]],"(*go/types.Signature).RecvTypeParams":[[0],[0]],"(*go/types.Signature).Results":[[0],[0]],"(*go/types.Signature).String":[[0],[]],"(*go/types.Signature).TypeParams":[[0],[0]],"(*go/types.Signature).Underlying":[[0],[0]],"(*go/types.Signature).Variadic":[[0],[0]],"(*go/types.Slice).Elem":[[0],[0]],"(*go/types.Slice).String":[[0],[]],"(*go/types.Slice).Underlying":[[0],[0]],"(*go/types.StdSizes).Alignof":[[0],[0]],"(*go/types.StdSizes).Offsetsof":[[0],[0]],"(*go/types.StdSizes).Sizeof":[[0],[0,1]],"(*go/types.Struct).Field":[[0],[0]],"(*go/types.Struct).NumFields":[[0],[]],"(*go/types.Struct).String":[[0],[]],"(*go/types.Struct).Tag":[[0],[0]],"(*go/types.Struct).Underlying":[[0],[0]],"(*go/types.Struct).markComplete":[[0]],"(*go/types.Term).String":[[0],[]],"(*go/types.Term).Tilde":[[0],[0]],"(*go/types.Term).Type":[[0],[0]],"(*go/types.Tuple).At":[[0],[0]],"(*go/types.Tuple).Len":[[0],[]],"(*go/types.Tuple).String":[[0],[]],"(*go/types.Tuple).Underlying":[[0],[0]],"(*go/types.TypeAndValue).Addressable":[[0],[]],"(*go/types.TypeAndValue).Assignable":[[0],[]],"(*go/types.TypeAndValue).HasOk":[[0],[]],"(*go/types.TypeAndValue).IsBuiltin":[[0],[]],"(*go/types.TypeAndValue).IsNil":[[0],[]],"(*go/types.TypeAndValue).IsType":[[0],[]],"(*go/types.TypeAndValue).IsValue":[[0],[]],"(*go/types.TypeAndValue).IsVoid":[[0],[]],"(*go/types.TypeList).At":[[0],[0]],"(*go/types.TypeList).Len":[[0],[]],"(*go/types.TypeList).list":[[0],[0]],"(*go/types.TypeName).Exported":[[0],[0]],"(*go/types.TypeName).Id":[[0],[0]],"(*go/types.TypeName).IsAlias":[[0],[0]],"(*go/types.TypeName).Name":[[0],[0]],"(*go/types.TypeName).Parent":[[0],[0]],"(*go/types.TypeName).Pkg":[[0],[0]],"(*go/types.TypeName).Pos":[[0],[0]],"(*go/types.TypeName).String":[[0],[]],"(*go/types.TypeName).Type":[[0],[0]],"(*go/types.TypeName).color":[[0],[0]],"(*go/types.TypeName).order":[[0],[0]],"(*go/types.TypeName).sameId":[[0],[0,1]],"(*go/types.TypeName).scopePos":[[0],[0]],"(*go/types.TypeName).setColor":[[0,1]],"(*go/types.TypeName).setOrder":[[0,1]],"(*go/types.TypeName).setParent":[[0,1]],"(*go/types.TypeName).setScopePos":[[0,1]],"(*go/types.TypeName).setType":[[0,1]],"(*go/types.TypeParam).Constraint":[[0],[0]],"(*go/types.TypeParam).Index":[[0],[0]],"(*go/types.TypeParam).Obj":[[0],[0]],"(*go/types.TypeParam).SetConstraint":[[0]],"(*go/types.TypeParam).String":[[0],[]],"(*go/types.TypeParam).Underlying":[[0],[0]],"(*go/types.TypeParam).cleanup":[[0]],"(*go/types.TypeParam).iface":[[0],[0]],"(*go/types.TypeParam).is":[[0],[]],"(*go/types.TypeParam).underIs":[[0],[]],"(*go/types.TypeParamList).At":[[0],[0]],"(*go/types.TypeParamList).Len":[[0],[]],"(*go/types.TypeParamList).list":[[0],[0]],"(*go/types.Union).Len":[[0],[]],"(*go/types.Union).String":[[0],[]],"(*go/types.Union).Term":[[0],[0]],"(*go/types.Union).Underlying":[[0],[0]],"(*go/types.Var).Anonymous":[[0],[0]],"(*go/types.Var).Embedded":[[0],[0]],"(*go/types.Var).Exported":[[0],[0]],"(*go/types.Var).Id":[[0],[0]],"(*go/types.Var).IsField":[[0],[0]],"(*go/types.Var).Name":[[0],[0]],"(*go/types.Var).Origin":[[0],[0]],"(*go/types.Var).Parent":[[0],[0]],"(*go/types.Var).Pkg":[[0],[0]],"(*go/types.Var).Pos":[[0],[0]],"(*go/types.Var).String":[[0],[]],"(*go/types.Var).Type":[[0],[0]],"(*go/types.Var).color":[[0],[0]],"(*go/types.Var).isDependency":[[0]],"(*go/types.Var).order":[[0],[0]],"(*go/types.Var).sameId":[[0],[0,1]],"(*go/types.Var).scopePos":[[0],[0]],"(*go/types.Var).setColor":[[0,1]],"(*go/types.Var).setOrder":[[0,1]],"(*go/types.Var).setParent":[[0,1]],"(*go/types.Var).setScopePos":[[0,1]],"(*go/types.Var).setType":[[0,1]],"(*go/types._TypeSet).IsAll":[[0],[]],"(*go/types._TypeSet).IsComparable":[[0],[0]],"(*go/types._TypeSet).IsComparable$1":[[0]],"(*go/types._TypeSet).IsEmpty":[[0],[]],"(*go/types._TypeSet).IsMethodSet":[[0],[]],"(*go/types._TypeSet).LookupMethod":[[0],[],[0]],"(*go/types._TypeSet).Method":[[0],[0]],"(*go/types._TypeSet).NumMethods":[[0],[]],"(*go/types._TypeSet).String":[[0],[]],"(*go/types._TypeSet).hasTerms":[[0],[]],"(*go/types._TypeSet).is":[[0],[]],"(*go/types._TypeSet).subsetOf":[[0],[]],"(*go/types._TypeSet).underIs":[[0],[]],"(*go/types.action).describef":[[0,1,2,3]],"(*go/types.atPos).Pos":[[0],[]],"(*go/types.block).enclosingTarget":[[0],[0]],"(*go/types.block).gotoTarget":[[0],[0,1]],"(*go/types.block).insert":[[0]],"(*go/types.byUniqueMethodName).Len":[[0],[]],"(*go/types.byUniqueMethodName).Less":[[0],[]],"(*go/types.byUniqueMethodName).Swap":[[0]],"(*go/types.color).String":[[0],[]],"(*go/types.constDecl).node":[[0],[]],"(*go/types.cycleFinder).typ":[[0]],"(*go/types.cycleFinder).varList":[[0]],"(*go/types.declInfo).addDep":[[0]],"(*go/types.declInfo).hasInitializer":[[0],[0]],"(*go/types.environment).lookup":[[0],[0,1]],"(*go/types.error_).String":[[0],[]],"(*go/types.error_).empty":[[0],[0]],"(*go/types.error_).errorf":[[0,1,2,3]],"(*go/types.error_).msg":[[0],[]],"(*go/types.error_).pos":[[0],[]],"(*go/types.funcDecl).node":[[0],[]],"(*go/types.graphNode).cost":[[0],[]],"(*go/types.ifacePair).identical":[[0],[0,1]],"(*go/types.importDecl).node":[[0],[]],"(*go/types.inSourceOrder).Len":[[0],[]],"(*go/types.inSourceOrder).Less":[[0],[]],"(*go/types.inSourceOrder).Swap":[[0]],"(*go/types.instanceLookup).add":[[0]],"(*go/types.instanceLookup).lookup":[[0],[0,1]],"(*go/types.lazyObject).Exported":[[0],[]],"(*go/types.lazyObject).Id":[[0],[]],"(*go/types.lazyObject).Name":[[0],[]],"(*go/types.lazyObject).Parent":[[0],[]],"(*go/types.lazyObject).Pkg":[[0],[]],"(*go/types.lazyObject).Pos":[[0],[]],"(*go/types.lazyObject).String":[[0],[]],"(*go/types.lazyObject).Type":[[0],[]],"(*go/types.lazyObject).color":[[0],[]],"(*go/types.lazyObject).order":[[0],[]],"(*go/types.lazyObject).sameId":[[0],[]],"(*go/types.lazyObject).scopePos":[[0],[]],"(*go/types.lazyObject).setColor":[[0]],"(*go/types.lazyObject).setOrder":[[0]],"(*go/types.lazyObject).setParent":[[0]],"(*go/types.lazyObject).setScopePos":[[0]],"(*go/types.lazyObject).setType":[[0]],"(*go/types.monoGraph).addEdge":[[0,1,2,3,4,5]],"(*go/types.monoGraph).assign":[[0]],"(*go/types.monoGraph).assign$1":[],"(*go/types.monoGraph).assign$2":[],"(*go/types.monoGraph).assign$2$1":[],"(*go/types.monoGraph).localNamedVertex":[[0,2],[0,2]],"(*go/types.monoGraph).recordCanon":[[0]],"(*go/types.monoGraph).recordInstance":[[0]],"(*go/types.monoGraph).typeParamVertex":[[0,1],[0,1]],"(*go/types.nodeQueue).Len":[[0],[]],"(*go/types.nodeQueue).Less":[[0],[]],"(*go/types.nodeQueue).Pop":[[0],[0]],"(*go/types.nodeQueue).Push":[[0]],"(*go/types.nodeQueue).Swap":[[0]],"(*go/types.nodeSet).add":[[0]],"(*go/types.object).Exported":[[0],[0]],"(*go/types.object).Id":[[0],[0]],"(*go/types.object).Name":[[0],[0]],"(*go/types.object).Parent":[[0],[0]],"(*go/types.object).Pkg":[[0],[0]],"(*go/types.object).Pos":[[0],[0]],"(*go/types.object).String":[[0],[]],"(*go/types.object).Type":[[0],[0]],"(*go/types.object).color":[[0],[0]],"(*go/types.object).order":[[0],[0]],"(*go/types.object).sameId":[[0],[0,1]],"(*go/types.object).scopePos":[[0],[0]],"(*go/types.object).setColor":[[0,1]],"(*go/types.object).setOrder":[[0,1]],"(*go/types.object).setParent":[[0,1]],"(*go/types.object).setScopePos":[[0,1]],"(*go/types.object).setType":[[0,1]],"(*go/types.objset).insert":[[0],[0,1]],"(*go/types.operand).Pos":[[0],[0]],"(*go/types.operand).String":[[0],[]],"(*go/types.operand).assignableTo":[[0],[0,2],[]],"(*go/types.operand).assignableTo$1":[[0]],"(*go/types.operand).assignableTo$2":[],"(*go/types.operand).assignableTo$3":[[]],"(*go/types.operand).assignableTo$4":[[]],"(*go/types.operand).convertibleTo":[[0],[]],"(*go/types.operand).convertibleTo$1":[],"(*go/types.operand).convertibleTo$2":[[]],"(*go/types.operand).convertibleTo$2$1":[[]],"(*go/types.operand).convertibleTo$3":[[]],"(*go/types.operand).convertibleTo$4":[[]],"(*go/types.operand).isNil":[[0],[0]],"(*go/types.operand).setConst":[[0,2]],"(*go/types.posSpan).Pos":[[0],[]],"(*go/types.substMap).empty":[[0],[]],"(*go/types.substMap).lookup":[[0],[1]],"(*go/types.subster).funcList":[[0],[1],[]],"(*go/types.subster).func_":[[0],[1]],"(*go/types.subster).termlist":[[0],[1],[]],"(*go/types.subster).tuple":[[0],[1]],"(*go/types.subster).typ":[[0],[0,1]],"(*go/types.subster).typ$1":[],"(*go/types.subster).typ$2":[],"(*go/types.subster).typ$3":[],"(*go/types.subster).typOrNil":[[0],[]],"(*go/types.subster).typeList":[[0],[1],[]],"(*go/types.subster).varList":[[0],[1],[]],"(*go/types.subster).var_":[[0],[1]],"(*go/types.term).String":[[0],[]],"(*go/types.term).disjoint":[[0],[]],"(*go/types.term).equal":[[0],[0,1]],"(*go/types.term).includes":[[0],[0,1]],"(*go/types.term).intersect":[[0],[0,1]],"(*go/types.term).subsetOf":[[0],[1]],"(*go/types.term).union":[[0],[0,1],[1]],"(*go/types.termlist).String":[[0],[]],"(*go/types.termlist).equal":[[0],[]],"(*go/types.termlist).includes":[[0],[]],"(*go/types.termlist).intersect":[[0],[1]],"(*go/types.termlist).isAll":[[0],[]],"(*go/types.termlist).isEmpty":[[0],[]],"(*go/types.termlist).norm":[[0],[]],"(*go/types.termlist).subsetOf":[[0],[]],"(*go/types.termlist).supersetOf":[[0],[]],"(*go/types.termlist).union":[[0],[]],"(*go/types.tpWalker).isParameterized":[[0],[0,1]],"(*go/types.tpWalker).isParameterized$1":[],"(*go/types.tpWalker).isParameterized$2":[[0]],"(*go/types.tpWalker).isParameterizedTypeList":[[0],[]],"(*go/types.tparamsList).at":[[0],[0]],"(*go/types.tparamsList).index":[[0],[1]],"(*go/types.tparamsList).init":[[0,1]],"(*go/types.tparamsList).set":[[0,2]],"(*go/types.tparamsList).setIndex":[[0]],"(*go/types.tparamsList).types":[[0],[0],[]],"(*go/types.tparamsList).unknowns":[[0],[]],"(*go/types.typeDecl).node":[[0],[]],"(*go/types.typeWriter).byte":[[0]],"(*go/types.typeWriter).error":[[0]],"(*go/types.typeWriter).signature":[[0]],"(*go/types.typeWriter).signature$1":[],"(*go/types.typeWriter).string":[[0]],"(*go/types.typeWriter).tParamList":[[0]],"(*go/types.typeWriter).tuple":[[0]],"(*go/types.typeWriter).typ":[[0]],"(*go/types.typeWriter).typeList":[[0]],"(*go/types.typeWriter).typeName":[[0]],"(*go/types.typeWriter).typeSet":[[0]],"(*go/types.unifier).join":[[0],[]],"(*go/types.unifier).nify":[[0],[1,2]],"(*go/types.unifier).nify$1":[],"(*go/types.unifier).nifyEq":[[0],[]],"(*go/types.unifier).tracef":[[0]],"(*go/types.unifier).unify":[[0],[1,2]],"(*go/types.varDecl).node":[[0],[]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).FindAllString":[[0],[]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).FindString":[[0],[1]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).FindStringSubmatch":[[0],[1]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).FindStringSubmatchIndex":[[0],[0,1]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).FindSubmatch":[[0],[1]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).MatchString":[[0],[0,1]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).ReplaceAllString":[[0],[1]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).SubexpNames":[[0],[0]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).build":[[0]],"(*golang.org/x/mod/internal/lazyregexp.Regexp).build$bound":[],"(*golang.org/x/mod/internal/lazyregexp.Regexp).re":[[0],[0]],"(*golang.org/x/mod/modfile.CommentBlock).Comment":[[0],[0]],"(*golang.org/x/mod/modfile.CommentBlock).Span":[[0],[0],[0]],"(*golang.org/x/mod/modfile.Comments).Comment":[[0],[0]],"(*golang.org/x/mod/modfile.Error).Error":[[0],[0]],"(*golang.org/x/mod/modfile.Error).Unwrap":[[0],[0]],"(*golang.org/x/mod/modfile.ErrorList).Error":[[0],[]],"(*golang.org/x/mod/modfile.File).AddComment":[[0]],"(*golang.org/x/mod/modfile.File).AddExclude":[[0,1,2],[1,2]],"(*golang.org/x/mod/modfile.File).AddGoStmt":[[0,1],[1]],"(*golang.org/x/mod/modfile.File).AddModuleStmt":[[0,1],[]],"(*golang.org/x/mod/modfile.File).AddNewRequire":[[0,1,2,3]],"(*golang.org/x/mod/modfile.File).AddReplace":[[0],[]],"(*golang.org/x/mod/modfile.File).AddRequire":[[0,1,2],[]],"(*golang.org/x/mod/modfile.File).AddRetract":[[0],[0,1]],"(*golang.org/x/mod/modfile.File).Cleanup":[[0]],"(*golang.org/x/mod/modfile.File).DropExclude":[[0],[]],"(*golang.org/x/mod/modfile.File).DropReplace":[[0],[]],"(*golang.org/x/mod/modfile.File).DropRequire":[[0],[]],"(*golang.org/x/mod/modfile.File).DropRetract":[[0],[]],"(*golang.org/x/mod/modfile.File).Format":[[0],[0],[]],"(*golang.org/x/mod/modfile.File).SetRequire":[[0]],"(*golang.org/x/mod/modfile.File).SetRequireSeparateIndirect":[[0]],"(*golang.org/x/mod/modfile.File).SetRequireSeparateIndirect$1":[[0]],"(*golang.org/x/mod/modfile.File).SetRequireSeparateIndirect$2":[],"(*golang.org/x/mod/modfile.File).SetRequireSeparateIndirect$3":[[]],"(*golang.org/x/mod/modfile.File).SetRequireSeparateIndirect$4":[[]],"(*golang.org/x/mod/modfile.File).SortBlocks":[[0]],"(*golang.org/x/mod/modfile.File).SortBlocks$1":[[]],"(*golang.org/x/mod/modfile.File).add":[[0]],"(*golang.org/x/mod/modfile.File).add$1":[],"(*golang.org/x/mod/modfile.File).add$2":[],"(*golang.org/x/mod/modfile.File).add$3":[],"(*golang.org/x/mod/modfile.File).fixRetract":[[0]],"(*golang.org/x/mod/modfile.File).fixRetract$1":[],"(*golang.org/x/mod/modfile.File).removeDups":[[0]],"(*golang.org/x/mod/modfile.FileSyntax).Cleanup":[[0]],"(*golang.org/x/mod/modfile.FileSyntax).Comment":[[0],[0]],"(*golang.org/x/mod/modfile.FileSyntax).Span":[[0],[0],[0]],"(*golang.org/x/mod/modfile.FileSyntax).addLine":[[0],[2]],"(*golang.org/x/mod/modfile.FileSyntax).addLine$1":[[]],"(*golang.org/x/mod/modfile.FileSyntax).updateLine":[[0]],"(*golang.org/x/mod/modfile.LParen).Comment":[[0],[0]],"(*golang.org/x/mod/modfile.LParen).Span":[[0],[0],[0]],"(*golang.org/x/mod/modfile.Line).Comment":[[0],[0]],"(*golang.org/x/mod/modfile.Line).Span":[[0],[0],[0]],"(*golang.org/x/mod/modfile.Line).markRemoved":[[0]],"(*golang.org/x/mod/modfile.LineBlock).Comment":[[0],[0]],"(*golang.org/x/mod/modfile.LineBlock).Span":[[0],[0],[0]],"(*golang.org/x/mod/modfile.Position).add":[[0],[]],"(*golang.org/x/mod/modfile.RParen).Comment":[[0],[0]],"(*golang.org/x/mod/modfile.RParen).Span":[[0],[0],[0]],"(*golang.org/x/mod/modfile.Require).markRemoved":[[0]],"(*golang.org/x/mod/modfile.Require).setIndirect":[[0,1]],"(*golang.org/x/mod/modfile.Require).setVersion":[[0,1]],"(*golang.org/x/mod/modfile.WorkFile).AddGoStmt":[[0,1],[1]],"(*golang.org/x/mod/modfile.WorkFile).AddNewUse":[[0,1,2]],"(*golang.org/x/mod/modfile.WorkFile).AddReplace":[[0],[]],"(*golang.org/x/mod/modfile.WorkFile).AddUse":[[0,1,2],[]],"(*golang.org/x/mod/modfile.WorkFile).Cleanup":[[0]],"(*golang.org/x/mod/modfile.WorkFile).DropReplace":[[0],[]],"(*golang.org/x/mod/modfile.WorkFile).DropUse":[[0],[]],"(*golang.org/x/mod/modfile.WorkFile).SetUse":[[0]],"(*golang.org/x/mod/modfile.WorkFile).SortBlocks":[[0]],"(*golang.org/x/mod/modfile.WorkFile).SortBlocks$1":[[]],"(*golang.org/x/mod/modfile.WorkFile).add":[[0]],"(*golang.org/x/mod/modfile.WorkFile).add$1":[],"(*golang.org/x/mod/modfile.WorkFile).add$2":[],"(*golang.org/x/mod/modfile.WorkFile).removeDups":[[0]],"(*golang.org/x/mod/modfile.input).Error":[[0]],"(*golang.org/x/mod/modfile.input).assignComments":[[0]],"(*golang.org/x/mod/modfile.input).endToken":[[0,1]],"(*golang.org/x/mod/modfile.input).eof":[[0],[]],"(*golang.org/x/mod/modfile.input).lex":[[0],[0]],"(*golang.org/x/mod/modfile.input).order":[[0,1]],"(*golang.org/x/mod/modfile.input).parseFile":[[0]],"(*golang.org/x/mod/modfile.input).parseLine":[[0],[0]],"(*golang.org/x/mod/modfile.input).parseLineBlock":[[0],[0,1,2,3]],"(*golang.org/x/mod/modfile.input).parseStmt":[[0]],"(*golang.org/x/mod/modfile.input).peek":[[0],[0]],"(*golang.org/x/mod/modfile.input).peekPrefix":[[0],[]],"(*golang.org/x/mod/modfile.input).peekRune":[[0],[0]],"(*golang.org/x/mod/modfile.input).readRune":[[0],[0]],"(*golang.org/x/mod/modfile.input).readToken":[[0]],"(*golang.org/x/mod/modfile.input).startToken":[[0]],"(*golang.org/x/mod/modfile.printer).Bytes":[[0],[0]],"(*golang.org/x/mod/modfile.printer).Cap":[[0],[]],"(*golang.org/x/mod/modfile.printer).Grow":[[0]],"(*golang.org/x/mod/modfile.printer).Len":[[0],[0]],"(*golang.org/x/mod/modfile.printer).Next":[[0,1],[0,1]],"(*golang.org/x/mod/modfile.printer).Read":[[0],[],[]],"(*golang.org/x/mod/modfile.printer).ReadByte":[[0],[0],[]],"(*golang.org/x/mod/modfile.printer).ReadBytes":[[0],[],[]],"(*golang.org/x/mod/modfile.printer).ReadFrom":[[0],[],[1]],"(*golang.org/x/mod/modfile.printer).ReadRune":[[0],[0],[],[]],"(*golang.org/x/mod/modfile.printer).ReadString":[[0],[0],[]],"(*golang.org/x/mod/modfile.printer).Reset":[[0]],"(*golang.org/x/mod/modfile.printer).String":[[0],[0]],"(*golang.org/x/mod/modfile.printer).Truncate":[[0]],"(*golang.org/x/mod/modfile.printer).UnreadByte":[[0],[]],"(*golang.org/x/mod/modfile.printer).UnreadRune":[[0],[]],"(*golang.org/x/mod/modfile.printer).Write":[[0],[],[]],"(*golang.org/x/mod/modfile.printer).WriteByte":[[0],[]],"(*golang.org/x/mod/modfile.printer).WriteRune":[[0],[],[]],"(*golang.org/x/mod/modfile.printer).WriteString":[[0],[],[]],"(*golang.org/x/mod/modfile.printer).WriteTo":[[0],[],[1]],"(*golang.org/x/mod/modfile.printer).empty":[[0],[0]],"(*golang.org/x/mod/modfile.printer).expr":[[0,1]],"(*golang.org/x/mod/modfile.printer).file":[[0,1]],"(*golang.org/x/mod/modfile.printer).grow":[[0],[0]],"(*golang.org/x/mod/modfile.printer).indent":[[0],[]],"(*golang.org/x/mod/modfile.printer).newline":[[0]],"(*golang.org/x/mod/modfile.printer).printf":[[0]],"(*golang.org/x/mod/modfile.printer).readSlice":[[0],[0],[]],"(*golang.org/x/mod/modfile.printer).tokens":[[0]],"(*golang.org/x/mod/modfile.printer).trim":[[0]],"(*golang.org/x/mod/modfile.printer).tryGrowByReslice":[[0],[],[]],"(*golang.org/x/mod/module.InvalidPathError).Error":[[0],[]],"(*golang.org/x/mod/module.InvalidPathError).Unwrap":[[0],[0]],"(*golang.org/x/mod/module.InvalidVersionError).Error":[[0],[]],"(*golang.org/x/mod/module.InvalidVersionError).Unwrap":[[0],[0]],"(*golang.org/x/mod/module.InvalidVersionError).noun":[[0],[]],"(*golang.org/x/mod/module.ModuleError).Error":[[0],[]],"(*golang.org/x/mod/module.ModuleError).Unwrap":[[0],[0]],"(*golang.org/x/mod/module.Version).String":[[0],[]],"(*golang.org/x/mod/semver.ByVersion).Len":[[0],[]],"(*golang.org/x/mod/semver.ByVersion).Less":[[0],[]],"(*golang.org/x/mod/semver.ByVersion).Swap":[[0]],"(*golang.org/x/mod/sumdb/storage.Mem).ReadOnly":[[0],[]],"(*golang.org/x/mod/sumdb/storage.Mem).ReadOnly$1":[[]],"(*golang.org/x/mod/sumdb/storage.Mem).ReadWrite":[[0],[]],"(*golang.org/x/mod/sumdb/storage.Mem).ReadWrite$1":[[]],"(*golang.org/x/mod/sumdb/storage.memTx).BufferWrites":[[0,1],[]],"(*golang.org/x/mod/sumdb/storage.memTx).ReadValue":[[0],[0,2],[]],"(*golang.org/x/mod/sumdb/storage.memTx).ReadValues":[[0],[0,2],[]],"(*golang.org/x/mod/sumdb/tlog.Hash).MarshalJSON":[[0],[],[]],"(*golang.org/x/mod/sumdb/tlog.Hash).String":[[0],[]],"(*golang.org/x/mod/sumdb/tlog.Hash).UnmarshalJSON":[[0],[]],"(*golang.org/x/mod/sumdb/tlog.HashReaderFunc).ReadHashes":[[0],[],[]],"(*golang.org/x/mod/sumdb/tlog.Tile).Path":[[0],[]],"(*golang.org/x/mod/sumdb/tlog.badPathError).Error":[[0],[]],"(*golang.org/x/mod/sumdb/tlog.tileHashReader).ReadHashes":[[0],[],[0,1]],"(*golang.org/x/mod/zip.CheckedFiles).Err":[[0],[]],"(*golang.org/x/mod/zip.FileError).Error":[[0],[]],"(*golang.org/x/mod/zip.FileError).Unwrap":[[0],[]],"(*golang.org/x/mod/zip.FileErrorList).Error":[[0],[]],"(*golang.org/x/mod/zip.UnrecognizedVCSError).Error":[[0],[]],"(*golang.org/x/mod/zip.dirFile).Lstat":[[0],[],[]],"(*golang.org/x/mod/zip.dirFile).Open":[[0],[],[]],"(*golang.org/x/mod/zip.dirFile).Path":[[0],[]],"(*golang.org/x/mod/zip.zipError).Error":[[0],[]],"(*golang.org/x/mod/zip.zipError).Unwrap":[[0],[0]],"(*golang.org/x/mod/zip.zipFile).Lstat":[[0],[],[]],"(*golang.org/x/mod/zip.zipFile).Open":[[0],[],[]],"(*golang.org/x/mod/zip.zipFile).Path":[[0],[]],"(*golang.org/x/sys/cpu.bigEndian).Uint32":[[0],[1]],"(*golang.org/x/sys/cpu.bigEndian).Uint64":[[0],[1]],"(*golang.org/x/sys/cpu.littleEndian).Uint32":[[0],[1]],"(*golang.org/x/sys/cpu.littleEndian).Uint64":[[0],[1]],"(*golang.org/x/sys/unix.Cmsghdr).SetLen":[[0,1]],"(*golang.org/x/sys/unix.Cmsghdr).data":[[0],[0,1]],"(*golang.org/x/sys/unix.FdSet).Clear":[[0]],"(*golang.org/x/sys/unix.FdSet).IsSet":[[0],[0,1]],"(*golang.org/x/sys/unix.FdSet).Set":[[0]],"(*golang.org/x/sys/unix.FdSet).Zero":[[0]],"(*golang.org/x/sys/unix.Iovec).SetLen":[[0,1]],"(*golang.org/x/sys/unix.Msghdr).SetControllen":[[0,1]],"(*golang.org/x/sys/unix.Msghdr).SetIovlen":[[0,1]],"(*golang.org/x/sys/unix.SockaddrCtl).sockaddr":[[0],[0],[],[]],"(*golang.org/x/sys/unix.SockaddrDatalink).sockaddr":[[0],[0],[],[]],"(*golang.org/x/sys/unix.SockaddrInet4).sockaddr":[[0],[0],[0],[]],"(*golang.org/x/sys/unix.SockaddrInet6).sockaddr":[[0],[0],[0],[]],"(*golang.org/x/sys/unix.SockaddrUnix).sockaddr":[[0],[0],[0],[]],"(*golang.org/x/sys/unix.SockaddrVM).sockaddr":[[0],[0],[],[]],"(*golang.org/x/sys/unix.Timespec).Nano":[[0],[0]],"(*golang.org/x/sys/unix.Timespec).Unix":[[0],[0],[0]],"(*golang.org/x/sys/unix.Timeval).Nano":[[0],[0]],"(*golang.org/x/sys/unix.Timeval).Unix":[[0],[0],[0]],"(*golang.org/x/sys/unix.WaitStatus).Continued":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).CoreDump":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).ExitStatus":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).Exited":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).Killed":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).Signal":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).Signaled":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).StopSignal":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).Stopped":[[0],[]],"(*golang.org/x/sys/unix.WaitStatus).TrapCause":[[0],[]],"(*golang.org/x/sys/unix.mmapper).Mmap":[[0],[],[]],"(*golang.org/x/sys/unix.mmapper).Munmap":[[0],[]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).add":[[0]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).has":[[0],[0,1]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).intersection":[[0],[]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).isEmpty":[[0],[]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).keepArchSpecific":[[0],[0,1]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).keepArchSpecific$bound":[[0]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).keepCommon":[[0],[0,1]],"(*golang.org/x/sys/unix/internal/mkmerge.codeSet).keepCommon$bound":[[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).DLLFuncName":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).DLLName":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).HasStringParam":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).HelperCallParamList":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).HelperName":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).HelperParamList":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).HelperParamList$1":[[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).IsUTF16":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).MaybeAbsent":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).ParamCount":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).ParamList":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).ParamList$1":[[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).ParamPrintList":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).ParamPrintList$1":[[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).StrconvFunc":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).StrconvType":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).Syscall":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).SyscallParamCount":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Fn).SyscallParamList":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).BoolPointerTmpVarCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).BoolTmpVarCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).HelperType":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).IsError":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).SliceTmpVarCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).StringTmpVarCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).SyscallArgList":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).TmpVarCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).TmpVarHelperCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).TmpVarReadbackCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Param).tmpVar":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).ErrorVarName":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).List":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).List$1":[[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).PrintList":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).PrintList$1":[[]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).SetErrorCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).SetReturnValuesCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).ToParams":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Rets).useLongHandleErrorCode":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).DLLs":[[0],[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).ExternalImport":[[0,1]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).Generate":[[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).Generate$1":[[0]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).Import":[[0,1]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).IsStdRepo":[[0],[0],[]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).ParseFile":[[0],[1]],"(*golang.org/x/sys/windows/mkwinsyscall.Source).ParseFile$1":[[]],"(*golang.org/x/tools/benchmark/parse.Benchmark).String":[[0],[]],"(*golang.org/x/tools/benchmark/parse.Benchmark).parseMeasurement":[[0,1]],"(*golang.org/x/tools/cmd/auth/authtest.Cred).Apply":[[0],[]],"(*golang.org/x/tools/cmd/auth/authtest.Cred).String":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaAllocedBytesPerOp":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaAllocsPerOp":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaMBPerS":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaNsPerOp":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.BenchCmp).Measured":[[0],[1]],"(*golang.org/x/tools/cmd/benchcmp.BenchCmp).Name":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.BenchCmp).String":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaAllocedBytesPerOp).Len":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaAllocedBytesPerOp).Less":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaAllocedBytesPerOp).Swap":[[0]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaAllocsPerOp).Len":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaAllocsPerOp).Less":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaAllocsPerOp).Swap":[[0]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaMBPerS).Len":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaMBPerS).Less":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaMBPerS).Swap":[[0]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaNsPerOp).Len":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaNsPerOp).Less":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByDeltaNsPerOp).Swap":[[0]],"(*golang.org/x/tools/cmd/benchcmp.ByParseOrder).Len":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByParseOrder).Less":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.ByParseOrder).Swap":[[0]],"(*golang.org/x/tools/cmd/benchcmp.Delta).Changed":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.Delta).Float64":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.Delta).Multiple":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.Delta).Percent":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.Delta).String":[[0],[]],"(*golang.org/x/tools/cmd/benchcmp.Delta).mag":[[0],[]],"(*golang.org/x/tools/cmd/bundle.flagFunc).Set":[[0],[]],"(*golang.org/x/tools/cmd/bundle.flagFunc).String":[[0],[]],"(*golang.org/x/tools/cmd/callgraph.Edge).Column":[[0],[0]],"(*golang.org/x/tools/cmd/callgraph.Edge).Description":[[0],[]],"(*golang.org/x/tools/cmd/callgraph.Edge).Dynamic":[[0],[]],"(*golang.org/x/tools/cmd/callgraph.Edge).Filename":[[0],[0]],"(*golang.org/x/tools/cmd/callgraph.Edge).Line":[[0],[0]],"(*golang.org/x/tools/cmd/callgraph.Edge).Offset":[[0],[0]],"(*golang.org/x/tools/cmd/callgraph.Edge).pos":[[0],[0]],"(*golang.org/x/tools/cmd/compilebench.compile).long":[[0],[]],"(*golang.org/x/tools/cmd/compilebench.compile).run":[[0],[]],"(*golang.org/x/tools/cmd/compilebench.goBuild).long":[[0],[]],"(*golang.org/x/tools/cmd/compilebench.goBuild).run":[[0],[]],"(*golang.org/x/tools/cmd/compilebench.link).long":[[0],[]],"(*golang.org/x/tools/cmd/compilebench.link).run":[[0],[]],"(*golang.org/x/tools/cmd/compilebench.size).long":[[0],[]],"(*golang.org/x/tools/cmd/compilebench.size).run":[[0],[]],"(*golang.org/x/tools/cmd/cover.File).Visit":[[0,1],[0,1]],"(*golang.org/x/tools/cmd/cover.File).addCounters":[[0,1,2,3],[3]],"(*golang.org/x/tools/cmd/cover.File).addImport":[[0],[0,1]],"(*golang.org/x/tools/cmd/cover.File).addVariables":[[0]],"(*golang.org/x/tools/cmd/cover.File).endsBasicSourceBlock":[[0],[]],"(*golang.org/x/tools/cmd/cover.File).index":[[0],[]],"(*golang.org/x/tools/cmd/cover.File).intLiteral":[[0],[]],"(*golang.org/x/tools/cmd/cover.File).newCounter":[[0,1,2,3],[]],"(*golang.org/x/tools/cmd/cover.File).offset":[[0],[0,1]],"(*golang.org/x/tools/cmd/cover.File).print":[[0]],"(*golang.org/x/tools/cmd/cover.File).statementBoundary":[[0],[1]],"(*golang.org/x/tools/cmd/cover.FuncExtent).coverage":[[0],[1],[1]],"(*golang.org/x/tools/cmd/cover.FuncVisitor).Visit":[[0,1],[0,1]],"(*golang.org/x/tools/cmd/cover.blockSlice).Len":[[0],[]],"(*golang.org/x/tools/cmd/cover.blockSlice).Less":[[0],[]],"(*golang.org/x/tools/cmd/cover.blockSlice).Swap":[[0]],"(*golang.org/x/tools/cmd/cover.funcLitFinder).Visit":[[0,1],[0]],"(*golang.org/x/tools/cmd/cover.funcLitFinder).found":[[0],[0]],"(*golang.org/x/tools/cmd/eg.pkgsImporter).Import":[[0],[],[1]],"(*golang.org/x/tools/cmd/fiximports.listPackage).IsCommand":[[0],[0]],"(*golang.org/x/tools/cmd/fiximports.packageError).Error":[[0],[]],"(*golang.org/x/tools/cmd/godex.printer).print":[[0,1]],"(*golang.org/x/tools/cmd/godex.printer).printDecl":[[0]],"(*golang.org/x/tools/cmd/godex.printer).printFunc":[[0,2]],"(*golang.org/x/tools/cmd/godex.printer).printGccgoExtra":[[0]],"(*golang.org/x/tools/cmd/godex.printer).printObj":[[0,1]],"(*golang.org/x/tools/cmd/godex.printer).printPackage":[[0]],"(*golang.org/x/tools/cmd/godex.printer).printPackage$1":[],"(*golang.org/x/tools/cmd/godex.printer).printPackage$2":[],"(*golang.org/x/tools/cmd/godex.printer).printPackage$3":[],"(*golang.org/x/tools/cmd/godex.printer).printf":[[0]],"(*golang.org/x/tools/cmd/godex.printer).writeSignature":[[0,2]],"(*golang.org/x/tools/cmd/godex.printer).writeSignatureInternal":[[0,2]],"(*golang.org/x/tools/cmd/godex.printer).writeTuple":[[0]],"(*golang.org/x/tools/cmd/godex.printer).writeType":[[0,2]],"(*golang.org/x/tools/cmd/godex.printer).writeTypeInternal":[[0,2]],"(*golang.org/x/tools/cmd/godex.protector).Import":[[0],[1],[]],"(*golang.org/x/tools/cmd/godex.protector).Import$1":[],"(*golang.org/x/tools/cmd/godex.sourceImporter).Import":[[0],[],[]],"(*golang.org/x/tools/cmd/godex.tryImporters).Import":[[0],[1],[]],"(*golang.org/x/tools/cmd/guru.byFuncPos).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.byFuncPos).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.byFuncPos).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.byNamePos).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.byNamePos).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.byNamePos).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.byPos).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.byPos).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.byPos).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.byPosAndString).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.byPosAndString).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.byPosAndString).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.byRef).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.byRef).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.byRef).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.byTypeString).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.byTypeString).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.byTypeString).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.calleesSSAResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.calleesSSAResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.calleesTypesResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.calleesTypesResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.callersResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.callersResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.callstackResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.callstackResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.definitionResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.definitionResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.describePackageResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.describePackageResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.describeStmtResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.describeStmtResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.describeTypeResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.describeTypeResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.describeUnknownResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.describeUnknownResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.describeValueResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.describeValueResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.freevarsResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.freevarsResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.implementsResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.implementsResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.implementsResult).PrintPlain$1":[],"(*golang.org/x/tools/cmd/guru.membersByPosAndString).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.membersByPosAndString).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.membersByPosAndString).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.peersResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.peersResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.pointstoResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.pointstoResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.queryPos).objectString":[[0],[]],"(*golang.org/x/tools/cmd/guru.queryPos).typeString":[[0],[]],"(*golang.org/x/tools/cmd/guru.referrersInitialResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.referrersInitialResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.referrersPackageResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.referrersPackageResult).JSON$1":[],"(*golang.org/x/tools/cmd/guru.referrersPackageResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.referrersPackageResult).PrintPlain$1":[],"(*golang.org/x/tools/cmd/guru.referrersPackageResult).foreachRef":[[0]],"(*golang.org/x/tools/cmd/guru.referrersPackageResult).foreachRef$1":[],"(*golang.org/x/tools/cmd/guru.sorterrorType).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.sorterrorType).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.sorterrorType).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.typesByString).Len":[[0],[]],"(*golang.org/x/tools/cmd/guru.typesByString).Less":[[0],[]],"(*golang.org/x/tools/cmd/guru.typesByString).Swap":[[0]],"(*golang.org/x/tools/cmd/guru.whatResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.whatResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/guru.whicherrsResult).JSON":[[0],[]],"(*golang.org/x/tools/cmd/guru.whicherrsResult).PrintPlain":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.config).action":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.config).build":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.config).cleanTemp":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.config).gen":[[0,1,2]],"(*golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.config).minimize":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.config).perform":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.config).run":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.TunableParams).DisableDefer":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.TunableParams).DisableMethodCalls":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.TunableParams).DisableRecursiveCalls":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.TunableParams).DisableReflectionCalls":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.TunableParams).DisableTakeAddr":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.TunableParams).LimitInputs":[[0,1],[1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.TunableParams).LimitOutputs":[[0,1],[1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.addrTakenHow).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.addrTakenHow).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).Declare":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).GenElemRef":[[0],[],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).GenValue":[[0],[],[3]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).HasPointer":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).IsControl":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).NumElements":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).QualName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).String":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).TypeName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.funcdef).complexityMeasure":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenFunc":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenFunc$1":[],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenMapKeyType":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenPair":[[0],[6]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenParm":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenReturn":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenValue":[[0,2],[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenValue$1":[[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).beginPackage":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).callerFile":[[0],[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).callerPkg":[[0],[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).checkerFile":[[0],[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).checkerPkg":[[0],[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitAddrTakenHelpers":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitAssignFuncs":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitCaller":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitCheckReturnsInCaller":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitCheckReturnsInCaller$1":[[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitChecker":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitCompareFunc":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitDeferChecks":[[0,1],[4]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitDerefFuncs":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitGenValFuncs":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitGlobalVars":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitMain":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitMapKeyTmps":[[0,1],[4]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitNewFuncs":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitParamChecks":[[0,1],[4],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitParamElemCheck":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitRecursiveCall":[[0,1],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitReturn":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitStructAndArrayDefs":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitUtils":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).emitVarAssign":[[0,3],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).eqFuncRef":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).floatBits":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).genAddrTaken":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).genAllocFunc":[[0,1],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).genAssignFunc":[[0,1],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).genGlobVar":[[0,1],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).genParamDerefFunc":[[0,1],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).genParamRef":[[0,1],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).genReturnAssign":[[0,2]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).intBits":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).intFlavor":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).makeTypedefParm":[[0],[2]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).openOutputFile":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).openOutputFile$1":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).popTunables":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).precludeSelectedTypes":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).pushTunables":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).redistributeFraction":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).redistributeFraction$1":[[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).redistributeFraction$2":[],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).utilsPkg":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.isBlank).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.isBlank).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.isGenValFunc).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.isGenValFunc).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).Declare":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).GenElemRef":[[0],[],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).GenValue":[[0],[],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).HasPointer":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).IsControl":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).NumElements":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).QualName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).String":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).TypeName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).Declare":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).GenElemRef":[[0],[2],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).GenValue":[[0],[],[3]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).HasPointer":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).IsControl":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).NumElements":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).QualName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).String":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).TypeName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).genRandNum":[[0],[],[2]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).Declare":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).GenElemRef":[[0],[2],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).GenValue":[[0],[],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).HasPointer":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).IsControl":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).NumElements":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).QualName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).String":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).TypeName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.skipCompare).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.skipCompare).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).Declare":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).GenElemRef":[[0],[2],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).GenValue":[[0],[],[3]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).HasPointer":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).IsControl":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).NumElements":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).QualName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).String":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).TypeName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).Declare":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).FieldName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).GenElemRef":[[0],[],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).GenValue":[[0],[],[3]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).HasPointer":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).IsControl":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).NumElements":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).QualName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).String":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).TypeName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).AddrTaken":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).Declare":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).GenElemRef":[[0],[],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).GenValue":[[0],[],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).HasPointer":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).IsBlank":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).IsControl":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).IsGenVal":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).NumElements":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).QualName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).SetAddrTaken":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).SetBlank":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).SetIsGenVal":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).SetSkipCompare":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).SkipCompare":[[0],[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).String":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).TypeName":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).Check":[[0]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).Checkpoint":[[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).Equal":[[0],[0,1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).Float32":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).Intn":[[0],[1]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).NormFloat64":[[0],[]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).captureCall":[[0,1,2]],"(*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.wraprand).emitCalls":[[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Cpu).GoString":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Cpu).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).AddLoad":[[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).AddSection":[[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).AddSegment":[[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Close":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).DWARF":[[0],[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).DerivedCopy":[[0],[0,1,2]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).FileSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).HdrSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).ImportedLibraries":[[0],[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).ImportedSymbols":[[0],[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).LoadAlign":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).LoadSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Section":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Segment":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).SymbolSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).TOCSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).parseSymtab":[[0],[],[1,5]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).pushSection":[[0,1],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FatFile).Close":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).AddLoad":[[0,1]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).AddSection":[[0,1]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).AddSegment":[[0,1]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).Close":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).DWARF":[[0],[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).DWARF$1":[[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).DWARF$2":[[],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).DerivedCopy":[[0],[0,1,2]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).FileSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).HdrSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).ImportedLibraries":[[0],[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).ImportedSymbols":[[0],[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).LoadAlign":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).LoadSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).Section":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).Segment":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).SymbolSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).TOCSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).parseSymtab":[[0],[],[1,5]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.File).pushSection":[[0,1],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileHeader).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).AddLoad":[[0,1]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).AddSection":[[0,1]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).AddSegment":[[0,1]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).DerivedCopy":[[0],[0,1,2]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).FileSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).HdrSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).LoadAlign":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).LoadSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).SymbolSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FileTOC).TOCSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FormatError).Error":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.FormatError).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.HdrType).GoString":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.HdrType).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).Copy":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).Raw":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).Command":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).GoString":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Copy":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Raw":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Nlist64).Put32":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Nlist64).Put64":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM).GoString":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM64).GoString":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM64).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeGeneric).GoString":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeGeneric).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeX86_64).GoString":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeX86_64).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).Command":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).Data":[[0],[],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).Open":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).Put32":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).Put64":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).PutData":[[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).PutRelocs":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).PutUncompressedData":[[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).ReadAt":[[0],[],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).UncompressedSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).CopyZeroed":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Data":[[0],[],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).LoadSize":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Open":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Put32":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Put64":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).ReadAt":[[0],[],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).UncompressedSize":[[0],[1,2]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SegmentHeader).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SegmentHeader).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SegmentHeader).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SegmentHeader).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).String":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).Copy":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).LoadSize":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).Put":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).String":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).Command":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).GoString":[[0],[0]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).Put":[[0],[]],"(*golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).String":[[0],[0]],"(*golang.org/x/tools/cmd/ssadump.stringListValue).Get":[[0],[0]],"(*golang.org/x/tools/cmd/ssadump.stringListValue).Set":[[0,1],[]],"(*golang.org/x/tools/cmd/ssadump.stringListValue).String":[[0],[]],"(*golang.org/x/tools/cmd/stringer.File).genDecl":[[0,1],[]],"(*golang.org/x/tools/cmd/stringer.File).genDecl$bound":[[]],"(*golang.org/x/tools/cmd/stringer.Generator).Printf":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).addPackage":[[0,1]],"(*golang.org/x/tools/cmd/stringer.Generator).buildMap":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).buildMultipleRuns":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).buildOneRun":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).createIndexAndNameDecl":[[0],[],[]],"(*golang.org/x/tools/cmd/stringer.Generator).declareIndexAndNameVar":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).declareIndexAndNameVars":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).declareNameVars":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).format":[[0],[0]],"(*golang.org/x/tools/cmd/stringer.Generator).generate":[[0]],"(*golang.org/x/tools/cmd/stringer.Generator).parsePackage":[[0]],"(*golang.org/x/tools/cmd/stringer.Value).String":[[0],[0]],"(*golang.org/x/tools/cmd/stringer.byValue).Len":[[0],[]],"(*golang.org/x/tools/cmd/stringer.byValue).Less":[[0],[]],"(*golang.org/x/tools/cmd/stringer.byValue).Swap":[[0]],"(*golang.org/x/tools/container/intsets.Sparse).AppendTo":[[0],[1]],"(*golang.org/x/tools/container/intsets.Sparse).AppendTo$1":[],"(*golang.org/x/tools/container/intsets.Sparse).BitString":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).BitString$1":[],"(*golang.org/x/tools/container/intsets.Sparse).Clear":[[0]],"(*golang.org/x/tools/container/intsets.Sparse).Copy":[[0,1]],"(*golang.org/x/tools/container/intsets.Sparse).Difference":[[0,1]],"(*golang.org/x/tools/container/intsets.Sparse).DifferenceWith":[[0]],"(*golang.org/x/tools/container/intsets.Sparse).Equals":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).GoString":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).Has":[[0],[0,1]],"(*golang.org/x/tools/container/intsets.Sparse).Insert":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).Intersection":[[0,1]],"(*golang.org/x/tools/container/intsets.Sparse).IntersectionWith":[[0]],"(*golang.org/x/tools/container/intsets.Sparse).Intersects":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).IsEmpty":[[0],[0]],"(*golang.org/x/tools/container/intsets.Sparse).Len":[[0],[0]],"(*golang.org/x/tools/container/intsets.Sparse).LowerBound":[[0],[0,1]],"(*golang.org/x/tools/container/intsets.Sparse).Max":[[0],[0]],"(*golang.org/x/tools/container/intsets.Sparse).Min":[[0],[0]],"(*golang.org/x/tools/container/intsets.Sparse).Remove":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).String":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).String$1":[],"(*golang.org/x/tools/container/intsets.Sparse).SubsetOf":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).SymmetricDifference":[[0,1,2]],"(*golang.org/x/tools/container/intsets.Sparse).SymmetricDifferenceWith":[[0]],"(*golang.org/x/tools/container/intsets.Sparse).TakeMin":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).Union":[[0,1,2]],"(*golang.org/x/tools/container/intsets.Sparse).UnionWith":[[0],[]],"(*golang.org/x/tools/container/intsets.Sparse).block":[[0],[0]],"(*golang.org/x/tools/container/intsets.Sparse).check":[[0],[0]],"(*golang.org/x/tools/container/intsets.Sparse).discardTail":[[0,1]],"(*golang.org/x/tools/container/intsets.Sparse).first":[[0],[0]],"(*golang.org/x/tools/container/intsets.Sparse).forEach":[[0]],"(*golang.org/x/tools/container/intsets.Sparse).init":[[0]],"(*golang.org/x/tools/container/intsets.Sparse).insertBlockBefore":[[0],[0,1]],"(*golang.org/x/tools/container/intsets.Sparse).next":[[0],[1]],"(*golang.org/x/tools/container/intsets.Sparse).prev":[[0],[1]],"(*golang.org/x/tools/container/intsets.Sparse).removeBlock":[[0],[0,1]],"(*golang.org/x/tools/container/intsets.block).empty":[[0],[]],"(*golang.org/x/tools/container/intsets.block).forEach":[[0]],"(*golang.org/x/tools/container/intsets.block).has":[[0],[0,1]],"(*golang.org/x/tools/container/intsets.block).insert":[[0],[]],"(*golang.org/x/tools/container/intsets.block).len":[[0],[0]],"(*golang.org/x/tools/container/intsets.block).lowerBound":[[0],[0,1],[]],"(*golang.org/x/tools/container/intsets.block).max":[[0],[0]],"(*golang.org/x/tools/container/intsets.block).min":[[0],[0]],"(*golang.org/x/tools/container/intsets.block).remove":[[0],[]],"(*golang.org/x/tools/cover.Profile).Boundaries":[[0],[0]],"(*golang.org/x/tools/cover.Profile).Boundaries$1":[[0,1,2]],"(*golang.org/x/tools/cover.blocksByStart).Len":[[0],[]],"(*golang.org/x/tools/cover.blocksByStart).Less":[[0],[]],"(*golang.org/x/tools/cover.blocksByStart).Swap":[[0]],"(*golang.org/x/tools/cover.boundariesByPos).Len":[[0],[]],"(*golang.org/x/tools/cover.boundariesByPos).Less":[[0],[]],"(*golang.org/x/tools/cover.boundariesByPos).Swap":[[0]],"(*golang.org/x/tools/cover.byFileName).Len":[[0],[]],"(*golang.org/x/tools/cover.byFileName).Less":[[0],[]],"(*golang.org/x/tools/cover.byFileName).Swap":[[0]],"(*golang.org/x/tools/go/analysis.Analyzer).String":[[0],[0]],"(*golang.org/x/tools/go/analysis.CycleInRequiresGraphError).Error":[[0],[0]],"(*golang.org/x/tools/go/analysis.Pass).ReportRangef":[[0]],"(*golang.org/x/tools/go/analysis.Pass).Reportf":[[0]],"(*golang.org/x/tools/go/analysis.Pass).Reportf$bound":[],"(*golang.org/x/tools/go/analysis.Pass).String":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.JSONTree).Add":[[0]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.JSONTree).Print":[[0]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.triState).Get":[[0],[0]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.triState).IsBoolFlag":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.triState).Set":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.triState).String":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.triState).isTrue":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).Get":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).IsBoolFlag":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).Set":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).String":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).String":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).allObjectFacts":[[0],[0]],"(*golang.org/x/tools/go/analysis/internal/checker.action).allObjectFacts$bound":[[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).allPackageFacts":[[0],[0]],"(*golang.org/x/tools/go/analysis/internal/checker.action).allPackageFacts$bound":[[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).exec":[[0]],"(*golang.org/x/tools/go/analysis/internal/checker.action).execOnce":[[0]],"(*golang.org/x/tools/go/analysis/internal/checker.action).execOnce$1":[],"(*golang.org/x/tools/go/analysis/internal/checker.action).execOnce$2":[],"(*golang.org/x/tools/go/analysis/internal/checker.action).execOnce$3":[[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).execOnce$bound":[],"(*golang.org/x/tools/go/analysis/internal/checker.action).exportObjectFact":[[0]],"(*golang.org/x/tools/go/analysis/internal/checker.action).exportObjectFact$bound":[],"(*golang.org/x/tools/go/analysis/internal/checker.action).exportPackageFact":[[0]],"(*golang.org/x/tools/go/analysis/internal/checker.action).exportPackageFact$bound":[],"(*golang.org/x/tools/go/analysis/internal/checker.action).importObjectFact":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).importObjectFact$bound":[[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).importPackageFact":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/checker.action).importPackageFact$bound":[[]],"(*golang.org/x/tools/go/analysis/internal/checker.typeParseError).Error":[[0],[0]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).AllObjectFacts":[[0],[0]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).AllPackageFacts":[[0],[0]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).Encode":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).Encode$1":[[]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ExportObjectFact":[[0]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ExportObjectFact$bound":[],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ExportPackageFact":[[0]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ExportPackageFact$bound":[],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ImportObjectFact":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ImportObjectFact$bound":[[]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ImportPackageFact":[[0],[]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).ImportPackageFact$bound":[[]],"(*golang.org/x/tools/go/analysis/internal/facts.Set).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/buildtag.checker).comment":[[0,1,2]],"(*golang.org/x/tools/go/analysis/passes/buildtag.checker).file":[[0,1,2]],"(*golang.org/x/tools/go/analysis/passes/buildtag.checker).finish":[[0]],"(*golang.org/x/tools/go/analysis/passes/buildtag.checker).goBuildLine":[[0,1,2]],"(*golang.org/x/tools/go/analysis/passes/buildtag.checker).init":[[0,1]],"(*golang.org/x/tools/go/analysis/passes/buildtag.checker).plusBuildLine":[[0,1,2]],"(*golang.org/x/tools/go/analysis/passes/cgocall.importerFunc).Import":[[0],[1],[]],"(*golang.org/x/tools/go/analysis/passes/copylock.typePath).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/ctrlflow.CFGs).FuncDecl":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/ctrlflow.CFGs).FuncLit":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/ctrlflow.CFGs).buildDecl":[[0]],"(*golang.org/x/tools/go/analysis/passes/ctrlflow.CFGs).callMayReturn":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/ctrlflow.CFGs).callMayReturn$bound":[[]],"(*golang.org/x/tools/go/analysis/passes/ctrlflow.noReturn).AFact":[[0]],"(*golang.org/x/tools/go/analysis/passes/ctrlflow.noReturn).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/fieldalignment.gcSizes).Alignof":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/fieldalignment.gcSizes).Sizeof":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/fieldalignment.gcSizes).ptrdata":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/findcall.foundFact).AFact":[[0]],"(*golang.org/x/tools/go/analysis/passes/findcall.foundFact).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/ifaceassert.tpWalker).isParameterized":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/ifaceassert.tpWalker).isParameterized$1":[],"(*golang.org/x/tools/go/analysis/passes/nilness.nilness).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/pkgfact.pairsFact).AFact":[[0]],"(*golang.org/x/tools/go/analysis/passes/pkgfact.pairsFact).String":[[0],[0]],"(*golang.org/x/tools/go/analysis/passes/printf.Kind).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/printf.Result).Kind":[[0],[0,1]],"(*golang.org/x/tools/go/analysis/passes/printf.argMatcher).match":[[0],[0]],"(*golang.org/x/tools/go/analysis/passes/printf.formatState).parseFlags":[[0]],"(*golang.org/x/tools/go/analysis/passes/printf.formatState).parseIndex":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/printf.formatState).parseNum":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/printf.formatState).parsePrecision":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/printf.formatState).scanNum":[[0]],"(*golang.org/x/tools/go/analysis/passes/printf.isWrapper).AFact":[[0]],"(*golang.org/x/tools/go/analysis/passes/printf.isWrapper).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/printf.stringSet).Set":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/printf.stringSet).String":[[0],[]],"(*golang.org/x/tools/go/analysis/passes/structtag.namesSeen).Get":[[0],[0,1,2,3],[]],"(*golang.org/x/tools/go/analysis/passes/structtag.namesSeen).Set":[[0]],"(*golang.org/x/tools/go/analysis/passes/unreachable.deadState).findDead":[[0,1]],"(*golang.org/x/tools/go/analysis/passes/unreachable.deadState).findLabels":[[0,1]],"(*golang.org/x/tools/go/analysis/passes/unusedresult.stringSetFlag).Set":[[0,1],[]],"(*golang.org/x/tools/go/analysis/passes/unusedresult.stringSetFlag).String":[[0],[0]],"(*golang.org/x/tools/go/analysis/passes/usesgenerics.featuresFact).AFact":[[0]],"(*golang.org/x/tools/go/analysis/passes/usesgenerics.featuresFact).String":[[0],[]],"(*golang.org/x/tools/go/analysis/unitchecker.importerFunc).Import":[[0],[1],[]],"(*golang.org/x/tools/go/ast/astutil.Cursor).Delete":[[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).Index":[[0],[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).InsertAfter":[[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).InsertBefore":[[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).Name":[[0],[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).Node":[[0],[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).Parent":[[0],[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).Replace":[[0]],"(*golang.org/x/tools/go/ast/astutil.Cursor).field":[[0],[0]],"(*golang.org/x/tools/go/ast/astutil.application).apply":[[0,1,2,3,4]],"(*golang.org/x/tools/go/ast/astutil.application).applyList":[[0]],"(*golang.org/x/tools/go/ast/astutil.byPos).Len":[[0],[]],"(*golang.org/x/tools/go/ast/astutil.byPos).Less":[[0],[]],"(*golang.org/x/tools/go/ast/astutil.byPos).Swap":[[0]],"(*golang.org/x/tools/go/ast/astutil.tokenNode).End":[[0],[]],"(*golang.org/x/tools/go/ast/astutil.tokenNode).Pos":[[0],[]],"(*golang.org/x/tools/go/ast/astutil.visitFn).Visit":[[0],[]],"(*golang.org/x/tools/go/ast/inspector.Inspector).Nodes":[[0]],"(*golang.org/x/tools/go/ast/inspector.Inspector).Preorder":[[0]],"(*golang.org/x/tools/go/ast/inspector.Inspector).WithStack":[[0]],"(*golang.org/x/tools/go/buildutil.TagsFlag).Get":[[0],[0]],"(*golang.org/x/tools/go/buildutil.TagsFlag).Set":[[0,1],[1]],"(*golang.org/x/tools/go/buildutil.TagsFlag).String":[[0],[]],"(*golang.org/x/tools/go/buildutil.byName).Len":[[0],[]],"(*golang.org/x/tools/go/buildutil.byName).Less":[[0],[]],"(*golang.org/x/tools/go/buildutil.byName).Swap":[[0]],"(*golang.org/x/tools/go/buildutil.fakeDirInfo).IsDir":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeDirInfo).ModTime":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeDirInfo).Mode":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeDirInfo).Name":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeDirInfo).Size":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeDirInfo).Sys":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeFileInfo).IsDir":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeFileInfo).ModTime":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeFileInfo).Mode":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeFileInfo).Name":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeFileInfo).Size":[[0],[]],"(*golang.org/x/tools/go/buildutil.fakeFileInfo).Sys":[[0],[]],"(*golang.org/x/tools/go/callgraph.Edge).Description":[[0],[]],"(*golang.org/x/tools/go/callgraph.Edge).Pos":[[0],[]],"(*golang.org/x/tools/go/callgraph.Edge).String":[[0],[]],"(*golang.org/x/tools/go/callgraph.Graph).CreateNode":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph.Graph).DeleteNode":[[0]],"(*golang.org/x/tools/go/callgraph.Graph).DeleteSyntheticNodes":[[0]],"(*golang.org/x/tools/go/callgraph.Node).String":[[0],[]],"(*golang.org/x/tools/go/callgraph.Node).deleteIns":[[0]],"(*golang.org/x/tools/go/callgraph.Node).deleteOuts":[[0]],"(*golang.org/x/tools/go/callgraph/rta.rta).addEdge":[[0,2]],"(*golang.org/x/tools/go/callgraph/rta.rta).addInvokeEdge":[[0,2]],"(*golang.org/x/tools/go/callgraph/rta.rta).addReachable":[[0,1]],"(*golang.org/x/tools/go/callgraph/rta.rta).addRuntimeType":[[0,1]],"(*golang.org/x/tools/go/callgraph/rta.rta).implementations":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/rta.rta).implementations$1":[],"(*golang.org/x/tools/go/callgraph/rta.rta).interfaces":[[0],[]],"(*golang.org/x/tools/go/callgraph/rta.rta).interfaces$1":[],"(*golang.org/x/tools/go/callgraph/rta.rta).visitAddrTakenFunc":[[0,1]],"(*golang.org/x/tools/go/callgraph/rta.rta).visitDynCall":[[0,1]],"(*golang.org/x/tools/go/callgraph/rta.rta).visitFunc":[[0,1]],"(*golang.org/x/tools/go/callgraph/rta.rta).visitInvoke":[[0,1]],"(*golang.org/x/tools/go/callgraph/vta.builder).addInFlowAliasEdges":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).addInFlowEdge":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).call":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).closure":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).extract":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).field":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).fieldAddr":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).fun":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).index":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).indexAddr":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).instr":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).lookup":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).mapUpdate":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).next":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).nodeFromVal":[[0],[1]],"(*golang.org/x/tools/go/callgraph/vta.builder).panic":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).phi":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).representative":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta.builder).rtrn":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).selekt":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).send":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).tassert":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).unop":[[0]],"(*golang.org/x/tools/go/callgraph/vta.builder).visit":[[0]],"(*golang.org/x/tools/go/callgraph/vta.channelElem).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.channelElem).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.constant).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.constant).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.constructor).callees":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta.constructor).constrct":[[0]],"(*golang.org/x/tools/go/callgraph/vta.constructor).construct":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.field).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.field).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.function).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.function).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.global).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.global).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.indexedLocal).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.indexedLocal).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.local).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.local).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.mapKey).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.mapKey).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.mapValue).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.mapValue).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.nestedPtrFunction).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.nestedPtrFunction).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.nestedPtrInterface).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.nestedPtrInterface).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.panicArg).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.panicArg).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.pointer).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.pointer).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.recoverReturn).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.recoverReturn).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.sliceElem).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta.sliceElem).Type":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Clone":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Create":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Empty":[[0],[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Insert":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).InsertWith":[[0],[0,2,3,4]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Intersect":[[0],[0,1,2]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).IntersectWith":[[0],[0,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Merge":[[0],[0,1,2]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).MergeWith":[[0],[0,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).MutEmpty":[[0],[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Remove":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Rescope":[[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Scope":[[0],[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).Update":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).clone":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).collide":[[0],[0,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).create":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).insert":[[0],[0,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).intersect":[[0],[0,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).join":[[0],[0,1,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).merge":[[0],[0,2,3]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).mkBranch":[[0],[0,1,2,3,4]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).mkLeaf":[[0],[0,1,2]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).remove":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Map).DeepEqual":[[0],[1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Lookup":[[0],[],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Range":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Scope":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Size":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Map).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.MutMap).Insert":[[0,1,2],[0,1,2]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.MutMap).Intersect":[[0,1],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.MutMap).Merge":[[0,1],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.MutMap).MergeWith":[[0,2],[0,2]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.MutMap).Remove":[[0],[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.MutMap).Update":[[0,1,2],[0,1,2]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.Scope).String":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.branch).deepEqual":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.branch).find":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.branch).nodeImpl":[[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.branch).size":[[0],[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.branch).visit":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.empty).deepEqual":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.empty).find":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.empty).nodeImpl":[[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.empty).size":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.empty).visit":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.leaf).deepEqual":[[0],[0,1]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.leaf).find":[[0],[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.leaf).nodeImpl":[[0]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.leaf).size":[[0],[]],"(*golang.org/x/tools/go/callgraph/vta/internal/trie.leaf).visit":[[0],[]],"(*golang.org/x/tools/go/cfg.Block).Return":[[0],[0]],"(*golang.org/x/tools/go/cfg.Block).String":[[0],[]],"(*golang.org/x/tools/go/cfg.CFG).Format":[[0],[]],"(*golang.org/x/tools/go/cfg.builder).add":[[0,1]],"(*golang.org/x/tools/go/cfg.builder).branchStmt":[[0,1]],"(*golang.org/x/tools/go/cfg.builder).forStmt":[[0]],"(*golang.org/x/tools/go/cfg.builder).ifelse":[[0,1,2]],"(*golang.org/x/tools/go/cfg.builder).jump":[[0,1]],"(*golang.org/x/tools/go/cfg.builder).labeledBlock":[[0,1],[0,1]],"(*golang.org/x/tools/go/cfg.builder).newBlock":[[0,1],[1]],"(*golang.org/x/tools/go/cfg.builder).rangeStmt":[[0]],"(*golang.org/x/tools/go/cfg.builder).selectStmt":[[0]],"(*golang.org/x/tools/go/cfg.builder).stmt":[[0,1]],"(*golang.org/x/tools/go/cfg.builder).stmtList":[[0]],"(*golang.org/x/tools/go/cfg.builder).switchStmt":[[0]],"(*golang.org/x/tools/go/cfg.builder).typeCaseBody":[[0,2]],"(*golang.org/x/tools/go/cfg.builder).typeSwitchStmt":[[0]],"(*golang.org/x/tools/go/expect.tokens).Consume":[[0],[0]],"(*golang.org/x/tools/go/expect.tokens).Errorf":[[0,1,2]],"(*golang.org/x/tools/go/expect.tokens).Init":[[0],[0]],"(*golang.org/x/tools/go/expect.tokens).Init$1":[],"(*golang.org/x/tools/go/expect.tokens).Pos":[[0],[0]],"(*golang.org/x/tools/go/expect.tokens).Skip":[[0],[]],"(*golang.org/x/tools/go/expect.tokens).Token":[[0],[0]],"(*golang.org/x/tools/go/expect.tokens).TokenString":[[0],[0]],"(*golang.org/x/tools/go/gcexportdata.importer).Import":[[0],[],[1]],"(*golang.org/x/tools/go/gcexportdata.importer).ImportFrom":[[0],[],[1]],"(*golang.org/x/tools/go/internal/gccgoimporter.GccgoInstallation).GetImporter":[[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.GccgoInstallation).InitFromDriver":[[0],[1,2]],"(*golang.org/x/tools/go/internal/gccgoimporter.GccgoInstallation).SearchPaths":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.importError).Error":[[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).error":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).errorf":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).expect":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).expectEOL":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).expectKeyword":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).getPkg":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).init":[[0,3]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).initScanner":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).initScanner$1":[],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).maybeCreatePackage":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).next":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseArrayOrSliceType":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseChanType":[[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseConst":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseConstValue":[[0],[0],[0,1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseConversion":[[0],[],[0,1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseDirective":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseExportedName":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseField":[[0],[0,1],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseFunc":[[0],[1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseFunctionType":[[0],[1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseInitDataDirective":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseInitDataDirective$1":[],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseInt":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseInt64":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseInterfaceType":[[0],[1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseMapType":[[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseName":[[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseNamedType":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parsePackage":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parsePackageInit":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseParam":[[0],[1],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseParamList":[[0],[1],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parsePointerType":[[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseQualifiedName":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseQualifiedNameStr":[[0],[0,1],[1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseResultList":[[0],[1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseSavedType":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseSavedType$1":[],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseString":[[0],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseStructType":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseType":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseTypeAfterAngle":[[0],[0,1],[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseTypeExtended":[[0],[],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseTypeSpec":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseTypes":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseTypes$1":[],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseUnquotedQualifiedName":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseUnquotedString":[[0],[]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).parseVar":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).reserve":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).skipInlineBody":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).skipInlineBody$1":[],"(*golang.org/x/tools/go/internal/gccgoimporter.parser).update":[[0]],"(*golang.org/x/tools/go/internal/gccgoimporter.seekerReadAt).ReadAt":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.anyType).String":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.anyType).Underlying":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.byPath).Len":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.byPath).Less":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.byPath).Swap":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.dddSlice).String":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.dddSlice).Underlying":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).bool":[[0],[1]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).doTyp":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).doTyp$1":[],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).exportPath":[[0],[1]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).flush":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).int64":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).localIdent":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).mpfloat":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).mpint":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).param":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).paramList":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).pkg":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).pos":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).posV0":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).posV1":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).qualifiedIdent":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).setPkg":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).signature":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).startType":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).string":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).tag":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).tparamList":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).typ":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).typeList":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).uint64":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).value":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).writeIndex":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).writeIndex$1":[[]],"(*golang.org/x/tools/go/internal/gcimporter.exportWriter).writeIndex$2":[[]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).assocMethods":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).bool":[[0],[1]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).field":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).fieldList":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).fieldName":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).fileLine":[[0],[0,1],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).float":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).iface":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).index":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).int":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).int64":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).marker":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).method":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).obj":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).paramList":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).pkg":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).pos":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).qualifiedName":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).rawByte":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).rawInt64":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).rawStringln":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).string":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).tag":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).tracef":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).typ":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.exporter).value":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.fakeFileSet).pos":[[0,1],[0,1,2]],"(*golang.org/x/tools/go/internal/gcimporter.fakeFileSet).setLines":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.fakeFileSet).setLines$1":[],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).doDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).doDecl$1":[],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).exportName":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).newWriter":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).pushDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).stringOff":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).trace":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.iexporter).typOff":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.iimporter).doDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.iimporter).doDecl$1":[],"(*golang.org/x/tools/go/internal/gcimporter.iimporter).pkgAt":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.iimporter).stringAt":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.iimporter).trace":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.iimporter).typAt":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/gcimporter.importError).Error":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).bool":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).byte":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).declare":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).doType":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).doType$1":[],"(*golang.org/x/tools/go/internal/gcimporter.importReader).ident":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).int64":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).kind":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).mpfloat":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).mpint":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).obj":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).param":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).paramList":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).pkg":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).pos":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).posv0":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).posv1":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).qualifiedIdent":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).signature":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).string":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).tparamList":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).typ":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).uint64":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importReader).value":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).ReadByte":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).declare":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).field":[[0],[0,1],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).fieldList":[[0],[0,1],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).fieldName":[[0],[0,1],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).float":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).int":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).int64":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).marker":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).method":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/gcimporter.importer).methodList":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/gcimporter.importer).obj":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).param":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).paramList":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).path":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).pkg":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).pos":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).qualifiedName":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).rawByte":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).rawInt64":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).rawStringln":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).record":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.importer).string":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.importer).tagOrIndex":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.importer).typ":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.importer).value":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.intReader).uint64":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Bytes":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Cap":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Grow":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Len":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Next":[[0,1],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Read":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).ReadByte":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).ReadBytes":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).ReadFrom":[[0],[],[1]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).ReadRune":[[0],[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).ReadString":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Reset":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).String":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Truncate":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).UnreadByte":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).UnreadRune":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).Write":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).WriteByte":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).WriteRune":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).WriteString":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).WriteTo":[[0],[],[1]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).empty":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).grow":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).int64":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).readSlice":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).tryGrowByReslice":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.intWriter).uint64":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.internalError).Error":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.methodsByName).Len":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.methodsByName).Less":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.methodsByName).Swap":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.objQueue).empty":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.objQueue).popHead":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.objQueue).pushTail":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).error":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).errorf":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).expect":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).expectKeyword":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).expectSpecial":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).getPkg":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/gcimporter.parser).init":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).init$1":[],"(*golang.org/x/tools/go/internal/gcimporter.parser).next":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseArrayType":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseBasicType":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseChanType":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseConstDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseDotIdent":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseExport":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseExportedName":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseField":[[0],[0,1],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseFunc":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseFuncDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseImportDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseInt":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseInterfaceType":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseMapType":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseMethodDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseName":[[0],[0,1],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseNumber":[[0],[],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parsePackageID":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parsePackageName":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseParameter":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseParameters":[[0],[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseQualifiedName":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseSignature":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseStructType":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseType":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseTypeDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.parser).parseVarDecl":[[0]],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).later":[[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).newReader":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).objDictIdx":[[0],[]],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).objIdx":[[0],[0,1],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).objIdx$1":[],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).objIdx$2":[],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).pkgIdx":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).posBaseIdx":[[0],[0,1]],"(*golang.org/x/tools/go/internal/gcimporter.pkgReader).typIdx":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/gcimporter.reader).doPkg":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).doTyp":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).ident":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).interfaceType":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).localIdent":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).method":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).obj":[[0],[],[]],"(*golang.org/x/tools/go/internal/gcimporter.reader).param":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).params":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).pkg":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).pos":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).posBase":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).qualifiedIdent":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).selector":[[0],[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).signature":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/internal/gcimporter.reader).structType":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).typ":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).typInfo":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).typeParamNames":[[0],[0]],"(*golang.org/x/tools/go/internal/gcimporter.reader).typeParamNames$1":[],"(*golang.org/x/tools/go/internal/gcimporter.reader).unionType":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.CodeObj).Marker":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.CodeObj).Value":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.CodeType).Marker":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.CodeType).Value":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.CodeVal).Marker":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.CodeVal).Value":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Bool":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Code":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Int":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Int64":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Len":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Reloc":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).String":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Strings":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Sync":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Uint":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Uint64":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).Value":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).bigFloat":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).bigInt":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).checkErr":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).rawReloc":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).rawUvarint":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).rawVarint":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.Decoder).scalar":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Bool":[[0],[1]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Code":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Flush":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Int":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Int64":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Len":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Reloc":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).String":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Strings":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Sync":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Uint":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Uint64":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).Value":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).bigFloat":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).bigInt":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).checkErr":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).rawReloc":[[0,1,2],[]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).rawUvarint":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).rawVarint":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.Encoder).scalar":[[0]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).AbsIdx":[[0],[0,2]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).DataIdx":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).Fingerprint":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).NewDecoder":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).NewDecoderRaw":[[0],[0,1,2]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).NumElems":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).PeekObj":[[0],[0,1],[0,1],[]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).PeekPkgPath":[[0],[0,1]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).PkgPath":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).StringIdx":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).SyncMarkers":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.PkgDecoder).TotalElems":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.PkgEncoder).DumpTo":[[0],[]],"(*golang.org/x/tools/go/internal/pkgbits.PkgEncoder).DumpTo$1":[],"(*golang.org/x/tools/go/internal/pkgbits.PkgEncoder).NewEncoder":[[0],[0,1]],"(*golang.org/x/tools/go/internal/pkgbits.PkgEncoder).NewEncoderRaw":[[0],[0,1]],"(*golang.org/x/tools/go/internal/pkgbits.PkgEncoder).StringIdx":[[0],[0,1]],"(*golang.org/x/tools/go/internal/pkgbits.PkgEncoder).SyncMarkers":[[0],[0]],"(*golang.org/x/tools/go/internal/pkgbits.SyncMarker).String":[[0],[]],"(*golang.org/x/tools/go/loader.Config).CreateFromFilenames":[[0,1,2]],"(*golang.org/x/tools/go/loader.Config).CreateFromFiles":[[0,1,2]],"(*golang.org/x/tools/go/loader.Config).FromArgs":[[0,1],[1],[1]],"(*golang.org/x/tools/go/loader.Config).Import":[[0]],"(*golang.org/x/tools/go/loader.Config).ImportWithTests":[[0]],"(*golang.org/x/tools/go/loader.Config).Load":[[0],[0],[0]],"(*golang.org/x/tools/go/loader.Config).Load$1":[],"(*golang.org/x/tools/go/loader.Config).Load$2":[],"(*golang.org/x/tools/go/loader.Config).ParseFile":[[0],[],[1,2]],"(*golang.org/x/tools/go/loader.Config).addImport":[[0]],"(*golang.org/x/tools/go/loader.Config).build":[[0],[0]],"(*golang.org/x/tools/go/loader.Config).fset":[[0],[0]],"(*golang.org/x/tools/go/loader.Config).parsePackageFiles":[[0],[],[1]],"(*golang.org/x/tools/go/loader.PackageInfo).ObjectOf":[[0],[0,1]],"(*golang.org/x/tools/go/loader.PackageInfo).String":[[0],[0]],"(*golang.org/x/tools/go/loader.PackageInfo).TypeOf":[[0],[0,1]],"(*golang.org/x/tools/go/loader.PackageInfo).appendError":[[0,1]],"(*golang.org/x/tools/go/loader.PackageInfo).appendError$bound":[],"(*golang.org/x/tools/go/loader.Program).InitialPackages":[[0],[0]],"(*golang.org/x/tools/go/loader.Program).Package":[[0],[0,1]],"(*golang.org/x/tools/go/loader.Program).PathEnclosingInterval":[[0],[0],[0],[]],"(*golang.org/x/tools/go/loader.byImportPath).Len":[[0],[]],"(*golang.org/x/tools/go/loader.byImportPath).Less":[[0],[]],"(*golang.org/x/tools/go/loader.byImportPath).Swap":[[0]],"(*golang.org/x/tools/go/loader.closure).Import":[[0],[1],[1]],"(*golang.org/x/tools/go/loader.importInfo).Complete":[[0,1]],"(*golang.org/x/tools/go/loader.importInfo).awaitCompletion":[[0]],"(*golang.org/x/tools/go/loader.importer).addFiles":[[0]],"(*golang.org/x/tools/go/loader.importer).doImport":[[0],[0,1,2],[0,1,2]],"(*golang.org/x/tools/go/loader.importer).findPackage":[[0],[0,1,2,3],[0,1,2,3]],"(*golang.org/x/tools/go/loader.importer).findPath":[[0],[1]],"(*golang.org/x/tools/go/loader.importer).findPath$1":[[0,1]],"(*golang.org/x/tools/go/loader.importer).importAll":[[0],[0,2,3,4],[0,2,3,4]],"(*golang.org/x/tools/go/loader.importer).load":[[0],[0,1]],"(*golang.org/x/tools/go/loader.importer).newPackageInfo":[[0],[0,1,2]],"(*golang.org/x/tools/go/loader.importer).startLoad":[[0],[0,1]],"(*golang.org/x/tools/go/loader.importer).startLoad$1":[],"(*golang.org/x/tools/go/packages.Error).Error":[[0],[]],"(*golang.org/x/tools/go/packages.LoadMode).String":[[0],[]],"(*golang.org/x/tools/go/packages.Package).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/go/packages.Package).String":[[0],[0]],"(*golang.org/x/tools/go/packages.Package).UnmarshalJSON":[[0],[1]],"(*golang.org/x/tools/go/packages.goTooOldError).Error":[[0],[0]],"(*golang.org/x/tools/go/packages.golistState).addNeededOverlayPackages":[[0],[0,1,2]],"(*golang.org/x/tools/go/packages.golistState).adhocPackage":[[0],[0,2],[0,2]],"(*golang.org/x/tools/go/packages.golistState).cfgInvocation":[[0],[0]],"(*golang.org/x/tools/go/packages.golistState).createDriverResponse":[[0],[0],[0,1]],"(*golang.org/x/tools/go/packages.golistState).createDriverResponse$1":[[]],"(*golang.org/x/tools/go/packages.golistState).createDriverResponse$2":[[]],"(*golang.org/x/tools/go/packages.golistState).determineRootDirs":[[0],[0],[0]],"(*golang.org/x/tools/go/packages.golistState).determineRootDirs$1":[],"(*golang.org/x/tools/go/packages.golistState).determineRootDirs$2":[],"(*golang.org/x/tools/go/packages.golistState).determineRootDirsGOPATH":[[0],[0],[]],"(*golang.org/x/tools/go/packages.golistState).determineRootDirsModules":[[0],[],[0]],"(*golang.org/x/tools/go/packages.golistState).getEnv":[[0],[0],[0]],"(*golang.org/x/tools/go/packages.golistState).getEnv$1":[],"(*golang.org/x/tools/go/packages.golistState).getGoVersion":[[0],[0],[0]],"(*golang.org/x/tools/go/packages.golistState).getGoVersion$1":[],"(*golang.org/x/tools/go/packages.golistState).getPkgPath":[[0],[0,1],[],[0]],"(*golang.org/x/tools/go/packages.golistState).invokeGo":[[0],[],[0,1,2]],"(*golang.org/x/tools/go/packages.golistState).invokeGo$1":[[]],"(*golang.org/x/tools/go/packages.golistState).mustGetEnv":[[0],[0]],"(*golang.org/x/tools/go/packages.golistState).processGolistOverlay":[[0],[0,1],[0,1],[0,1]],"(*golang.org/x/tools/go/packages.golistState).processGolistOverlay$1":[[]],"(*golang.org/x/tools/go/packages.golistState).processGolistOverlay$2":[[0,1],[]],"(*golang.org/x/tools/go/packages.golistState).resolveImport":[[0],[0,1,2],[0]],"(*golang.org/x/tools/go/packages.golistState).runContainsQueries":[[0],[0,2]],"(*golang.org/x/tools/go/packages.golistState).shouldAddFilenameFromError":[[0],[1]],"(*golang.org/x/tools/go/packages.golistState).writeOverlays":[[0],[],[],[]],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$1":[],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$2":[],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$3":[],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$4":[],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$5":[],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$6":[],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$7":[],"(*golang.org/x/tools/go/packages.golistState).writeOverlays$8":[],"(*golang.org/x/tools/go/packages.importerFunc).Import":[[0],[1],[]],"(*golang.org/x/tools/go/packages.loader).loadFromExportData":[[0],[0,1],[1]],"(*golang.org/x/tools/go/packages.loader).loadFromExportData$1":[],"(*golang.org/x/tools/go/packages.loader).loadPackage":[[0]],"(*golang.org/x/tools/go/packages.loader).loadPackage$1":[],"(*golang.org/x/tools/go/packages.loader).loadPackage$2":[[0],[0]],"(*golang.org/x/tools/go/packages.loader).loadRecursive":[[0]],"(*golang.org/x/tools/go/packages.loader).loadRecursive$1":[],"(*golang.org/x/tools/go/packages.loader).loadRecursive$1$1":[],"(*golang.org/x/tools/go/packages.loader).parseFile":[[0],[0,1],[0,1]],"(*golang.org/x/tools/go/packages.loader).parseFiles":[[0],[],[]],"(*golang.org/x/tools/go/packages.loader).parseFiles$1":[],"(*golang.org/x/tools/go/packages.loader).refine":[[0],[0,2],[1]],"(*golang.org/x/tools/go/packages.loader).refine$1":[[0]],"(*golang.org/x/tools/go/packages.loader).refine$2":[],"(*golang.org/x/tools/go/packages.loaderPackage).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/go/packages.loaderPackage).String":[[0],[0]],"(*golang.org/x/tools/go/packages.loaderPackage).UnmarshalJSON":[[0],[1]],"(*golang.org/x/tools/go/packages.responseDeduper).addAll":[[0,1]],"(*golang.org/x/tools/go/packages.responseDeduper).addPackage":[[0,1]],"(*golang.org/x/tools/go/packages.responseDeduper).addRoot":[[0,1]],"(*golang.org/x/tools/go/packages/gopackages.application).DetailedHelp":[[0]],"(*golang.org/x/tools/go/packages/gopackages.application).Name":[[0],[]],"(*golang.org/x/tools/go/packages/gopackages.application).Run":[[0],[0,2]],"(*golang.org/x/tools/go/packages/gopackages.application).Run$1":[],"(*golang.org/x/tools/go/packages/gopackages.application).ShortHelp":[[0],[]],"(*golang.org/x/tools/go/packages/gopackages.application).Usage":[[0],[]],"(*golang.org/x/tools/go/packages/gopackages.application).print":[[0]],"(*golang.org/x/tools/go/packages/gopackages.stringListValue).Get":[[0],[0]],"(*golang.org/x/tools/go/packages/gopackages.stringListValue).Set":[[0,1],[]],"(*golang.org/x/tools/go/packages/gopackages.stringListValue).String":[[0],[]],"(*golang.org/x/tools/go/packages/packagestest.Exported).Cleanup":[[0]],"(*golang.org/x/tools/go/packages/packagestest.Exported).Cleanup$1":[[]],"(*golang.org/x/tools/go/packages/packagestest.Exported).Expect":[[0],[0,1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).File":[[0],[0,1,2]],"(*golang.org/x/tools/go/packages/packagestest.Exported).FileContents":[[0],[0,1],[1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).FileContents$bound":[[0],[0]],"(*golang.org/x/tools/go/packages/packagestest.Exported).Mark":[[0]],"(*golang.org/x/tools/go/packages/packagestest.Exported).Mark$bound":[],"(*golang.org/x/tools/go/packages/packagestest.Exported).Temp":[[0],[0]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter":[[0],[],[1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$1":[[0],[1],[]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$10":[[1],[1],[1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$11":[[1],[1],[1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$12":[[1],[1],[1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$13":[[],[1],[0,1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$14":[[1],[1],[]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$2":[[],[1],[]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$3":[[],[1],[]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$4":[[1],[1],[0,1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$5":[[1],[1],[0,1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$6":[[1],[1],[0,1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$7":[[1],[1],[0,1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$8":[[1],[1],[1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).buildConverter$9":[[1],[1],[1]],"(*golang.org/x/tools/go/packages/packagestest.Exported).getMarkers":[[0],[0]],"(*golang.org/x/tools/go/packages/packagestest.Exported).getNotes":[[0],[0]],"(*golang.org/x/tools/go/packages/packagestest.Exported).rangeConverter":[[0],[0,2],[2],[0,1,2]],"(*golang.org/x/tools/go/packages/packagestest.gopath).Filename":[[0],[1,2,3]],"(*golang.org/x/tools/go/packages/packagestest.gopath).Finalize":[[0],[]],"(*golang.org/x/tools/go/packages/packagestest.gopath).Name":[[0],[]],"(*golang.org/x/tools/go/packages/packagestest.modules).Filename":[[0],[1,2,3]],"(*golang.org/x/tools/go/packages/packagestest.modules).Finalize":[[0],[1]],"(*golang.org/x/tools/go/packages/packagestest.modules).Name":[[0],[]],"(*golang.org/x/tools/go/pointer.Config).AddExtendedQuery":[[0],[],[1,2]],"(*golang.org/x/tools/go/pointer.Config).AddIndirectQuery":[[0]],"(*golang.org/x/tools/go/pointer.Config).AddQuery":[[0]],"(*golang.org/x/tools/go/pointer.Config).prog":[[0],[0]],"(*golang.org/x/tools/go/pointer.Label).Path":[[0],[]],"(*golang.org/x/tools/go/pointer.Label).Pos":[[0],[]],"(*golang.org/x/tools/go/pointer.Label).ReflectType":[[0],[]],"(*golang.org/x/tools/go/pointer.Label).String":[[0],[]],"(*golang.org/x/tools/go/pointer.Label).Value":[[0],[]],"(*golang.org/x/tools/go/pointer.Pointer).DynamicTypes":[[0],[]],"(*golang.org/x/tools/go/pointer.Pointer).MayAlias":[[0],[]],"(*golang.org/x/tools/go/pointer.Pointer).PointsTo":[[0],[]],"(*golang.org/x/tools/go/pointer.Pointer).String":[[0],[]],"(*golang.org/x/tools/go/pointer.PointsToSet).DynamicTypes":[[0],[]],"(*golang.org/x/tools/go/pointer.PointsToSet).Intersects":[[0],[]],"(*golang.org/x/tools/go/pointer.PointsToSet).Labels":[[0],[]],"(*golang.org/x/tools/go/pointer.PointsToSet).String":[[0],[]],"(*golang.org/x/tools/go/pointer.addrConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.addrConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.addrConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.addrConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.addrConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.analysis).addConstraint":[[0,1]],"(*golang.org/x/tools/go/pointer.analysis).addLabel":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).addNodes":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).addOneNode":[[0,1,3],[]],"(*golang.org/x/tools/go/pointer.analysis).addWork":[[0]],"(*golang.org/x/tools/go/pointer.analysis).addressOf":[[0,2,3]],"(*golang.org/x/tools/go/pointer.analysis).callEdge":[[0]],"(*golang.org/x/tools/go/pointer.analysis).computeTrackBits":[[0]],"(*golang.org/x/tools/go/pointer.analysis).copy":[[0,1,2]],"(*golang.org/x/tools/go/pointer.analysis).copyElems":[[0,3]],"(*golang.org/x/tools/go/pointer.analysis).dumpSolution":[[0]],"(*golang.org/x/tools/go/pointer.analysis).enclosingObj":[[0],[1]],"(*golang.org/x/tools/go/pointer.analysis).endObject":[[0],[1,2,3]],"(*golang.org/x/tools/go/pointer.analysis).evalExtendedQuery":[[0,2,3],[1],[2]],"(*golang.org/x/tools/go/pointer.analysis).findIntrinsic":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.analysis).flatten":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.analysis).funcParams":[[0],[1]],"(*golang.org/x/tools/go/pointer.analysis).funcResults":[[0],[1]],"(*golang.org/x/tools/go/pointer.analysis).genAppend":[[0,1]],"(*golang.org/x/tools/go/pointer.analysis).genBuiltinCall":[[0,1]],"(*golang.org/x/tools/go/pointer.analysis).genCall":[[0,2]],"(*golang.org/x/tools/go/pointer.analysis).genConv":[[0,1]],"(*golang.org/x/tools/go/pointer.analysis).genDynamicCall":[[0,3,4]],"(*golang.org/x/tools/go/pointer.analysis).genFunc":[[0,1]],"(*golang.org/x/tools/go/pointer.analysis).genInstr":[[0,1,2]],"(*golang.org/x/tools/go/pointer.analysis).genInvoke":[[0,3,4]],"(*golang.org/x/tools/go/pointer.analysis).genInvokeReflectType":[[0,3,4]],"(*golang.org/x/tools/go/pointer.analysis).genLoad":[[0,2,3,4]],"(*golang.org/x/tools/go/pointer.analysis).genMethodsOf":[[0,1]],"(*golang.org/x/tools/go/pointer.analysis).genOffsetAddr":[[0,2,3,4]],"(*golang.org/x/tools/go/pointer.analysis).genRootCalls":[[0],[0]],"(*golang.org/x/tools/go/pointer.analysis).genStaticCall":[[0,2,3,4]],"(*golang.org/x/tools/go/pointer.analysis).genStore":[[0,2,3,4]],"(*golang.org/x/tools/go/pointer.analysis).generate":[[0]],"(*golang.org/x/tools/go/pointer.analysis).hvn":[[0]],"(*golang.org/x/tools/go/pointer.analysis).isReflect":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).isTaggedObject":[[0],[0]],"(*golang.org/x/tools/go/pointer.analysis).labelFor":[[0],[0]],"(*golang.org/x/tools/go/pointer.analysis).load":[[0,1,2,3]],"(*golang.org/x/tools/go/pointer.analysis).makeCGNode":[[0,1,2,3],[1,2,3]],"(*golang.org/x/tools/go/pointer.analysis).makeFunctionObject":[[0,1,2],[]],"(*golang.org/x/tools/go/pointer.analysis).makeRtype":[[0,1],[0,1]],"(*golang.org/x/tools/go/pointer.analysis).makeTagged":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).nextNode":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).objectNode":[[0,2],[0,2]],"(*golang.org/x/tools/go/pointer.analysis).offsetAddr":[[0,2,3,4]],"(*golang.org/x/tools/go/pointer.analysis).offsetOf":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).onlineCopy":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).onlineCopyN":[[0],[3]],"(*golang.org/x/tools/go/pointer.analysis).processNewConstraints":[[0]],"(*golang.org/x/tools/go/pointer.analysis).renumber":[[0]],"(*golang.org/x/tools/go/pointer.analysis).rtypeTaggedValue":[[0],[0]],"(*golang.org/x/tools/go/pointer.analysis).setValueNode":[[0,1,2]],"(*golang.org/x/tools/go/pointer.analysis).shouldTrack":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.analysis).shouldUseContext":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).showCounts":[[0]],"(*golang.org/x/tools/go/pointer.analysis).sizeof":[[0],[]],"(*golang.org/x/tools/go/pointer.analysis).solve":[[0]],"(*golang.org/x/tools/go/pointer.analysis).solveConstraints":[[0]],"(*golang.org/x/tools/go/pointer.analysis).store":[[0,1,2,3]],"(*golang.org/x/tools/go/pointer.analysis).taggedValue":[[0],[0],[1],[0]],"(*golang.org/x/tools/go/pointer.analysis).typeAssert":[[0,1,2,3,4]],"(*golang.org/x/tools/go/pointer.analysis).valueNode":[[0,1],[0,1]],"(*golang.org/x/tools/go/pointer.analysis).valueOffsetNode":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.analysis).warnf":[[0,1]],"(*golang.org/x/tools/go/pointer.callsite).String":[[0],[]],"(*golang.org/x/tools/go/pointer.callsite).pos":[[0],[0]],"(*golang.org/x/tools/go/pointer.cgnode).String":[[0],[]],"(*golang.org/x/tools/go/pointer.cgnode).contour":[[0],[]],"(*golang.org/x/tools/go/pointer.copyConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.copyConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.copyConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.copyConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.copyConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.fieldInfo).path":[[0],[]],"(*golang.org/x/tools/go/pointer.hvn).addEdge":[[0]],"(*golang.org/x/tools/go/pointer.hvn).addImplicitEdge":[[0]],"(*golang.org/x/tools/go/pointer.hvn).checkCanonical":[[0]],"(*golang.org/x/tools/go/pointer.hvn).coalesce":[[0]],"(*golang.org/x/tools/go/pointer.hvn).find":[[0],[0]],"(*golang.org/x/tools/go/pointer.hvn).labelSCC":[[0]],"(*golang.org/x/tools/go/pointer.hvn).markIndirect":[[0]],"(*golang.org/x/tools/go/pointer.hvn).markIndirectNodes":[[0]],"(*golang.org/x/tools/go/pointer.hvn).nextLabel":[[0],[0]],"(*golang.org/x/tools/go/pointer.hvn).ref":[[0],[1]],"(*golang.org/x/tools/go/pointer.hvn).simplify":[[0]],"(*golang.org/x/tools/go/pointer.hvn).visit":[[0]],"(*golang.org/x/tools/go/pointer.invokeConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.invokeConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.invokeConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.invokeConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.invokeConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.loadConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.loadConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.loadConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.loadConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.loadConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.nodeid).String":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).AppendTo":[[0],[1]],"(*golang.org/x/tools/go/pointer.nodeset).BitString":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).Clear":[[0]],"(*golang.org/x/tools/go/pointer.nodeset).Copy":[[0,1]],"(*golang.org/x/tools/go/pointer.nodeset).Difference":[[0,1]],"(*golang.org/x/tools/go/pointer.nodeset).DifferenceWith":[[0]],"(*golang.org/x/tools/go/pointer.nodeset).Equals":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).GoString":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).Has":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.nodeset).Insert":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).Intersection":[[0,1]],"(*golang.org/x/tools/go/pointer.nodeset).IntersectionWith":[[0]],"(*golang.org/x/tools/go/pointer.nodeset).Intersects":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).IsEmpty":[[0],[0]],"(*golang.org/x/tools/go/pointer.nodeset).Len":[[0],[0]],"(*golang.org/x/tools/go/pointer.nodeset).LowerBound":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.nodeset).Max":[[0],[0]],"(*golang.org/x/tools/go/pointer.nodeset).Min":[[0],[0]],"(*golang.org/x/tools/go/pointer.nodeset).Remove":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).String":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).SubsetOf":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).SymmetricDifference":[[0,1,2]],"(*golang.org/x/tools/go/pointer.nodeset).SymmetricDifferenceWith":[[0]],"(*golang.org/x/tools/go/pointer.nodeset).TakeMin":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).Union":[[0,1,2]],"(*golang.org/x/tools/go/pointer.nodeset).UnionWith":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).add":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).addAll":[[0],[]],"(*golang.org/x/tools/go/pointer.nodeset).block":[[0],[0]],"(*golang.org/x/tools/go/pointer.nodeset).check":[[0],[0]],"(*golang.org/x/tools/go/pointer.nodeset).discardTail":[[0,1]],"(*golang.org/x/tools/go/pointer.nodeset).first":[[0],[0]],"(*golang.org/x/tools/go/pointer.nodeset).forEach":[[0]],"(*golang.org/x/tools/go/pointer.nodeset).init":[[0]],"(*golang.org/x/tools/go/pointer.nodeset).insertBlockBefore":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.nodeset).next":[[0],[1]],"(*golang.org/x/tools/go/pointer.nodeset).prev":[[0],[1]],"(*golang.org/x/tools/go/pointer.nodeset).removeBlock":[[0],[0,1]],"(*golang.org/x/tools/go/pointer.offsetAddrConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.offsetAddrConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.offsetAddrConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.offsetAddrConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.offsetAddrConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVBytesConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVBytesConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVBytesConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVBytesConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVBytesConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVCallConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVCallConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVCallConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVCallConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVCallConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVElemConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVElemConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVElemConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVElemConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVElemConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVIndexConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVIndexConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVIndexConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVIndexConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVIndexConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVInterfaceConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVInterfaceConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVInterfaceConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVInterfaceConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVInterfaceConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVMapIndexConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVMapIndexConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVMapIndexConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVMapIndexConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVMapIndexConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVMapKeysConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVMapKeysConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVMapKeysConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVMapKeysConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVMapKeysConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVRecvConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVRecvConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVRecvConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVRecvConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVRecvConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVSendConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVSendConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVSendConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVSendConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVSendConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVSetBytesConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVSetBytesConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVSetBytesConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVSetBytesConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVSetBytesConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVSetMapIndexConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVSetMapIndexConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVSetMapIndexConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVSetMapIndexConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVSetMapIndexConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rVSliceConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rVSliceConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rVSliceConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rVSliceConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rVSliceConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectChanOfConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectChanOfConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectChanOfConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectChanOfConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectChanOfConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectIndirectConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectIndirectConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectIndirectConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectIndirectConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectIndirectConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectMakeChanConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectMakeChanConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectMakeChanConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectMakeChanConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectMakeChanConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectMakeMapConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectMakeMapConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectMakeMapConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectMakeMapConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectMakeMapConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectMakeSliceConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectMakeSliceConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectMakeSliceConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectMakeSliceConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectMakeSliceConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectNewConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectNewConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectNewConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectNewConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectNewConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectPtrToConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectPtrToConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectPtrToConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectPtrToConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectPtrToConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectSliceOfConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectSliceOfConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectSliceOfConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectSliceOfConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectSliceOfConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectTypeOfConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectTypeOfConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectTypeOfConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectTypeOfConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectTypeOfConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.reflectZeroConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.reflectZeroConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.reflectZeroConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.reflectZeroConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.reflectZeroConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeElemConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rtypeElemConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeElemConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rtypeElemConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rtypeElemConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeFieldByNameConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rtypeFieldByNameConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeFieldByNameConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rtypeFieldByNameConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rtypeFieldByNameConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeInOutConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rtypeInOutConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeInOutConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rtypeInOutConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rtypeInOutConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeKeyConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rtypeKeyConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeKeyConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rtypeKeyConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rtypeKeyConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeMethodByNameConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.rtypeMethodByNameConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.rtypeMethodByNameConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.rtypeMethodByNameConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.rtypeMethodByNameConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.runtimeSetFinalizerConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.runtimeSetFinalizerConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.runtimeSetFinalizerConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.runtimeSetFinalizerConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.runtimeSetFinalizerConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.storeConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.storeConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.storeConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.storeConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.storeConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.timeStartTimerConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.timeStartTimerConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.timeStartTimerConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.timeStartTimerConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.timeStartTimerConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.typeFilterConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.typeFilterConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.typeFilterConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.typeFilterConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.typeFilterConstraint).solve":[[0]],"(*golang.org/x/tools/go/pointer.untagConstraint).String":[[0],[]],"(*golang.org/x/tools/go/pointer.untagConstraint).presolve":[[0]],"(*golang.org/x/tools/go/pointer.untagConstraint).ptr":[[0],[0]],"(*golang.org/x/tools/go/pointer.untagConstraint).renumber":[[0,1]],"(*golang.org/x/tools/go/pointer.untagConstraint).solve":[[0]],"(*golang.org/x/tools/go/ssa.Alloc).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Alloc).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Alloc).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.Alloc).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Alloc).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Alloc).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Alloc).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Alloc).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Alloc).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Alloc).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Alloc).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Alloc).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.BasicBlock).Dominates":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.BasicBlock).Dominees":[[0],[0]],"(*golang.org/x/tools/go/ssa.BasicBlock).Idom":[[0],[0]],"(*golang.org/x/tools/go/ssa.BasicBlock).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.BasicBlock).String":[[0],[]],"(*golang.org/x/tools/go/ssa.BasicBlock).emit":[[0,1],[1]],"(*golang.org/x/tools/go/ssa.BasicBlock).hasPhi":[[0],[]],"(*golang.org/x/tools/go/ssa.BasicBlock).phis":[[0],[0]],"(*golang.org/x/tools/go/ssa.BasicBlock).predIndex":[[0],[]],"(*golang.org/x/tools/go/ssa.BasicBlock).removePred":[[0]],"(*golang.org/x/tools/go/ssa.BasicBlock).replacePred":[[0]],"(*golang.org/x/tools/go/ssa.BasicBlock).replaceSucc":[[0]],"(*golang.org/x/tools/go/ssa.BinOp).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.BinOp).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.BinOp).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.BinOp).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.BinOp).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.BinOp).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.BinOp).String":[[0],[]],"(*golang.org/x/tools/go/ssa.BinOp).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.BinOp).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.BinOp).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.BinOp).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.BinOp).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.BuilderMode).Get":[[0],[]],"(*golang.org/x/tools/go/ssa.BuilderMode).Set":[[0],[1]],"(*golang.org/x/tools/go/ssa.BuilderMode).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Builtin).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.Builtin).Object":[[0],[0]],"(*golang.org/x/tools/go/ssa.Builtin).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.Builtin).Parent":[[0],[]],"(*golang.org/x/tools/go/ssa.Builtin).Pos":[[0],[]],"(*golang.org/x/tools/go/ssa.Builtin).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Builtin).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Builtin).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).Common":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Call).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Call).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Call).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).Value":[[0],[0]],"(*golang.org/x/tools/go/ssa.Call).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Call).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Call).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Call).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.CallCommon).Description":[[0],[]],"(*golang.org/x/tools/go/ssa.CallCommon).IsInvoke":[[0],[0]],"(*golang.org/x/tools/go/ssa.CallCommon).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.CallCommon).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.CallCommon).Signature":[[0],[0]],"(*golang.org/x/tools/go/ssa.CallCommon).StaticCallee":[[0],[0]],"(*golang.org/x/tools/go/ssa.CallCommon).String":[[0],[]],"(*golang.org/x/tools/go/ssa.ChangeInterface).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeInterface).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.ChangeInterface).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.ChangeInterface).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeInterface).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeInterface).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeInterface).String":[[0],[]],"(*golang.org/x/tools/go/ssa.ChangeInterface).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeInterface).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.ChangeInterface).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.ChangeInterface).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.ChangeInterface).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.ChangeType).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeType).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.ChangeType).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.ChangeType).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeType).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeType).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeType).String":[[0],[]],"(*golang.org/x/tools/go/ssa.ChangeType).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.ChangeType).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.ChangeType).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.ChangeType).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.ChangeType).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Const).Complex128":[[0],[]],"(*golang.org/x/tools/go/ssa.Const).Float64":[[0],[0]],"(*golang.org/x/tools/go/ssa.Const).Int64":[[0],[0]],"(*golang.org/x/tools/go/ssa.Const).IsNil":[[0],[0]],"(*golang.org/x/tools/go/ssa.Const).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.Const).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.Const).Parent":[[0],[]],"(*golang.org/x/tools/go/ssa.Const).Pos":[[0],[]],"(*golang.org/x/tools/go/ssa.Const).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Const).RelString":[[0],[0]],"(*golang.org/x/tools/go/ssa.Const).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Const).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Const).Uint64":[[0],[0]],"(*golang.org/x/tools/go/ssa.Convert).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Convert).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Convert).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Convert).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Convert).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Convert).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Convert).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Convert).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Convert).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Convert).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Convert).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Convert).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.DebugRef).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.DebugRef).Object":[[0],[0]],"(*golang.org/x/tools/go/ssa.DebugRef).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.DebugRef).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.DebugRef).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.DebugRef).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.DebugRef).String":[[0],[]],"(*golang.org/x/tools/go/ssa.DebugRef).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Defer).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Defer).Common":[[0],[0]],"(*golang.org/x/tools/go/ssa.Defer).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Defer).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Defer).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Defer).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Defer).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Defer).Value":[[0],[]],"(*golang.org/x/tools/go/ssa.Defer).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Extract).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Extract).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Extract).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Extract).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Extract).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Extract).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Extract).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Extract).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Extract).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Extract).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Extract).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Extract).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Field).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Field).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Field).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Field).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Field).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Field).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Field).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Field).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Field).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Field).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Field).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Field).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.FieldAddr).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.FieldAddr).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.FieldAddr).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.FieldAddr).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.FieldAddr).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.FieldAddr).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.FieldAddr).String":[[0],[]],"(*golang.org/x/tools/go/ssa.FieldAddr).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.FieldAddr).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.FieldAddr).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.FieldAddr).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.FieldAddr).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.FreeVar).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.FreeVar).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.FreeVar).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.FreeVar).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.FreeVar).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.FreeVar).String":[[0],[]],"(*golang.org/x/tools/go/ssa.FreeVar).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).DomPreorder":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Object":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.Function).Package":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).RelString":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Syntax":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).Token":[[0],[]],"(*golang.org/x/tools/go/ssa.Function).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).ValueForExpr":[[0],[0],[0]],"(*golang.org/x/tools/go/ssa.Function).WriteTo":[[0],[],[1]],"(*golang.org/x/tools/go/ssa.Function).addLocal":[[0,1,2],[0,1,2]],"(*golang.org/x/tools/go/ssa.Function).addLocalForIdent":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.Function).addNamedLocal":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.Function).addParam":[[0,1,2,3],[0,1,2,3]],"(*golang.org/x/tools/go/ssa.Function).addParamObj":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.Function).addSpilledParam":[[0,1]],"(*golang.org/x/tools/go/ssa.Function).createSyntacticParams":[[0,1,2]],"(*golang.org/x/tools/go/ssa.Function).debugInfo":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).declaredPackage":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).done":[[0]],"(*golang.org/x/tools/go/ssa.Function).done$1":[],"(*golang.org/x/tools/go/ssa.Function).emit":[[0,1],[1]],"(*golang.org/x/tools/go/ssa.Function).finishBody":[[0]],"(*golang.org/x/tools/go/ssa.Function).instanceType":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Function).labelledBlock":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.Function).lookup":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.Function).newBasicBlock":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.Function).objectOf":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Function).relMethod":[[0],[]],"(*golang.org/x/tools/go/ssa.Function).relPkg":[[0],[0]],"(*golang.org/x/tools/go/ssa.Function).removeNilBlocks":[[0]],"(*golang.org/x/tools/go/ssa.Function).selection":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Function).startBody":[[0]],"(*golang.org/x/tools/go/ssa.Function).typ":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Function).typeOf":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Global).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.Global).Object":[[0],[0]],"(*golang.org/x/tools/go/ssa.Global).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.Global).Package":[[0],[0]],"(*golang.org/x/tools/go/ssa.Global).Parent":[[0],[]],"(*golang.org/x/tools/go/ssa.Global).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Global).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Global).RelString":[[0],[0]],"(*golang.org/x/tools/go/ssa.Global).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Global).Token":[[0],[]],"(*golang.org/x/tools/go/ssa.Global).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Go).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Go).Common":[[0],[0]],"(*golang.org/x/tools/go/ssa.Go).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Go).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Go).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Go).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Go).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Go).Value":[[0],[]],"(*golang.org/x/tools/go/ssa.Go).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.If).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.If).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.If).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.If).Pos":[[0],[]],"(*golang.org/x/tools/go/ssa.If).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.If).String":[[0],[]],"(*golang.org/x/tools/go/ssa.If).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Index).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Index).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Index).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Index).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Index).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Index).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Index).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Index).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Index).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Index).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Index).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Index).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.IndexAddr).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.IndexAddr).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.IndexAddr).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.IndexAddr).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.IndexAddr).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.IndexAddr).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.IndexAddr).String":[[0],[]],"(*golang.org/x/tools/go/ssa.IndexAddr).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.IndexAddr).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.IndexAddr).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.IndexAddr).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.IndexAddr).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Jump).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Jump).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.Jump).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Jump).Pos":[[0],[]],"(*golang.org/x/tools/go/ssa.Jump).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Jump).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Jump).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Lookup).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Lookup).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Lookup).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Lookup).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Lookup).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Lookup).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Lookup).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Lookup).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Lookup).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Lookup).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Lookup).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Lookup).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeChan).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeChan).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeChan).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.MakeChan).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeChan).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeChan).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeChan).String":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeChan).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeChan).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.MakeChan).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeChan).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeChan).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeClosure).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeClosure).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeClosure).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.MakeClosure).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeClosure).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeClosure).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeClosure).String":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeClosure).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeClosure).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.MakeClosure).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeClosure).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeClosure).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeInterface).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeInterface).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeInterface).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.MakeInterface).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeInterface).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeInterface).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeInterface).String":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeInterface).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeInterface).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.MakeInterface).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeInterface).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeInterface).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeMap).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeMap).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeMap).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.MakeMap).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeMap).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeMap).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeMap).String":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeMap).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeMap).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.MakeMap).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeMap).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeMap).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeSlice).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeSlice).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeSlice).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.MakeSlice).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeSlice).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeSlice).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeSlice).String":[[0],[]],"(*golang.org/x/tools/go/ssa.MakeSlice).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.MakeSlice).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.MakeSlice).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeSlice).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.MakeSlice).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.MapUpdate).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.MapUpdate).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.MapUpdate).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.MapUpdate).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.MapUpdate).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.MapUpdate).String":[[0],[]],"(*golang.org/x/tools/go/ssa.MapUpdate).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.NamedConst).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.NamedConst).Object":[[0],[0]],"(*golang.org/x/tools/go/ssa.NamedConst).Package":[[0],[0]],"(*golang.org/x/tools/go/ssa.NamedConst).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.NamedConst).RelString":[[0],[0]],"(*golang.org/x/tools/go/ssa.NamedConst).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.NamedConst).Token":[[0],[]],"(*golang.org/x/tools/go/ssa.NamedConst).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Next).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Next).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Next).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Next).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Next).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Next).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Next).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Next).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Next).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Next).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Next).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Next).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Package).Build":[[0]],"(*golang.org/x/tools/go/ssa.Package).Const":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Package).Func":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Package).SetDebugMode":[[0,1]],"(*golang.org/x/tools/go/ssa.Package).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Package).Type":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Package).Var":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Package).WriteTo":[[0],[],[1]],"(*golang.org/x/tools/go/ssa.Package).build":[[0]],"(*golang.org/x/tools/go/ssa.Package).build$bound":[],"(*golang.org/x/tools/go/ssa.Panic).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Panic).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Panic).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Panic).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Panic).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Panic).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Panic).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Parameter).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.Parameter).Object":[[0],[0]],"(*golang.org/x/tools/go/ssa.Parameter).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.Parameter).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Parameter).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Parameter).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Parameter).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Parameter).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Phi).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Phi).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Phi).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Phi).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Phi).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Phi).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Phi).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Phi).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Phi).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Phi).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Phi).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Phi).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Program).AllPackages":[[0],[0]],"(*golang.org/x/tools/go/ssa.Program).Build":[[0]],"(*golang.org/x/tools/go/ssa.Program).Build$1":[],"(*golang.org/x/tools/go/ssa.Program).ConstValue":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).CreatePackage":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/ssa.Program).FuncValue":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).ImportedPackage":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).LookupMethod":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).MethodValue":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).NewFunction":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/ssa.Program).Package":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).RuntimeTypes":[[0],[]],"(*golang.org/x/tools/go/ssa.Program).RuntimeTypes$1":[],"(*golang.org/x/tools/go/ssa.Program).VarValue":[[0],[0,1,2],[2]],"(*golang.org/x/tools/go/ssa.Program)._Instances":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).addMethod":[[0],[0,1,2]],"(*golang.org/x/tools/go/ssa.Program).createInstanceSet":[[0]],"(*golang.org/x/tools/go/ssa.Program).createMethodSet":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.Program).declaredFunc":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).needMethods":[[0,1]],"(*golang.org/x/tools/go/ssa.Program).needMethodsOf":[[0,1]],"(*golang.org/x/tools/go/ssa.Program).needsInstance":[[0],[0,1,2]],"(*golang.org/x/tools/go/ssa.Program).originFunc":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Program).packageLevelMember":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Range).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Range).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Range).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Range).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Range).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Range).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Range).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Range).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Range).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Range).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Range).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Range).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Return).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Return).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Return).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Return).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Return).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Return).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Return).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.RunDefers).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.RunDefers).Operands":[[0],[1]],"(*golang.org/x/tools/go/ssa.RunDefers).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.RunDefers).Pos":[[0],[]],"(*golang.org/x/tools/go/ssa.RunDefers).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.RunDefers).String":[[0],[]],"(*golang.org/x/tools/go/ssa.RunDefers).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Select).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Select).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Select).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Select).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Select).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Select).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Select).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Select).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Select).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Select).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Select).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Select).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Send).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Send).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Send).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Send).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Send).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Send).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Send).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Slice).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Slice).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.Slice).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Slice).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Slice).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Slice).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.Slice).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Slice).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.Slice).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.Slice).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.Slice).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.Slice).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).String":[[0],[]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.SliceToArrayPointer).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.Store).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.Store).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.Store).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.Store).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Store).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.Store).String":[[0],[]],"(*golang.org/x/tools/go/ssa.Store).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.Type).Name":[[0],[0]],"(*golang.org/x/tools/go/ssa.Type).Object":[[0],[0]],"(*golang.org/x/tools/go/ssa.Type).Package":[[0],[0]],"(*golang.org/x/tools/go/ssa.Type).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.Type).RelString":[[0],[0]],"(*golang.org/x/tools/go/ssa.Type).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.Type).Token":[[0],[]],"(*golang.org/x/tools/go/ssa.Type).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.TypeAssert).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.TypeAssert).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.TypeAssert).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.TypeAssert).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.TypeAssert).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.TypeAssert).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.TypeAssert).String":[[0],[]],"(*golang.org/x/tools/go/ssa.TypeAssert).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.TypeAssert).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.TypeAssert).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.TypeAssert).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.TypeAssert).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.UnOp).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.UnOp).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.UnOp).Operands":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.UnOp).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.UnOp).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.UnOp).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.UnOp).String":[[0],[]],"(*golang.org/x/tools/go/ssa.UnOp).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.UnOp).setBlock":[[0]],"(*golang.org/x/tools/go/ssa.UnOp).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.UnOp).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.UnOp).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.address).address":[[0],[0]],"(*golang.org/x/tools/go/ssa.address).load":[[0],[0]],"(*golang.org/x/tools/go/ssa.address).store":[[0]],"(*golang.org/x/tools/go/ssa.address).typ":[[0],[0]],"(*golang.org/x/tools/go/ssa.anInstruction).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.anInstruction).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.anInstruction).Referrers":[[0],[]],"(*golang.org/x/tools/go/ssa.anInstruction).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.blank).address":[[0],[]],"(*golang.org/x/tools/go/ssa.blank).load":[[0],[]],"(*golang.org/x/tools/go/ssa.blank).store":[[0]],"(*golang.org/x/tools/go/ssa.blank).typ":[[0],[]],"(*golang.org/x/tools/go/ssa.blockSet).add":[[0,1],[]],"(*golang.org/x/tools/go/ssa.blockSet).take":[[0],[]],"(*golang.org/x/tools/go/ssa.builder).addr":[[0],[1,2]],"(*golang.org/x/tools/go/ssa.builder).arrayLen":[[0],[]],"(*golang.org/x/tools/go/ssa.builder).assign":[[0]],"(*golang.org/x/tools/go/ssa.builder).assignOp":[[0]],"(*golang.org/x/tools/go/ssa.builder).assignStmt":[[0,1,3]],"(*golang.org/x/tools/go/ssa.builder).buildCreated":[[0]],"(*golang.org/x/tools/go/ssa.builder).buildFunction":[[0,1]],"(*golang.org/x/tools/go/ssa.builder).buildFunctionBody":[[0,1]],"(*golang.org/x/tools/go/ssa.builder).builtin":[[0],[1,3,4,5]],"(*golang.org/x/tools/go/ssa.builder).compLit":[[0]],"(*golang.org/x/tools/go/ssa.builder).cond":[[0]],"(*golang.org/x/tools/go/ssa.builder).done":[[0],[0]],"(*golang.org/x/tools/go/ssa.builder).emitCallArgs":[[0],[2,3,4]],"(*golang.org/x/tools/go/ssa.builder).expr":[[0,1,2],[1,2]],"(*golang.org/x/tools/go/ssa.builder).expr0":[[0,1,2],[1,2,3]],"(*golang.org/x/tools/go/ssa.builder).exprN":[[0,1,2],[1,2]],"(*golang.org/x/tools/go/ssa.builder).forStmt":[[0]],"(*golang.org/x/tools/go/ssa.builder).localValueSpec":[[0,1,2]],"(*golang.org/x/tools/go/ssa.builder).logicalBinop":[[0],[1,2]],"(*golang.org/x/tools/go/ssa.builder).needsRuntimeTypes":[[0]],"(*golang.org/x/tools/go/ssa.builder).rangeChan":[[0],[2,4],[1],[1]],"(*golang.org/x/tools/go/ssa.builder).rangeIndexed":[[0],[1],[1,2],[1],[1]],"(*golang.org/x/tools/go/ssa.builder).rangeIter":[[0],[2,3,4,5],[2,3,4,5],[1],[1]],"(*golang.org/x/tools/go/ssa.builder).rangeStmt":[[0]],"(*golang.org/x/tools/go/ssa.builder).receiver":[[0],[2,5]],"(*golang.org/x/tools/go/ssa.builder).selectStmt":[[0,1,2]],"(*golang.org/x/tools/go/ssa.builder).setCall":[[0]],"(*golang.org/x/tools/go/ssa.builder).setCallFunc":[[0]],"(*golang.org/x/tools/go/ssa.builder).stmt":[[0,1,2]],"(*golang.org/x/tools/go/ssa.builder).stmtList":[[0]],"(*golang.org/x/tools/go/ssa.builder).switchStmt":[[0,1,2]],"(*golang.org/x/tools/go/ssa.builder).typeCaseBody":[[0]],"(*golang.org/x/tools/go/ssa.builder).typeSwitchStmt":[[0,1,2]],"(*golang.org/x/tools/go/ssa.byDomPreorder).Len":[[0],[]],"(*golang.org/x/tools/go/ssa.byDomPreorder).Less":[[0],[]],"(*golang.org/x/tools/go/ssa.byDomPreorder).Swap":[[0]],"(*golang.org/x/tools/go/ssa.canonizer).List":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.canonizer).Type":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.canonizer).instantiateMethod":[[0,1,2,3],[]],"(*golang.org/x/tools/go/ssa.creator).Add":[[0,1]],"(*golang.org/x/tools/go/ssa.creator).At":[[0],[0]],"(*golang.org/x/tools/go/ssa.creator).Len":[[0],[]],"(*golang.org/x/tools/go/ssa.element).address":[[0],[]],"(*golang.org/x/tools/go/ssa.element).load":[[0],[0]],"(*golang.org/x/tools/go/ssa.element).store":[[0]],"(*golang.org/x/tools/go/ssa.element).typ":[[0],[0]],"(*golang.org/x/tools/go/ssa.extentNode).End":[[0],[]],"(*golang.org/x/tools/go/ssa.extentNode).Pos":[[0],[]],"(*golang.org/x/tools/go/ssa.fieldlist).At":[[0],[]],"(*golang.org/x/tools/go/ssa.fieldlist).Len":[[0],[]],"(*golang.org/x/tools/go/ssa.instanceSet).list":[[0],[0]],"(*golang.org/x/tools/go/ssa.instanceSet).lookupOrCreate":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.ltState).dfs":[[0],[2]],"(*golang.org/x/tools/go/ssa.ltState).eval":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.ltState).link":[[0]],"(*golang.org/x/tools/go/ssa.opaqueType).String":[[0],[0]],"(*golang.org/x/tools/go/ssa.opaqueType).Underlying":[[0],[0]],"(*golang.org/x/tools/go/ssa.register).Block":[[0],[0]],"(*golang.org/x/tools/go/ssa.register).Name":[[0],[]],"(*golang.org/x/tools/go/ssa.register).Parent":[[0],[0]],"(*golang.org/x/tools/go/ssa.register).Pos":[[0],[0]],"(*golang.org/x/tools/go/ssa.register).Referrers":[[0],[0]],"(*golang.org/x/tools/go/ssa.register).Type":[[0],[0]],"(*golang.org/x/tools/go/ssa.register).setBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.register).setNum":[[0,1]],"(*golang.org/x/tools/go/ssa.register).setPos":[[0,1]],"(*golang.org/x/tools/go/ssa.register).setType":[[0,1]],"(*golang.org/x/tools/go/ssa.sanity).checkBlock":[[0,1]],"(*golang.org/x/tools/go/ssa.sanity).checkFinalInstr":[[0]],"(*golang.org/x/tools/go/ssa.sanity).checkFunction":[[0,1],[0,1]],"(*golang.org/x/tools/go/ssa.sanity).checkInstr":[[0]],"(*golang.org/x/tools/go/ssa.sanity).checkReferrerList":[[0]],"(*golang.org/x/tools/go/ssa.sanity).diagnostic":[[0]],"(*golang.org/x/tools/go/ssa.sanity).errorf":[[0]],"(*golang.org/x/tools/go/ssa.sanity).warnf":[[0]],"(*golang.org/x/tools/go/ssa.storebuf).emit":[[0]],"(*golang.org/x/tools/go/ssa.storebuf).store":[[0,1,2]],"(*golang.org/x/tools/go/ssa.subster).interface_":[[0],[1]],"(*golang.org/x/tools/go/ssa.subster).interface_$1":[],"(*golang.org/x/tools/go/ssa.subster).interface_$2":[],"(*golang.org/x/tools/go/ssa.subster).named":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.subster).signature":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.subster).struct_":[[0],[1]],"(*golang.org/x/tools/go/ssa.subster).tuple":[[0],[1]],"(*golang.org/x/tools/go/ssa.subster).typ":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.subster).typ$1":[],"(*golang.org/x/tools/go/ssa.subster).types":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.subster).union":[[0],[1]],"(*golang.org/x/tools/go/ssa.subster).var_":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.subster).varlist":[[0],[1]],"(*golang.org/x/tools/go/ssa.subster).wellFormed":[[0],[0]],"(*golang.org/x/tools/go/ssa.tpWalker).isParameterized":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.tpWalker).isParameterized$1":[],"(*golang.org/x/tools/go/ssa.typeList).identical":[[0],[]],"(*golang.org/x/tools/go/ssa.typeListMap).hash":[[0],[0,1]],"(*golang.org/x/tools/go/ssa.typeListMap).rep":[[0],[0,1]],"(*golang.org/x/tools/go/ssa/interp.array).eq":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.array).hash":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.frame).get":[[0],[0,1]],"(*golang.org/x/tools/go/ssa/interp.frame).runDefer":[[0]],"(*golang.org/x/tools/go/ssa/interp.frame).runDefer$1":[],"(*golang.org/x/tools/go/ssa/interp.frame).runDefers":[[0]],"(*golang.org/x/tools/go/ssa/interp.hashmap).delete":[[0]],"(*golang.org/x/tools/go/ssa/interp.hashmap).entries":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.hashmap).insert":[[0]],"(*golang.org/x/tools/go/ssa/interp.hashmap).len":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.hashmap).lookup":[[0],[0,1]],"(*golang.org/x/tools/go/ssa/interp.hashmapIter).next":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.iface).eq":[[0],[2]],"(*golang.org/x/tools/go/ssa/interp.iface).hash":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.mapIter).next":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.opaqueType).String":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.opaqueType).Underlying":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.rtype).eq":[[0],[2]],"(*golang.org/x/tools/go/ssa/interp.rtype).hash":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).Len":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.stringIter).Read":[[0],[],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).ReadAt":[[0],[],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).ReadByte":[[0],[0],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).ReadRune":[[0],[0],[],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).Reset":[[0,1]],"(*golang.org/x/tools/go/ssa/interp.stringIter).Seek":[[0,1],[0,1],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).Size":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).UnreadByte":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).UnreadRune":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.stringIter).WriteTo":[[0],[],[1]],"(*golang.org/x/tools/go/ssa/interp.stringIter).next":[[0],[0]],"(*golang.org/x/tools/go/ssa/interp.structure).eq":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.structure).hash":[[0],[]],"(*golang.org/x/tools/go/ssa/interp.targetPanic).String":[[0],[]],"(*golang.org/x/tools/go/ssa/ssautil.Switch).String":[[0],[]],"(*golang.org/x/tools/go/ssa/ssautil.visitor).function":[[0]],"(*golang.org/x/tools/go/ssa/ssautil.visitor).program":[[0]],"(*golang.org/x/tools/go/types/typeutil.Hasher).Hash":[[0],[1]],"(*golang.org/x/tools/go/types/typeutil.Hasher).hashFor":[[0],[1]],"(*golang.org/x/tools/go/types/typeutil.Hasher).hashPtr":[[0],[1]],"(*golang.org/x/tools/go/types/typeutil.Hasher).hashTermSet":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Hasher).hashTuple":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Hasher).hashTypeParam":[[0],[1]],"(*golang.org/x/tools/go/types/typeutil.Hasher).hashUnion":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Map).At":[[0],[0,1]],"(*golang.org/x/tools/go/types/typeutil.Map).Delete":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Map).Iterate":[[0]],"(*golang.org/x/tools/go/types/typeutil.Map).Keys":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Map).Keys$1":[],"(*golang.org/x/tools/go/types/typeutil.Map).KeysString":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Map).Len":[[0],[0]],"(*golang.org/x/tools/go/types/typeutil.Map).Set":[[0,1],[0,1]],"(*golang.org/x/tools/go/types/typeutil.Map).SetHasher":[[0,1]],"(*golang.org/x/tools/go/types/typeutil.Map).String":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Map).toString":[[0],[]],"(*golang.org/x/tools/go/types/typeutil.Map).toString$1":[],"(*golang.org/x/tools/go/types/typeutil.MethodSetCache).MethodSet":[[0],[0,1]],"(*golang.org/x/tools/go/types/typeutil.MethodSetCache).lookupNamed":[[0],[0,1]],"(*golang.org/x/tools/go/vcs.Cmd).Create":[[0],[0,1,2]],"(*golang.org/x/tools/go/vcs.Cmd).CreateAtRev":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/vcs.Cmd).Download":[[0],[0,1]],"(*golang.org/x/tools/go/vcs.Cmd).Log":[[0],[],[0,1,2]],"(*golang.org/x/tools/go/vcs.Cmd).LogAtRev":[[0],[],[0,1,2,3]],"(*golang.org/x/tools/go/vcs.Cmd).Ping":[[0],[0,1,2]],"(*golang.org/x/tools/go/vcs.Cmd).String":[[0],[0]],"(*golang.org/x/tools/go/vcs.Cmd).TagSync":[[0],[0,1,2]],"(*golang.org/x/tools/go/vcs.Cmd).Tags":[[0],[],[0,1]],"(*golang.org/x/tools/go/vcs.Cmd).run":[[0],[0,1,2,3]],"(*golang.org/x/tools/go/vcs.Cmd).run1":[[0],[],[0,1,2,3]],"(*golang.org/x/tools/go/vcs.Cmd).runOutput":[[0],[],[0,1,2,3]],"(*golang.org/x/tools/go/vcs.Cmd).runVerboseOnly":[[0],[0,1,2,3]],"(*golang.org/x/tools/godoc/analysis.Result).FileInfo":[[0],[0,1]],"(*golang.org/x/tools/godoc/analysis.Result).PackageInfo":[[0],[0,1]],"(*golang.org/x/tools/godoc/analysis.Result).Status":[[0],[0]],"(*golang.org/x/tools/godoc/analysis.Result).fileInfo":[[0],[0,1]],"(*golang.org/x/tools/godoc/analysis.Result).pkgInfo":[[0],[0,1]],"(*golang.org/x/tools/godoc/analysis.fileInfo).get":[[0],[0]],"(*golang.org/x/tools/godoc/analysis.linksByStart).Len":[[0],[]],"(*golang.org/x/tools/godoc/analysis.linksByStart).Less":[[0],[]],"(*golang.org/x/tools/godoc/analysis.linksByStart).Swap":[[0]],"(*golang.org/x/tools/godoc/analysis.pkgInfo).get":[[0],[0]],"(*golang.org/x/tools/godoc/util.RWValue).Get":[[0],[0],[0]],"(*golang.org/x/tools/godoc/util.RWValue).Set":[[0,1]],"(*golang.org/x/tools/godoc/util.Throttle).Throttle":[[0]],"(*golang.org/x/tools/godoc/vfs.NameSpace).Bind":[[0]],"(*golang.org/x/tools/godoc/vfs.NameSpace).Fprint":[[0]],"(*golang.org/x/tools/godoc/vfs.NameSpace).Lstat":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs.NameSpace).Open":[[0],[1],[1]],"(*golang.org/x/tools/godoc/vfs.NameSpace).ReadDir":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs.NameSpace).RootType":[[0],[]],"(*golang.org/x/tools/godoc/vfs.NameSpace).Stat":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs.NameSpace).String":[[0],[]],"(*golang.org/x/tools/godoc/vfs.NameSpace).clean":[[0],[1]],"(*golang.org/x/tools/godoc/vfs.NameSpace).resolve":[[0],[1]],"(*golang.org/x/tools/godoc/vfs.NameSpace).stat":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs.byName).Len":[[0],[]],"(*golang.org/x/tools/godoc/vfs.byName).Less":[[0],[]],"(*golang.org/x/tools/godoc/vfs.byName).Swap":[[0]],"(*golang.org/x/tools/godoc/vfs.dirInfo).IsDir":[[0],[]],"(*golang.org/x/tools/godoc/vfs.dirInfo).ModTime":[[0],[]],"(*golang.org/x/tools/godoc/vfs.dirInfo).Mode":[[0],[]],"(*golang.org/x/tools/godoc/vfs.dirInfo).Name":[[0],[]],"(*golang.org/x/tools/godoc/vfs.dirInfo).Size":[[0],[]],"(*golang.org/x/tools/godoc/vfs.dirInfo).Sys":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).IsDir":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).Lstat":[[0],[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).ModTime":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).Mode":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).Name":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).Open":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).ReadDir":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).RootType":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).Size":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).Stat":[[0],[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).String":[[0],[]],"(*golang.org/x/tools/godoc/vfs.emptyVFS).Sys":[[0],[]],"(*golang.org/x/tools/godoc/vfs.fsysToFileSystem).Lstat":[[0],[],[0,1]],"(*golang.org/x/tools/godoc/vfs.fsysToFileSystem).Open":[[0],[1],[0,1]],"(*golang.org/x/tools/godoc/vfs.fsysToFileSystem).ReadDir":[[0],[0],[0,1]],"(*golang.org/x/tools/godoc/vfs.fsysToFileSystem).RootType":[[0],[]],"(*golang.org/x/tools/godoc/vfs.fsysToFileSystem).Stat":[[0],[],[0,1]],"(*golang.org/x/tools/godoc/vfs.fsysToFileSystem).String":[[0],[]],"(*golang.org/x/tools/godoc/vfs.fsysToFileSystem).fsPath":[[0],[1]],"(*golang.org/x/tools/godoc/vfs.mountedFS).translate":[[0],[1]],"(*golang.org/x/tools/godoc/vfs.noSeekFile).Close":[[0],[]],"(*golang.org/x/tools/godoc/vfs.noSeekFile).Read":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs.noSeekFile).Seek":[[0],[],[0]],"(*golang.org/x/tools/godoc/vfs.noSeekFile).Stat":[[0],[],[0]],"(*golang.org/x/tools/godoc/vfs.osFS).Lstat":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs.osFS).Open":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs.osFS).ReadDir":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs.osFS).RootType":[[0],[]],"(*golang.org/x/tools/godoc/vfs.osFS).Stat":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs.osFS).String":[[0],[]],"(*golang.org/x/tools/godoc/vfs.osFS).resolve":[[0],[1]],"(*golang.org/x/tools/godoc/vfs/gatefs.gate).enter":[[0]],"(*golang.org/x/tools/godoc/vfs/gatefs.gate).leave":[[0]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatef).Close":[[0],[]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatef).Read":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatef).Seek":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatef).enter":[[0]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatef).leave":[[0]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).Lstat":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).Open":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).ReadDir":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).RootType":[[0],[]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).Stat":[[0],[],[1]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).String":[[0],[]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).enter":[[0]],"(*golang.org/x/tools/godoc/vfs/gatefs.gatefs).leave":[[0]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpDir).Close":[[0],[]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpDir).Read":[[0],[],[0]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpDir).Readdir":[[0],[0],[]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpDir).Seek":[[0],[],[0]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpDir).Stat":[[0],[],[0]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpFS).Open":[[0],[0,1],[0,1]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpFile).Close":[[0],[]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpFile).Read":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpFile).Readdir":[[0],[],[0]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpFile).Seek":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/httpfs.httpFile).Stat":[[0],[],[0]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFI).IsDir":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFI).ModTime":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFI).Mode":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFI).Name":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFI).Size":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFI).Sys":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFS).Close":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFS).Lstat":[[0],[1],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFS).Open":[[0],[1],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFS).ReadDir":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFS).RootType":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFS).Stat":[[0],[1],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.mapFS).String":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.nopCloser).Close":[[0],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.nopCloser).Read":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/mapfs.nopCloser).Seek":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFI).IsDir":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFI).ModTime":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFI).Mode":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFI).Name":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFI).Size":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFI).Sys":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).Close":[[0],[0]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).Lstat":[[0],[0,1],[1]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).Open":[[0],[0,1],[1]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).ReadDir":[[0],[0],[1]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).RegisterDecompressor":[[0]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).RootType":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).Stat":[[0],[0,1],[1]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).String":[[0],[0]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).decompressor":[[0],[0,1]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).init":[[0],[0,1,2]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).initFileList":[[0]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).openLookup":[[0],[0]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).openReadDir":[[0],[0]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipFS).stat":[[0],[],[0,1],[1]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipList).Len":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipList).Less":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipList).Swap":[[0]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipList).lookup":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipSeek).Close":[[0],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipSeek).Read":[[0],[],[]],"(*golang.org/x/tools/godoc/vfs/zipfs.zipSeek).Seek":[[0],[],[0]],"(*golang.org/x/tools/internal/apidiff.Report).String":[[0],[]],"(*golang.org/x/tools/internal/apidiff.Report).Text":[[0],[1]],"(*golang.org/x/tools/internal/apidiff.Report).TextCompatible":[[0],[1]],"(*golang.org/x/tools/internal/apidiff.Report).TextIncompatible":[[0],[1]],"(*golang.org/x/tools/internal/apidiff.Report).messages":[[0],[]],"(*golang.org/x/tools/internal/apidiff.Report).writeMessages":[[0],[1]],"(*golang.org/x/tools/internal/apidiff.differ).checkCompatible":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkCompatibleBasic":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkCompatibleChan":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkCompatibleDefined":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkCompatibleInterface":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkCompatibleObjectSets":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkCompatibleStruct":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkCorrespondence":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkMethodSet":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkObjects":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).checkPackage":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).compatible":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).constChanges":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).corr":[[0],[0,1,2]],"(*golang.org/x/tools/internal/apidiff.differ).corrFieldNames":[[0],[0,1,2]],"(*golang.org/x/tools/internal/apidiff.differ).correspond":[[0],[0,1,2]],"(*golang.org/x/tools/internal/apidiff.differ).establishCorrespondence":[[0],[0,1,2]],"(*golang.org/x/tools/internal/apidiff.differ).incompatible":[[0]],"(*golang.org/x/tools/internal/apidiff.differ).methodID":[[0],[1]],"(*golang.org/x/tools/internal/apidiff.differ).sortedMethods":[[0],[]],"(*golang.org/x/tools/internal/apidiff.differ).sortedMethods$1":[[]],"(*golang.org/x/tools/internal/apidiff.differ).typeChanged":[[0]],"(*golang.org/x/tools/internal/apidiff.ifacePair).identical":[[0],[0,1]],"(*golang.org/x/tools/internal/event/core.Event).At":[[0],[]],"(*golang.org/x/tools/internal/event/core.Event).Find":[[0],[]],"(*golang.org/x/tools/internal/event/core.Event).Format":[[0]],"(*golang.org/x/tools/internal/event/core.Event).Label":[[0],[]],"(*golang.org/x/tools/internal/event/core.Event).Valid":[[0],[1]],"(*golang.org/x/tools/internal/event/export.Printer).WriteEvent":[[0]],"(*golang.org/x/tools/internal/event/export.Span).Events":[[0],[0]],"(*golang.org/x/tools/internal/event/export.Span).Finish":[[0],[0]],"(*golang.org/x/tools/internal/event/export.Span).Format":[[0]],"(*golang.org/x/tools/internal/event/export.Span).Start":[[0],[0]],"(*golang.org/x/tools/internal/event/export.SpanContext).Format":[[0]],"(*golang.org/x/tools/internal/event/export.SpanID).IsValid":[[0],[]],"(*golang.org/x/tools/internal/event/export.SpanID).String":[[0],[]],"(*golang.org/x/tools/internal/event/export.TraceID).String":[[0],[]],"(*golang.org/x/tools/internal/event/export.logWriter).ProcessEvent":[[0],[1]],"(*golang.org/x/tools/internal/event/export.logWriter).ProcessEvent$bound":[[0]],"(*golang.org/x/tools/internal/event/export/eventtest.testExporter).processEvent":[[0],[1]],"(*golang.org/x/tools/internal/event/export/eventtest.testExporter).processEvent$bound":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Config).Exporter":[[0],[]],"(*golang.org/x/tools/internal/event/export/metric.Config).Exporter$1":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Config).subscribe":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).Groups":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).Handle":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).latest":[[0],[0,1]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).latest$1":[[]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).latest$bound":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).modify":[[0,1],[0]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).sum":[[0],[0,1]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).sum$1":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Float64Data).sum$bound":[[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramFloat64).Record":[[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramFloat64Data).Groups":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramFloat64Data).Handle":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramFloat64Data).modify":[[0,1],[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramFloat64Data).record":[[0],[0,1]],"(*golang.org/x/tools/internal/event/export/metric.HistogramFloat64Data).record$1":[],"(*golang.org/x/tools/internal/event/export/metric.HistogramFloat64Data).record$bound":[[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramInt64).Record":[[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramInt64Data).Groups":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramInt64Data).Handle":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramInt64Data).modify":[[0,1],[0]],"(*golang.org/x/tools/internal/event/export/metric.HistogramInt64Data).record":[[0],[0,1]],"(*golang.org/x/tools/internal/event/export/metric.HistogramInt64Data).record$1":[],"(*golang.org/x/tools/internal/event/export/metric.HistogramInt64Data).record$bound":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).Groups":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).Handle":[[0],[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).count":[[0,1],[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).count$1":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).count$bound":[[]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).latest":[[0],[0,1]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).latest$1":[[]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).latest$bound":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).modify":[[0,1],[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).sum":[[0],[0,1]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).sum$1":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Int64Data).sum$bound":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Scalar).Count":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Scalar).LatestFloat64":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Scalar).LatestInt64":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Scalar).SumFloat64":[[0]],"(*golang.org/x/tools/internal/event/export/metric.Scalar).SumInt64":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent.Config).buildNode":[[0],[0]],"(*golang.org/x/tools/internal/event/export/ocagent.Exporter).Flush":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent.Exporter).ProcessEvent":[[0,1],[1]],"(*golang.org/x/tools/internal/event/export/ocagent.Exporter).send":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.Annotation).labelTimeEventValue":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.BoolAttribute).labelAttribute":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.BucketOptionsExplicit).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.BucketOptionsExplicit).labelBucketOptions":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.DoubleAttribute).labelAttribute":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.IntAttribute).labelAttribute":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.MessageEvent).labelTimeEventValue":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.Point).MarshalJSON":[[0],[],[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.PointDistributionValue).labelPointValue":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.PointDoubleValue).labelPointValue":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.PointInt64Value).labelPointValue":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.PointSummaryValue).labelPointValue":[[0]],"(*golang.org/x/tools/internal/event/export/ocagent/wire.StringAttribute).labelAttribute":[[0]],"(*golang.org/x/tools/internal/event/export/prometheus.Exporter).ProcessEvent":[[0],[1]],"(*golang.org/x/tools/internal/event/export/prometheus.Exporter).ProcessEvent$1":[[]],"(*golang.org/x/tools/internal/event/export/prometheus.Exporter).Serve":[[0]],"(*golang.org/x/tools/internal/event/export/prometheus.Exporter).header":[[0]],"(*golang.org/x/tools/internal/event/export/prometheus.Exporter).row":[[0]],"(*golang.org/x/tools/internal/event/keys.Boolean).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Boolean).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Boolean).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Boolean).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Boolean).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Boolean).Of":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Error).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Error).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Error).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Error).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Error).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Error).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Float32).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Float32).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Float32).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Float32).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Float32).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Float32).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Float64).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Float64).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Float64).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Float64).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Float64).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Float64).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Int).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Int).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Int).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Int).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Int16).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int16).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Int16).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Int16).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Int16).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int16).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Int32).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int32).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Int32).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Int32).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Int32).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int32).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Int64).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int64).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Int64).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Int64).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Int64).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int64).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Int8).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int8).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Int8).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Int8).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Int8).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Int8).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.String).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.String).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.String).From":[[0],[]],"(*golang.org/x/tools/internal/event/keys.String).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.String).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.String).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Tag).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Tag).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Tag).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Tag).New":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.UInt).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.UInt).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.UInt).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.UInt16).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt16).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.UInt16).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.UInt16).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.UInt16).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt16).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.UInt32).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt32).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.UInt32).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.UInt32).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.UInt32).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt32).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.UInt64).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt64).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.UInt64).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.UInt64).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.UInt64).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt64).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.UInt8).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt8).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.UInt8).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.UInt8).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.UInt8).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.UInt8).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/keys.Value).Description":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Value).Format":[[0]],"(*golang.org/x/tools/internal/event/keys.Value).From":[[0],[1]],"(*golang.org/x/tools/internal/event/keys.Value).Get":[[0],[]],"(*golang.org/x/tools/internal/event/keys.Value).Name":[[0],[0]],"(*golang.org/x/tools/internal/event/keys.Value).Of":[[0],[0,1]],"(*golang.org/x/tools/internal/event/label.Label).Format":[[0]],"(*golang.org/x/tools/internal/event/label.Label).Key":[[0],[]],"(*golang.org/x/tools/internal/event/label.Label).Unpack64":[[0],[]],"(*golang.org/x/tools/internal/event/label.Label).UnpackString":[[0],[]],"(*golang.org/x/tools/internal/event/label.Label).UnpackValue":[[0],[]],"(*golang.org/x/tools/internal/event/label.Label).Valid":[[0],[]],"(*golang.org/x/tools/internal/event/label.filter).Label":[[0],[]],"(*golang.org/x/tools/internal/event/label.filter).Valid":[[0],[1]],"(*golang.org/x/tools/internal/event/label.list).Label":[[0],[0]],"(*golang.org/x/tools/internal/event/label.list).Valid":[[0],[1]],"(*golang.org/x/tools/internal/event/label.listMap).Find":[[0],[]],"(*golang.org/x/tools/internal/event/label.mapChain).Find":[[0],[]],"(*golang.org/x/tools/internal/fakenet.connFeeder).close":[[0]],"(*golang.org/x/tools/internal/fakenet.connFeeder).do":[[0],[],[]],"(*golang.org/x/tools/internal/fakenet.connFeeder).run":[[0]],"(*golang.org/x/tools/internal/fakenet.fakeAddr).Network":[[0],[]],"(*golang.org/x/tools/internal/fakenet.fakeAddr).String":[[0],[]],"(*golang.org/x/tools/internal/fakenet.fakeConn).Close":[[0],[]],"(*golang.org/x/tools/internal/fakenet.fakeConn).LocalAddr":[[0],[0]],"(*golang.org/x/tools/internal/fakenet.fakeConn).Read":[[0],[],[]],"(*golang.org/x/tools/internal/fakenet.fakeConn).RemoteAddr":[[0],[0]],"(*golang.org/x/tools/internal/fakenet.fakeConn).SetDeadline":[[0],[]],"(*golang.org/x/tools/internal/fakenet.fakeConn).SetReadDeadline":[[0],[]],"(*golang.org/x/tools/internal/fakenet.fakeConn).SetWriteDeadline":[[0],[]],"(*golang.org/x/tools/internal/fakenet.fakeConn).Write":[[0],[],[]],"(*golang.org/x/tools/internal/fastwalk.walker).doWork":[[0]],"(*golang.org/x/tools/internal/fastwalk.walker).enqueue":[[0]],"(*golang.org/x/tools/internal/fastwalk.walker).onDirEnt":[[0],[]],"(*golang.org/x/tools/internal/fastwalk.walker).onDirEnt$bound":[[]],"(*golang.org/x/tools/internal/fastwalk.walker).walk":[[0],[1]],"(*golang.org/x/tools/internal/gocommand.Invocation).run":[[0],[0]],"(*golang.org/x/tools/internal/gocommand.Invocation).run$1":[],"(*golang.org/x/tools/internal/gocommand.Invocation).run$2":[],"(*golang.org/x/tools/internal/gocommand.Invocation).run$3":[],"(*golang.org/x/tools/internal/gocommand.Invocation).run$4":[],"(*golang.org/x/tools/internal/gocommand.Invocation).run$5":[],"(*golang.org/x/tools/internal/gocommand.Invocation).runWithFriendlyError":[[0],[0,3],[0]],"(*golang.org/x/tools/internal/gocommand.Runner).Run":[[0],[],[2]],"(*golang.org/x/tools/internal/gocommand.Runner).RunPiped":[[0],[2]],"(*golang.org/x/tools/internal/gocommand.Runner).RunRaw":[[0],[],[],[2],[2]],"(*golang.org/x/tools/internal/gocommand.Runner).initialize":[[0]],"(*golang.org/x/tools/internal/gocommand.Runner).initialize$1":[],"(*golang.org/x/tools/internal/gocommand.Runner).runConcurrent":[[0],[],[],[2],[2]],"(*golang.org/x/tools/internal/gocommand.Runner).runConcurrent$1":[],"(*golang.org/x/tools/internal/gocommand.Runner).runPiped":[[0],[2,4],[2]],"(*golang.org/x/tools/internal/gocommand.Runner).runPiped$1":[],"(*golang.org/x/tools/internal/gocommand.Runner).runPiped$2":[],"(*golang.org/x/tools/internal/gopathwalk.walker).getIgnoredDirs":[[0],[]],"(*golang.org/x/tools/internal/gopathwalk.walker).init":[[0]],"(*golang.org/x/tools/internal/gopathwalk.walker).shouldSkipDir":[[0],[2]],"(*golang.org/x/tools/internal/gopathwalk.walker).shouldTraverse":[[0],[]],"(*golang.org/x/tools/internal/gopathwalk.walker).walk":[[0],[]],"(*golang.org/x/tools/internal/gopathwalk.walker).walk$bound":[[]],"(*golang.org/x/tools/internal/imports.ModuleResolver).ClearForNewMod":[[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).ClearForNewScan":[[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).cacheExports":[[0],[3],[3],[3]],"(*golang.org/x/tools/internal/imports.ModuleResolver).cacheKeys":[[0],[]],"(*golang.org/x/tools/internal/imports.ModuleResolver).cacheLoad":[[0],[0,1],[]],"(*golang.org/x/tools/internal/imports.ModuleResolver).cachePackageName":[[0],[1],[1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).cacheStore":[[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).canonicalize":[[0],[0,1],[1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).dirInModuleCache":[[0],[0,1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).dirIsNestedModule":[[0],[0,1,2]],"(*golang.org/x/tools/internal/imports.ModuleResolver).findModuleByDir":[[0],[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).findPackage":[[0],[0],[0,1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).init":[[0],[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).init$1":[[0,1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).init$1$1":[[]],"(*golang.org/x/tools/internal/imports.ModuleResolver).init$2":[[0,1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).init$2$1":[[]],"(*golang.org/x/tools/internal/imports.ModuleResolver).init$3":[],"(*golang.org/x/tools/internal/imports.ModuleResolver).initAllMods":[[0],[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).loadExports":[[0],[0,2],[0,2],[0,2]],"(*golang.org/x/tools/internal/imports.ModuleResolver).loadPackageNames":[[0],[1],[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).modInfo":[[0],[0,1],[0,1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).modInfo$1":[[]],"(*golang.org/x/tools/internal/imports.ModuleResolver).scan":[[0],[0]],"(*golang.org/x/tools/internal/imports.ModuleResolver).scan$1":[],"(*golang.org/x/tools/internal/imports.ModuleResolver).scan$2":[[1]],"(*golang.org/x/tools/internal/imports.ModuleResolver).scan$3":[],"(*golang.org/x/tools/internal/imports.ModuleResolver).scan$4":[],"(*golang.org/x/tools/internal/imports.ModuleResolver).scan$4$1":[],"(*golang.org/x/tools/internal/imports.ModuleResolver).scanDirForPackage":[[0],[0,1,2]],"(*golang.org/x/tools/internal/imports.ModuleResolver).scoreImportPath":[[0],[0]],"(*golang.org/x/tools/internal/imports.ProcessEnv).CopyConfig":[[0],[0]],"(*golang.org/x/tools/internal/imports.ProcessEnv).GetResolver":[[0],[0],[0]],"(*golang.org/x/tools/internal/imports.ProcessEnv).buildContext":[[0],[0],[0]],"(*golang.org/x/tools/internal/imports.ProcessEnv).env":[[0],[0]],"(*golang.org/x/tools/internal/imports.ProcessEnv).goEnv":[[0],[0],[0]],"(*golang.org/x/tools/internal/imports.ProcessEnv).init":[[0],[0]],"(*golang.org/x/tools/internal/imports.ProcessEnv).invokeGo":[[0],[],[0,2,3]],"(*golang.org/x/tools/internal/imports.ProcessEnv).matchFile":[[0],[1,2],[0,1,2]],"(*golang.org/x/tools/internal/imports.byCommentPos).Len":[[0],[]],"(*golang.org/x/tools/internal/imports.byCommentPos).Less":[[0],[]],"(*golang.org/x/tools/internal/imports.byCommentPos).Swap":[[0]],"(*golang.org/x/tools/internal/imports.byDistanceOrImportPathShortLength).Len":[[0],[]],"(*golang.org/x/tools/internal/imports.byDistanceOrImportPathShortLength).Less":[[0],[]],"(*golang.org/x/tools/internal/imports.byDistanceOrImportPathShortLength).Swap":[[0]],"(*golang.org/x/tools/internal/imports.byImportSpec).Len":[[0],[]],"(*golang.org/x/tools/internal/imports.byImportSpec).Less":[[0],[]],"(*golang.org/x/tools/internal/imports.byImportSpec).Swap":[[0]],"(*golang.org/x/tools/internal/imports.dirInfoCache).CacheExports":[[0],[3],[3],[3]],"(*golang.org/x/tools/internal/imports.dirInfoCache).CachePackageName":[[0],[1],[1]],"(*golang.org/x/tools/internal/imports.dirInfoCache).Keys":[[0],[0]],"(*golang.org/x/tools/internal/imports.dirInfoCache).Load":[[0],[0,1],[]],"(*golang.org/x/tools/internal/imports.dirInfoCache).ScanAndListen":[[0],[]],"(*golang.org/x/tools/internal/imports.dirInfoCache).ScanAndListen$1":[],"(*golang.org/x/tools/internal/imports.dirInfoCache).ScanAndListen$2":[],"(*golang.org/x/tools/internal/imports.dirInfoCache).Store":[[0]],"(*golang.org/x/tools/internal/imports.directoryPackageInfo).reachedStatus":[[0],[0,1],[0]],"(*golang.org/x/tools/internal/imports.gopathResolver).ClearForNewScan":[[0]],"(*golang.org/x/tools/internal/imports.gopathResolver).loadExports":[[0],[0,2],[0,2],[0,2]],"(*golang.org/x/tools/internal/imports.gopathResolver).loadPackageNames":[[0],[1],[0]],"(*golang.org/x/tools/internal/imports.gopathResolver).scan":[[0],[0]],"(*golang.org/x/tools/internal/imports.gopathResolver).scan$1":[],"(*golang.org/x/tools/internal/imports.gopathResolver).scan$2":[],"(*golang.org/x/tools/internal/imports.gopathResolver).scan$3":[],"(*golang.org/x/tools/internal/imports.gopathResolver).scan$3$1":[],"(*golang.org/x/tools/internal/imports.gopathResolver).scoreImportPath":[[0],[]],"(*golang.org/x/tools/internal/imports.pass).addCandidate":[[0,1]],"(*golang.org/x/tools/internal/imports.pass).assumeSiblingImportsValid":[[0]],"(*golang.org/x/tools/internal/imports.pass).findMissingImport":[[0],[0]],"(*golang.org/x/tools/internal/imports.pass).fix":[[0],[0],[]],"(*golang.org/x/tools/internal/imports.pass).importIdentifier":[[0],[0,1]],"(*golang.org/x/tools/internal/imports.pass).importSpecName":[[0],[0,1]],"(*golang.org/x/tools/internal/imports.pass).load":[[0],[0],[]],"(*golang.org/x/tools/internal/imports.pass).loadPackageNames":[[0],[0]],"(*golang.org/x/tools/internal/imports.pass).loadPackageNames$1":[],"(*golang.org/x/tools/internal/imports.visitFn).Visit":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2.Call).ID":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Call).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2.Call).Method":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Call).Params":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Call).UnmarshalJSON":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2.Call).isJSONRPC2Message":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.Call).isJSONRPC2Request":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.ID).Format":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.ID).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2.ID).UnmarshalJSON":[[0],[0,1]],"(*golang.org/x/tools/internal/jsonrpc2.Notification).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2.Notification).Method":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Notification).Params":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Notification).UnmarshalJSON":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2.Notification).isJSONRPC2Message":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.Notification).isJSONRPC2Request":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.Response).Err":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Response).ID":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Response).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2.Response).Result":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.Response).UnmarshalJSON":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2.Response).isJSONRPC2Message":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.ServerFunc).ServeStream":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2.conn).Call":[[0],[],[0,4]],"(*golang.org/x/tools/internal/jsonrpc2.conn).Call$1":[],"(*golang.org/x/tools/internal/jsonrpc2.conn).Call$2":[],"(*golang.org/x/tools/internal/jsonrpc2.conn).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.conn).Done":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.conn).Err":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2.conn).Go":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.conn).Notify":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.conn).Notify$1":[],"(*golang.org/x/tools/internal/jsonrpc2.conn).fail":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.conn).replier":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2.conn).replier$1":[[2]],"(*golang.org/x/tools/internal/jsonrpc2.conn).replier$1$1":[],"(*golang.org/x/tools/internal/jsonrpc2.conn).run":[[0]],"(*golang.org/x/tools/internal/jsonrpc2.conn).write":[[0],[],[0]],"(*golang.org/x/tools/internal/jsonrpc2.constError).Error":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2.headerStream).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.headerStream).Read":[[0],[],[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.headerStream).Write":[[0],[],[0]],"(*golang.org/x/tools/internal/jsonrpc2.rawStream).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.rawStream).Read":[[0],[],[],[0]],"(*golang.org/x/tools/internal/jsonrpc2.rawStream).Write":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2.wireError).Error":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2.wireVersionTag).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2.wireVersionTag).UnmarshalJSON":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.PipeServer).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.PipeServer).Connect":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.PipeServer).add":[[0,1]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.TCPServer).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.TCPServer).Connect":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.TCPServer).add":[[0,1]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.connList).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2/servertest.connList).add":[[0,1]],"(*golang.org/x/tools/internal/jsonrpc2_v2.AsyncCall).Await":[[0],[2]],"(*golang.org/x/tools/internal/jsonrpc2_v2.AsyncCall).ID":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.AsyncCall).IsReady":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Call":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Cancel":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Cancel$1":[],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Notify":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Respond":[[0],[0,1,3]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Respond$1":[],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).Wait":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).deliverMessages":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).incomingResponse":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).manageQueue":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).readIncoming":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).reply":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).reply$1":[],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).respond":[[0],[0,1,3]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).write":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Connection).write$1":[],"(*golang.org/x/tools/internal/jsonrpc2_v2.ConnectionOptions).Bind":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.HandlerFunc).Handle":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.ID).IsValid":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.ID).Raw":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Request).IsCall":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Request).marshal":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Response).marshal":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Server).Wait":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.Server).run":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.async).done":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.async).isDone":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.async).setError":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.async).wait":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.defaultHandler).Handle":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.defaultHandler).Preempt":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.headerFramer).Reader":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2_v2.headerFramer).Writer":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2_v2.headerReader).Read":[[0],[],[],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.headerWriter).Write":[[0],[],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleCloser).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleCloser).Read":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleCloser).Read$1":[],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleCloser).Write":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleListener).Accept":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleListener).Accept$1":[],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleListener).Close":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleListener).Close$1":[],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleListener).Dialer":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.idleListener).run":[[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netDialer).Dial":[[0],[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netListener).Accept":[[0],[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netListener).Close":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netListener).Dialer":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netPiper).Accept":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netPiper).Close":[[0],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netPiper).Dial":[[0],[],[]],"(*golang.org/x/tools/internal/jsonrpc2_v2.netPiper).Dialer":[[0],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.rawFramer).Reader":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2_v2.rawFramer).Writer":[[0],[1]],"(*golang.org/x/tools/internal/jsonrpc2_v2.rawReader).Read":[[0],[],[],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.rawWriter).Write":[[0],[],[0]],"(*golang.org/x/tools/internal/jsonrpc2_v2.wireError).Error":[[0],[0]],"(*golang.org/x/tools/internal/lsp/command.Command).ID":[[0],[]],"(*golang.org/x/tools/internal/lsp/command/commandmeta.Command).ID":[[0],[0]],"(*golang.org/x/tools/internal/lsp/command/commandmeta.fieldLoader).loadField":[[0],[0,2,3,4],[1,2,3,4]],"(*golang.org/x/tools/internal/lsp/command/commandmeta.fieldLoader).loadMethod":[[0],[0,1,2],[1,2]],"(*golang.org/x/tools/internal/lsp/debug/log.Level).Log":[[0]],"(*golang.org/x/tools/internal/lsp/debug/log.Level).Logf":[[0]],"(*golang.org/x/tools/internal/lsp/diff.OpKind).String":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff.Unified).Format":[[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.byteeq).eq":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.byteeq).lena":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.byteeq).lenb":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.byteeq).substr":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).backwardlcs":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).fdone":[[0],[],[0,2]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).forward":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).forwardlcs":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).fromlcs":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).getBackward":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).getForward":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).lookBackward":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).lookForward":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).setBackward":[[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).setForward":[[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).twoDone":[[0],[0,1,2],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).twolcs":[[0],[0,3]],"(*golang.org/x/tools/internal/lsp/diff/lcs.editGraph).twosided":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.label).get":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.label).set":[[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.lcs).fix":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.lcs).sort":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.lcs).valid":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.lineeq).eq":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.lineeq).lena":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.lineeq).lenb":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.lineeq).substr":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.runeeq).eq":[[0],[0]],"(*golang.org/x/tools/internal/lsp/diff/lcs.runeeq).lena":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.runeeq).lenb":[[0],[]],"(*golang.org/x/tools/internal/lsp/diff/lcs.runeeq).substr":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Client).ApplyEdit":[[0],[],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Client).Configuration":[[0],[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).Event":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).LogMessage":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).Progress":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).PublishDiagnostics":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).RegisterCapability":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).ShowDocument":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).ShowMessage":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).ShowMessageRequest":[[0],[2],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).UnregisterCapability":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).WorkDoneProgressCreate":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Client).WorkspaceFolders":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/fake.Edit).toProtocolChangeEvent":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).AcceptCompletion":[[0],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).ApplyCodeAction":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).ApplyQuickFixes":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).BufferText":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Editor).BufferVersion":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Editor).ChangeConfiguration":[[0,2],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Client":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Close":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).CloseBuffer":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).CodeAction":[[0],[],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).CodeLens":[[0],[],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Completion":[[0],[],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Config":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Connect":[[0],[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).CreateBuffer":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).DocumentHighlight":[[0],[],[2,3]],"(*golang.org/x/tools/internal/lsp/fake.Editor).DocumentLink":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).EditBuffer":[[0],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).ExecuteCommand":[[0],[],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Exit":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).FormatBuffer":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).GetQuickFixes":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).GoToDefinition":[[0],[],[],[0,2,3]],"(*golang.org/x/tools/internal/lsp/fake.Editor).GoToTypeDefinition":[[0],[],[],[0,2,3]],"(*golang.org/x/tools/internal/lsp/fake.Editor).HasBuffer":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Hover":[[0],[],[],[2,3]],"(*golang.org/x/tools/internal/lsp/fake.Editor).InlayHint":[[0],[],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).OpenFile":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).OrganizeImports":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).RefactorRewrite":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).References":[[0],[],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).RegexpRange":[[0],[0,1,2],[0,1,2],[0,1,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).RegexpReplace":[[0],[0,2,3]],"(*golang.org/x/tools/internal/lsp/fake.Editor).RegexpSearch":[[0],[0,1,2],[0,1,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Rename":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).RunGenerate":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).SaveBuffer":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).SaveBufferWithoutActions":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).SetBufferContent":[[0],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Shutdown":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Stats":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Symbol":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).Symbols":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).applyCodeActions":[[0],[],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).applyProtocolEdit":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).checkBufferPosition":[[0],[1,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).createBuffer":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).editBufferLocked":[[0],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).extractFirstPathAndPos":[[0],[2],[2],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).getCodeActions":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).initialize":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Editor).onFileChanges":[[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).onFileChanges$1":[],"(*golang.org/x/tools/internal/lsp/fake.Editor).onFileChanges$bound":[],"(*golang.org/x/tools/internal/lsp/fake.Editor).setBufferContentLocked":[[0],[2]],"(*golang.org/x/tools/internal/lsp/fake.Editor).settings":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Editor).textDocumentIdentifier":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Pos).String":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.Pos).ToProtocolPosition":[[0],[]],"(*golang.org/x/tools/internal/lsp/fake.RelativeTo).AbsPath":[[0],[1]],"(*golang.org/x/tools/internal/lsp/fake.RelativeTo).RelPath":[[0],[1]],"(*golang.org/x/tools/internal/lsp/fake.Sandbox).Close":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Sandbox).GOPATH":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Sandbox).GoEnv":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Sandbox).RootDir":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Sandbox).RunGoCommand":[[0],[0,2,3,4]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).AbsPath":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).AddWatcher":[[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).ChangeFilesOnDisk":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).CheckForFileChanges":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).ReadFile":[[0],[],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).RegexpRange":[[0],[2],[2],[0,1,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).RegexpSearch":[[0],[2],[0,1,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).RelPath":[[0],[1]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).RemoveFile":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).RootURI":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).URI":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).URIToPath":[[0],[1]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).WriteFile":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).WriteFiles":[[0],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).listFiles":[[0],[],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).listFiles$1":[[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).pollFiles":[[0],[0],[0]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).sendEvents":[[0]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).writeFile":[[0],[0,2],[0,2]],"(*golang.org/x/tools/internal/lsp/fake.Workdir).writeInitialFiles":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/fake.buffer).text":[[0],[]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).MatchedRanges":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).Score":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).ScoreChunks":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).ScoreTable":[[0],[]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).bestK":[[0],[]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).computeScore":[[0],[0]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).match":[[0],[]],"(*golang.org/x/tools/internal/lsp/fuzzy.Matcher).poorMatch":[[0],[]],"(*golang.org/x/tools/internal/lsp/fuzzy.SymbolMatcher).Match":[[0],[],[0]],"(*golang.org/x/tools/internal/lsp/fuzzy.scoreVal).prevK":[[0],[]],"(*golang.org/x/tools/internal/lsp/fuzzy.scoreVal).val":[[0],[]],"(*golang.org/x/tools/internal/lsp/lsppos.Mapper).LineColUTF16":[[0],[],[0,1]],"(*golang.org/x/tools/internal/lsp/lsppos.Mapper).LineColUTF16$1":[[]],"(*golang.org/x/tools/internal/lsp/lsppos.Mapper).Position":[[0],[0,1],[]],"(*golang.org/x/tools/internal/lsp/lsppos.Mapper).Range":[[0],[0,1,2],[]],"(*golang.org/x/tools/internal/lsp/lsppos.TokenMapper).Position":[[0],[0,1],[]],"(*golang.org/x/tools/internal/lsp/lsppos.TokenMapper).Range":[[0],[0,1,2],[]],"(*golang.org/x/tools/internal/lsp/progress.EventWriter).Write":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/progress.Tracker).Cancel":[[0],[1]],"(*golang.org/x/tools/internal/lsp/progress.Tracker).SetSupportsWorkDoneProgress":[[0,1]],"(*golang.org/x/tools/internal/lsp/progress.Tracker).Start":[[0],[0,4,5]],"(*golang.org/x/tools/internal/lsp/progress.Tracker).Start$1":[],"(*golang.org/x/tools/internal/lsp/progress.WorkDone).End":[[0]],"(*golang.org/x/tools/internal/lsp/progress.WorkDone).Report":[[0]],"(*golang.org/x/tools/internal/lsp/progress.WorkDone).Token":[[0],[0]],"(*golang.org/x/tools/internal/lsp/progress.WorkDone).doCancel":[[0]],"(*golang.org/x/tools/internal/lsp/progress.WorkDoneWriter).Write":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).Location":[[0],[1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).Offset":[[0],[0,1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).Point":[[0],[0,1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).Pos":[[0],[0,1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).Position":[[0],[1],[1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).Range":[[0],[1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).RangeSpan":[[0],[0,1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).RangeToSpanRange":[[0],[0,1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.ColumnMapper).Span":[[0],[0,1],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.CompletionItemKind).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.CompletionTriggerKind).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.DiagnosticSeverity).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.DiagnosticTag).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.DocumentHighlightKind).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.DocumentURI).SpanURI":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.FileChangeType).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.InitializeError).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.InsertTextFormat).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.MessageType).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.Range).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.SymbolKind).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.TextDocumentSaveReason).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.TextDocumentSyncKind).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.WatchKind).Format":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.clientConn).Call":[[0],[4]],"(*golang.org/x/tools/internal/lsp/protocol.clientConn).Close":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientConn).Notify":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientConnV2).Call":[[0],[4]],"(*golang.org/x/tools/internal/lsp/protocol.clientConnV2).Close":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientConnV2).Notify":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).ApplyEdit":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).Close":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).Configuration":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).Event":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).LogMessage":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).Progress":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).PublishDiagnostics":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).RegisterCapability":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).ShowDocument":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).ShowMessage":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).ShowMessageRequest":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).UnregisterCapability":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).WorkDoneProgressCreate":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.clientDispatcher).WorkspaceFolders":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.loggingStream).Close":[[0],[0]],"(*golang.org/x/tools/internal/lsp/protocol.loggingStream).Read":[[0],[],[],[0]],"(*golang.org/x/tools/internal/lsp/protocol.loggingStream).Write":[[0],[],[0]],"(*golang.org/x/tools/internal/lsp/protocol.loggingStream).logCommon":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.mapped).client":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.mapped).client$bound":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.mapped).server":[[0],[0,1]],"(*golang.org/x/tools/internal/lsp/protocol.mapped).server$bound":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.mapped).setClient":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.mapped).setClient$bound":[],"(*golang.org/x/tools/internal/lsp/protocol.mapped).setServer":[[0]],"(*golang.org/x/tools/internal/lsp/protocol.mapped).setServer$bound":[],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).CodeAction":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).CodeLens":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).CodeLensRefresh":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).ColorPresentation":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Completion":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Declaration":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Definition":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Diagnostic":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DiagnosticRefresh":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DiagnosticWorkspace":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidChange":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidChangeConfiguration":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidChangeNotebookDocument":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidChangeWatchedFiles":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidChangeWorkspaceFolders":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidClose":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidCloseNotebookDocument":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidCreateFiles":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidDeleteFiles":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidOpen":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidOpenNotebookDocument":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidRenameFiles":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidSave":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DidSaveNotebookDocument":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DocumentColor":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DocumentHighlight":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DocumentLink":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).DocumentSymbol":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).ExecuteCommand":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Exit":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).FoldingRange":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Formatting":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Hover":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Implementation":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).IncomingCalls":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Initialize":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Initialized":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).InlayHint":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).InlayHintRefresh":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).InlineValue":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).InlineValueRefresh":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).LinkedEditingRange":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).LogTrace":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Moniker":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).NonstandardRequest":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).OnTypeFormatting":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).OutgoingCalls":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).PrepareCallHierarchy":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).PrepareRename":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).PrepareTypeHierarchy":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).RangeFormatting":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).References":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Rename":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Resolve":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).ResolveCodeAction":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).ResolveCodeLens":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).ResolveCompletionItem":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).ResolveDocumentLink":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).ResolveWorkspaceSymbol":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).SelectionRange":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).SemanticTokensFull":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).SemanticTokensFullDelta":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).SemanticTokensRange":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).SemanticTokensRefresh":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).SetTrace":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Shutdown":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).SignatureHelp":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Subtypes":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Supertypes":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).Symbol":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).TypeDefinition":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).WillCreateFiles":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).WillDeleteFiles":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).WillRenameFiles":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).WillSave":[[0],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).WillSaveWaitUntil":[[0],[],[]],"(*golang.org/x/tools/internal/lsp/protocol.serverDispatcher).WorkDoneProgressCancel":[[0],[]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).Clone":[[0],[0]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).PrependText":[[0]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).String":[[0],[0]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).Write":[[0,1],[],[]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).WriteChoice":[[0]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).WriteFinalTabstop":[[0]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).WritePlaceholder":[[0]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).WriteText":[[0]],"(*golang.org/x/tools/internal/lsp/snippet.Builder).nextTabStop":[[0],[0]],"(*golang.org/x/tools/internal/memoize.Promise).Cached":[[0],[0]],"(*golang.org/x/tools/internal/memoize.Promise).Get":[[0],[0],[]],"(*golang.org/x/tools/internal/memoize.Promise).run":[[0],[0],[]],"(*golang.org/x/tools/internal/memoize.Promise).run$1":[],"(*golang.org/x/tools/internal/memoize.Promise).run$2":[],"(*golang.org/x/tools/internal/memoize.Promise).run$2$1":[],"(*golang.org/x/tools/internal/memoize.Promise).wait":[[0],[0],[]],"(*golang.org/x/tools/internal/memoize.Store).DebugOnlyIterate":[[0]],"(*golang.org/x/tools/internal/memoize.Store).Promise":[[0],[0,1,2],[]],"(*golang.org/x/tools/internal/memoize.Store).Promise$1":[],"(*golang.org/x/tools/internal/memoize.Store).Stats":[[0],[0]],"(*golang.org/x/tools/internal/persistent.Map).Clear":[[0]],"(*golang.org/x/tools/internal/persistent.Map).Clone":[[0],[0]],"(*golang.org/x/tools/internal/persistent.Map).Delete":[[0]],"(*golang.org/x/tools/internal/persistent.Map).Destroy":[[0]],"(*golang.org/x/tools/internal/persistent.Map).Get":[[0],[0],[]],"(*golang.org/x/tools/internal/persistent.Map).Range":[[0]],"(*golang.org/x/tools/internal/persistent.Map).Set":[[0,1,2,3]],"(*golang.org/x/tools/internal/persistent.Map).SetAll":[[0,1]],"(*golang.org/x/tools/internal/persistent.mapNode).decref":[[0]],"(*golang.org/x/tools/internal/persistent.mapNode).forEach":[[0]],"(*golang.org/x/tools/internal/persistent.mapNode).incref":[[0],[0]],"(*golang.org/x/tools/internal/persistent.mapNode).shallowCloneWithRef":[[0],[0]],"(*golang.org/x/tools/internal/span.Point).Column":[[0],[]],"(*golang.org/x/tools/internal/span.Point).HasOffset":[[0],[]],"(*golang.org/x/tools/internal/span.Point).HasPosition":[[0],[]],"(*golang.org/x/tools/internal/span.Point).IsValid":[[0],[]],"(*golang.org/x/tools/internal/span.Point).Line":[[0],[]],"(*golang.org/x/tools/internal/span.Point).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/span.Point).Offset":[[0],[]],"(*golang.org/x/tools/internal/span.Point).UnmarshalJSON":[[0],[]],"(*golang.org/x/tools/internal/span.Range).IsPoint":[[0],[]],"(*golang.org/x/tools/internal/span.Range).Span":[[0],[],[]],"(*golang.org/x/tools/internal/span.Span).End":[[0],[]],"(*golang.org/x/tools/internal/span.Span).Format":[[0]],"(*golang.org/x/tools/internal/span.Span).HasOffset":[[0],[]],"(*golang.org/x/tools/internal/span.Span).HasPosition":[[0],[]],"(*golang.org/x/tools/internal/span.Span).IsPoint":[[0],[]],"(*golang.org/x/tools/internal/span.Span).IsValid":[[0],[]],"(*golang.org/x/tools/internal/span.Span).MarshalJSON":[[0],[],[]],"(*golang.org/x/tools/internal/span.Span).Range":[[0],[1],[1]],"(*golang.org/x/tools/internal/span.Span).Start":[[0],[]],"(*golang.org/x/tools/internal/span.Span).URI":[[0],[]],"(*golang.org/x/tools/internal/span.Span).UnmarshalJSON":[[0],[0,1]],"(*golang.org/x/tools/internal/span.Span).WithAll":[[0],[],[1]],"(*golang.org/x/tools/internal/span.Span).WithOffset":[[0],[],[1]],"(*golang.org/x/tools/internal/span.Span).WithPosition":[[0],[],[1]],"(*golang.org/x/tools/internal/span.Span).update":[[0],[0,1]],"(*golang.org/x/tools/internal/span.URI).Filename":[[0],[]],"(*golang.org/x/tools/internal/span.URI).IsFile":[[0],[]],"(*golang.org/x/tools/internal/span.point).clean":[[0]],"(*golang.org/x/tools/internal/span.point).hasOffset":[[0],[]],"(*golang.org/x/tools/internal/span.point).hasPosition":[[0],[]],"(*golang.org/x/tools/internal/span.point).isValid":[[0],[]],"(*golang.org/x/tools/internal/span.point).isZero":[[0],[]],"(*golang.org/x/tools/internal/span.point).updateOffset":[[0,1],[0,1]],"(*golang.org/x/tools/internal/span.point).updatePosition":[[0,1],[0,1]],"(*golang.org/x/tools/internal/span.span).clean":[[0]],"(*golang.org/x/tools/internal/stack.Call).Format":[[0]],"(*golang.org/x/tools/internal/stack.Call).merge":[[0,1]],"(*golang.org/x/tools/internal/stack.Frame).Format":[[0]],"(*golang.org/x/tools/internal/stack.Frame).equal":[[0],[1]],"(*golang.org/x/tools/internal/stack.Frame).less":[[0],[1]],"(*golang.org/x/tools/internal/stack.Function).Format":[[0]],"(*golang.org/x/tools/internal/stack.Group).Format":[[0]],"(*golang.org/x/tools/internal/stack.Position).Format":[[0]],"(*golang.org/x/tools/internal/stack.Position).equal":[[0],[1]],"(*golang.org/x/tools/internal/stack.Position).less":[[0],[1]],"(*golang.org/x/tools/internal/stack.Scanner).Done":[[0],[0]],"(*golang.org/x/tools/internal/stack.Scanner).Err":[[0],[0]],"(*golang.org/x/tools/internal/stack.Scanner).Match":[[0],[0]],"(*golang.org/x/tools/internal/stack.Scanner).Next":[[0],[0]],"(*golang.org/x/tools/internal/stack.Scanner).Peek":[[0],[0]],"(*golang.org/x/tools/internal/stack.Scanner).Skip":[[0]],"(*golang.org/x/tools/internal/stack.Scanner).SkipBlank":[[0]],"(*golang.org/x/tools/internal/stack.Stack).equal":[[0],[]],"(*golang.org/x/tools/internal/stack.Stack).less":[[0],[]],"(*golang.org/x/tools/internal/stack.Summary).Format":[[0]],"(*golang.org/x/tools/internal/stack.Summary).addGoroutine":[[0]],"(*golang.org/x/tools/internal/stack.Summary).addGoroutine$1":[[]],"(*golang.org/x/tools/internal/tool.commandLineError).Error":[[0],[]],"(*golang.org/x/tools/internal/typeparams.term).String":[[0],[]],"(*golang.org/x/tools/internal/typeparams.term).disjoint":[[0],[0,1]],"(*golang.org/x/tools/internal/typeparams.term).intersect":[[0],[0,1]],"(*golang.org/x/tools/internal/typeparams.term).union":[[0],[0,1],[1]],"(*golang.org/x/tools/internal/typeparams/genericfeatures.Features).String":[[0],[]],"(*golang.org/x/tools/internal/typesinternal.ErrorCode).String":[[0],[]],"(*golang.org/x/tools/internal/xcontext.detachedContext).Deadline":[[0],[],[]],"(*golang.org/x/tools/internal/xcontext.detachedContext).Done":[[0],[]],"(*golang.org/x/tools/internal/xcontext.detachedContext).Err":[[0],[]],"(*golang.org/x/tools/internal/xcontext.detachedContext).Value":[[0],[]],"(*golang.org/x/tools/refactor/eg.Transformer).Transform":[[0],[0]],"(*golang.org/x/tools/refactor/eg.Transformer).apply":[[0],[0,2],[],[]],"(*golang.org/x/tools/refactor/eg.Transformer).matchExpr":[[0],[0,1,2]],"(*golang.org/x/tools/refactor/eg.Transformer).matchExpr$bound":[[0,1]],"(*golang.org/x/tools/refactor/eg.Transformer).matchExprs":[[0],[]],"(*golang.org/x/tools/refactor/eg.Transformer).matchSelectorExpr":[[0],[]],"(*golang.org/x/tools/refactor/eg.Transformer).matchType":[[0],[0,1,2]],"(*golang.org/x/tools/refactor/eg.Transformer).matchType$bound":[[0,1]],"(*golang.org/x/tools/refactor/eg.Transformer).matchWildcard":[[0],[]],"(*golang.org/x/tools/refactor/eg.Transformer).subst":[[0],[2,3]],"(*golang.org/x/tools/refactor/eg.Transformer).transformItem":[[0],[0,1],[],[0]],"(*golang.org/x/tools/refactor/eg.Transformer).transformItem$bound":[[0],[],[]],"(*golang.org/x/tools/refactor/eg.Transformer).wildcardObj":[[0],[0,1],[]],"(*golang.org/x/tools/refactor/importgraph.Graph).Search":[[0],[]],"(*golang.org/x/tools/refactor/importgraph.Graph).addEdge":[[0]],"(*golang.org/x/tools/refactor/rename.mover).checkValid":[[0],[0]],"(*golang.org/x/tools/refactor/rename.mover).move":[[0],[0]],"(*golang.org/x/tools/refactor/rename.renamer).check":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkExport":[[0],[]],"(*golang.org/x/tools/refactor/rename.renamer).checkInFileBlock":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkInLexicalScope":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkInLexicalScope$1":[[]],"(*golang.org/x/tools/refactor/rename.renamer).checkInLexicalScope$2":[[]],"(*golang.org/x/tools/refactor/rename.renamer).checkInLocalScope":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkInPackageBlock":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkLabel":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkMethod":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkSelections":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).checkStructField":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).docComment":[[0],[0]],"(*golang.org/x/tools/refactor/rename.renamer).errorf":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).satisfy":[[0],[0]],"(*golang.org/x/tools/refactor/rename.renamer).selectionConflict":[[0]],"(*golang.org/x/tools/refactor/rename.renamer).update":[[0],[0]],"(*golang.org/x/tools/refactor/satisfy.Finder).Find":[[0,1]],"(*golang.org/x/tools/refactor/satisfy.Finder).assign":[[0]],"(*golang.org/x/tools/refactor/satisfy.Finder).builtin":[[0],[4]],"(*golang.org/x/tools/refactor/satisfy.Finder).call":[[0]],"(*golang.org/x/tools/refactor/satisfy.Finder).compare":[[0]],"(*golang.org/x/tools/refactor/satisfy.Finder).expr":[[0],[0,1]],"(*golang.org/x/tools/refactor/satisfy.Finder).exprN":[[0],[0,1]],"(*golang.org/x/tools/refactor/satisfy.Finder).extract":[[0],[1]],"(*golang.org/x/tools/refactor/satisfy.Finder).stmt":[[0]],"(*golang.org/x/tools/refactor/satisfy.Finder).typeAssert":[[0]],"(*golang.org/x/tools/refactor/satisfy.Finder).valueSpec":[[0]],"(*hash/adler32.digest).BlockSize":[[0],[]],"(*hash/adler32.digest).MarshalBinary":[[0],[0],[]],"(*hash/adler32.digest).Reset":[[0]],"(*hash/adler32.digest).Size":[[0],[]],"(*hash/adler32.digest).Sum":[[0],[0,1]],"(*hash/adler32.digest).Sum32":[[0],[0]],"(*hash/adler32.digest).UnmarshalBinary":[[0,1],[]],"(*hash/adler32.digest).Write":[[0,1],[],[]],"(*hash/crc32.digest).BlockSize":[[0],[]],"(*hash/crc32.digest).MarshalBinary":[[0],[0],[]],"(*hash/crc32.digest).Reset":[[0]],"(*hash/crc32.digest).Size":[[0],[]],"(*hash/crc32.digest).Sum":[[0],[0,1]],"(*hash/crc32.digest).Sum32":[[0],[0]],"(*hash/crc32.digest).UnmarshalBinary":[[0,1],[]],"(*hash/crc32.digest).Write":[[0],[],[]],"(*hash/crc64.digest).BlockSize":[[0],[]],"(*hash/crc64.digest).MarshalBinary":[[0],[0],[]],"(*hash/crc64.digest).Reset":[[0]],"(*hash/crc64.digest).Size":[[0],[]],"(*hash/crc64.digest).Sum":[[0],[0,1]],"(*hash/crc64.digest).Sum64":[[0],[0]],"(*hash/crc64.digest).UnmarshalBinary":[[0,1],[]],"(*hash/crc64.digest).Write":[[0],[],[]],"(*hash/fnv.sum128).BlockSize":[[0],[]],"(*hash/fnv.sum128).MarshalBinary":[[0],[0],[]],"(*hash/fnv.sum128).Reset":[[0]],"(*hash/fnv.sum128).Size":[[0],[]],"(*hash/fnv.sum128).Sum":[[0],[0,1]],"(*hash/fnv.sum128).UnmarshalBinary":[[0,1],[]],"(*hash/fnv.sum128).Write":[[0,1],[],[]],"(*hash/fnv.sum128a).BlockSize":[[0],[]],"(*hash/fnv.sum128a).MarshalBinary":[[0],[0],[]],"(*hash/fnv.sum128a).Reset":[[0]],"(*hash/fnv.sum128a).Size":[[0],[]],"(*hash/fnv.sum128a).Sum":[[0],[0,1]],"(*hash/fnv.sum128a).UnmarshalBinary":[[0,1],[]],"(*hash/fnv.sum128a).Write":[[0,1],[],[]],"(*hash/fnv.sum32).BlockSize":[[0],[]],"(*hash/fnv.sum32).MarshalBinary":[[0],[0],[]],"(*hash/fnv.sum32).Reset":[[0]],"(*hash/fnv.sum32).Size":[[0],[]],"(*hash/fnv.sum32).Sum":[[0],[0,1]],"(*hash/fnv.sum32).Sum32":[[0],[0]],"(*hash/fnv.sum32).UnmarshalBinary":[[0,1],[]],"(*hash/fnv.sum32).Write":[[0,1],[],[]],"(*hash/fnv.sum32a).BlockSize":[[0],[]],"(*hash/fnv.sum32a).MarshalBinary":[[0],[0],[]],"(*hash/fnv.sum32a).Reset":[[0]],"(*hash/fnv.sum32a).Size":[[0],[]],"(*hash/fnv.sum32a).Sum":[[0],[0,1]],"(*hash/fnv.sum32a).Sum32":[[0],[0]],"(*hash/fnv.sum32a).UnmarshalBinary":[[0,1],[]],"(*hash/fnv.sum32a).Write":[[0,1],[],[]],"(*hash/fnv.sum64).BlockSize":[[0],[]],"(*hash/fnv.sum64).MarshalBinary":[[0],[0],[]],"(*hash/fnv.sum64).Reset":[[0]],"(*hash/fnv.sum64).Size":[[0],[]],"(*hash/fnv.sum64).Sum":[[0],[0,1]],"(*hash/fnv.sum64).Sum64":[[0],[0]],"(*hash/fnv.sum64).UnmarshalBinary":[[0,1],[]],"(*hash/fnv.sum64).Write":[[0,1],[],[]],"(*hash/fnv.sum64a).BlockSize":[[0],[]],"(*hash/fnv.sum64a).MarshalBinary":[[0],[0],[]],"(*hash/fnv.sum64a).Reset":[[0]],"(*hash/fnv.sum64a).Size":[[0],[]],"(*hash/fnv.sum64a).Sum":[[0],[0,1]],"(*hash/fnv.sum64a).Sum64":[[0],[0]],"(*hash/fnv.sum64a).UnmarshalBinary":[[0,1],[]],"(*hash/fnv.sum64a).Write":[[0,1],[],[]],"(*hash/maphash.Hash).BlockSize":[[0],[]],"(*hash/maphash.Hash).Reset":[[0]],"(*hash/maphash.Hash).Seed":[[0],[0]],"(*hash/maphash.Hash).SetSeed":[[0,1]],"(*hash/maphash.Hash).Size":[[0],[]],"(*hash/maphash.Hash).Sum":[[0],[0,1]],"(*hash/maphash.Hash).Sum64":[[0],[0]],"(*hash/maphash.Hash).Write":[[0],[],[]],"(*hash/maphash.Hash).WriteByte":[[0],[]],"(*hash/maphash.Hash).WriteString":[[0],[],[]],"(*hash/maphash.Hash).flush":[[0]],"(*hash/maphash.Hash).initSeed":[[0]],"(*html/template.Error).Error":[[0],[0]],"(*html/template.Template).AddParseTree":[[0],[0,1,2],[]],"(*html/template.Template).Clone":[[0],[0],[0]],"(*html/template.Template).DefinedTemplates":[[0],[]],"(*html/template.Template).Delims":[[0,1,2],[0,1,2]],"(*html/template.Template).Execute":[[0],[0]],"(*html/template.Template).ExecuteTemplate":[[0],[0,2]],"(*html/template.Template).Funcs":[[0],[0]],"(*html/template.Template).Lookup":[[0],[0,1]],"(*html/template.Template).Name":[[0],[0]],"(*html/template.Template).New":[[0],[0,1]],"(*html/template.Template).Option":[[0],[0]],"(*html/template.Template).Parse":[[0],[0],[]],"(*html/template.Template).ParseFS":[[0],[0],[1,2]],"(*html/template.Template).ParseFiles":[[0],[0,1],[1]],"(*html/template.Template).ParseGlob":[[0],[0,1],[1]],"(*html/template.Template).Templates":[[0],[0]],"(*html/template.Template).checkCanParse":[[0],[]],"(*html/template.Template).escape":[[0],[0]],"(*html/template.Template).lookupAndEscapeTemplate":[[0],[0,1],[0,1]],"(*html/template.Template).new":[[0],[0,1]],"(*html/template.attr).String":[[0],[]],"(*html/template.context).String":[[0],[]],"(*html/template.context).eq":[[0],[1]],"(*html/template.context).mangle":[[0],[1]],"(*html/template.delim).String":[[0],[]],"(*html/template.element).String":[[0],[]],"(*html/template.escaper).arbitraryTemplate":[[0],[0]],"(*html/template.escaper).commit":[[0]],"(*html/template.escaper).computeOutCtx":[[0],[0,1,2]],"(*html/template.escaper).editActionNode":[[0]],"(*html/template.escaper).editTemplateNode":[[0]],"(*html/template.escaper).editTextNode":[[0]],"(*html/template.escaper).escape":[[0,1,2],[0,1,2]],"(*html/template.escaper).escapeAction":[[0],[1,2]],"(*html/template.escaper).escapeBranch":[[0],[0,2]],"(*html/template.escaper).escapeList":[[0,1,2],[0,1,2]],"(*html/template.escaper).escapeListConditionally":[[0],[0,1,2],[0,1,2]],"(*html/template.escaper).escapeTemplate":[[0],[1]],"(*html/template.escaper).escapeTemplateBody":[[0],[0,1,2],[0,1,2]],"(*html/template.escaper).escapeTemplateBody$1":[[1]],"(*html/template.escaper).escapeText":[[0],[1]],"(*html/template.escaper).escapeTree":[[0],[0,1,2,3,4],[1,3]],"(*html/template.escaper).template":[[0],[0,1]],"(*html/template.jsCtx).String":[[0],[]],"(*html/template.state).String":[[0],[]],"(*html/template.urlPart).String":[[0],[]],"(*image.Alpha).AlphaAt":[[0],[0]],"(*image.Alpha).At":[[0],[0]],"(*image.Alpha).Bounds":[[0],[0]],"(*image.Alpha).ColorModel":[[0],[]],"(*image.Alpha).Opaque":[[0],[]],"(*image.Alpha).PixOffset":[[0],[0,1,2]],"(*image.Alpha).RGBA64At":[[0],[0]],"(*image.Alpha).Set":[[0]],"(*image.Alpha).SetAlpha":[[0]],"(*image.Alpha).SetRGBA64":[[0]],"(*image.Alpha).SubImage":[[0],[0,1]],"(*image.Alpha16).Alpha16At":[[0],[0]],"(*image.Alpha16).At":[[0],[0]],"(*image.Alpha16).Bounds":[[0],[0]],"(*image.Alpha16).ColorModel":[[0],[]],"(*image.Alpha16).Opaque":[[0],[]],"(*image.Alpha16).PixOffset":[[0],[0,1,2]],"(*image.Alpha16).RGBA64At":[[0],[0]],"(*image.Alpha16).Set":[[0]],"(*image.Alpha16).SetAlpha16":[[0]],"(*image.Alpha16).SetRGBA64":[[0]],"(*image.Alpha16).SubImage":[[0],[0,1]],"(*image.CMYK).At":[[0],[0]],"(*image.CMYK).Bounds":[[0],[0]],"(*image.CMYK).CMYKAt":[[0],[0]],"(*image.CMYK).ColorModel":[[0],[]],"(*image.CMYK).Opaque":[[0],[]],"(*image.CMYK).PixOffset":[[0],[0,1,2]],"(*image.CMYK).RGBA64At":[[0],[0]],"(*image.CMYK).Set":[[0]],"(*image.CMYK).SetCMYK":[[0]],"(*image.CMYK).SetRGBA64":[[0]],"(*image.CMYK).SubImage":[[0],[0,1]],"(*image.Gray).At":[[0],[0]],"(*image.Gray).Bounds":[[0],[0]],"(*image.Gray).ColorModel":[[0],[]],"(*image.Gray).GrayAt":[[0],[0]],"(*image.Gray).Opaque":[[0],[]],"(*image.Gray).PixOffset":[[0],[0,1,2]],"(*image.Gray).RGBA64At":[[0],[0]],"(*image.Gray).Set":[[0]],"(*image.Gray).SetGray":[[0]],"(*image.Gray).SetRGBA64":[[0]],"(*image.Gray).SubImage":[[0],[0,1]],"(*image.Gray16).At":[[0],[0]],"(*image.Gray16).Bounds":[[0],[0]],"(*image.Gray16).ColorModel":[[0],[]],"(*image.Gray16).Gray16At":[[0],[0]],"(*image.Gray16).Opaque":[[0],[]],"(*image.Gray16).PixOffset":[[0],[0,1,2]],"(*image.Gray16).RGBA64At":[[0],[0]],"(*image.Gray16).Set":[[0]],"(*image.Gray16).SetGray16":[[0]],"(*image.Gray16).SetRGBA64":[[0]],"(*image.Gray16).SubImage":[[0],[0,1]],"(*image.NRGBA).At":[[0],[0]],"(*image.NRGBA).Bounds":[[0],[0]],"(*image.NRGBA).ColorModel":[[0],[]],"(*image.NRGBA).NRGBAAt":[[0],[0]],"(*image.NRGBA).Opaque":[[0],[]],"(*image.NRGBA).PixOffset":[[0],[0,1,2]],"(*image.NRGBA).RGBA64At":[[0],[0]],"(*image.NRGBA).Set":[[0]],"(*image.NRGBA).SetNRGBA":[[0]],"(*image.NRGBA).SetRGBA64":[[0]],"(*image.NRGBA).SubImage":[[0],[0,1]],"(*image.NRGBA64).At":[[0],[0]],"(*image.NRGBA64).Bounds":[[0],[0]],"(*image.NRGBA64).ColorModel":[[0],[]],"(*image.NRGBA64).NRGBA64At":[[0],[0]],"(*image.NRGBA64).Opaque":[[0],[]],"(*image.NRGBA64).PixOffset":[[0],[0,1,2]],"(*image.NRGBA64).RGBA64At":[[0],[0]],"(*image.NRGBA64).Set":[[0]],"(*image.NRGBA64).SetNRGBA64":[[0]],"(*image.NRGBA64).SetRGBA64":[[0]],"(*image.NRGBA64).SubImage":[[0],[0,1]],"(*image.NYCbCrA).AOffset":[[0],[0,1,2]],"(*image.NYCbCrA).At":[[0],[0]],"(*image.NYCbCrA).Bounds":[[0],[0]],"(*image.NYCbCrA).COffset":[[0],[0,1,2]],"(*image.NYCbCrA).ColorModel":[[0],[]],"(*image.NYCbCrA).NYCbCrAAt":[[0],[0]],"(*image.NYCbCrA).Opaque":[[0],[]],"(*image.NYCbCrA).RGBA64At":[[0],[0]],"(*image.NYCbCrA).SubImage":[[0],[0,1]],"(*image.NYCbCrA).YCbCrAt":[[0],[0]],"(*image.NYCbCrA).YOffset":[[0],[0,1,2]],"(*image.Paletted).At":[[0],[0]],"(*image.Paletted).Bounds":[[0],[0]],"(*image.Paletted).ColorIndexAt":[[0],[0]],"(*image.Paletted).ColorModel":[[0],[0]],"(*image.Paletted).Opaque":[[0],[]],"(*image.Paletted).PixOffset":[[0],[0,1,2]],"(*image.Paletted).RGBA64At":[[0],[]],"(*image.Paletted).Set":[[0]],"(*image.Paletted).SetColorIndex":[[0]],"(*image.Paletted).SetRGBA64":[[0]],"(*image.Paletted).SubImage":[[0],[0,1]],"(*image.Point).Add":[[0],[1]],"(*image.Point).Div":[[0],[1]],"(*image.Point).Eq":[[0],[1]],"(*image.Point).In":[[0],[1]],"(*image.Point).Mod":[[0],[1]],"(*image.Point).Mul":[[0],[1]],"(*image.Point).String":[[0],[]],"(*image.Point).Sub":[[0],[1]],"(*image.RGBA).At":[[0],[0]],"(*image.RGBA).Bounds":[[0],[0]],"(*image.RGBA).ColorModel":[[0],[]],"(*image.RGBA).Opaque":[[0],[]],"(*image.RGBA).PixOffset":[[0],[0,1,2]],"(*image.RGBA).RGBA64At":[[0],[0]],"(*image.RGBA).RGBAAt":[[0],[0]],"(*image.RGBA).Set":[[0]],"(*image.RGBA).SetRGBA":[[0]],"(*image.RGBA).SetRGBA64":[[0]],"(*image.RGBA).SubImage":[[0],[0,1]],"(*image.RGBA64).At":[[0],[0]],"(*image.RGBA64).Bounds":[[0],[0]],"(*image.RGBA64).ColorModel":[[0],[]],"(*image.RGBA64).Opaque":[[0],[]],"(*image.RGBA64).PixOffset":[[0],[0,1,2]],"(*image.RGBA64).RGBA64At":[[0],[0]],"(*image.RGBA64).Set":[[0]],"(*image.RGBA64).SetRGBA64":[[0]],"(*image.RGBA64).SubImage":[[0],[0,1]],"(*image.Rectangle).Add":[[0],[1]],"(*image.Rectangle).At":[[0],[]],"(*image.Rectangle).Bounds":[[0],[]],"(*image.Rectangle).Canon":[[0],[]],"(*image.Rectangle).ColorModel":[[0],[]],"(*image.Rectangle).Dx":[[0],[]],"(*image.Rectangle).Dy":[[0],[]],"(*image.Rectangle).Empty":[[0],[]],"(*image.Rectangle).Eq":[[0],[1]],"(*image.Rectangle).In":[[0],[1]],"(*image.Rectangle).Inset":[[0],[1]],"(*image.Rectangle).Intersect":[[0],[1]],"(*image.Rectangle).Overlaps":[[0],[1]],"(*image.Rectangle).RGBA64At":[[0],[]],"(*image.Rectangle).Size":[[0],[]],"(*image.Rectangle).String":[[0],[]],"(*image.Rectangle).Sub":[[0],[1]],"(*image.Rectangle).Union":[[0],[1]],"(*image.Uniform).At":[[0],[0]],"(*image.Uniform).Bounds":[[0],[]],"(*image.Uniform).ColorModel":[[0],[0]],"(*image.Uniform).Convert":[[0],[0]],"(*image.Uniform).Opaque":[[0],[]],"(*image.Uniform).RGBA":[[0],[],[],[],[]],"(*image.Uniform).RGBA64At":[[0],[]],"(*image.YCbCr).At":[[0],[0]],"(*image.YCbCr).Bounds":[[0],[0]],"(*image.YCbCr).COffset":[[0],[0,1,2]],"(*image.YCbCr).ColorModel":[[0],[]],"(*image.YCbCr).Opaque":[[0],[]],"(*image.YCbCr).RGBA64At":[[0],[0]],"(*image.YCbCr).SubImage":[[0],[0,1]],"(*image.YCbCr).YCbCrAt":[[0],[0]],"(*image.YCbCr).YOffset":[[0],[0,1,2]],"(*image.YCbCrSubsampleRatio).String":[[0],[]],"(*image/color.Alpha).RGBA":[[0],[],[],[],[]],"(*image/color.Alpha16).RGBA":[[0],[],[],[],[]],"(*image/color.CMYK).RGBA":[[0],[],[],[],[]],"(*image/color.Gray).RGBA":[[0],[],[],[],[]],"(*image/color.Gray16).RGBA":[[0],[],[],[],[]],"(*image/color.NRGBA).RGBA":[[0],[],[],[],[]],"(*image/color.NRGBA64).RGBA":[[0],[],[],[],[]],"(*image/color.NYCbCrA).RGBA":[[0],[],[],[],[]],"(*image/color.Palette).Convert":[[0],[]],"(*image/color.Palette).Index":[[0],[]],"(*image/color.RGBA).RGBA":[[0],[],[],[],[]],"(*image/color.RGBA64).RGBA":[[0],[],[],[],[]],"(*image/color.YCbCr).RGBA":[[0],[],[],[],[]],"(*image/color.modelFunc).Convert":[[0],[1]],"(*image/draw.Op).Draw":[[0]],"(*image/draw.floydSteinberg).Draw":[[0]],"(*image/gif.blockReader).Read":[[0],[],[0]],"(*image/gif.blockReader).ReadByte":[[0],[0],[0]],"(*image/gif.blockReader).close":[[0],[0]],"(*image/gif.blockReader).fill":[[0]],"(*image/gif.blockWriter).Flush":[[0],[]],"(*image/gif.blockWriter).Write":[[0],[],[]],"(*image/gif.blockWriter).WriteByte":[[0],[]],"(*image/gif.blockWriter).close":[[0]],"(*image/gif.blockWriter).setup":[[0]],"(*image/gif.decoder).decode":[[0],[0]],"(*image/gif.decoder).newImageFromDescriptor":[[0],[0],[0]],"(*image/gif.decoder).readBlock":[[0],[],[0]],"(*image/gif.decoder).readColorTable":[[0],[0],[0]],"(*image/gif.decoder).readExtension":[[0],[0]],"(*image/gif.decoder).readGraphicControl":[[0],[0]],"(*image/gif.decoder).readHeaderAndScreenDescriptor":[[0],[0]],"(*image/gif.decoder).readImageDescriptor":[[0],[0]],"(*image/gif.encoder).colorTablesMatch":[[0],[0]],"(*image/gif.encoder).flush":[[0]],"(*image/gif.encoder).write":[[0]],"(*image/gif.encoder).writeByte":[[0]],"(*image/gif.encoder).writeHeader":[[0]],"(*image/gif.encoder).writeImageBlock":[[0]],"(*image/jpeg.FormatError).Error":[[0],[]],"(*image/jpeg.UnsupportedError).Error":[[0],[]],"(*image/jpeg.decoder).applyBlack":[[0],[0],[]],"(*image/jpeg.decoder).convertToRGB":[[0],[0],[]],"(*image/jpeg.decoder).decode":[[0],[0],[0]],"(*image/jpeg.decoder).decodeBit":[[0],[0],[0]],"(*image/jpeg.decoder).decodeBits":[[0,1],[0,1],[0]],"(*image/jpeg.decoder).decodeHuffman":[[0,1],[1],[0]],"(*image/jpeg.decoder).ensureNBits":[[0],[0]],"(*image/jpeg.decoder).fill":[[0],[0]],"(*image/jpeg.decoder).ignore":[[0,1],[0]],"(*image/jpeg.decoder).isRGB":[[0],[0]],"(*image/jpeg.decoder).makeImg":[[0,1,2]],"(*image/jpeg.decoder).processApp0Marker":[[0,1],[0]],"(*image/jpeg.decoder).processApp14Marker":[[0,1],[0]],"(*image/jpeg.decoder).processDHT":[[0],[0]],"(*image/jpeg.decoder).processDQT":[[0],[0]],"(*image/jpeg.decoder).processDRI":[[0],[0]],"(*image/jpeg.decoder).processSOF":[[0],[0]],"(*image/jpeg.decoder).processSOS":[[0],[0]],"(*image/jpeg.decoder).readByte":[[0],[0],[0]],"(*image/jpeg.decoder).readByteStuffedByte":[[0],[0],[0]],"(*image/jpeg.decoder).readFull":[[0],[0]],"(*image/jpeg.decoder).receiveExtend":[[0,1],[0,1],[0]],"(*image/jpeg.decoder).reconstructBlock":[[0],[]],"(*image/jpeg.decoder).reconstructProgressiveImage":[[0],[]],"(*image/jpeg.decoder).refine":[[0,2],[0]],"(*image/jpeg.decoder).refineNonZeroes":[[0],[2],[0]],"(*image/jpeg.decoder).unreadByteStuffedByte":[[0]],"(*image/jpeg.encoder).emit":[[0,1,2]],"(*image/jpeg.encoder).emitHuff":[[0]],"(*image/jpeg.encoder).emitHuffRLE":[[0,3]],"(*image/jpeg.encoder).flush":[[0]],"(*image/jpeg.encoder).write":[[0]],"(*image/jpeg.encoder).writeBlock":[[0,1,3],[0,1]],"(*image/jpeg.encoder).writeByte":[[0]],"(*image/jpeg.encoder).writeDHT":[[0]],"(*image/jpeg.encoder).writeDQT":[[0]],"(*image/jpeg.encoder).writeMarkerHeader":[[0]],"(*image/jpeg.encoder).writeSOF0":[[0]],"(*image/jpeg.encoder).writeSOS":[[0]],"(*image/jpeg.huffmanLUT).init":[[0]],"(*image/png.Encoder).Encode":[[0],[0,1,2]],"(*image/png.FormatError).Error":[[0],[]],"(*image/png.UnsupportedError).Error":[[0],[]],"(*image/png.decoder).Read":[[0],[],[0]],"(*image/png.decoder).checkHeader":[[0],[0]],"(*image/png.decoder).decode":[[0],[0],[0]],"(*image/png.decoder).mergePassInto":[[0]],"(*image/png.decoder).parseChunk":[[0],[0]],"(*image/png.decoder).parseIDAT":[[0,1],[0]],"(*image/png.decoder).parseIEND":[[0],[0]],"(*image/png.decoder).parseIHDR":[[0],[0]],"(*image/png.decoder).parsePLTE":[[0],[0]],"(*image/png.decoder).parsetRNS":[[0],[0]],"(*image/png.decoder).readImagePass":[[0],[0],[1]],"(*image/png.decoder).verifyChecksum":[[0],[0]],"(*image/png.encoder).Write":[[0],[],[0]],"(*image/png.encoder).writeChunk":[[0,2]],"(*image/png.encoder).writeIDATs":[[0]],"(*image/png.encoder).writeIEND":[[0]],"(*image/png.encoder).writeIHDR":[[0]],"(*image/png.encoder).writeImage":[[0,1,4],[0,1,4]],"(*image/png.encoder).writePLTEAndTRNS":[[0]],"(*index/suffixarray.Index).Bytes":[[0],[0]],"(*index/suffixarray.Index).FindAllIndex":[[0],[0,1]],"(*index/suffixarray.Index).Lookup":[[0],[0]],"(*index/suffixarray.Index).Read":[[0],[1]],"(*index/suffixarray.Index).Write":[[0],[1]],"(*index/suffixarray.Index).at":[[0],[0]],"(*index/suffixarray.Index).lookupAll":[[0],[0]],"(*index/suffixarray.Index).lookupAll$1":[[]],"(*index/suffixarray.Index).lookupAll$2":[[]],"(*index/suffixarray.ints).get":[[0],[0]],"(*index/suffixarray.ints).len":[[0],[]],"(*index/suffixarray.ints).set":[[0]],"(*index/suffixarray.ints).slice":[[0],[0]],"(*internal/abi.IntArgRegBitmap).Get":[[0],[0,1]],"(*internal/abi.IntArgRegBitmap).Set":[[0,1]],"(*internal/abi.RegArgs).Dump":[[0]],"(*internal/abi.RegArgs).IntRegArgAddr":[[0],[0,2]],"(*internal/buildcfg.ExperimentFlags).All":[[0],[0]],"(*internal/buildcfg.ExperimentFlags).Enabled":[[0],[0]],"(*internal/buildcfg.ExperimentFlags).String":[[0],[0]],"(*internal/buildcfg.gowasmFeatures).String":[[0],[]],"(*internal/fmtsort.SortedMap).Len":[[0],[]],"(*internal/fmtsort.SortedMap).Less":[[0],[]],"(*internal/fmtsort.SortedMap).Swap":[[0]],"(*internal/goroot.gccgoDirs).init":[[0]],"(*internal/goroot.gccgoDirs).init$bound":[],"(*internal/goroot.gccgoDirs).isStandard":[[0],[]],"(*internal/intern.Value).Get":[[0],[0]],"(*internal/lazyregexp.Regexp).FindAllString":[[0],[]],"(*internal/lazyregexp.Regexp).FindString":[[0],[1]],"(*internal/lazyregexp.Regexp).FindStringSubmatch":[[0],[1]],"(*internal/lazyregexp.Regexp).FindStringSubmatchIndex":[[0],[0,1]],"(*internal/lazyregexp.Regexp).FindSubmatch":[[0],[1]],"(*internal/lazyregexp.Regexp).MatchString":[[0],[0,1]],"(*internal/lazyregexp.Regexp).ReplaceAllString":[[0],[1]],"(*internal/lazyregexp.Regexp).SubexpNames":[[0],[0]],"(*internal/lazyregexp.Regexp).build":[[0]],"(*internal/lazyregexp.Regexp).build$bound":[],"(*internal/lazyregexp.Regexp).re":[[0],[0]],"(*internal/pkgbits.CodeObj).Marker":[[0],[]],"(*internal/pkgbits.CodeObj).Value":[[0],[]],"(*internal/pkgbits.CodeType).Marker":[[0],[]],"(*internal/pkgbits.CodeType).Value":[[0],[]],"(*internal/pkgbits.CodeVal).Marker":[[0],[]],"(*internal/pkgbits.CodeVal).Value":[[0],[]],"(*internal/pkgbits.Decoder).Bool":[[0],[0]],"(*internal/pkgbits.Decoder).Code":[[0],[]],"(*internal/pkgbits.Decoder).Int":[[0],[]],"(*internal/pkgbits.Decoder).Int64":[[0],[]],"(*internal/pkgbits.Decoder).Len":[[0],[]],"(*internal/pkgbits.Decoder).Reloc":[[0],[0]],"(*internal/pkgbits.Decoder).String":[[0],[0]],"(*internal/pkgbits.Decoder).Strings":[[0],[0]],"(*internal/pkgbits.Decoder).Sync":[[0]],"(*internal/pkgbits.Decoder).Uint":[[0],[]],"(*internal/pkgbits.Decoder).Uint64":[[0],[]],"(*internal/pkgbits.Decoder).Value":[[0],[0]],"(*internal/pkgbits.Decoder).bigFloat":[[0],[0]],"(*internal/pkgbits.Decoder).bigInt":[[0],[0]],"(*internal/pkgbits.Decoder).checkErr":[[0]],"(*internal/pkgbits.Decoder).rawReloc":[[0],[0]],"(*internal/pkgbits.Decoder).rawUvarint":[[0],[]],"(*internal/pkgbits.Decoder).rawVarint":[[0],[]],"(*internal/pkgbits.Decoder).scalar":[[0],[0]],"(*internal/pkgbits.Encoder).Bool":[[0],[1]],"(*internal/pkgbits.Encoder).Code":[[0]],"(*internal/pkgbits.Encoder).Flush":[[0],[0]],"(*internal/pkgbits.Encoder).Int":[[0]],"(*internal/pkgbits.Encoder).Int64":[[0]],"(*internal/pkgbits.Encoder).Len":[[0]],"(*internal/pkgbits.Encoder).Reloc":[[0]],"(*internal/pkgbits.Encoder).String":[[0]],"(*internal/pkgbits.Encoder).Strings":[[0]],"(*internal/pkgbits.Encoder).Sync":[[0]],"(*internal/pkgbits.Encoder).Uint":[[0]],"(*internal/pkgbits.Encoder).Uint64":[[0]],"(*internal/pkgbits.Encoder).Value":[[0]],"(*internal/pkgbits.Encoder).bigFloat":[[0]],"(*internal/pkgbits.Encoder).bigInt":[[0]],"(*internal/pkgbits.Encoder).checkErr":[[0]],"(*internal/pkgbits.Encoder).rawReloc":[[0,1,2],[]],"(*internal/pkgbits.Encoder).rawUvarint":[[0]],"(*internal/pkgbits.Encoder).rawVarint":[[0]],"(*internal/pkgbits.Encoder).scalar":[[0]],"(*internal/pkgbits.PkgDecoder).AbsIdx":[[0],[0,2]],"(*internal/pkgbits.PkgDecoder).DataIdx":[[0],[0]],"(*internal/pkgbits.PkgDecoder).Fingerprint":[[0],[]],"(*internal/pkgbits.PkgDecoder).NewDecoder":[[0],[0,1,2]],"(*internal/pkgbits.PkgDecoder).NewDecoderRaw":[[0],[0,1,2]],"(*internal/pkgbits.PkgDecoder).NumElems":[[0],[0]],"(*internal/pkgbits.PkgDecoder).PeekObj":[[0],[0,1],[0,1],[]],"(*internal/pkgbits.PkgDecoder).PeekPkgPath":[[0],[0,1]],"(*internal/pkgbits.PkgDecoder).PkgPath":[[0],[0]],"(*internal/pkgbits.PkgDecoder).StringIdx":[[0],[0]],"(*internal/pkgbits.PkgDecoder).TotalElems":[[0],[]],"(*internal/pkgbits.PkgEncoder).DumpTo":[[0],[]],"(*internal/pkgbits.PkgEncoder).DumpTo$1":[],"(*internal/pkgbits.PkgEncoder).NewEncoder":[[0],[0,1]],"(*internal/pkgbits.PkgEncoder).NewEncoderRaw":[[0],[0,1]],"(*internal/pkgbits.PkgEncoder).StringIdx":[[0],[0,1]],"(*internal/pkgbits.SyncMarker).String":[[0],[]],"(*internal/poll.DeadlineExceededError).Error":[[0],[]],"(*internal/poll.DeadlineExceededError).Temporary":[[0],[]],"(*internal/poll.DeadlineExceededError).Timeout":[[0],[]],"(*internal/poll.FD).Accept":[[0],[],[],[],[]],"(*internal/poll.FD).Close":[[0],[]],"(*internal/poll.FD).Dup":[[0],[],[],[]],"(*internal/poll.FD).Fchdir":[[0],[]],"(*internal/poll.FD).Fchmod":[[0],[]],"(*internal/poll.FD).Fchmod$1":[[]],"(*internal/poll.FD).Fchown":[[0],[]],"(*internal/poll.FD).Fchown$1":[[]],"(*internal/poll.FD).Fstat":[[0],[]],"(*internal/poll.FD).Fstat$1":[[]],"(*internal/poll.FD).Fsync":[[0],[]],"(*internal/poll.FD).Fsync$1":[[]],"(*internal/poll.FD).Ftruncate":[[0],[]],"(*internal/poll.FD).Ftruncate$1":[[]],"(*internal/poll.FD).Init":[[0],[]],"(*internal/poll.FD).OpenDir":[[0],[],[],[]],"(*internal/poll.FD).Pread":[[0],[],[]],"(*internal/poll.FD).Pwrite":[[0],[],[]],"(*internal/poll.FD).RawControl":[[0],[]],"(*internal/poll.FD).RawRead":[[0],[]],"(*internal/poll.FD).RawWrite":[[0],[]],"(*internal/poll.FD).Read":[[0],[],[]],"(*internal/poll.FD).ReadDirent":[[0],[],[]],"(*internal/poll.FD).ReadFrom":[[0],[],[],[]],"(*internal/poll.FD).ReadFromInet4":[[0],[],[]],"(*internal/poll.FD).ReadFromInet6":[[0],[],[]],"(*internal/poll.FD).ReadMsg":[[0],[],[1,2],[1,2],[],[]],"(*internal/poll.FD).ReadMsgInet4":[[0],[],[],[],[]],"(*internal/poll.FD).ReadMsgInet6":[[0],[],[],[],[]],"(*internal/poll.FD).Seek":[[0],[],[]],"(*internal/poll.FD).SetBlocking":[[0],[]],"(*internal/poll.FD).SetDeadline":[[0],[]],"(*internal/poll.FD).SetReadDeadline":[[0],[]],"(*internal/poll.FD).SetWriteDeadline":[[0],[]],"(*internal/poll.FD).SetsockoptByte":[[0],[]],"(*internal/poll.FD).SetsockoptIPMreq":[[0],[]],"(*internal/poll.FD).SetsockoptIPv6Mreq":[[0],[]],"(*internal/poll.FD).SetsockoptInet4Addr":[[0],[]],"(*internal/poll.FD).SetsockoptInt":[[0],[]],"(*internal/poll.FD).SetsockoptLinger":[[0],[]],"(*internal/poll.FD).Shutdown":[[0],[]],"(*internal/poll.FD).WaitWrite":[[0],[]],"(*internal/poll.FD).Write":[[0],[],[]],"(*internal/poll.FD).WriteMsg":[[0],[],[],[]],"(*internal/poll.FD).WriteMsgInet4":[[0],[],[],[]],"(*internal/poll.FD).WriteMsgInet6":[[0],[],[],[]],"(*internal/poll.FD).WriteOnce":[[0],[],[]],"(*internal/poll.FD).WriteTo":[[0],[],[]],"(*internal/poll.FD).WriteToInet4":[[0],[],[]],"(*internal/poll.FD).WriteToInet6":[[0],[],[]],"(*internal/poll.FD).Writev":[[0],[],[]],"(*internal/poll.FD).decref":[[0],[]],"(*internal/poll.FD).destroy":[[0],[]],"(*internal/poll.FD).eofError":[[0],[2]],"(*internal/poll.FD).incref":[[0],[]],"(*internal/poll.FD).readLock":[[0],[]],"(*internal/poll.FD).readUnlock":[[0]],"(*internal/poll.FD).writeLock":[[0],[]],"(*internal/poll.FD).writeUnlock":[[0]],"(*internal/poll.errNetClosing).Error":[[0],[]],"(*internal/poll.errNetClosing).Temporary":[[0],[]],"(*internal/poll.errNetClosing).Timeout":[[0],[]],"(*internal/poll.fdMutex).decref":[[0],[]],"(*internal/poll.fdMutex).incref":[[0],[]],"(*internal/poll.fdMutex).increfAndClose":[[0],[]],"(*internal/poll.fdMutex).rwlock":[[0],[]],"(*internal/poll.fdMutex).rwunlock":[[0],[]],"(*internal/poll.pollDesc).close":[[0]],"(*internal/poll.pollDesc).evict":[[0]],"(*internal/poll.pollDesc).init":[[0],[]],"(*internal/poll.pollDesc).pollable":[[0],[0]],"(*internal/poll.pollDesc).prepare":[[0],[]],"(*internal/poll.pollDesc).prepareRead":[[0],[]],"(*internal/poll.pollDesc).prepareWrite":[[0],[]],"(*internal/poll.pollDesc).wait":[[0],[]],"(*internal/poll.pollDesc).waitCanceled":[[0]],"(*internal/poll.pollDesc).waitRead":[[0],[]],"(*internal/poll.pollDesc).waitWrite":[[0],[]],"(*internal/profile.Function).decoder":[[0],[]],"(*internal/profile.Function).encode":[[0]],"(*internal/profile.Function).key":[[0],[0]],"(*internal/profile.Label).decoder":[[0],[]],"(*internal/profile.Label).encode":[[0]],"(*internal/profile.Line).decoder":[[0],[]],"(*internal/profile.Line).encode":[[0]],"(*internal/profile.Location).decoder":[[0],[]],"(*internal/profile.Location).encode":[[0]],"(*internal/profile.Location).key":[[0],[0]],"(*internal/profile.Location).matchesName":[[0],[]],"(*internal/profile.Location).unmatchedLines":[[0],[0]],"(*internal/profile.Mapping).decoder":[[0],[]],"(*internal/profile.Mapping).encode":[[0]],"(*internal/profile.Mapping).key":[[0],[0]],"(*internal/profile.Profile).Aggregate":[[0],[0]],"(*internal/profile.Profile).CheckValid":[[0],[0]],"(*internal/profile.Profile).Compatible":[[0],[0,1]],"(*internal/profile.Profile).Copy":[[0],[]],"(*internal/profile.Profile).Demangle":[[0],[]],"(*internal/profile.Profile).Empty":[[0],[]],"(*internal/profile.Profile).FilterSamplesByName":[[0],[],[],[]],"(*internal/profile.Profile).FilterSamplesByTag":[[0],[1],[]],"(*internal/profile.Profile).HasFileLines":[[0],[]],"(*internal/profile.Profile).HasFunctions":[[0],[]],"(*internal/profile.Profile).Merge":[[0],[0,1]],"(*internal/profile.Profile).Normalize":[[0],[0,1]],"(*internal/profile.Profile).ParseMemoryMap":[[0,1],[1]],"(*internal/profile.Profile).Prune":[[0]],"(*internal/profile.Profile).RemoveUninteresting":[[0],[0]],"(*internal/profile.Profile).Scale":[[0]],"(*internal/profile.Profile).ScaleN":[[0],[]],"(*internal/profile.Profile).String":[[0],[0]],"(*internal/profile.Profile).Write":[[0],[1]],"(*internal/profile.Profile).addLegacyFrameInfo":[[0]],"(*internal/profile.Profile).compatible":[[0],[0,1]],"(*internal/profile.Profile).decoder":[[0],[]],"(*internal/profile.Profile).encode":[[0]],"(*internal/profile.Profile).postDecode":[[0],[0]],"(*internal/profile.Profile).preEncode":[[0]],"(*internal/profile.Profile).remapFunctionIDs":[[0]],"(*internal/profile.Profile).remapLocationIDs":[[0]],"(*internal/profile.Profile).remapMappingIDs":[[0]],"(*internal/profile.Profile).setMain":[[0]],"(*internal/profile.Sample).decoder":[[0],[]],"(*internal/profile.Sample).encode":[[0]],"(*internal/profile.Sample).key":[[0],[0]],"(*internal/profile.ValueType).decoder":[[0],[]],"(*internal/profile.ValueType).encode":[[0]],"(*internal/profile.profileMerger).mapFunction":[[0,1],[0,1]],"(*internal/profile.profileMerger).mapLine":[[0,1],[0,1]],"(*internal/profile.profileMerger).mapLocation":[[0,1],[0,1]],"(*internal/profile.profileMerger).mapMapping":[[0,1],[0,1]],"(*internal/profile.profileMerger).mapSample":[[0,1],[0,1]],"(*internal/reflectlite.Kind).String":[[0],[]],"(*internal/reflectlite.Value).CanSet":[[0],[]],"(*internal/reflectlite.Value).Elem":[[0],[]],"(*internal/reflectlite.Value).IsNil":[[0],[]],"(*internal/reflectlite.Value).IsValid":[[0],[]],"(*internal/reflectlite.Value).Kind":[[0],[]],"(*internal/reflectlite.Value).Len":[[0],[]],"(*internal/reflectlite.Value).Set":[[0]],"(*internal/reflectlite.Value).Type":[[0],[]],"(*internal/reflectlite.Value).assignTo":[[0],[2,3]],"(*internal/reflectlite.Value).kind":[[0],[0]],"(*internal/reflectlite.Value).mustBeAssignable":[[0]],"(*internal/reflectlite.Value).mustBeExported":[[0]],"(*internal/reflectlite.Value).numMethod":[[0],[]],"(*internal/reflectlite.Value).pointer":[[0],[]],"(*internal/reflectlite.Value).ro":[[0],[]],"(*internal/reflectlite.ValueError).Error":[[0],[0]],"(*internal/reflectlite.flag).kind":[[0],[]],"(*internal/reflectlite.flag).mustBeAssignable":[[0]],"(*internal/reflectlite.flag).mustBeExported":[[0]],"(*internal/reflectlite.flag).ro":[[0],[]],"(*internal/reflectlite.funcType).in":[[0],[0]],"(*internal/reflectlite.funcType).out":[[0],[0]],"(*internal/reflectlite.interfaceType).NumMethod":[[0],[]],"(*internal/reflectlite.name).data":[[0],[1]],"(*internal/reflectlite.name).embedded":[[0],[]],"(*internal/reflectlite.name).hasTag":[[0],[]],"(*internal/reflectlite.name).isExported":[[0],[]],"(*internal/reflectlite.name).name":[[0],[]],"(*internal/reflectlite.name).pkgPath":[[0],[]],"(*internal/reflectlite.name).readVarint":[[0],[],[1]],"(*internal/reflectlite.name).tag":[[0],[]],"(*internal/reflectlite.rtype).AssignableTo":[[0],[]],"(*internal/reflectlite.rtype).Comparable":[[0],[0]],"(*internal/reflectlite.rtype).Elem":[[0],[0]],"(*internal/reflectlite.rtype).Implements":[[0],[]],"(*internal/reflectlite.rtype).In":[[0],[0]],"(*internal/reflectlite.rtype).Key":[[0],[0]],"(*internal/reflectlite.rtype).Kind":[[0],[0]],"(*internal/reflectlite.rtype).Len":[[0],[0]],"(*internal/reflectlite.rtype).Name":[[0],[]],"(*internal/reflectlite.rtype).NumField":[[0],[]],"(*internal/reflectlite.rtype).NumIn":[[0],[0]],"(*internal/reflectlite.rtype).NumMethod":[[0],[]],"(*internal/reflectlite.rtype).NumOut":[[0],[]],"(*internal/reflectlite.rtype).Out":[[0],[0]],"(*internal/reflectlite.rtype).PkgPath":[[0],[]],"(*internal/reflectlite.rtype).Size":[[0],[0]],"(*internal/reflectlite.rtype).String":[[0],[]],"(*internal/reflectlite.rtype).chanDir":[[0],[0]],"(*internal/reflectlite.rtype).common":[[0],[0]],"(*internal/reflectlite.rtype).exportedMethods":[[0],[0]],"(*internal/reflectlite.rtype).hasName":[[0],[0]],"(*internal/reflectlite.rtype).nameOff":[[0],[]],"(*internal/reflectlite.rtype).pointers":[[0],[0]],"(*internal/reflectlite.rtype).typeOff":[[0],[]],"(*internal/reflectlite.rtype).uncommon":[[0],[0]],"(*internal/reflectlite.structField).embedded":[[0],[0]],"(*internal/reflectlite.uncommonType).exportedMethods":[[0],[0]],"(*internal/reflectlite.uncommonType).methods":[[0],[0]],"(*internal/singleflight.Group).Do":[[0],[0,1],[0,1],[]],"(*internal/singleflight.Group).DoChan":[[0],[],[]],"(*internal/singleflight.Group).ForgetUnshared":[[0],[]],"(*internal/singleflight.Group).doCall":[[0]],"(*internal/sysinfo.cpuInfo).Name":[[0],[0]],"(*internal/sysinfo.cpuInfo).Name$1":[],"(*internal/xcoff.Archive).Close":[[0],[0]],"(*internal/xcoff.Archive).GetFile":[[0],[],[0,1]],"(*internal/xcoff.File).CSect":[[0],[]],"(*internal/xcoff.File).Close":[[0],[0]],"(*internal/xcoff.File).DWARF":[[0],[],[]],"(*internal/xcoff.File).ImportedLibraries":[[0],[],[0]],"(*internal/xcoff.File).ImportedSymbols":[[0],[],[0]],"(*internal/xcoff.File).Section":[[0],[0]],"(*internal/xcoff.File).SectionByType":[[0],[0]],"(*internal/xcoff.File).readImportIDs":[[0],[],[1]],"(*internal/xcoff.Section).Data":[[0],[],[]],"(*internal/xcoff.Section).ReadAt":[[0],[],[]],"(*internal/xcoff.zeroReaderAt).ReadAt":[[0],[],[]],"(*io.LimitedReader).Read":[[0],[],[0]],"(*io.PipeReader).Close":[[0],[]],"(*io.PipeReader).CloseWithError":[[0],[]],"(*io.PipeReader).Read":[[0],[],[0]],"(*io.PipeWriter).Close":[[0],[]],"(*io.PipeWriter).CloseWithError":[[0],[]],"(*io.PipeWriter).Write":[[0],[0],[0]],"(*io.SectionReader).Read":[[0],[],[]],"(*io.SectionReader).ReadAt":[[0],[],[]],"(*io.SectionReader).Seek":[[0,1],[0,1],[]],"(*io.SectionReader).Size":[[0],[0]],"(*io.discard).ReadFrom":[[0],[],[1]],"(*io.discard).Write":[[0],[],[]],"(*io.discard).WriteString":[[0],[],[]],"(*io.eofReader).Read":[[0],[],[]],"(*io.multiReader).Read":[[0],[],[0]],"(*io.multiReader).WriteTo":[[0],[],[0,1]],"(*io.multiReader).writeToWithBuffer":[[0],[],[0,1]],"(*io.multiWriter).Write":[[0],[],[0]],"(*io.multiWriter).WriteString":[[0],[],[0]],"(*io.nopCloser).Close":[[0],[]],"(*io.nopCloser).Read":[[0],[],[0]],"(*io.nopCloserWriterTo).Close":[[0],[]],"(*io.nopCloserWriterTo).Read":[[0],[],[0]],"(*io.nopCloserWriterTo).WriteTo":[[0],[],[1]],"(*io.onceError).Load":[[0],[0]],"(*io.onceError).Lock":[[0]],"(*io.onceError).Store":[[0,1]],"(*io.onceError).TryLock":[[0],[]],"(*io.onceError).Unlock":[[0]],"(*io.onceError).lockSlow":[[0]],"(*io.onceError).unlockSlow":[[0]],"(*io.pipe).closeRead":[[0],[]],"(*io.pipe).closeRead$1":[],"(*io.pipe).closeWrite":[[0],[]],"(*io.pipe).closeWrite$1":[],"(*io.pipe).read":[[0],[],[0]],"(*io.pipe).readCloseError":[[0],[0]],"(*io.pipe).write":[[0],[0],[0]],"(*io.pipe).writeCloseError":[[0],[0]],"(*io.teeReader).Read":[[0],[],[0]],"(*io/fs.FileMode).IsDir":[[0],[]],"(*io/fs.FileMode).IsRegular":[[0],[]],"(*io/fs.FileMode).Perm":[[0],[]],"(*io/fs.FileMode).String":[[0],[]],"(*io/fs.FileMode).Type":[[0],[]],"(*io/fs.PathError).Error":[[0],[0]],"(*io/fs.PathError).Timeout":[[0],[]],"(*io/fs.PathError).Unwrap":[[0],[0]],"(*io/fs.dirInfo).Info":[[0],[],[]],"(*io/fs.dirInfo).IsDir":[[0],[]],"(*io/fs.dirInfo).Name":[[0],[]],"(*io/fs.dirInfo).Type":[[0],[]],"(*io/fs.statDirEntry).Info":[[0],[0],[]],"(*io/fs.statDirEntry).IsDir":[[0],[]],"(*io/fs.statDirEntry).Name":[[0],[0]],"(*io/fs.statDirEntry).Type":[[0],[]],"(*io/fs.subFS).Glob":[[0],[],[0]],"(*io/fs.subFS).Open":[[0],[],[0,1]],"(*io/fs.subFS).ReadDir":[[0],[0],[0,1]],"(*io/fs.subFS).ReadFile":[[0],[],[1]],"(*io/fs.subFS).Sub":[[0],[0,1],[1]],"(*io/fs.subFS).fixErr":[[0],[1]],"(*io/fs.subFS).fullName":[[0],[0,2],[1,2]],"(*io/fs.subFS).shorten":[[0],[1],[]],"(*log.Logger).Fatal":[[0]],"(*log.Logger).Fatalf":[[0]],"(*log.Logger).Fatalln":[[0,1]],"(*log.Logger).Flags":[[0],[0]],"(*log.Logger).Output":[[0,2],[0,2]],"(*log.Logger).Panic":[[0]],"(*log.Logger).Panicf":[[0]],"(*log.Logger).Panicln":[[0]],"(*log.Logger).Prefix":[[0],[0]],"(*log.Logger).Print":[[0]],"(*log.Logger).Printf":[[0]],"(*log.Logger).Println":[[0,1]],"(*log.Logger).SetFlags":[[0,1]],"(*log.Logger).SetOutput":[[0,1]],"(*log.Logger).SetPrefix":[[0,1]],"(*log.Logger).Writer":[[0],[0]],"(*log.Logger).formatHeader":[[0]],"(*log/syslog.Writer).Alert":[[0],[0]],"(*log/syslog.Writer).Close":[[0],[0]],"(*log/syslog.Writer).Crit":[[0],[0]],"(*log/syslog.Writer).Debug":[[0],[0]],"(*log/syslog.Writer).Emerg":[[0],[0]],"(*log/syslog.Writer).Err":[[0],[0]],"(*log/syslog.Writer).Info":[[0],[0]],"(*log/syslog.Writer).Notice":[[0],[0]],"(*log/syslog.Writer).Warning":[[0],[0]],"(*log/syslog.Writer).Write":[[0],[],[0]],"(*log/syslog.Writer).connect":[[0],[0]],"(*log/syslog.Writer).write":[[0],[],[0]],"(*log/syslog.Writer).writeAndRetry":[[0],[],[0]],"(*log/syslog.netConn).close":[[0],[0]],"(*log/syslog.netConn).writeString":[[0],[0]],"(*math/big.Accuracy).String":[[0],[]],"(*math/big.ErrNaN).Error":[[0],[]],"(*math/big.Float).Abs":[[0,1],[0,1]],"(*math/big.Float).Acc":[[0],[0]],"(*math/big.Float).Add":[[0,1,2],[0,1,2]],"(*math/big.Float).Append":[[0],[0,1,2]],"(*math/big.Float).Cmp":[[0],[]],"(*math/big.Float).Copy":[[0,1],[0,1]],"(*math/big.Float).Float32":[[0],[0],[0]],"(*math/big.Float).Float64":[[0],[0],[0]],"(*math/big.Float).Format":[[0]],"(*math/big.Float).GobDecode":[[0,1],[1]],"(*math/big.Float).GobEncode":[[0],[0],[]],"(*math/big.Float).Int":[[0],[0,1],[]],"(*math/big.Float).Int64":[[0],[0],[]],"(*math/big.Float).IsInf":[[0],[0]],"(*math/big.Float).IsInt":[[0],[0]],"(*math/big.Float).MantExp":[[0],[0]],"(*math/big.Float).MarshalText":[[0],[0],[]],"(*math/big.Float).MinPrec":[[0],[]],"(*math/big.Float).Mode":[[0],[0]],"(*math/big.Float).Mul":[[0,1,2],[0,1,2]],"(*math/big.Float).Neg":[[0,1],[0,1]],"(*math/big.Float).Parse":[[0,1,2],[0,1,2],[2],[1]],"(*math/big.Float).Prec":[[0],[0]],"(*math/big.Float).Quo":[[0,1,2],[0,1,2]],"(*math/big.Float).Rat":[[0],[0,1],[]],"(*math/big.Float).Scan":[[0],[]],"(*math/big.Float).Set":[[0,1],[0,1]],"(*math/big.Float).SetFloat64":[[0,1],[0,1]],"(*math/big.Float).SetInf":[[0,1],[0,1]],"(*math/big.Float).SetInt":[[0,1],[0,1]],"(*math/big.Float).SetInt64":[[0,1],[0,1]],"(*math/big.Float).SetMantExp":[[0,1],[0,1]],"(*math/big.Float).SetMode":[[0,1],[0,1]],"(*math/big.Float).SetPrec":[[0,1],[0,1]],"(*math/big.Float).SetRat":[[0,1],[0,1]],"(*math/big.Float).SetString":[[0,1],[0,1],[]],"(*math/big.Float).SetUint64":[[0,1],[0,1]],"(*math/big.Float).Sign":[[0],[]],"(*math/big.Float).Signbit":[[0],[0]],"(*math/big.Float).Sqrt":[[0,1],[0,1]],"(*math/big.Float).String":[[0],[0]],"(*math/big.Float).Sub":[[0,1,2],[0,1,2]],"(*math/big.Float).Text":[[0],[0,1]],"(*math/big.Float).Uint64":[[0],[0],[]],"(*math/big.Float).UnmarshalText":[[0,1],[1]],"(*math/big.Float).fmtB":[[0],[0,1]],"(*math/big.Float).fmtP":[[0],[0,1]],"(*math/big.Float).fmtX":[[0],[0,1]],"(*math/big.Float).ord":[[0],[]],"(*math/big.Float).pow5":[[0],[0]],"(*math/big.Float).round":[[0]],"(*math/big.Float).scan":[[0,2],[0,2],[2],[]],"(*math/big.Float).setBits64":[[0,1,2],[0,1,2]],"(*math/big.Float).setExpAndRound":[[0]],"(*math/big.Float).sqrtInverse":[[0,1]],"(*math/big.Float).sqrtInverse$1":[[0]],"(*math/big.Float).uadd":[[0]],"(*math/big.Float).ucmp":[[0],[]],"(*math/big.Float).umul":[[0]],"(*math/big.Float).uquo":[[0]],"(*math/big.Float).usub":[[0,1,2]],"(*math/big.Float).validate":[[0]],"(*math/big.Int).Abs":[[0,1],[0,1]],"(*math/big.Int).Add":[[0,1,2],[0,1,2]],"(*math/big.Int).And":[[0,1,2],[0,1,2]],"(*math/big.Int).AndNot":[[0,1,2],[0,1,2]],"(*math/big.Int).Append":[[0],[1]],"(*math/big.Int).Binomial":[[0,1,2],[0,1,2]],"(*math/big.Int).Bit":[[0],[0,1]],"(*math/big.Int).BitLen":[[0],[0]],"(*math/big.Int).Bits":[[0],[0]],"(*math/big.Int).Bytes":[[0],[]],"(*math/big.Int).Cmp":[[0],[]],"(*math/big.Int).CmpAbs":[[0],[]],"(*math/big.Int).Div":[[0,1,2],[0,1,2]],"(*math/big.Int).DivMod":[[0,1,2],[0,1,2],[2,3]],"(*math/big.Int).Exp":[[0,1,2,3],[0,1,2,3]],"(*math/big.Int).FillBytes":[[0],[1]],"(*math/big.Int).Format":[[0]],"(*math/big.Int).GCD":[[0,3,4],[0,3,4]],"(*math/big.Int).GobDecode":[[0,1],[1]],"(*math/big.Int).GobEncode":[[0],[],[]],"(*math/big.Int).Int64":[[0],[0]],"(*math/big.Int).IsInt64":[[0],[0]],"(*math/big.Int).IsUint64":[[0],[]],"(*math/big.Int).Lsh":[[0,1],[0,1]],"(*math/big.Int).MarshalJSON":[[0],[0],[]],"(*math/big.Int).MarshalText":[[0],[0],[]],"(*math/big.Int).Mod":[[0,2],[0,2]],"(*math/big.Int).ModInverse":[[0,2],[0,2]],"(*math/big.Int).ModSqrt":[[0,1,2],[0,1,2]],"(*math/big.Int).Mul":[[0,1,2],[0,1,2]],"(*math/big.Int).MulRange":[[0,1,2],[0,1,2]],"(*math/big.Int).Neg":[[0,1],[0,1]],"(*math/big.Int).Not":[[0,1],[0,1]],"(*math/big.Int).Or":[[0,1,2],[0,1,2]],"(*math/big.Int).ProbablyPrime":[[0],[0]],"(*math/big.Int).Quo":[[0,1,2],[0,1,2]],"(*math/big.Int).QuoRem":[[0,1,2],[0,1,2],[1,2,3]],"(*math/big.Int).Rand":[[0,2],[0,2]],"(*math/big.Int).Rem":[[0,1,2],[0,1,2]],"(*math/big.Int).Rsh":[[0,1],[0,1]],"(*math/big.Int).Scan":[[0],[]],"(*math/big.Int).Set":[[0,1],[0,1]],"(*math/big.Int).SetBit":[[0,1,2],[0,1,2]],"(*math/big.Int).SetBits":[[0,1],[0,1]],"(*math/big.Int).SetBytes":[[0,1],[0,1]],"(*math/big.Int).SetInt64":[[0,1],[0,1]],"(*math/big.Int).SetString":[[0,2],[0,2],[]],"(*math/big.Int).SetUint64":[[0,1],[0,1]],"(*math/big.Int).Sign":[[0],[]],"(*math/big.Int).Sqrt":[[0,1],[0,1]],"(*math/big.Int).String":[[0],[0]],"(*math/big.Int).Sub":[[0,1,2],[0,1,2]],"(*math/big.Int).Text":[[0],[0]],"(*math/big.Int).TrailingZeroBits":[[0],[]],"(*math/big.Int).Uint64":[[0],[0]],"(*math/big.Int).UnmarshalJSON":[[0],[1]],"(*math/big.Int).UnmarshalText":[[0],[1]],"(*math/big.Int).Xor":[[0,1,2],[0,1,2]],"(*math/big.Int).lehmerGCD":[[0,3,4],[0,3,4]],"(*math/big.Int).modSqrt3Mod4Prime":[[0,1,2],[0,1,2]],"(*math/big.Int).modSqrt5Mod8Prime":[[0,2],[0,2]],"(*math/big.Int).modSqrtTonelliShanks":[[0,1,2],[0,1,2]],"(*math/big.Int).scaleDenom":[[0,1]],"(*math/big.Int).scan":[[0,2],[0,2],[2],[]],"(*math/big.Int).setFromScanner":[[0,2],[0,2],[]],"(*math/big.Rat).Abs":[[0,1],[0,1]],"(*math/big.Rat).Add":[[0],[0]],"(*math/big.Rat).Cmp":[[0],[]],"(*math/big.Rat).Denom":[[0],[0]],"(*math/big.Rat).Float32":[[0],[0],[0]],"(*math/big.Rat).Float64":[[0],[0],[0]],"(*math/big.Rat).FloatString":[[0],[]],"(*math/big.Rat).GobDecode":[[0,1],[1]],"(*math/big.Rat).GobEncode":[[0],[],[]],"(*math/big.Rat).Inv":[[0,1],[0,1]],"(*math/big.Rat).IsInt":[[0],[]],"(*math/big.Rat).MarshalText":[[0],[0],[]],"(*math/big.Rat).Mul":[[0,1],[0,1]],"(*math/big.Rat).Neg":[[0,1],[0,1]],"(*math/big.Rat).Num":[[0],[0]],"(*math/big.Rat).Quo":[[0],[0]],"(*math/big.Rat).RatString":[[0],[0]],"(*math/big.Rat).Scan":[[0],[]],"(*math/big.Rat).Set":[[0,1],[0,1]],"(*math/big.Rat).SetFloat64":[[0],[0]],"(*math/big.Rat).SetFrac":[[0],[0]],"(*math/big.Rat).SetFrac64":[[0],[0]],"(*math/big.Rat).SetInt":[[0,1],[0,1]],"(*math/big.Rat).SetInt64":[[0,1],[0,1]],"(*math/big.Rat).SetString":[[0],[0],[]],"(*math/big.Rat).SetUint64":[[0,1],[0,1]],"(*math/big.Rat).Sign":[[0],[]],"(*math/big.Rat).String":[[0],[]],"(*math/big.Rat).Sub":[[0],[0]],"(*math/big.Rat).UnmarshalText":[[0],[1]],"(*math/big.Rat).marshal":[[0],[]],"(*math/big.Rat).norm":[[0],[0]],"(*math/big.RoundingMode).String":[[0],[]],"(*math/big.byteReader).Read":[[0],[],[]],"(*math/big.byteReader).ReadByte":[[0],[],[]],"(*math/big.byteReader).ReadRune":[[0],[0],[],[]],"(*math/big.byteReader).SkipSpace":[[0]],"(*math/big.byteReader).Token":[[0],[],[]],"(*math/big.byteReader).UnreadByte":[[0],[]],"(*math/big.byteReader).UnreadRune":[[0],[]],"(*math/big.byteReader).Width":[[0],[],[]],"(*math/big.decimal).at":[[0],[0]],"(*math/big.decimal).init":[[0,1]],"(*math/big.decimal).round":[[0]],"(*math/big.decimal).roundDown":[[0]],"(*math/big.decimal).roundUp":[[0]],"(*math/big.nat).add":[[0],[1]],"(*math/big.nat).and":[[0],[1,2]],"(*math/big.nat).andNot":[[0],[1,2]],"(*math/big.nat).bit":[[0],[1]],"(*math/big.nat).bitLen":[[0],[]],"(*math/big.nat).bytes":[[0],[]],"(*math/big.nat).clear":[[0]],"(*math/big.nat).cmp":[[0],[]],"(*math/big.nat).convertWords":[[0]],"(*math/big.nat).div":[[0],[2],[1,2,3]],"(*math/big.nat).divBasic":[[0]],"(*math/big.nat).divLarge":[[0],[],[1]],"(*math/big.nat).divRecursive":[[0]],"(*math/big.nat).divRecursiveStep":[[0]],"(*math/big.nat).divW":[[0],[1],[1,2]],"(*math/big.nat).expNN":[[0],[1,3]],"(*math/big.nat).expNNMontgomery":[[0],[3]],"(*math/big.nat).expNNWindowed":[[0],[1,3]],"(*math/big.nat).expWW":[[0],[1]],"(*math/big.nat).itoa":[[0],[]],"(*math/big.nat).make":[[0],[]],"(*math/big.nat).modW":[[0],[1]],"(*math/big.nat).montgomery":[[0],[]],"(*math/big.nat).mul":[[0],[]],"(*math/big.nat).mulAddWW":[[0],[3]],"(*math/big.nat).mulRange":[[0],[1]],"(*math/big.nat).norm":[[0],[]],"(*math/big.nat).or":[[0],[1,2]],"(*math/big.nat).probablyPrimeLucas":[[0],[]],"(*math/big.nat).probablyPrimeMillerRabin":[[0],[]],"(*math/big.nat).random":[[0],[3]],"(*math/big.nat).scan":[[0],[2],[2],[],[]],"(*math/big.nat).set":[[0],[1]],"(*math/big.nat).setBit":[[0],[1,2]],"(*math/big.nat).setBytes":[[0],[1]],"(*math/big.nat).setUint64":[[0],[1]],"(*math/big.nat).setWord":[[0],[1]],"(*math/big.nat).shl":[[0],[1]],"(*math/big.nat).shr":[[0],[1]],"(*math/big.nat).sqr":[[0],[1]],"(*math/big.nat).sqrt":[[0],[1]],"(*math/big.nat).sticky":[[0],[]],"(*math/big.nat).sub":[[0],[1]],"(*math/big.nat).trailingZeroBits":[[0],[]],"(*math/big.nat).utoa":[[0],[]],"(*math/big.nat).xor":[[0],[1,2]],"(*math/rand.Rand).ExpFloat64":[[0],[]],"(*math/rand.Rand).Float32":[[0],[]],"(*math/rand.Rand).Float64":[[0],[]],"(*math/rand.Rand).Int":[[0],[]],"(*math/rand.Rand).Int31":[[0],[]],"(*math/rand.Rand).Int31n":[[0],[1]],"(*math/rand.Rand).Int63":[[0],[]],"(*math/rand.Rand).Int63n":[[0],[1]],"(*math/rand.Rand).Intn":[[0],[1]],"(*math/rand.Rand).NormFloat64":[[0],[]],"(*math/rand.Rand).Perm":[[0],[]],"(*math/rand.Rand).Read":[[0],[],[]],"(*math/rand.Rand).Seed":[[0]],"(*math/rand.Rand).Shuffle":[[0]],"(*math/rand.Rand).Uint32":[[0],[]],"(*math/rand.Rand).Uint64":[[0],[0]],"(*math/rand.Rand).int31n":[[0],[1]],"(*math/rand.Zipf).Uint64":[[0],[0]],"(*math/rand.Zipf).h":[[0],[0,1]],"(*math/rand.Zipf).hinv":[[0],[0,1]],"(*math/rand.lockedSource).Int63":[[0],[0]],"(*math/rand.lockedSource).Seed":[[0]],"(*math/rand.lockedSource).Uint64":[[0],[0]],"(*math/rand.lockedSource).read":[[0],[],[]],"(*math/rand.lockedSource).seedPos":[[0]],"(*math/rand.rngSource).Int63":[[0],[0]],"(*math/rand.rngSource).Seed":[[0]],"(*math/rand.rngSource).Uint64":[[0],[0]],"(*mime.WordDecoder).Decode":[[0],[],[1]],"(*mime.WordDecoder).DecodeHeader":[[0],[1],[1]],"(*mime.WordDecoder).convert":[[0],[1,2,3]],"(*mime.WordEncoder).Encode":[[0],[2]],"(*mime.WordEncoder).bEncode":[[0]],"(*mime.WordEncoder).encodeWord":[[0],[]],"(*mime.WordEncoder).openWord":[[0]],"(*mime.WordEncoder).qEncode":[[0]],"(*mime.WordEncoder).splitWord":[[0]],"(*mime/multipart.FileHeader).Open":[[0],[0],[0]],"(*mime/multipart.Form).RemoveAll":[[0],[0]],"(*mime/multipart.Part).Close":[[0],[]],"(*mime/multipart.Part).FileName":[[0],[0]],"(*mime/multipart.Part).FormName":[[0],[0]],"(*mime/multipart.Part).Read":[[0],[],[0]],"(*mime/multipart.Part).parseContentDisposition":[[0]],"(*mime/multipart.Part).populateHeaders":[[0],[0]],"(*mime/multipart.Reader).NextPart":[[0],[0],[0]],"(*mime/multipart.Reader).NextRawPart":[[0],[0],[0]],"(*mime/multipart.Reader).ReadForm":[[0],[],[0,1]],"(*mime/multipart.Reader).isBoundaryDelimiterLine":[[0],[0,1]],"(*mime/multipart.Reader).isFinalBoundary":[[0],[0,1]],"(*mime/multipart.Reader).nextPart":[[0],[0],[0]],"(*mime/multipart.Reader).readForm":[[0],[],[0,1]],"(*mime/multipart.Reader).readForm$1":[],"(*mime/multipart.Writer).Boundary":[[0],[0]],"(*mime/multipart.Writer).Close":[[0],[0]],"(*mime/multipart.Writer).CreateFormField":[[0],[0],[0]],"(*mime/multipart.Writer).CreateFormFile":[[0],[0],[0]],"(*mime/multipart.Writer).CreatePart":[[0],[0],[0]],"(*mime/multipart.Writer).FormDataContentType":[[0],[0]],"(*mime/multipart.Writer).SetBoundary":[[0,1],[]],"(*mime/multipart.Writer).WriteField":[[0],[0]],"(*mime/multipart.part).Write":[[0],[],[0]],"(*mime/multipart.part).close":[[0],[0]],"(*mime/multipart.partReader).Read":[[0],[],[]],"(*mime/multipart.sectionReadCloser).Close":[[0],[]],"(*mime/multipart.sectionReadCloser).Read":[[0],[],[]],"(*mime/multipart.sectionReadCloser).ReadAt":[[0],[],[]],"(*mime/multipart.sectionReadCloser).Seek":[[0,1],[0,1],[]],"(*mime/multipart.sectionReadCloser).Size":[[0],[0]],"(*mime/multipart.stickyErrorReader).Read":[[0],[],[0]],"(*mime/quotedprintable.Reader).Read":[[0],[],[0]],"(*mime/quotedprintable.Writer).Close":[[0],[0]],"(*mime/quotedprintable.Writer).Write":[[0],[],[0]],"(*mime/quotedprintable.Writer).checkLastByte":[[0],[0]],"(*mime/quotedprintable.Writer).encode":[[0],[0]],"(*mime/quotedprintable.Writer).flush":[[0],[0]],"(*mime/quotedprintable.Writer).insertCRLF":[[0],[0]],"(*mime/quotedprintable.Writer).insertSoftLineBreak":[[0],[0]],"(*mime/quotedprintable.Writer).write":[[0],[0]],"(*net.AddrError).Error":[[0],[0]],"(*net.AddrError).Temporary":[[0],[]],"(*net.AddrError).Timeout":[[0],[]],"(*net.Buffers).Read":[[0],[],[]],"(*net.Buffers).WriteTo":[[0],[],[1]],"(*net.Buffers).consume":[[0]],"(*net.DNSConfigError).Error":[[0],[0]],"(*net.DNSConfigError).Temporary":[[0],[]],"(*net.DNSConfigError).Timeout":[[0],[]],"(*net.DNSConfigError).Unwrap":[[0],[0]],"(*net.DNSError).Error":[[0],[0]],"(*net.DNSError).Temporary":[[0],[0]],"(*net.DNSError).Timeout":[[0],[0]],"(*net.Dialer).Dial":[[0],[0,1,2],[0,1,2]],"(*net.Dialer).DialContext":[[0],[0,2,3],[0,2,3]],"(*net.Dialer).DialContext$1":[],"(*net.Dialer).DialContext$bound":[[1,2],[1,2]],"(*net.Dialer).deadline":[[0],[0,1,2]],"(*net.Dialer).dualStack":[[0],[0]],"(*net.Dialer).fallbackDelay":[[0],[0]],"(*net.Dialer).resolver":[[0],[0]],"(*net.Flags).String":[[0],[]],"(*net.HardwareAddr).String":[[0],[]],"(*net.IP).DefaultMask":[[0],[]],"(*net.IP).Equal":[[0],[1]],"(*net.IP).IsGlobalUnicast":[[0],[]],"(*net.IP).IsInterfaceLocalMulticast":[[0],[]],"(*net.IP).IsLinkLocalMulticast":[[0],[]],"(*net.IP).IsLinkLocalUnicast":[[0],[]],"(*net.IP).IsLoopback":[[0],[]],"(*net.IP).IsMulticast":[[0],[]],"(*net.IP).IsPrivate":[[0],[]],"(*net.IP).IsUnspecified":[[0],[]],"(*net.IP).MarshalText":[[0],[],[]],"(*net.IP).Mask":[[0],[1]],"(*net.IP).String":[[0],[]],"(*net.IP).To16":[[0],[]],"(*net.IP).To4":[[0],[]],"(*net.IP).UnmarshalText":[[0,1],[1]],"(*net.IP).matchAddrFamily":[[0],[1]],"(*net.IPAddr).Network":[[0],[]],"(*net.IPAddr).String":[[0],[0]],"(*net.IPAddr).family":[[0],[]],"(*net.IPAddr).isWildcard":[[0],[0]],"(*net.IPAddr).opAddr":[[0],[0]],"(*net.IPAddr).sockaddr":[[0],[0],[0]],"(*net.IPAddr).toLocal":[[0],[0]],"(*net.IPConn).Close":[[0],[0]],"(*net.IPConn).File":[[0],[0],[0]],"(*net.IPConn).LocalAddr":[[0],[0]],"(*net.IPConn).Read":[[0],[],[0]],"(*net.IPConn).ReadFrom":[[0],[1],[],[0]],"(*net.IPConn).ReadFromIP":[[0],[1],[],[0]],"(*net.IPConn).ReadMsgIP":[[0],[],[1,2],[1,2],[],[0]],"(*net.IPConn).RemoteAddr":[[0],[0]],"(*net.IPConn).SetDeadline":[[0],[0]],"(*net.IPConn).SetReadBuffer":[[0],[0]],"(*net.IPConn).SetReadDeadline":[[0],[0]],"(*net.IPConn).SetWriteBuffer":[[0],[0]],"(*net.IPConn).SetWriteDeadline":[[0],[0]],"(*net.IPConn).SyscallConn":[[0],[0],[]],"(*net.IPConn).Write":[[0],[],[0]],"(*net.IPConn).WriteMsgIP":[[0],[],[],[0,3]],"(*net.IPConn).WriteTo":[[0],[],[0,2]],"(*net.IPConn).WriteToIP":[[0],[],[0,2]],"(*net.IPConn).ok":[[0],[0]],"(*net.IPConn).readFrom":[[0],[1],[],[]],"(*net.IPConn).readMsg":[[0],[],[1,2],[1,2],[],[]],"(*net.IPConn).writeBuffers":[[0],[],[0]],"(*net.IPConn).writeMsg":[[0],[],[],[3]],"(*net.IPConn).writeTo":[[0],[],[2]],"(*net.IPMask).Size":[[0],[],[]],"(*net.IPMask).String":[[0],[]],"(*net.IPNet).Contains":[[0],[]],"(*net.IPNet).Network":[[0],[]],"(*net.IPNet).String":[[0],[0]],"(*net.Interface).Addrs":[[0],[],[]],"(*net.Interface).MulticastAddrs":[[0],[],[]],"(*net.InvalidAddrError).Error":[[0],[]],"(*net.InvalidAddrError).Temporary":[[0],[]],"(*net.InvalidAddrError).Timeout":[[0],[]],"(*net.ListenConfig).Listen":[[0],[0,2,3],[0,2,3]],"(*net.ListenConfig).ListenPacket":[[0],[0,2,3],[0,2,3]],"(*net.OpError).Error":[[0],[0]],"(*net.OpError).Temporary":[[0],[]],"(*net.OpError).Timeout":[[0],[]],"(*net.OpError).Unwrap":[[0],[0]],"(*net.ParseError).Error":[[0],[0]],"(*net.ParseError).Temporary":[[0],[]],"(*net.ParseError).Timeout":[[0],[]],"(*net.Resolver).LookupAddr":[[0],[2],[2]],"(*net.Resolver).LookupCNAME":[[0],[2],[2]],"(*net.Resolver).LookupHost":[[0],[2],[2]],"(*net.Resolver).LookupIP":[[0],[],[2,3]],"(*net.Resolver).LookupIPAddr":[[0],[],[2]],"(*net.Resolver).LookupMX":[[0],[],[2]],"(*net.Resolver).LookupNS":[[0],[],[2]],"(*net.Resolver).LookupNetIP":[[0],[],[2,3]],"(*net.Resolver).LookupPort":[[0],[2,3],[2,3]],"(*net.Resolver).LookupSRV":[[0],[],[],[2,3,4]],"(*net.Resolver).LookupTXT":[[0],[],[2]],"(*net.Resolver).dial":[[0],[2,3],[2,3]],"(*net.Resolver).exchange":[[0],[],[],[2]],"(*net.Resolver).getLookupGroup":[[0],[0]],"(*net.Resolver).goLookupCNAME":[[0],[2],[2]],"(*net.Resolver).goLookupHost":[[0],[2],[2]],"(*net.Resolver).goLookupHostOrder":[[0],[2],[2]],"(*net.Resolver).goLookupIP":[[0],[3],[3]],"(*net.Resolver).goLookupIPCNAMEOrder":[[0],[3],[3],[3]],"(*net.Resolver).goLookupIPCNAMEOrder$1":[],"(*net.Resolver).goLookupIPCNAMEOrder$2":[[0]],"(*net.Resolver).goLookupIPCNAMEOrder$3":[],"(*net.Resolver).goLookupIPCNAMEOrder$3$1":[],"(*net.Resolver).goLookupIPCNAMEOrder$4":[[]],"(*net.Resolver).goLookupMX":[[0],[],[2]],"(*net.Resolver).goLookupNS":[[0],[],[2]],"(*net.Resolver).goLookupPTR":[[0],[2],[2]],"(*net.Resolver).goLookupSRV":[[0],[],[],[2,3,4]],"(*net.Resolver).goLookupTXT":[[0],[],[2]],"(*net.Resolver).internetAddrList":[[0],[],[2,3]],"(*net.Resolver).internetAddrList$1":[[0]],"(*net.Resolver).lookup":[[0],[],[],[2]],"(*net.Resolver).lookupAddr":[[0],[2],[2]],"(*net.Resolver).lookupCNAME":[[0],[2],[2]],"(*net.Resolver).lookupHost":[[0],[2],[2]],"(*net.Resolver).lookupIP":[[0],[3],[3]],"(*net.Resolver).lookupIP$bound":[[2],[2]],"(*net.Resolver).lookupIPAddr":[[0],[],[3]],"(*net.Resolver).lookupIPAddr$1":[[],[]],"(*net.Resolver).lookupIPAddr$2":[],"(*net.Resolver).lookupMX":[[0],[],[2]],"(*net.Resolver).lookupNS":[[0],[],[2]],"(*net.Resolver).lookupPort":[[0],[2],[2,3]],"(*net.Resolver).lookupSRV":[[0],[],[],[2,3,4]],"(*net.Resolver).lookupTXT":[[0],[],[2]],"(*net.Resolver).preferGo":[[0],[0]],"(*net.Resolver).resolveAddrList":[[0],[3,4],[3,4,5]],"(*net.Resolver).strictErrors":[[0],[0]],"(*net.Resolver).tryOneName":[[0],[],[2],[2,3]],"(*net.TCPAddr).AddrPort":[[0],[0]],"(*net.TCPAddr).Network":[[0],[]],"(*net.TCPAddr).String":[[0],[0]],"(*net.TCPAddr).family":[[0],[]],"(*net.TCPAddr).isWildcard":[[0],[0]],"(*net.TCPAddr).opAddr":[[0],[0]],"(*net.TCPAddr).sockaddr":[[0],[0],[0]],"(*net.TCPAddr).toLocal":[[0],[0]],"(*net.TCPConn).Close":[[0],[0]],"(*net.TCPConn).CloseRead":[[0],[0]],"(*net.TCPConn).CloseWrite":[[0],[0]],"(*net.TCPConn).File":[[0],[0],[0]],"(*net.TCPConn).LocalAddr":[[0],[0]],"(*net.TCPConn).Read":[[0],[],[0]],"(*net.TCPConn).ReadFrom":[[0],[],[0,1]],"(*net.TCPConn).RemoteAddr":[[0],[0]],"(*net.TCPConn).SetDeadline":[[0],[0]],"(*net.TCPConn).SetKeepAlive":[[0],[0]],"(*net.TCPConn).SetKeepAlivePeriod":[[0],[0]],"(*net.TCPConn).SetLinger":[[0],[0]],"(*net.TCPConn).SetNoDelay":[[0],[0]],"(*net.TCPConn).SetReadBuffer":[[0],[0]],"(*net.TCPConn).SetReadDeadline":[[0],[0]],"(*net.TCPConn).SetWriteBuffer":[[0],[0]],"(*net.TCPConn).SetWriteDeadline":[[0],[0]],"(*net.TCPConn).SyscallConn":[[0],[0],[]],"(*net.TCPConn).Write":[[0],[],[0]],"(*net.TCPConn).ok":[[0],[0]],"(*net.TCPConn).readFrom":[[0],[],[0,1]],"(*net.TCPConn).writeBuffers":[[0],[],[0]],"(*net.TCPListener).Accept":[[0],[0],[0]],"(*net.TCPListener).AcceptTCP":[[0],[0],[0]],"(*net.TCPListener).Addr":[[0],[0]],"(*net.TCPListener).Close":[[0],[0]],"(*net.TCPListener).File":[[0],[0],[0]],"(*net.TCPListener).SetDeadline":[[0],[0]],"(*net.TCPListener).SyscallConn":[[0],[0],[]],"(*net.TCPListener).accept":[[0],[0],[]],"(*net.TCPListener).close":[[0],[]],"(*net.TCPListener).file":[[0],[0],[]],"(*net.TCPListener).ok":[[0],[0]],"(*net.UDPAddr).AddrPort":[[0],[0]],"(*net.UDPAddr).Network":[[0],[]],"(*net.UDPAddr).String":[[0],[0]],"(*net.UDPAddr).family":[[0],[]],"(*net.UDPAddr).isWildcard":[[0],[0]],"(*net.UDPAddr).opAddr":[[0],[0]],"(*net.UDPAddr).sockaddr":[[0],[0],[0]],"(*net.UDPAddr).toLocal":[[0],[0]],"(*net.UDPConn).Close":[[0],[0]],"(*net.UDPConn).File":[[0],[0],[0]],"(*net.UDPConn).LocalAddr":[[0],[0]],"(*net.UDPConn).Read":[[0],[],[0]],"(*net.UDPConn).ReadFrom":[[0],[],[],[0]],"(*net.UDPConn).ReadFromUDP":[[0],[],[],[0]],"(*net.UDPConn).ReadFromUDPAddrPort":[[0],[],[],[0]],"(*net.UDPConn).ReadMsgUDP":[[0],[],[],[],[],[0]],"(*net.UDPConn).ReadMsgUDPAddrPort":[[0],[],[],[],[],[0]],"(*net.UDPConn).RemoteAddr":[[0],[0]],"(*net.UDPConn).SetDeadline":[[0],[0]],"(*net.UDPConn).SetReadBuffer":[[0],[0]],"(*net.UDPConn).SetReadDeadline":[[0],[0]],"(*net.UDPConn).SetWriteBuffer":[[0],[0]],"(*net.UDPConn).SetWriteDeadline":[[0],[0]],"(*net.UDPConn).SyscallConn":[[0],[0],[]],"(*net.UDPConn).Write":[[0],[],[0]],"(*net.UDPConn).WriteMsgUDP":[[0],[],[],[0,3]],"(*net.UDPConn).WriteMsgUDPAddrPort":[[0],[],[],[0,3]],"(*net.UDPConn).WriteTo":[[0],[],[0,2]],"(*net.UDPConn).WriteToUDP":[[0],[],[0,2]],"(*net.UDPConn).WriteToUDPAddrPort":[[0],[],[0,2]],"(*net.UDPConn).ok":[[0],[0]],"(*net.UDPConn).readFrom":[[0],[],[2],[]],"(*net.UDPConn).readFromAddrPort":[[0],[],[],[]],"(*net.UDPConn).readFromUDP":[[0],[],[2],[0]],"(*net.UDPConn).readMsg":[[0],[],[],[],[],[]],"(*net.UDPConn).writeBuffers":[[0],[],[0]],"(*net.UDPConn).writeMsg":[[0],[],[],[3]],"(*net.UDPConn).writeMsgAddrPort":[[0],[],[],[3]],"(*net.UDPConn).writeTo":[[0],[],[2]],"(*net.UDPConn).writeToAddrPort":[[0],[],[2]],"(*net.UnixAddr).Network":[[0],[0]],"(*net.UnixAddr).String":[[0],[0]],"(*net.UnixAddr).family":[[0],[]],"(*net.UnixAddr).isWildcard":[[0],[0]],"(*net.UnixAddr).opAddr":[[0],[0]],"(*net.UnixAddr).sockaddr":[[0],[0],[]],"(*net.UnixAddr).toLocal":[[0],[0]],"(*net.UnixConn).Close":[[0],[0]],"(*net.UnixConn).CloseRead":[[0],[0]],"(*net.UnixConn).CloseWrite":[[0],[0]],"(*net.UnixConn).File":[[0],[0],[0]],"(*net.UnixConn).LocalAddr":[[0],[0]],"(*net.UnixConn).Read":[[0],[],[0]],"(*net.UnixConn).ReadFrom":[[0],[],[],[0]],"(*net.UnixConn).ReadFromUnix":[[0],[],[],[0]],"(*net.UnixConn).ReadMsgUnix":[[0],[],[1,2],[1,2],[],[0]],"(*net.UnixConn).RemoteAddr":[[0],[0]],"(*net.UnixConn).SetDeadline":[[0],[0]],"(*net.UnixConn).SetReadBuffer":[[0],[0]],"(*net.UnixConn).SetReadDeadline":[[0],[0]],"(*net.UnixConn).SetWriteBuffer":[[0],[0]],"(*net.UnixConn).SetWriteDeadline":[[0],[0]],"(*net.UnixConn).SyscallConn":[[0],[0],[]],"(*net.UnixConn).Write":[[0],[],[0]],"(*net.UnixConn).WriteMsgUnix":[[0],[],[],[0,3]],"(*net.UnixConn).WriteTo":[[0],[],[0,2]],"(*net.UnixConn).WriteToUnix":[[0],[],[0,2]],"(*net.UnixConn).ok":[[0],[0]],"(*net.UnixConn).readFrom":[[0],[],[],[]],"(*net.UnixConn).readMsg":[[0],[],[1,2],[1,2],[],[]],"(*net.UnixConn).writeBuffers":[[0],[],[0]],"(*net.UnixConn).writeMsg":[[0],[],[],[]],"(*net.UnixConn).writeTo":[[0],[],[]],"(*net.UnixListener).Accept":[[0],[0],[0]],"(*net.UnixListener).AcceptUnix":[[0],[0],[0]],"(*net.UnixListener).Addr":[[0],[0]],"(*net.UnixListener).Close":[[0],[0]],"(*net.UnixListener).File":[[0],[0],[0]],"(*net.UnixListener).SetDeadline":[[0],[0]],"(*net.UnixListener).SetUnlinkOnClose":[[0,1]],"(*net.UnixListener).SyscallConn":[[0],[0],[]],"(*net.UnixListener).accept":[[0],[0],[]],"(*net.UnixListener).close":[[0],[]],"(*net.UnixListener).close$1":[],"(*net.UnixListener).file":[[0],[0],[]],"(*net.UnixListener).ok":[[0],[0]],"(*net.UnknownNetworkError).Error":[[0],[]],"(*net.UnknownNetworkError).Temporary":[[0],[]],"(*net.UnknownNetworkError).Timeout":[[0],[]],"(*net.addrList).first":[[0],[]],"(*net.addrList).forResolve":[[0],[]],"(*net.addrList).partition":[[0],[],[]],"(*net.addrPortUDPAddr).Addr":[[0],[0]],"(*net.addrPortUDPAddr).AppendTo":[[0],[0,1]],"(*net.addrPortUDPAddr).IsValid":[[0],[0]],"(*net.addrPortUDPAddr).MarshalBinary":[[0],[],[]],"(*net.addrPortUDPAddr).MarshalText":[[0],[0],[]],"(*net.addrPortUDPAddr).Network":[[0],[]],"(*net.addrPortUDPAddr).Port":[[0],[0]],"(*net.addrPortUDPAddr).String":[[0],[0]],"(*net.addrPortUDPAddr).UnmarshalBinary":[[0,1],[]],"(*net.addrPortUDPAddr).UnmarshalText":[[0,1],[1]],"(*net.addrPortUDPAddr).isZero":[[0],[0]],"(*net.addrinfoErrno).Error":[[0],[]],"(*net.addrinfoErrno).Temporary":[[0],[]],"(*net.addrinfoErrno).Timeout":[[0],[]],"(*net.byMaskLength).Len":[[0],[]],"(*net.byMaskLength).Less":[[0],[]],"(*net.byMaskLength).Swap":[[0]],"(*net.byPref).Len":[[0],[]],"(*net.byPref).Less":[[0],[]],"(*net.byPref).Swap":[[0]],"(*net.byPref).sort":[[0]],"(*net.byPriorityWeight).Len":[[0],[]],"(*net.byPriorityWeight).Less":[[0],[]],"(*net.byPriorityWeight).Swap":[[0]],"(*net.byPriorityWeight).shuffleByWeight":[[0]],"(*net.byPriorityWeight).sort":[[0]],"(*net.byRFC6724).Len":[[0],[]],"(*net.byRFC6724).Less":[[0],[]],"(*net.byRFC6724).Swap":[[0]],"(*net.canceledError).Error":[[0],[]],"(*net.canceledError).Is":[[0],[1]],"(*net.conf).canUseCgo":[[0],[]],"(*net.conf).hostLookupOrder":[[0],[]],"(*net.conf).hostLookupOrder$1":[],"(*net.conn).Close":[[0],[0]],"(*net.conn).File":[[0],[0],[0]],"(*net.conn).LocalAddr":[[0],[0]],"(*net.conn).Read":[[0],[],[0]],"(*net.conn).RemoteAddr":[[0],[0]],"(*net.conn).SetDeadline":[[0],[0]],"(*net.conn).SetReadBuffer":[[0],[0]],"(*net.conn).SetReadDeadline":[[0],[0]],"(*net.conn).SetWriteBuffer":[[0],[0]],"(*net.conn).SetWriteDeadline":[[0],[0]],"(*net.conn).Write":[[0],[],[0]],"(*net.conn).ok":[[0],[0]],"(*net.conn).writeBuffers":[[0],[],[0]],"(*net.dnsConfig).nameList":[[0],[0,1]],"(*net.dnsConfig).serverOffset":[[0],[]],"(*net.file).close":[[0]],"(*net.file).getLineFromData":[[0],[0],[]],"(*net.file).readLine":[[0],[0],[]],"(*net.fileAddr).Network":[[0],[]],"(*net.fileAddr).String":[[0],[]],"(*net.hostLookupOrder).String":[[0],[]],"(*net.ipStackCapabilities).probe":[[0]],"(*net.ipStackCapabilities).probe$bound":[],"(*net.ipv6ZoneCache).index":[[0],[1]],"(*net.ipv6ZoneCache).name":[[0],[1]],"(*net.ipv6ZoneCache).update":[[0],[]],"(*net.netFD).Close":[[0],[]],"(*net.netFD).Close$thunk":[[]],"(*net.netFD).Read":[[0],[],[]],"(*net.netFD).SetDeadline":[[0],[]],"(*net.netFD).SetReadDeadline":[[0],[]],"(*net.netFD).SetWriteDeadline":[[0],[]],"(*net.netFD).Write":[[0],[],[]],"(*net.netFD).accept":[[0],[0],[]],"(*net.netFD).addrFunc":[[0],[]],"(*net.netFD).addrFunc$1":[[]],"(*net.netFD).closeRead":[[0],[]],"(*net.netFD).closeWrite":[[0],[]],"(*net.netFD).connect":[[0],[],[]],"(*net.netFD).connect$1":[],"(*net.netFD).connect$2":[],"(*net.netFD).ctrlNetwork":[[0],[0]],"(*net.netFD).dial":[[0,3],[2,3]],"(*net.netFD).dup":[[0],[0],[]],"(*net.netFD).init":[[0],[]],"(*net.netFD).listenDatagram":[[0],[1]],"(*net.netFD).listenStream":[[0],[1]],"(*net.netFD).name":[[0],[0]],"(*net.netFD).readFrom":[[0],[],[],[]],"(*net.netFD).readFromInet4":[[0],[],[]],"(*net.netFD).readFromInet6":[[0],[],[]],"(*net.netFD).readMsg":[[0],[],[1,2],[1,2],[],[]],"(*net.netFD).readMsgInet4":[[0],[],[],[],[]],"(*net.netFD).readMsgInet6":[[0],[],[],[],[]],"(*net.netFD).setAddr":[[0,1,2]],"(*net.netFD).shutdown":[[0],[]],"(*net.netFD).writeBuffers":[[0],[],[]],"(*net.netFD).writeMsg":[[0],[],[],[]],"(*net.netFD).writeMsgInet4":[[0],[],[],[]],"(*net.netFD).writeMsgInet6":[[0],[],[],[]],"(*net.netFD).writeTo":[[0],[],[]],"(*net.netFD).writeToInet4":[[0],[],[]],"(*net.netFD).writeToInet6":[[0],[],[]],"(*net.onlyValuesCtx).Deadline":[[0],[0],[]],"(*net.onlyValuesCtx).Done":[[0],[]],"(*net.onlyValuesCtx).Err":[[0],[]],"(*net.onlyValuesCtx).Value":[[0],[0]],"(*net.pipe).Close":[[0],[]],"(*net.pipe).Close$1":[],"(*net.pipe).LocalAddr":[[0],[]],"(*net.pipe).Read":[[0],[],[]],"(*net.pipe).RemoteAddr":[[0],[]],"(*net.pipe).SetDeadline":[[0],[]],"(*net.pipe).SetReadDeadline":[[0],[]],"(*net.pipe).SetWriteDeadline":[[0],[]],"(*net.pipe).Write":[[0],[0],[]],"(*net.pipe).read":[[0],[],[]],"(*net.pipe).write":[[0],[0],[]],"(*net.pipeAddr).Network":[[0],[]],"(*net.pipeAddr).String":[[0],[]],"(*net.pipeDeadline).set":[[0]],"(*net.pipeDeadline).set$1":[],"(*net.pipeDeadline).wait":[[0],[0]],"(*net.rawConn).Control":[[0],[0]],"(*net.rawConn).Read":[[0],[0]],"(*net.rawConn).Write":[[0],[0]],"(*net.rawConn).ok":[[0],[0]],"(*net.rawListener).Control":[[0],[0]],"(*net.rawListener).Read":[[0],[]],"(*net.rawListener).Write":[[0],[]],"(*net.rawListener).ok":[[0],[0]],"(*net.resolverConfig).init":[[0]],"(*net.resolverConfig).init$bound":[],"(*net.resolverConfig).releaseSema":[[0]],"(*net.resolverConfig).tryAcquireSema":[[0],[]],"(*net.resolverConfig).tryUpdate":[[0,1]],"(*net.sysDialer).dialIP":[[0],[0,3],[0,2,3]],"(*net.sysDialer).dialParallel":[[0],[0,2],[0,2]],"(*net.sysDialer).dialParallel$1":[],"(*net.sysDialer).dialSerial":[[0],[0,2],[0,2]],"(*net.sysDialer).dialSingle":[[0],[0,2],[0,2]],"(*net.sysDialer).dialSingle$1":[],"(*net.sysDialer).dialTCP":[[0],[0,3],[2,3]],"(*net.sysDialer).dialUDP":[[0],[0,3],[2,3]],"(*net.sysDialer).dialUnix":[[0],[0,3],[0,2,3]],"(*net.sysDialer).doDialTCP":[[0],[0,3],[2,3]],"(*net.sysListener).listenIP":[[0],[0],[0,2]],"(*net.sysListener).listenMulticastUDP":[[0],[0],[3]],"(*net.sysListener).listenTCP":[[0],[0],[2]],"(*net.sysListener).listenUDP":[[0],[0],[2]],"(*net.sysListener).listenUnix":[[0],[0],[0,2]],"(*net.sysListener).listenUnixgram":[[0],[0],[0,2]],"(*net.timeoutError).Error":[[0],[]],"(*net.timeoutError).Is":[[0],[1]],"(*net.timeoutError).Temporary":[[0],[]],"(*net.timeoutError).Timeout":[[0],[]],"(*net.writerOnly).Write":[[0],[],[0]],"(*net/http.Client).CloseIdleConnections":[[0]],"(*net/http.Client).Do":[[0],[],[0,1]],"(*net/http.Client).Get":[[0],[],[0,1]],"(*net/http.Client).Head":[[0],[],[0,1]],"(*net/http.Client).Post":[[0],[],[0,1,3]],"(*net/http.Client).PostForm":[[0],[],[0,1,2]],"(*net/http.Client).checkRedirect":[[0],[]],"(*net/http.Client).deadline":[[0],[0]],"(*net/http.Client).do":[[0],[],[0,1]],"(*net/http.Client).do$1":[],"(*net/http.Client).do$2":[[0]],"(*net/http.Client).makeHeadersCopier":[[0],[]],"(*net/http.Client).makeHeadersCopier$1":[],"(*net/http.Client).send":[[0],[],[],[0]],"(*net/http.Client).transport":[[0],[0]],"(*net/http.ConnState).String":[[0],[]],"(*net/http.Cookie).String":[[0],[0]],"(*net/http.Cookie).Valid":[[0],[0]],"(*net/http.Dir).Open":[[0],[],[1]],"(*net/http.HandlerFunc).ServeHTTP":[[0]],"(*net/http.Header).Add":[[0]],"(*net/http.Header).Clone":[[0],[]],"(*net/http.Header).Del":[[0]],"(*net/http.Header).Get":[[0],[1]],"(*net/http.Header).Set":[[0]],"(*net/http.Header).Values":[[0],[1]],"(*net/http.Header).Write":[[0],[]],"(*net/http.Header).WriteSubset":[[0],[]],"(*net/http.Header).get":[[0],[1]],"(*net/http.Header).has":[[0],[]],"(*net/http.Header).sortedKeyValues":[[0],[],[]],"(*net/http.Header).write":[[0],[]],"(*net/http.Header).writeSubset":[[0],[]],"(*net/http.MaxBytesError).Error":[[0],[]],"(*net/http.ProtocolError).Error":[[0],[0]],"(*net/http.Request).AddCookie":[[0]],"(*net/http.Request).BasicAuth":[[0],[],[],[]],"(*net/http.Request).Clone":[[0],[0,1]],"(*net/http.Request).Context":[[0],[0]],"(*net/http.Request).Cookie":[[0],[0],[]],"(*net/http.Request).Cookies":[[0],[0]],"(*net/http.Request).FormFile":[[0],[0,1],[0,1],[0,1]],"(*net/http.Request).FormValue":[[0],[0,1]],"(*net/http.Request).MultipartReader":[[0],[0],[]],"(*net/http.Request).ParseForm":[[0],[0]],"(*net/http.Request).ParseMultipartForm":[[0],[0,1]],"(*net/http.Request).PostFormValue":[[0],[0,1]],"(*net/http.Request).ProtoAtLeast":[[0],[0,2]],"(*net/http.Request).Referer":[[0],[0]],"(*net/http.Request).SetBasicAuth":[[0]],"(*net/http.Request).UserAgent":[[0],[0]],"(*net/http.Request).WithContext":[[0],[0,1]],"(*net/http.Request).Write":[[0],[0,1]],"(*net/http.Request).Write$thunk":[[0,1]],"(*net/http.Request).WriteProxy":[[0],[0,1]],"(*net/http.Request).WriteProxy$thunk":[[0,1]],"(*net/http.Request).closeBody":[[0],[]],"(*net/http.Request).expectsContinue":[[0],[]],"(*net/http.Request).isH2Upgrade":[[0],[0]],"(*net/http.Request).isReplayable":[[0],[]],"(*net/http.Request).multipartReader":[[0],[0],[]],"(*net/http.Request).outgoingLength":[[0],[0]],"(*net/http.Request).requiresHTTP1":[[0],[]],"(*net/http.Request).wantsClose":[[0],[]],"(*net/http.Request).wantsHttp10KeepAlive":[[0],[]],"(*net/http.Request).write":[[0],[0,1]],"(*net/http.Request).write$1":[],"(*net/http.Request).write$2":[],"(*net/http.Response).Cookies":[[0],[0]],"(*net/http.Response).Location":[[0],[0],[0]],"(*net/http.Response).ProtoAtLeast":[[0],[0,2]],"(*net/http.Response).Write":[[0],[0,1]],"(*net/http.Response).bodyIsWritable":[[0],[]],"(*net/http.Response).closeBody":[[0]],"(*net/http.Response).isProtocolSwitch":[[0],[]],"(*net/http.ServeMux).Handle":[[0,1,2]],"(*net/http.ServeMux).HandleFunc":[[0,1,2]],"(*net/http.ServeMux).Handler":[[0],[0,1],[0,1]],"(*net/http.ServeMux).ServeHTTP":[[0]],"(*net/http.ServeMux).handler":[[0],[0,1,2],[0,1,2]],"(*net/http.ServeMux).match":[[0],[0,1],[0,1]],"(*net/http.ServeMux).redirectToPathSlash":[[0],[2,3],[]],"(*net/http.ServeMux).shouldRedirectRLocked":[[0],[2]],"(*net/http.Server).Close":[[0],[]],"(*net/http.Server).ListenAndServe":[[0],[0]],"(*net/http.Server).ListenAndServeTLS":[[0],[0,1,2]],"(*net/http.Server).RegisterOnShutdown":[[0,1]],"(*net/http.Server).Serve":[[0],[0,1]],"(*net/http.Server).ServeTLS":[[0],[0,1,2,3]],"(*net/http.Server).SetKeepAlivesEnabled":[[0]],"(*net/http.Server).Shutdown":[[0],[]],"(*net/http.Server).Shutdown$1":[[]],"(*net/http.Server).closeDoneChanLocked":[[0]],"(*net/http.Server).closeIdleConns":[[0],[]],"(*net/http.Server).closeListenersLocked":[[0],[]],"(*net/http.Server).doKeepAlives":[[0],[]],"(*net/http.Server).getDoneChan":[[0],[0]],"(*net/http.Server).getDoneChanLocked":[[0],[0]],"(*net/http.Server).idleTimeout":[[0],[0]],"(*net/http.Server).initialReadLimitSize":[[0],[0]],"(*net/http.Server).logf":[[0]],"(*net/http.Server).maxHeaderBytes":[[0],[0]],"(*net/http.Server).newConn":[[0],[0,1]],"(*net/http.Server).onceSetNextProtoDefaults":[[0]],"(*net/http.Server).onceSetNextProtoDefaults$1":[[]],"(*net/http.Server).onceSetNextProtoDefaults$bound":[],"(*net/http.Server).onceSetNextProtoDefaults_Serve":[[0]],"(*net/http.Server).onceSetNextProtoDefaults_Serve$bound":[],"(*net/http.Server).readHeaderTimeout":[[0],[0]],"(*net/http.Server).setupHTTP2_Serve":[[0],[0]],"(*net/http.Server).setupHTTP2_ServeTLS":[[0],[0]],"(*net/http.Server).shouldConfigureHTTP2ForServe":[[0],[]],"(*net/http.Server).shuttingDown":[[0],[]],"(*net/http.Server).tlsHandshakeTimeout":[[0],[0]],"(*net/http.Server).trackConn":[[0]],"(*net/http.Server).trackListener":[[0],[]],"(*net/http.Transport).CancelRequest":[[0]],"(*net/http.Transport).Clone":[[0],[0]],"(*net/http.Transport).CloseIdleConnections":[[0]],"(*net/http.Transport).RegisterProtocol":[[0]],"(*net/http.Transport).RoundTrip":[[0],[1],[1]],"(*net/http.Transport).alternateRoundTripper":[[0],[1]],"(*net/http.Transport).cancelRequest":[[0],[0,1]],"(*net/http.Transport).connectMethodForRequest":[[0],[1],[]],"(*net/http.Transport).customDialTLS":[[0],[2,3],[2,3]],"(*net/http.Transport).decConnsPerHost":[[0]],"(*net/http.Transport).dial":[[0],[2,3],[2,3]],"(*net/http.Transport).dialConn":[[0],[0,2],[0,2]],"(*net/http.Transport).dialConn$1":[[0]],"(*net/http.Transport).dialConn$2":[],"(*net/http.Transport).dialConn$3":[],"(*net/http.Transport).dialConnFor":[[0]],"(*net/http.Transport).getConn":[[0],[1,2],[1,2]],"(*net/http.Transport).getConn$1":[],"(*net/http.Transport).getConn$2":[],"(*net/http.Transport).getConn$3":[],"(*net/http.Transport).hasCustomTLSDialer":[[0],[0]],"(*net/http.Transport).maxIdleConnsPerHost":[[0],[0]],"(*net/http.Transport).onceSetNextProtoDefaults":[[0]],"(*net/http.Transport).onceSetNextProtoDefaults$bound":[],"(*net/http.Transport).putOrCloseIdleConn":[[0]],"(*net/http.Transport).queueForDial":[[0]],"(*net/http.Transport).queueForIdleConn":[[0],[]],"(*net/http.Transport).readBufferSize":[[0],[0]],"(*net/http.Transport).removeIdleConn":[[0],[]],"(*net/http.Transport).removeIdleConnLocked":[[0],[]],"(*net/http.Transport).replaceReqCanceler":[[0],[]],"(*net/http.Transport).roundTrip":[[0],[1],[1]],"(*net/http.Transport).setReqCanceler":[[0]],"(*net/http.Transport).tryPutIdleConn":[[0],[]],"(*net/http.Transport).useRegisteredProtocol":[[0],[]],"(*net/http.Transport).writeBufferSize":[[0],[0]],"(*net/http.atomicBool).isSet":[[0],[]],"(*net/http.atomicBool).isSet$bound":[[]],"(*net/http.atomicBool).setFalse":[[0]],"(*net/http.atomicBool).setTrue":[[0]],"(*net/http.body).Close":[[0],[0]],"(*net/http.body).Read":[[0],[],[0]],"(*net/http.body).bodyRemains":[[0],[0]],"(*net/http.body).didEarlyClose":[[0],[0]],"(*net/http.body).readLocked":[[0],[],[0]],"(*net/http.body).readTrailer":[[0],[0]],"(*net/http.body).registerOnHitEOF":[[0,1]],"(*net/http.body).unreadDataSizeLocked":[[0],[0]],"(*net/http.bodyEOFSignal).Close":[[0],[]],"(*net/http.bodyEOFSignal).Read":[[0],[],[0]],"(*net/http.bodyEOFSignal).condfn":[[0],[1]],"(*net/http.bodyLocked).Read":[[0],[],[]],"(*net/http.bufioFlushWriter).Write":[[0],[],[]],"(*net/http.byteReader).Read":[[0],[],[]],"(*net/http.cancelTimerBody).Close":[[0],[]],"(*net/http.cancelTimerBody).Read":[[0],[],[]],"(*net/http.checkConnErrorWriter).Write":[[0],[],[]],"(*net/http.chunkWriter).Write":[[0],[],[0]],"(*net/http.chunkWriter).close":[[0]],"(*net/http.chunkWriter).flush":[[0]],"(*net/http.chunkWriter).writeHeader":[[0]],"(*net/http.chunkWriter).writeHeader$1":[],"(*net/http.conn).close":[[0]],"(*net/http.conn).closeWriteAndWait":[[0]],"(*net/http.conn).finalFlush":[[0]],"(*net/http.conn).getState":[[0],[],[]],"(*net/http.conn).hijackLocked":[[0],[0],[0],[0]],"(*net/http.conn).hijacked":[[0],[0]],"(*net/http.conn).readRequest":[[0],[0,1],[0]],"(*net/http.conn).readRequest$1":[],"(*net/http.conn).serve":[[0]],"(*net/http.conn).serve$1":[],"(*net/http.conn).setState":[[0]],"(*net/http.connLRU).add":[[0]],"(*net/http.connLRU).len":[[0],[]],"(*net/http.connLRU).remove":[[0]],"(*net/http.connLRU).removeOldest":[[0],[0]],"(*net/http.connReader).Read":[[0],[],[0]],"(*net/http.connReader).abortPendingRead":[[0]],"(*net/http.connReader).backgroundRead":[[0]],"(*net/http.connReader).closeNotify":[[0]],"(*net/http.connReader).handleReadError":[[0]],"(*net/http.connReader).hitReadLimit":[[0],[0]],"(*net/http.connReader).lock":[[0]],"(*net/http.connReader).setInfiniteReadLimit":[[0]],"(*net/http.connReader).setReadLimit":[[0,1]],"(*net/http.connReader).startBackgroundRead":[[0]],"(*net/http.connReader).startBackgroundRead$bound":[],"(*net/http.connReader).unlock":[[0]],"(*net/http.connectMethod).addr":[[0],[0]],"(*net/http.connectMethod).key":[[0],[0]],"(*net/http.connectMethod).proxyAuth":[[0],[]],"(*net/http.connectMethod).scheme":[[0],[0]],"(*net/http.connectMethod).tlsHost":[[0],[0]],"(*net/http.connectMethodKey).String":[[0],[]],"(*net/http.contextKey).String":[[0],[0]],"(*net/http.countingWriter).Write":[[0],[],[]],"(*net/http.dirEntryDirs).isDir":[[0],[]],"(*net/http.dirEntryDirs).len":[[0],[]],"(*net/http.dirEntryDirs).name":[[0],[]],"(*net/http.errorReader).Read":[[0],[],[]],"(*net/http.exactSig).match":[[0],[0]],"(*net/http.expectContinueReader).Close":[[0],[]],"(*net/http.expectContinueReader).Read":[[0],[],[]],"(*net/http.fakeLocker).Lock":[[0]],"(*net/http.fakeLocker).Unlock":[[0]],"(*net/http.fileHandler).ServeHTTP":[[0]],"(*net/http.fileInfoDirs).isDir":[[0],[]],"(*net/http.fileInfoDirs).len":[[0],[]],"(*net/http.fileInfoDirs).name":[[0],[]],"(*net/http.fileTransport).RoundTrip":[[0],[],[]],"(*net/http.finishAsyncByteRead).Read":[[0],[],[]],"(*net/http.globalOptionsHandler).ServeHTTP":[[0]],"(*net/http.gzipReader).Close":[[0],[]],"(*net/http.gzipReader).Read":[[0],[],[0]],"(*net/http.headerSorter).Len":[[0],[]],"(*net/http.headerSorter).Less":[[0],[0]],"(*net/http.headerSorter).Swap":[[0]],"(*net/http.htmlSig).match":[[0],[]],"(*net/http.http2ClientConn).CanTakeNewRequest":[[0],[0]],"(*net/http.http2ClientConn).Close":[[0],[0]],"(*net/http.http2ClientConn).Ping":[[0],[0]],"(*net/http.http2ClientConn).Ping$1":[],"(*net/http.http2ClientConn).ReserveNewRequest":[[0],[]],"(*net/http.http2ClientConn).RoundTrip":[[0],[],[0,1]],"(*net/http.http2ClientConn).RoundTrip$1":[[]],"(*net/http.http2ClientConn).RoundTrip$2":[[],[]],"(*net/http.http2ClientConn).SetDoNotReuse":[[0]],"(*net/http.http2ClientConn).Shutdown":[[0],[0]],"(*net/http.http2ClientConn).Shutdown$1":[],"(*net/http.http2ClientConn).State":[[0],[0]],"(*net/http.http2ClientConn).addStreamLocked":[[0]],"(*net/http.http2ClientConn).awaitOpenSlotForStreamLocked":[[0],[1]],"(*net/http.http2ClientConn).canTakeNewRequestLocked":[[0],[0]],"(*net/http.http2ClientConn).closeConn":[[0],[0]],"(*net/http.http2ClientConn).closeForError":[[0],[0]],"(*net/http.http2ClientConn).closeForLostPing":[[0],[0]],"(*net/http.http2ClientConn).closeIfIdle":[[0]],"(*net/http.http2ClientConn).countReadFrameError":[[0]],"(*net/http.http2ClientConn).decrStreamReservations":[[0]],"(*net/http.http2ClientConn).decrStreamReservationsLocked":[[0]],"(*net/http.http2ClientConn).encodeHeaders":[[0],[0],[1]],"(*net/http.http2ClientConn).encodeHeaders$1":[],"(*net/http.http2ClientConn).encodeHeaders$2":[],"(*net/http.http2ClientConn).encodeHeaders$3":[],"(*net/http.http2ClientConn).encodeTrailers":[[0,1],[0,1],[]],"(*net/http.http2ClientConn).forceCloseConn":[[0]],"(*net/http.http2ClientConn).forceCloseConn$bound":[],"(*net/http.http2ClientConn).forgetStreamID":[[0]],"(*net/http.http2ClientConn).healthCheck":[[0]],"(*net/http.http2ClientConn).healthCheck$bound":[],"(*net/http.http2ClientConn).idleState":[[0],[0]],"(*net/http.http2ClientConn).idleStateLocked":[[0],[0]],"(*net/http.http2ClientConn).isDoNotReuseAndIdle":[[0],[]],"(*net/http.http2ClientConn).logf":[[0]],"(*net/http.http2ClientConn).onIdleTimeout":[[0]],"(*net/http.http2ClientConn).onIdleTimeout$bound":[],"(*net/http.http2ClientConn).readLoop":[[0]],"(*net/http.http2ClientConn).responseHeaderTimeout":[[0],[0]],"(*net/http.http2ClientConn).sendGoAway":[[0],[0]],"(*net/http.http2ClientConn).setGoAway":[[0,1]],"(*net/http.http2ClientConn).tooIdleLocked":[[0],[0]],"(*net/http.http2ClientConn).vlogf":[[0]],"(*net/http.http2ClientConn).writeHeader":[[0,1,2]],"(*net/http.http2ClientConn).writeHeaders":[[0,1,2,4],[0,1,2,4]],"(*net/http.http2ClientConn).writeStreamReset":[[0]],"(*net/http.http2ConnectionError).Error":[[0],[]],"(*net/http.http2ContinuationFrame).Header":[[0],[0]],"(*net/http.http2ContinuationFrame).HeaderBlockFragment":[[0],[0]],"(*net/http.http2ContinuationFrame).HeadersEnded":[[0],[0]],"(*net/http.http2ContinuationFrame).String":[[0],[]],"(*net/http.http2ContinuationFrame).checkValid":[[0]],"(*net/http.http2ContinuationFrame).invalidate":[[0]],"(*net/http.http2ContinuationFrame).writeDebug":[[0]],"(*net/http.http2DataFrame).Data":[[0],[0]],"(*net/http.http2DataFrame).Header":[[0],[0]],"(*net/http.http2DataFrame).StreamEnded":[[0],[0]],"(*net/http.http2DataFrame).String":[[0],[]],"(*net/http.http2DataFrame).checkValid":[[0]],"(*net/http.http2DataFrame).invalidate":[[0]],"(*net/http.http2DataFrame).writeDebug":[[0]],"(*net/http.http2ErrCode).String":[[0],[]],"(*net/http.http2ErrCode).stringToken":[[0],[]],"(*net/http.http2Flags).Has":[[0],[1]],"(*net/http.http2FrameHeader).Header":[[0],[]],"(*net/http.http2FrameHeader).String":[[0],[]],"(*net/http.http2FrameHeader).checkValid":[[0]],"(*net/http.http2FrameHeader).invalidate":[[0]],"(*net/http.http2FrameHeader).writeDebug":[[0]],"(*net/http.http2FrameType).String":[[0],[]],"(*net/http.http2FrameWriteRequest).Consume":[[0],[],[],[]],"(*net/http.http2FrameWriteRequest).DataSize":[[0],[]],"(*net/http.http2FrameWriteRequest).StreamID":[[0],[]],"(*net/http.http2FrameWriteRequest).String":[[0],[]],"(*net/http.http2FrameWriteRequest).isControl":[[0],[]],"(*net/http.http2FrameWriteRequest).replyToWriter":[[0]],"(*net/http.http2Framer).ErrorDetail":[[0],[0]],"(*net/http.http2Framer).ReadFrame":[[0],[0],[0]],"(*net/http.http2Framer).SetMaxReadFrameSize":[[0,1]],"(*net/http.http2Framer).SetReuseFrames":[[0]],"(*net/http.http2Framer).WriteContinuation":[[0],[0]],"(*net/http.http2Framer).WriteData":[[0],[0]],"(*net/http.http2Framer).WriteDataPadded":[[0],[0]],"(*net/http.http2Framer).WriteGoAway":[[0],[0]],"(*net/http.http2Framer).WriteHeaders":[[0,1],[0]],"(*net/http.http2Framer).WritePing":[[0],[0]],"(*net/http.http2Framer).WritePriority":[[0],[0]],"(*net/http.http2Framer).WritePushPromise":[[0,1],[0]],"(*net/http.http2Framer).WriteRSTStream":[[0],[0]],"(*net/http.http2Framer).WriteRawFrame":[[0],[0]],"(*net/http.http2Framer).WriteSettings":[[0],[0]],"(*net/http.http2Framer).WriteSettingsAck":[[0],[0]],"(*net/http.http2Framer).WriteWindowUpdate":[[0],[0]],"(*net/http.http2Framer).checkFrameOrder":[[0,1],[]],"(*net/http.http2Framer).connError":[[0,2],[1]],"(*net/http.http2Framer).endWrite":[[0],[0]],"(*net/http.http2Framer).logWrite":[[0]],"(*net/http.http2Framer).maxHeaderListSize":[[0],[0]],"(*net/http.http2Framer).maxHeaderStringLen":[[0],[0]],"(*net/http.http2Framer).readMetaFrame":[[0],[1],[1]],"(*net/http.http2Framer).readMetaFrame$1":[],"(*net/http.http2Framer).readMetaFrame$2":[],"(*net/http.http2Framer).startWrite":[[0,1,2,3]],"(*net/http.http2Framer).writeByte":[[0,1]],"(*net/http.http2Framer).writeBytes":[[0,1]],"(*net/http.http2Framer).writeUint16":[[0,1]],"(*net/http.http2Framer).writeUint32":[[0,1]],"(*net/http.http2GoAwayError).Error":[[0],[]],"(*net/http.http2GoAwayFrame).DebugData":[[0],[0]],"(*net/http.http2GoAwayFrame).Header":[[0],[0]],"(*net/http.http2GoAwayFrame).String":[[0],[]],"(*net/http.http2GoAwayFrame).checkValid":[[0]],"(*net/http.http2GoAwayFrame).invalidate":[[0]],"(*net/http.http2GoAwayFrame).writeDebug":[[0]],"(*net/http.http2HeadersFrame).HasPriority":[[0],[0]],"(*net/http.http2HeadersFrame).Header":[[0],[0]],"(*net/http.http2HeadersFrame).HeaderBlockFragment":[[0],[0]],"(*net/http.http2HeadersFrame).HeadersEnded":[[0],[0]],"(*net/http.http2HeadersFrame).StreamEnded":[[0],[0]],"(*net/http.http2HeadersFrame).String":[[0],[]],"(*net/http.http2HeadersFrame).checkValid":[[0]],"(*net/http.http2HeadersFrame).invalidate":[[0]],"(*net/http.http2HeadersFrame).writeDebug":[[0]],"(*net/http.http2MetaHeadersFrame).HasPriority":[[0],[0]],"(*net/http.http2MetaHeadersFrame).Header":[[0],[0]],"(*net/http.http2MetaHeadersFrame).HeaderBlockFragment":[[0],[0]],"(*net/http.http2MetaHeadersFrame).HeadersEnded":[[0],[0]],"(*net/http.http2MetaHeadersFrame).PseudoFields":[[0],[0]],"(*net/http.http2MetaHeadersFrame).PseudoValue":[[0],[0]],"(*net/http.http2MetaHeadersFrame).RegularFields":[[0],[0]],"(*net/http.http2MetaHeadersFrame).StreamEnded":[[0],[0]],"(*net/http.http2MetaHeadersFrame).String":[[0],[]],"(*net/http.http2MetaHeadersFrame).checkPseudos":[[0],[0]],"(*net/http.http2MetaHeadersFrame).checkValid":[[0]],"(*net/http.http2MetaHeadersFrame).invalidate":[[0]],"(*net/http.http2MetaHeadersFrame).writeDebug":[[0]],"(*net/http.http2PingFrame).Header":[[0],[0]],"(*net/http.http2PingFrame).IsAck":[[0],[0]],"(*net/http.http2PingFrame).String":[[0],[]],"(*net/http.http2PingFrame).checkValid":[[0]],"(*net/http.http2PingFrame).invalidate":[[0]],"(*net/http.http2PingFrame).writeDebug":[[0]],"(*net/http.http2PriorityFrame).Header":[[0],[0]],"(*net/http.http2PriorityFrame).IsZero":[[0],[0]],"(*net/http.http2PriorityFrame).String":[[0],[]],"(*net/http.http2PriorityFrame).checkValid":[[0]],"(*net/http.http2PriorityFrame).invalidate":[[0]],"(*net/http.http2PriorityFrame).writeDebug":[[0]],"(*net/http.http2PriorityParam).IsZero":[[0],[]],"(*net/http.http2PushPromiseFrame).Header":[[0],[0]],"(*net/http.http2PushPromiseFrame).HeaderBlockFragment":[[0],[0]],"(*net/http.http2PushPromiseFrame).HeadersEnded":[[0],[0]],"(*net/http.http2PushPromiseFrame).String":[[0],[]],"(*net/http.http2PushPromiseFrame).checkValid":[[0]],"(*net/http.http2PushPromiseFrame).invalidate":[[0]],"(*net/http.http2PushPromiseFrame).writeDebug":[[0]],"(*net/http.http2RSTStreamFrame).Header":[[0],[0]],"(*net/http.http2RSTStreamFrame).String":[[0],[]],"(*net/http.http2RSTStreamFrame).checkValid":[[0]],"(*net/http.http2RSTStreamFrame).invalidate":[[0]],"(*net/http.http2RSTStreamFrame).writeDebug":[[0]],"(*net/http.http2ServeConnOpts).baseConfig":[[0],[0]],"(*net/http.http2ServeConnOpts).context":[[0],[0]],"(*net/http.http2ServeConnOpts).handler":[[0],[0]],"(*net/http.http2Server).ServeConn":[[0]],"(*net/http.http2Server).initialConnRecvWindowSize":[[0],[0]],"(*net/http.http2Server).initialStreamRecvWindowSize":[[0],[0]],"(*net/http.http2Server).maxConcurrentStreams":[[0],[0]],"(*net/http.http2Server).maxQueuedControlFrames":[[0],[]],"(*net/http.http2Server).maxReadFrameSize":[[0],[0]],"(*net/http.http2Setting).String":[[0],[]],"(*net/http.http2Setting).Valid":[[0],[]],"(*net/http.http2SettingID).String":[[0],[]],"(*net/http.http2SettingsFrame).ForeachSetting":[[0],[]],"(*net/http.http2SettingsFrame).HasDuplicates":[[0],[]],"(*net/http.http2SettingsFrame).Header":[[0],[0]],"(*net/http.http2SettingsFrame).IsAck":[[0],[0]],"(*net/http.http2SettingsFrame).NumSettings":[[0],[]],"(*net/http.http2SettingsFrame).Setting":[[0],[0]],"(*net/http.http2SettingsFrame).String":[[0],[]],"(*net/http.http2SettingsFrame).Value":[[0],[0],[]],"(*net/http.http2SettingsFrame).checkValid":[[0]],"(*net/http.http2SettingsFrame).invalidate":[[0]],"(*net/http.http2SettingsFrame).writeDebug":[[0]],"(*net/http.http2StreamError).Error":[[0],[]],"(*net/http.http2StreamError).staysWithinBuffer":[[0],[1]],"(*net/http.http2StreamError).writeFrame":[[0],[1]],"(*net/http.http2Transport).CloseIdleConnections":[[0]],"(*net/http.http2Transport).NewClientConn":[[0],[0,1],[0,1]],"(*net/http.http2Transport).RoundTrip":[[0],[],[0,1]],"(*net/http.http2Transport).RoundTripOpt":[[0],[],[0,1]],"(*net/http.http2Transport).connPool":[[0],[0]],"(*net/http.http2Transport).dialClientConn":[[0],[0,2,3],[0,2,3]],"(*net/http.http2Transport).dialTLS":[[0],[0]],"(*net/http.http2Transport).dialTLS$1":[[0,1,2],[0,1,2]],"(*net/http.http2Transport).dialTLSWithContext":[[0],[2,3,4],[2,3,4]],"(*net/http.http2Transport).disableCompression":[[0],[0]],"(*net/http.http2Transport).disableKeepAlives":[[0],[0]],"(*net/http.http2Transport).expectContinueTimeout":[[0],[0]],"(*net/http.http2Transport).idleConnTimeout":[[0],[0]],"(*net/http.http2Transport).initConnPool":[[0]],"(*net/http.http2Transport).initConnPool$bound":[],"(*net/http.http2Transport).logf":[[0]],"(*net/http.http2Transport).maxHeaderListSize":[[0],[0]],"(*net/http.http2Transport).newClientConn":[[0],[0,1,2],[0,1,2]],"(*net/http.http2Transport).newTLSConfig":[[0],[0,1]],"(*net/http.http2Transport).pingTimeout":[[0],[0]],"(*net/http.http2Transport).vlogf":[[0]],"(*net/http.http2UnknownFrame).Header":[[0],[0]],"(*net/http.http2UnknownFrame).Payload":[[0],[0]],"(*net/http.http2UnknownFrame).String":[[0],[]],"(*net/http.http2UnknownFrame).checkValid":[[0]],"(*net/http.http2UnknownFrame).invalidate":[[0]],"(*net/http.http2UnknownFrame).writeDebug":[[0]],"(*net/http.http2WindowUpdateFrame).Header":[[0],[0]],"(*net/http.http2WindowUpdateFrame).String":[[0],[]],"(*net/http.http2WindowUpdateFrame).checkValid":[[0]],"(*net/http.http2WindowUpdateFrame).invalidate":[[0]],"(*net/http.http2WindowUpdateFrame).writeDebug":[[0]],"(*net/http.http2addConnCall).run":[[0,1,3]],"(*net/http.http2bufferedWriter).Available":[[0],[0]],"(*net/http.http2bufferedWriter).Flush":[[0],[0]],"(*net/http.http2bufferedWriter).Write":[[0],[],[0]],"(*net/http.http2chunkWriter).Write":[[0],[],[]],"(*net/http.http2clientConnPool).GetClientConn":[[0],[0,1,2],[0,1,2]],"(*net/http.http2clientConnPool).MarkDead":[[0]],"(*net/http.http2clientConnPool).addConnIfNeeded":[[0],[],[0,1]],"(*net/http.http2clientConnPool).addConnLocked":[[0]],"(*net/http.http2clientConnPool).closeIdleConnections":[[0]],"(*net/http.http2clientConnPool).getClientConn":[[0],[0,1,2],[0,1,2]],"(*net/http.http2clientConnPool).getStartDialLocked":[[0],[0,1,2]],"(*net/http.http2clientConnReadLoop).cleanup":[[0]],"(*net/http.http2clientConnReadLoop).endStream":[[0]],"(*net/http.http2clientConnReadLoop).endStreamError":[[0]],"(*net/http.http2clientConnReadLoop).handleResponse":[[0],[1,2],[]],"(*net/http.http2clientConnReadLoop).handleResponse$1":[],"(*net/http.http2clientConnReadLoop).processData":[[0],[]],"(*net/http.http2clientConnReadLoop).processGoAway":[[0,1],[]],"(*net/http.http2clientConnReadLoop).processHeaders":[[0],[]],"(*net/http.http2clientConnReadLoop).processPing":[[0],[0]],"(*net/http.http2clientConnReadLoop).processPushPromise":[[0],[]],"(*net/http.http2clientConnReadLoop).processResetStream":[[0],[]],"(*net/http.http2clientConnReadLoop).processSettings":[[0],[]],"(*net/http.http2clientConnReadLoop).processSettingsNoWrite":[[0],[]],"(*net/http.http2clientConnReadLoop).processSettingsNoWrite$1":[[]],"(*net/http.http2clientConnReadLoop).processTrailers":[[0],[]],"(*net/http.http2clientConnReadLoop).processWindowUpdate":[[0],[]],"(*net/http.http2clientConnReadLoop).run":[[0],[0]],"(*net/http.http2clientConnReadLoop).streamByID":[[0],[0,1]],"(*net/http.http2clientStream).abortRequestBodyWrite":[[0]],"(*net/http.http2clientStream).abortStream":[[0]],"(*net/http.http2clientStream).abortStreamLocked":[[0]],"(*net/http.http2clientStream).abortStreamLocked$1":[],"(*net/http.http2clientStream).awaitFlowControl":[[0,1],[0,1],[0]],"(*net/http.http2clientStream).cleanupWriteRequest":[[0]],"(*net/http.http2clientStream).copyTrailers":[[0]],"(*net/http.http2clientStream).copyTrailers$bound":[],"(*net/http.http2clientStream).doRequest":[[0]],"(*net/http.http2clientStream).encodeAndWriteHeaders":[[0,1],[0,1]],"(*net/http.http2clientStream).frameScratchBufferLen":[[0],[0,1]],"(*net/http.http2clientStream).get1xxTraceFunc":[[0],[0]],"(*net/http.http2clientStream).writeRequest":[[0,1],[0,1]],"(*net/http.http2clientStream).writeRequestBody":[[0,1],[0,1]],"(*net/http.http2closeWaiter).Close":[[0]],"(*net/http.http2closeWaiter).Init":[[0]],"(*net/http.http2closeWaiter).Wait":[[0]],"(*net/http.http2connError).Error":[[0],[]],"(*net/http.http2dataBuffer).Len":[[0],[0]],"(*net/http.http2dataBuffer).Read":[[0],[],[]],"(*net/http.http2dataBuffer).Write":[[0],[],[]],"(*net/http.http2dataBuffer).bytesFromFirstChunk":[[0],[0]],"(*net/http.http2dataBuffer).lastChunkOrAlloc":[[0],[0]],"(*net/http.http2dialCall).dial":[[0,2]],"(*net/http.http2duplicatePseudoHeaderError).Error":[[0],[]],"(*net/http.http2erringRoundTripper).RoundTrip":[[0],[],[]],"(*net/http.http2erringRoundTripper).RoundTripErr":[[0],[]],"(*net/http.http2flow).add":[[0,1],[]],"(*net/http.http2flow).available":[[0],[0]],"(*net/http.http2flow).setConnFlow":[[0,1]],"(*net/http.http2flow).take":[[0,1]],"(*net/http.http2flushFrameWriter).staysWithinBuffer":[[0],[]],"(*net/http.http2flushFrameWriter).writeFrame":[[0],[1]],"(*net/http.http2frameCache).getDataFrame":[[0],[0]],"(*net/http.http2goAwayFlowError).Error":[[0],[]],"(*net/http.http2goroutineLock).check":[[0]],"(*net/http.http2goroutineLock).checkNotOn":[[0]],"(*net/http.http2gzipReader).Close":[[0],[]],"(*net/http.http2gzipReader).Read":[[0],[],[0]],"(*net/http.http2handlerPanicRST).staysWithinBuffer":[[0],[1]],"(*net/http.http2handlerPanicRST).writeFrame":[[0],[1]],"(*net/http.http2headerFieldNameError).Error":[[0],[]],"(*net/http.http2headerFieldValueError).Error":[[0],[]],"(*net/http.http2httpError).Error":[[0],[0]],"(*net/http.http2httpError).Temporary":[[0],[]],"(*net/http.http2httpError).Timeout":[[0],[0]],"(*net/http.http2missingBody).Close":[[0],[]],"(*net/http.http2missingBody).Read":[[0],[],[]],"(*net/http.http2noBodyReader).Close":[[0],[]],"(*net/http.http2noBodyReader).Read":[[0],[],[]],"(*net/http.http2noCachedConnError).Error":[[0],[]],"(*net/http.http2noCachedConnError).IsHTTP2NoCachedConnError":[[0]],"(*net/http.http2noDialClientConnPool).GetClientConn":[[0],[1,2],[1,2]],"(*net/http.http2noDialClientConnPool).MarkDead":[[0]],"(*net/http.http2noDialClientConnPool).addConnIfNeeded":[[0],[],[0,1]],"(*net/http.http2noDialClientConnPool).addConnLocked":[[0]],"(*net/http.http2noDialClientConnPool).closeIdleConnections":[[0]],"(*net/http.http2noDialClientConnPool).getClientConn":[[0],[0,1,2],[0,1,2]],"(*net/http.http2noDialClientConnPool).getStartDialLocked":[[0],[0,1,2]],"(*net/http.http2noDialH2RoundTripper).CloseIdleConnections":[[0]],"(*net/http.http2noDialH2RoundTripper).NewClientConn":[[0],[0,1],[0,1]],"(*net/http.http2noDialH2RoundTripper).RoundTrip":[[0],[],[1]],"(*net/http.http2noDialH2RoundTripper).RoundTripOpt":[[0],[],[0,1]],"(*net/http.http2noDialH2RoundTripper).connPool":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).dialClientConn":[[0],[0,2,3],[0,2,3]],"(*net/http.http2noDialH2RoundTripper).dialTLS":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).dialTLSWithContext":[[0],[2,3,4],[2,3,4]],"(*net/http.http2noDialH2RoundTripper).disableCompression":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).disableKeepAlives":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).expectContinueTimeout":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).idleConnTimeout":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).initConnPool":[[0]],"(*net/http.http2noDialH2RoundTripper).logf":[[0]],"(*net/http.http2noDialH2RoundTripper).maxHeaderListSize":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).newClientConn":[[0],[0,1,2],[0,1,2]],"(*net/http.http2noDialH2RoundTripper).newTLSConfig":[[0],[0,1]],"(*net/http.http2noDialH2RoundTripper).pingTimeout":[[0],[0]],"(*net/http.http2noDialH2RoundTripper).vlogf":[[0]],"(*net/http.http2pipe).BreakWithError":[[0]],"(*net/http.http2pipe).CloseWithError":[[0]],"(*net/http.http2pipe).Done":[[0],[0]],"(*net/http.http2pipe).Err":[[0],[0]],"(*net/http.http2pipe).Len":[[0],[0]],"(*net/http.http2pipe).Read":[[0],[],[0]],"(*net/http.http2pipe).Write":[[0],[],[]],"(*net/http.http2pipe).closeDoneLocked":[[0]],"(*net/http.http2pipe).closeWithError":[[0]],"(*net/http.http2pipe).closeWithErrorAndCode":[[0]],"(*net/http.http2pipe).setBuffer":[[0,1]],"(*net/http.http2priorityNode).addBytes":[[0,1]],"(*net/http.http2priorityNode).setParent":[[0,1]],"(*net/http.http2priorityNode).walkReadyInOrder":[[0],[]],"(*net/http.http2priorityWriteScheduler).AdjustStream":[[0]],"(*net/http.http2priorityWriteScheduler).CloseStream":[[0]],"(*net/http.http2priorityWriteScheduler).OpenStream":[[0,1]],"(*net/http.http2priorityWriteScheduler).Pop":[[0],[],[]],"(*net/http.http2priorityWriteScheduler).Pop$1":[[]],"(*net/http.http2priorityWriteScheduler).Push":[[0]],"(*net/http.http2priorityWriteScheduler).addClosedOrIdleNode":[[0]],"(*net/http.http2priorityWriteScheduler).removeNode":[[0]],"(*net/http.http2pseudoHeaderError).Error":[[0],[]],"(*net/http.http2randomWriteScheduler).AdjustStream":[[0]],"(*net/http.http2randomWriteScheduler).CloseStream":[[0,1]],"(*net/http.http2randomWriteScheduler).OpenStream":[[0]],"(*net/http.http2randomWriteScheduler).Pop":[[0],[0],[]],"(*net/http.http2randomWriteScheduler).Push":[[0,1]],"(*net/http.http2requestBody).Close":[[0],[]],"(*net/http.http2requestBody).Close$1":[],"(*net/http.http2requestBody).Read":[[0],[],[0]],"(*net/http.http2responseWriter).CloseNotify":[[0],[0]],"(*net/http.http2responseWriter).CloseNotify$1":[],"(*net/http.http2responseWriter).Flush":[[0]],"(*net/http.http2responseWriter).Header":[[0],[0]],"(*net/http.http2responseWriter).Push":[[0],[1,2]],"(*net/http.http2responseWriter).Write":[[0],[],[0]],"(*net/http.http2responseWriter).WriteHeader":[[0,1]],"(*net/http.http2responseWriter).WriteString":[[0],[],[0]],"(*net/http.http2responseWriter).handlerDone":[[0]],"(*net/http.http2responseWriter).write":[[0],[],[0]],"(*net/http.http2responseWriterState).declareTrailer":[[0,1]],"(*net/http.http2responseWriterState).declareTrailer$bound":[],"(*net/http.http2responseWriterState).hasNonemptyTrailers":[[0],[]],"(*net/http.http2responseWriterState).hasTrailers":[[0],[]],"(*net/http.http2responseWriterState).promoteUndeclaredTrailers":[[0]],"(*net/http.http2responseWriterState).writeChunk":[[0],[],[]],"(*net/http.http2responseWriterState).writeHeader":[[0,1]],"(*net/http.http2serverConn).CloseConn":[[0],[0]],"(*net/http.http2serverConn).Flush":[[0],[0]],"(*net/http.http2serverConn).Framer":[[0],[0]],"(*net/http.http2serverConn).HeaderEncoder":[[0],[0],[0]],"(*net/http.http2serverConn).awaitGracefulShutdown":[[0]],"(*net/http.http2serverConn).canonicalHeader":[[0],[0,1]],"(*net/http.http2serverConn).checkPriority":[[0],[1]],"(*net/http.http2serverConn).closeAllStreamsOnConnClose":[[0]],"(*net/http.http2serverConn).closeStream":[[0]],"(*net/http.http2serverConn).condlogf":[[0]],"(*net/http.http2serverConn).countError":[[0],[2]],"(*net/http.http2serverConn).curOpenStreams":[[0],[0]],"(*net/http.http2serverConn).goAway":[[0,1]],"(*net/http.http2serverConn).logf":[[0]],"(*net/http.http2serverConn).maxHeaderListSize":[[0],[0]],"(*net/http.http2serverConn).newStream":[[0],[0,1,3]],"(*net/http.http2serverConn).newWriterAndRequest":[[0],[0,1,2],[0,1,2],[1,2]],"(*net/http.http2serverConn).newWriterAndRequestNoBody":[[0],[0,1,2],[0,1,2],[1]],"(*net/http.http2serverConn).noteBodyRead":[[0]],"(*net/http.http2serverConn).noteBodyReadFromHandler":[[0]],"(*net/http.http2serverConn).notePanic":[[0]],"(*net/http.http2serverConn).onIdleTimer":[[0]],"(*net/http.http2serverConn).onIdleTimer$bound":[],"(*net/http.http2serverConn).onSettingsTimer":[[0]],"(*net/http.http2serverConn).onSettingsTimer$bound":[],"(*net/http.http2serverConn).onShutdownTimer":[[0]],"(*net/http.http2serverConn).onShutdownTimer$bound":[],"(*net/http.http2serverConn).processData":[[0,1],[1]],"(*net/http.http2serverConn).processFrame":[[0,1],[0,1]],"(*net/http.http2serverConn).processFrameFromReader":[[0,1],[]],"(*net/http.http2serverConn).processGoAway":[[0],[]],"(*net/http.http2serverConn).processHeaders":[[0],[0,1]],"(*net/http.http2serverConn).processPing":[[0],[]],"(*net/http.http2serverConn).processPriority":[[0],[1]],"(*net/http.http2serverConn).processResetStream":[[0],[]],"(*net/http.http2serverConn).processSetting":[[0,1],[]],"(*net/http.http2serverConn).processSetting$bound":[[]],"(*net/http.http2serverConn).processSettingInitialWindowSize":[[0,1],[]],"(*net/http.http2serverConn).processSettings":[[0],[]],"(*net/http.http2serverConn).processWindowUpdate":[[0,1],[1]],"(*net/http.http2serverConn).readFrames":[[0]],"(*net/http.http2serverConn).readPreface":[[0],[]],"(*net/http.http2serverConn).readPreface$1":[],"(*net/http.http2serverConn).rejectConn":[[0]],"(*net/http.http2serverConn).resetStream":[[0]],"(*net/http.http2serverConn).runHandler":[[0]],"(*net/http.http2serverConn).runHandler$1":[],"(*net/http.http2serverConn).scheduleFrameWrite":[[0]],"(*net/http.http2serverConn).sendServeMsg":[[0]],"(*net/http.http2serverConn).sendWindowUpdate":[[0]],"(*net/http.http2serverConn).sendWindowUpdate32":[[0,2]],"(*net/http.http2serverConn).serve":[[0]],"(*net/http.http2serverConn).setConnState":[[0]],"(*net/http.http2serverConn).shutDownIn":[[0,1]],"(*net/http.http2serverConn).startFrameWrite":[[0]],"(*net/http.http2serverConn).startGracefulShutdown":[[0]],"(*net/http.http2serverConn).startGracefulShutdown$1":[],"(*net/http.http2serverConn).startGracefulShutdownInternal":[[0]],"(*net/http.http2serverConn).startPush":[[0]],"(*net/http.http2serverConn).startPush$1":[[],[]],"(*net/http.http2serverConn).state":[[0],[0,1],[0,1]],"(*net/http.http2serverConn).stopShutdownTimer":[[0]],"(*net/http.http2serverConn).vlogf":[[0]],"(*net/http.http2serverConn).write100ContinueHeaders":[[0]],"(*net/http.http2serverConn).writeDataFromHandler":[[0],[]],"(*net/http.http2serverConn).writeFrame":[[0]],"(*net/http.http2serverConn).writeFrameAsync":[[0]],"(*net/http.http2serverConn).writeFrameFromHandler":[[0],[]],"(*net/http.http2serverConn).writeHeaders":[[0],[]],"(*net/http.http2serverConn).wroteFrame":[[0]],"(*net/http.http2serverInternalState).registerConn":[[0]],"(*net/http.http2serverInternalState).startGracefulShutdown":[[0]],"(*net/http.http2serverInternalState).startGracefulShutdown$bound":[],"(*net/http.http2serverInternalState).unregisterConn":[[0]],"(*net/http.http2sortPriorityNodeSiblings).Len":[[0],[]],"(*net/http.http2sortPriorityNodeSiblings).Less":[[0],[]],"(*net/http.http2sortPriorityNodeSiblings).Swap":[[0]],"(*net/http.http2sorter).Keys":[[0,1],[0,1]],"(*net/http.http2sorter).Len":[[0],[]],"(*net/http.http2sorter).Less":[[0],[0]],"(*net/http.http2sorter).SortStrings":[[0,1]],"(*net/http.http2sorter).Swap":[[0]],"(*net/http.http2stickyErrWriter).Write":[[0],[],[]],"(*net/http.http2stream).copyTrailersToHandlerRequest":[[0]],"(*net/http.http2stream).copyTrailersToHandlerRequest$bound":[],"(*net/http.http2stream).endStream":[[0]],"(*net/http.http2stream).isPushed":[[0],[0]],"(*net/http.http2stream).onWriteTimeout":[[0]],"(*net/http.http2stream).onWriteTimeout$bound":[],"(*net/http.http2stream).processTrailerHeaders":[[0],[0]],"(*net/http.http2streamState).String":[[0],[]],"(*net/http.http2transportResponseBody).Close":[[0],[]],"(*net/http.http2transportResponseBody).Read":[[0],[],[]],"(*net/http.http2write100ContinueHeadersFrame).staysWithinBuffer":[[0],[1]],"(*net/http.http2write100ContinueHeadersFrame).writeFrame":[[0],[1]],"(*net/http.http2writeData).String":[[0],[]],"(*net/http.http2writeData).staysWithinBuffer":[[0],[1]],"(*net/http.http2writeData).writeFrame":[[0],[1]],"(*net/http.http2writeGoAway).staysWithinBuffer":[[0],[]],"(*net/http.http2writeGoAway).writeFrame":[[0],[1]],"(*net/http.http2writePingAck).staysWithinBuffer":[[0],[1]],"(*net/http.http2writePingAck).writeFrame":[[0],[1]],"(*net/http.http2writePushPromise).staysWithinBuffer":[[0],[]],"(*net/http.http2writePushPromise).writeFrame":[[0],[1]],"(*net/http.http2writePushPromise).writeHeaderBlock":[[0],[0,1,2,4]],"(*net/http.http2writePushPromise).writeHeaderBlock$bound":[[0,1,3]],"(*net/http.http2writeQueue).consume":[[0],[0],[]],"(*net/http.http2writeQueue).empty":[[0],[]],"(*net/http.http2writeQueue).push":[[0,1]],"(*net/http.http2writeQueue).shift":[[0],[0]],"(*net/http.http2writeQueuePool).get":[[0],[0]],"(*net/http.http2writeQueuePool).put":[[0,1]],"(*net/http.http2writeResHeaders).staysWithinBuffer":[[0],[]],"(*net/http.http2writeResHeaders).writeFrame":[[0],[1]],"(*net/http.http2writeResHeaders).writeHeaderBlock":[[0],[0,1,2,4]],"(*net/http.http2writeResHeaders).writeHeaderBlock$bound":[[0,1,3]],"(*net/http.http2writeSettings).staysWithinBuffer":[[0],[1]],"(*net/http.http2writeSettings).writeFrame":[[0],[1]],"(*net/http.http2writeSettingsAck).staysWithinBuffer":[[0],[1]],"(*net/http.http2writeSettingsAck).writeFrame":[[0],[1]],"(*net/http.http2writeWindowUpdate).staysWithinBuffer":[[0],[1]],"(*net/http.http2writeWindowUpdate).writeFrame":[[0],[1]],"(*net/http.httpError).Error":[[0],[0]],"(*net/http.httpError).Temporary":[[0],[]],"(*net/http.httpError).Timeout":[[0],[0]],"(*net/http.initALPNRequest).BaseContext":[[0],[]],"(*net/http.initALPNRequest).ServeHTTP":[[0]],"(*net/http.ioFS).Open":[[0],[],[1]],"(*net/http.ioFile).Close":[[0],[]],"(*net/http.ioFile).Read":[[0],[],[]],"(*net/http.ioFile).ReadDir":[[0],[1],[]],"(*net/http.ioFile).Readdir":[[0],[1],[]],"(*net/http.ioFile).Seek":[[0],[],[]],"(*net/http.ioFile).Stat":[[0],[],[]],"(*net/http.loggingConn).Close":[[0],[0]],"(*net/http.loggingConn).LocalAddr":[[0],[]],"(*net/http.loggingConn).Read":[[0],[],[0]],"(*net/http.loggingConn).RemoteAddr":[[0],[0]],"(*net/http.loggingConn).SetDeadline":[[0],[0]],"(*net/http.loggingConn).SetReadDeadline":[[0],[0]],"(*net/http.loggingConn).SetWriteDeadline":[[0],[]],"(*net/http.loggingConn).Write":[[0],[],[]],"(*net/http.maskedSig).match":[[0],[0]],"(*net/http.maxBytesReader).Close":[[0],[]],"(*net/http.maxBytesReader).Read":[[0],[0],[0]],"(*net/http.mp4Sig).match":[[0],[]],"(*net/http.noBody).Close":[[0],[]],"(*net/http.noBody).Read":[[0],[],[]],"(*net/http.noBody).WriteTo":[[0],[],[]],"(*net/http.nothingWrittenError).Error":[[0],[0]],"(*net/http.onceCloseListener).Accept":[[0],[0],[0]],"(*net/http.onceCloseListener).Addr":[[0],[0]],"(*net/http.onceCloseListener).Close":[[0],[0]],"(*net/http.onceCloseListener).close":[[0]],"(*net/http.onceCloseListener).close$bound":[],"(*net/http.persistConn).Read":[[0],[],[0]],"(*net/http.persistConn).addTLS":[[0,2],[]],"(*net/http.persistConn).addTLS$1":[],"(*net/http.persistConn).addTLS$2":[],"(*net/http.persistConn).cancelRequest":[[0]],"(*net/http.persistConn).cancelRequest$bound":[],"(*net/http.persistConn).canceled":[[0],[0]],"(*net/http.persistConn).close":[[0,1]],"(*net/http.persistConn).closeConnIfStillIdle":[[0]],"(*net/http.persistConn).closeConnIfStillIdle$bound":[],"(*net/http.persistConn).closeLocked":[[0,1]],"(*net/http.persistConn).gotIdleConnTrace":[[0],[0,1]],"(*net/http.persistConn).isBroken":[[0],[0]],"(*net/http.persistConn).isReused":[[0],[0]],"(*net/http.persistConn).mapRoundTripError":[[0],[0,1,3]],"(*net/http.persistConn).markReused":[[0]],"(*net/http.persistConn).maxHeaderResponseSize":[[0],[0]],"(*net/http.persistConn).readLoop":[[0]],"(*net/http.persistConn).readLoop$1":[],"(*net/http.persistConn).readLoop$2":[[]],"(*net/http.persistConn).readLoop$3":[[]],"(*net/http.persistConn).readLoop$4":[[0]],"(*net/http.persistConn).readLoopPeekFailLocked":[[0,1]],"(*net/http.persistConn).readResponse":[[0],[0,1],[0,1]],"(*net/http.persistConn).roundTrip":[[0],[],[0,1]],"(*net/http.persistConn).roundTrip$1":[],"(*net/http.persistConn).shouldRetryRequest":[[0],[1]],"(*net/http.persistConn).waitForContinue":[[0],[]],"(*net/http.persistConn).waitForContinue$1":[[]],"(*net/http.persistConn).writeLoop":[[0]],"(*net/http.persistConn).wroteRequest":[[0],[]],"(*net/http.persistConnWriter).ReadFrom":[[0],[],[1]],"(*net/http.persistConnWriter).Write":[[0],[],[]],"(*net/http.populateResponse).Header":[[0],[0]],"(*net/http.populateResponse).Write":[[0],[0],[0]],"(*net/http.populateResponse).WriteHeader":[[0,1]],"(*net/http.populateResponse).finish":[[0]],"(*net/http.populateResponse).sendResponse":[[0]],"(*net/http.readTrackingBody).Close":[[0],[]],"(*net/http.readTrackingBody).Read":[[0],[],[]],"(*net/http.readWriteCloserBody).Close":[[0],[0]],"(*net/http.readWriteCloserBody).Read":[[0],[],[0]],"(*net/http.readWriteCloserBody).Write":[[0],[],[]],"(*net/http.redirectHandler).ServeHTTP":[[0]],"(*net/http.requestBodyReadError).Error":[[0],[0]],"(*net/http.response).CloseNotify":[[0],[0]],"(*net/http.response).Flush":[[0]],"(*net/http.response).Header":[[0],[0]],"(*net/http.response).Hijack":[[0],[0],[0],[0]],"(*net/http.response).ReadFrom":[[0],[],[0,1]],"(*net/http.response).Write":[[0],[],[0]],"(*net/http.response).WriteHeader":[[0,1]],"(*net/http.response).WriteString":[[0],[],[0]],"(*net/http.response).bodyAllowed":[[0],[]],"(*net/http.response).closedRequestBodyEarly":[[0],[0]],"(*net/http.response).declareTrailer":[[0,1]],"(*net/http.response).declareTrailer$bound":[],"(*net/http.response).finalTrailers":[[0],[0]],"(*net/http.response).finishRequest":[[0]],"(*net/http.response).needsSniff":[[0],[0]],"(*net/http.response).requestTooLarge":[[0]],"(*net/http.response).sendExpectationFailed":[[0]],"(*net/http.response).shouldReuseConnection":[[0],[]],"(*net/http.response).write":[[0,1],[],[0,1]],"(*net/http.serverHandler).ServeHTTP":[[0]],"(*net/http.socksAddr).Network":[[0],[]],"(*net/http.socksAddr).String":[[0],[0]],"(*net/http.socksConn).BoundAddr":[[0],[0]],"(*net/http.socksConn).Close":[[0],[0]],"(*net/http.socksConn).LocalAddr":[[0],[]],"(*net/http.socksConn).Read":[[0],[],[0]],"(*net/http.socksConn).RemoteAddr":[[0],[0]],"(*net/http.socksConn).SetDeadline":[[0],[0]],"(*net/http.socksConn).SetReadDeadline":[[0],[0]],"(*net/http.socksConn).SetWriteDeadline":[[0],[]],"(*net/http.socksConn).Write":[[0],[],[]],"(*net/http.socksDialer).DialWithConn":[[0],[4],[0,2,3,4]],"(*net/http.socksDialer).connect":[[0],[3],[0,2,3]],"(*net/http.socksDialer).connect$1":[],"(*net/http.socksDialer).connect$2":[],"(*net/http.socksDialer).pathAddrs":[[0],[0,1],[0,1],[0,1]],"(*net/http.socksDialer).validateTarget":[[0],[]],"(*net/http.socksUsernamePassword).Authenticate":[[0],[2,3]],"(*net/http.socksUsernamePassword).Authenticate$bound":[[1,2]],"(*net/http.statusError).Error":[[0],[]],"(*net/http.stringWriter).WriteString":[[0],[],[]],"(*net/http.textSig).match":[[0],[]],"(*net/http.timeoutHandler).ServeHTTP":[[0]],"(*net/http.timeoutHandler).ServeHTTP$1":[],"(*net/http.timeoutHandler).ServeHTTP$1$1":[],"(*net/http.timeoutHandler).errorBody":[[0],[0]],"(*net/http.timeoutWriter).Header":[[0],[0]],"(*net/http.timeoutWriter).Push":[[0],[]],"(*net/http.timeoutWriter).Write":[[0],[],[0]],"(*net/http.timeoutWriter).WriteHeader":[[0,1]],"(*net/http.timeoutWriter).writeHeaderLocked":[[0,1]],"(*net/http.tlsHandshakeTimeoutError).Error":[[0],[]],"(*net/http.tlsHandshakeTimeoutError).Temporary":[[0],[]],"(*net/http.tlsHandshakeTimeoutError).Timeout":[[0],[]],"(*net/http.transferReader).parseTransferEncoding":[[0],[]],"(*net/http.transferReader).protoAtLeast":[[0],[0,2]],"(*net/http.transferWriter).doBodyCopy":[[0,1,2],[],[1,2]],"(*net/http.transferWriter).probeRequestBody":[[0]],"(*net/http.transferWriter).probeRequestBody$1":[],"(*net/http.transferWriter).shouldSendChunkedRequestBody":[[0],[0]],"(*net/http.transferWriter).shouldSendContentLength":[[0],[]],"(*net/http.transferWriter).unwrapBody":[[0],[0]],"(*net/http.transferWriter).writeBody":[[0],[0,1]],"(*net/http.transferWriter).writeBody$1":[],"(*net/http.transferWriter).writeHeader":[[0],[0,1]],"(*net/http.transportReadFromServerError).Error":[[0],[]],"(*net/http.transportReadFromServerError).Unwrap":[[0],[]],"(*net/http.transportRequest).AddCookie":[[0]],"(*net/http.transportRequest).BasicAuth":[[0],[],[],[]],"(*net/http.transportRequest).Clone":[[0],[0,1]],"(*net/http.transportRequest).Context":[[0],[0]],"(*net/http.transportRequest).Cookie":[[0],[0],[]],"(*net/http.transportRequest).Cookies":[[0],[0]],"(*net/http.transportRequest).FormFile":[[0],[0,1],[0,1],[0,1]],"(*net/http.transportRequest).FormValue":[[0],[0,1]],"(*net/http.transportRequest).MultipartReader":[[0],[0],[]],"(*net/http.transportRequest).ParseForm":[[0],[0]],"(*net/http.transportRequest).ParseMultipartForm":[[0],[0,1]],"(*net/http.transportRequest).PostFormValue":[[0],[0,1]],"(*net/http.transportRequest).ProtoAtLeast":[[0],[0,2]],"(*net/http.transportRequest).Referer":[[0],[0]],"(*net/http.transportRequest).SetBasicAuth":[[0]],"(*net/http.transportRequest).UserAgent":[[0],[0]],"(*net/http.transportRequest).WithContext":[[0],[0,1]],"(*net/http.transportRequest).Write":[[0],[0,1]],"(*net/http.transportRequest).WriteProxy":[[0],[0,1]],"(*net/http.transportRequest).closeBody":[[0],[]],"(*net/http.transportRequest).expectsContinue":[[0],[]],"(*net/http.transportRequest).extraHeaders":[[0],[0]],"(*net/http.transportRequest).isH2Upgrade":[[0],[0]],"(*net/http.transportRequest).isReplayable":[[0],[]],"(*net/http.transportRequest).logf":[[0]],"(*net/http.transportRequest).multipartReader":[[0],[0],[]],"(*net/http.transportRequest).outgoingLength":[[0],[0]],"(*net/http.transportRequest).requiresHTTP1":[[0],[]],"(*net/http.transportRequest).setError":[[0,1]],"(*net/http.transportRequest).wantsClose":[[0],[]],"(*net/http.transportRequest).wantsHttp10KeepAlive":[[0],[]],"(*net/http.transportRequest).write":[[0],[0,1]],"(*net/http.unsupportedTEError).Error":[[0],[0]],"(*net/http.wantConn).cancel":[[0,2]],"(*net/http.wantConn).tryDeliver":[[0,1,2],[]],"(*net/http.wantConn).waiting":[[0],[]],"(*net/http.wantConnQueue).cleanFront":[[0],[]],"(*net/http.wantConnQueue).len":[[0],[0]],"(*net/http.wantConnQueue).peekFront":[[0],[0]],"(*net/http.wantConnQueue).popFront":[[0],[0]],"(*net/http.wantConnQueue).pushBack":[[0,1]],"(*net/http.writerOnly).Write":[[0],[],[0]],"(*net/http/cgi.Handler).ServeHTTP":[[0]],"(*net/http/cgi.Handler).ServeHTTP$1":[],"(*net/http/cgi.Handler).handleInternalRedirect":[[0]],"(*net/http/cgi.Handler).printf":[[0]],"(*net/http/cgi.Handler).stderr":[[0],[0]],"(*net/http/cgi.response).Flush":[[0]],"(*net/http/cgi.response).Header":[[0],[0]],"(*net/http/cgi.response).Write":[[0],[],[0]],"(*net/http/cgi.response).WriteHeader":[[0,1]],"(*net/http/cgi.response).writeCGIHeader":[[0]],"(*net/http/cookiejar.Jar).Cookies":[[0],[0,1]],"(*net/http/cookiejar.Jar).SetCookies":[[0]],"(*net/http/cookiejar.Jar).cookies":[[0],[0,1,2]],"(*net/http/cookiejar.Jar).cookies$1":[[]],"(*net/http/cookiejar.Jar).domainAndType":[[0],[1,2],[],[]],"(*net/http/cookiejar.Jar).newEntry":[[0],[1,2,3,4],[],[]],"(*net/http/cookiejar.Jar).setCookies":[[0]],"(*net/http/cookiejar.entry).domainMatch":[[0],[0,1]],"(*net/http/cookiejar.entry).id":[[0],[]],"(*net/http/cookiejar.entry).pathMatch":[[0],[]],"(*net/http/cookiejar.entry).shouldSend":[[0],[0]],"(*net/http/fcgi.beginRequest).read":[[0,1],[]],"(*net/http/fcgi.bufWriter).Available":[[0],[0]],"(*net/http/fcgi.bufWriter).AvailableBuffer":[[0],[0]],"(*net/http/fcgi.bufWriter).Buffered":[[0],[0]],"(*net/http/fcgi.bufWriter).Close":[[0],[0]],"(*net/http/fcgi.bufWriter).Flush":[[0],[0]],"(*net/http/fcgi.bufWriter).ReadFrom":[[0],[],[0,1]],"(*net/http/fcgi.bufWriter).Reset":[[0,1]],"(*net/http/fcgi.bufWriter).Size":[[0],[]],"(*net/http/fcgi.bufWriter).Write":[[0],[],[0]],"(*net/http/fcgi.bufWriter).WriteByte":[[0],[0]],"(*net/http/fcgi.bufWriter).WriteRune":[[0],[],[0]],"(*net/http/fcgi.bufWriter).WriteString":[[0],[],[0]],"(*net/http/fcgi.child).cleanUp":[[0]],"(*net/http/fcgi.child).handleRecord":[[0,1],[]],"(*net/http/fcgi.child).serve":[[0]],"(*net/http/fcgi.child).serveRequest":[[0,1]],"(*net/http/fcgi.conn).Close":[[0],[0]],"(*net/http/fcgi.conn).writeEndRequest":[[0,1],[0,1]],"(*net/http/fcgi.conn).writePairs":[[0],[0,1,2]],"(*net/http/fcgi.conn).writeRecord":[[0,1,2],[0,1,2]],"(*net/http/fcgi.header).init":[[0,1,2,3]],"(*net/http/fcgi.record).content":[[0],[0]],"(*net/http/fcgi.record).read":[[0],[1]],"(*net/http/fcgi.request).parseParams":[[0]],"(*net/http/fcgi.response).Close":[[0],[0]],"(*net/http/fcgi.response).Flush":[[0]],"(*net/http/fcgi.response).Header":[[0],[0]],"(*net/http/fcgi.response).Write":[[0],[],[0]],"(*net/http/fcgi.response).WriteHeader":[[0,1]],"(*net/http/fcgi.response).writeCGIHeader":[[0]],"(*net/http/fcgi.streamWriter).Close":[[0],[0]],"(*net/http/fcgi.streamWriter).Write":[[0],[],[0]],"(*net/http/httptest.ResponseRecorder).Flush":[[0]],"(*net/http/httptest.ResponseRecorder).Header":[[0],[0]],"(*net/http/httptest.ResponseRecorder).Result":[[0],[0]],"(*net/http/httptest.ResponseRecorder).Write":[[0],[],[]],"(*net/http/httptest.ResponseRecorder).WriteHeader":[[0,1]],"(*net/http/httptest.ResponseRecorder).WriteString":[[0],[],[]],"(*net/http/httptest.ResponseRecorder).writeHeader":[[0]],"(*net/http/httptest.Server).Certificate":[[0],[0]],"(*net/http/httptest.Server).Client":[[0],[0]],"(*net/http/httptest.Server).Close":[[0]],"(*net/http/httptest.Server).CloseClientConnections":[[0]],"(*net/http/httptest.Server).Start":[[0]],"(*net/http/httptest.Server).StartTLS":[[0]],"(*net/http/httptest.Server).closeConn":[[0]],"(*net/http/httptest.Server).closeConnChan":[[0]],"(*net/http/httptest.Server).goServe":[[0]],"(*net/http/httptest.Server).goServe$1":[],"(*net/http/httptest.Server).logCloseHangDebugInfo":[[0]],"(*net/http/httptest.Server).logCloseHangDebugInfo$bound":[],"(*net/http/httptest.Server).wrap":[[0]],"(*net/http/httptest.Server).wrap$1":[],"(*net/http/httptrace.ClientTrace).compose":[[0]],"(*net/http/httptrace.ClientTrace).compose$1":[[]],"(*net/http/httptrace.ClientTrace).hasNetHooks":[[0],[0]],"(*net/http/httputil.ClientConn).Close":[[0],[0]],"(*net/http/httputil.ClientConn).Do":[[0,1],[0,1],[0,1]],"(*net/http/httputil.ClientConn).Hijack":[[0],[0],[0]],"(*net/http/httputil.ClientConn).Pending":[[0],[0]],"(*net/http/httputil.ClientConn).Read":[[0,1],[0,1],[0,1]],"(*net/http/httputil.ClientConn).Write":[[0],[0,1]],"(*net/http/httputil.ClientConn).Write$1":[],"(*net/http/httputil.ReverseProxy).ServeHTTP":[[0]],"(*net/http/httputil.ReverseProxy).ServeHTTP$1":[],"(*net/http/httputil.ReverseProxy).copyBuffer":[[0],[],[1,2]],"(*net/http/httputil.ReverseProxy).copyResponse":[[0],[1,2,3]],"(*net/http/httputil.ReverseProxy).defaultErrorHandler":[[0]],"(*net/http/httputil.ReverseProxy).defaultErrorHandler$bound":[],"(*net/http/httputil.ReverseProxy).flushInterval":[[0],[0]],"(*net/http/httputil.ReverseProxy).getErrorHandler":[[0],[0]],"(*net/http/httputil.ReverseProxy).handleUpgradeResponse":[[0]],"(*net/http/httputil.ReverseProxy).handleUpgradeResponse$1":[],"(*net/http/httputil.ReverseProxy).logf":[[0]],"(*net/http/httputil.ReverseProxy).modifyResponse":[[0],[]],"(*net/http/httputil.ServerConn).Close":[[0],[0]],"(*net/http/httputil.ServerConn).Hijack":[[0],[0],[0]],"(*net/http/httputil.ServerConn).Pending":[[0],[0]],"(*net/http/httputil.ServerConn).Read":[[0],[],[0]],"(*net/http/httputil.ServerConn).Read$1":[],"(*net/http/httputil.ServerConn).Write":[[0,2],[0,2]],"(*net/http/httputil.delegateReader).Read":[[0],[],[0]],"(*net/http/httputil.dumpConn).Close":[[0],[]],"(*net/http/httputil.dumpConn).LocalAddr":[[0],[]],"(*net/http/httputil.dumpConn).Read":[[0],[],[0]],"(*net/http/httputil.dumpConn).RemoteAddr":[[0],[]],"(*net/http/httputil.dumpConn).SetDeadline":[[0],[]],"(*net/http/httputil.dumpConn).SetReadDeadline":[[0],[]],"(*net/http/httputil.dumpConn).SetWriteDeadline":[[0],[]],"(*net/http/httputil.dumpConn).Write":[[0],[],[0]],"(*net/http/httputil.failureToReadBody).Close":[[0],[]],"(*net/http/httputil.failureToReadBody).Read":[[0],[],[]],"(*net/http/httputil.maxLatencyWriter).Write":[[0],[],[0]],"(*net/http/httputil.maxLatencyWriter).delayedFlush":[[0]],"(*net/http/httputil.maxLatencyWriter).delayedFlush$bound":[],"(*net/http/httputil.maxLatencyWriter).stop":[[0]],"(*net/http/httputil.neverEnding).Read":[[0],[],[]],"(*net/http/internal.FlushAfterChunkWriter).Available":[[0],[0]],"(*net/http/internal.FlushAfterChunkWriter).AvailableBuffer":[[0],[0]],"(*net/http/internal.FlushAfterChunkWriter).Buffered":[[0],[0]],"(*net/http/internal.FlushAfterChunkWriter).Flush":[[0],[0]],"(*net/http/internal.FlushAfterChunkWriter).ReadFrom":[[0],[],[0,1]],"(*net/http/internal.FlushAfterChunkWriter).Reset":[[0,1]],"(*net/http/internal.FlushAfterChunkWriter).Size":[[0],[]],"(*net/http/internal.FlushAfterChunkWriter).Write":[[0],[],[0]],"(*net/http/internal.FlushAfterChunkWriter).WriteByte":[[0],[0]],"(*net/http/internal.FlushAfterChunkWriter).WriteRune":[[0],[],[0]],"(*net/http/internal.FlushAfterChunkWriter).WriteString":[[0],[],[0]],"(*net/http/internal.chunkedReader).Read":[[0],[],[0]],"(*net/http/internal.chunkedReader).beginChunk":[[0]],"(*net/http/internal.chunkedReader).chunkHeaderAvailable":[[0],[]],"(*net/http/internal.chunkedWriter).Close":[[0],[0]],"(*net/http/internal.chunkedWriter).Write":[[0],[],[0]],"(*net/http/pprof.handler).ServeHTTP":[[0]],"(*net/http/pprof.handler).serveDeltaProfile":[[0]],"(*net/internal/socktest.AfterFilter).apply":[[0],[]],"(*net/internal/socktest.Cookie).Family":[[0],[]],"(*net/internal/socktest.Cookie).Protocol":[[0],[]],"(*net/internal/socktest.Cookie).Type":[[0],[]],"(*net/internal/socktest.Filter).apply":[[0],[],[]],"(*net/internal/socktest.Stat).String":[[0],[]],"(*net/internal/socktest.Status).String":[[0],[]],"(*net/internal/socktest.Switch).Accept":[[0],[],[],[0,1]],"(*net/internal/socktest.Switch).Close":[[0],[0,1]],"(*net/internal/socktest.Switch).Connect":[[0],[0,1]],"(*net/internal/socktest.Switch).GetsockoptInt":[[0],[],[0,1]],"(*net/internal/socktest.Switch).Listen":[[0],[0,1]],"(*net/internal/socktest.Switch).Set":[[0]],"(*net/internal/socktest.Switch).Socket":[[0],[],[1,2,3]],"(*net/internal/socktest.Switch).Sockets":[[0],[0]],"(*net/internal/socktest.Switch).Stats":[[0],[0]],"(*net/internal/socktest.Switch).addLocked":[[0],[2,3,4]],"(*net/internal/socktest.Switch).init":[[0]],"(*net/internal/socktest.Switch).init$bound":[],"(*net/internal/socktest.Switch).sockso":[[0],[0,1]],"(*net/internal/socktest.stats).getLocked":[[0],[1]],"(*net/mail.Address).String":[[0],[0]],"(*net/mail.AddressParser).Parse":[[0],[0,1],[0,1]],"(*net/mail.AddressParser).ParseList":[[0],[],[0,1]],"(*net/mail.Header).AddressList":[[0],[],[1]],"(*net/mail.Header).Date":[[0],[],[]],"(*net/mail.Header).Get":[[0],[1]],"(*net/mail.addrParser).consume":[[0],[]],"(*net/mail.addrParser).consumeAddrSpec":[[0],[0],[0]],"(*net/mail.addrParser).consumeAddrSpec$1":[],"(*net/mail.addrParser).consumeAtom":[[0],[0],[0]],"(*net/mail.addrParser).consumeComment":[[0],[0],[]],"(*net/mail.addrParser).consumeDisplayNameComment":[[0],[0],[0]],"(*net/mail.addrParser).consumeDisplayNameComment$1":[[0]],"(*net/mail.addrParser).consumeGroupList":[[0],[],[]],"(*net/mail.addrParser).consumePhrase":[[0],[0],[0]],"(*net/mail.addrParser).consumeQuotedString":[[0],[0],[0]],"(*net/mail.addrParser).decodeRFC2047Word":[[0],[1],[],[1]],"(*net/mail.addrParser).decodeRFC2047Word$1":[[1],[0]],"(*net/mail.addrParser).empty":[[0],[]],"(*net/mail.addrParser).len":[[0],[]],"(*net/mail.addrParser).parseAddress":[[0],[0],[0]],"(*net/mail.addrParser).parseAddressList":[[0],[],[0]],"(*net/mail.addrParser).parseSingleAddress":[[0],[0],[0]],"(*net/mail.addrParser).peek":[[0],[0]],"(*net/mail.addrParser).skipCFWS":[[0],[]],"(*net/mail.addrParser).skipSpace":[[0]],"(*net/mail.charsetError).Error":[[0],[]],"(*net/netip.Addr).AppendTo":[[0],[1]],"(*net/netip.Addr).As16":[[0],[]],"(*net/netip.Addr).As4":[[0],[]],"(*net/netip.Addr).AsSlice":[[0],[]],"(*net/netip.Addr).BitLen":[[0],[]],"(*net/netip.Addr).Compare":[[0],[]],"(*net/netip.Addr).Is4":[[0],[]],"(*net/netip.Addr).Is4In6":[[0],[]],"(*net/netip.Addr).Is6":[[0],[]],"(*net/netip.Addr).IsGlobalUnicast":[[0],[]],"(*net/netip.Addr).IsInterfaceLocalMulticast":[[0],[]],"(*net/netip.Addr).IsLinkLocalMulticast":[[0],[]],"(*net/netip.Addr).IsLinkLocalUnicast":[[0],[]],"(*net/netip.Addr).IsLoopback":[[0],[]],"(*net/netip.Addr).IsMulticast":[[0],[]],"(*net/netip.Addr).IsPrivate":[[0],[]],"(*net/netip.Addr).IsUnspecified":[[0],[]],"(*net/netip.Addr).IsValid":[[0],[]],"(*net/netip.Addr).Less":[[0],[]],"(*net/netip.Addr).MarshalBinary":[[0],[],[]],"(*net/netip.Addr).MarshalText":[[0],[],[]],"(*net/netip.Addr).Next":[[0],[]],"(*net/netip.Addr).Prefix":[[0],[1],[1]],"(*net/netip.Addr).Prev":[[0],[]],"(*net/netip.Addr).String":[[0],[]],"(*net/netip.Addr).StringExpanded":[[0],[]],"(*net/netip.Addr).Unmap":[[0],[]],"(*net/netip.Addr).UnmarshalBinary":[[0,1],[]],"(*net/netip.Addr).UnmarshalText":[[0,1],[1]],"(*net/netip.Addr).WithZone":[[0],[1]],"(*net/netip.Addr).Zone":[[0],[]],"(*net/netip.Addr).appendTo4":[[0],[]],"(*net/netip.Addr).appendTo6":[[0],[1]],"(*net/netip.Addr).hasZone":[[0],[]],"(*net/netip.Addr).isZero":[[0],[]],"(*net/netip.Addr).lessOrEq":[[0],[]],"(*net/netip.Addr).marshalBinaryWithTrailingBytes":[[0],[]],"(*net/netip.Addr).string4":[[0],[]],"(*net/netip.Addr).string6":[[0],[]],"(*net/netip.Addr).v4":[[0],[1]],"(*net/netip.Addr).v6":[[0],[1]],"(*net/netip.Addr).v6u16":[[0],[1]],"(*net/netip.Addr).withoutZone":[[0],[]],"(*net/netip.AddrPort).Addr":[[0],[]],"(*net/netip.AddrPort).AppendTo":[[0],[1]],"(*net/netip.AddrPort).IsValid":[[0],[]],"(*net/netip.AddrPort).MarshalBinary":[[0],[],[]],"(*net/netip.AddrPort).MarshalText":[[0],[],[]],"(*net/netip.AddrPort).Port":[[0],[]],"(*net/netip.AddrPort).String":[[0],[]],"(*net/netip.AddrPort).UnmarshalBinary":[[0,1],[]],"(*net/netip.AddrPort).UnmarshalText":[[0,1],[1]],"(*net/netip.AddrPort).isZero":[[0],[]],"(*net/netip.Prefix).Addr":[[0],[]],"(*net/netip.Prefix).AppendTo":[[0],[1]],"(*net/netip.Prefix).Bits":[[0],[]],"(*net/netip.Prefix).Contains":[[0],[1]],"(*net/netip.Prefix).IsSingleIP":[[0],[]],"(*net/netip.Prefix).IsValid":[[0],[]],"(*net/netip.Prefix).MarshalBinary":[[0],[],[]],"(*net/netip.Prefix).MarshalText":[[0],[],[]],"(*net/netip.Prefix).Masked":[[0],[]],"(*net/netip.Prefix).Overlaps":[[0],[1]],"(*net/netip.Prefix).String":[[0],[]],"(*net/netip.Prefix).UnmarshalBinary":[[0,1],[]],"(*net/netip.Prefix).UnmarshalText":[[0,1],[1]],"(*net/netip.Prefix).isZero":[[0],[]],"(*net/netip.parseAddrError).Error":[[0],[]],"(*net/netip.uint128).addOne":[[0],[]],"(*net/netip.uint128).and":[[0],[1]],"(*net/netip.uint128).bitsClearedFrom":[[0],[1]],"(*net/netip.uint128).bitsSetFrom":[[0],[1]],"(*net/netip.uint128).commonPrefixLen":[[0],[1]],"(*net/netip.uint128).halves":[[0],[0]],"(*net/netip.uint128).isZero":[[0],[]],"(*net/netip.uint128).not":[[0],[]],"(*net/netip.uint128).or":[[0],[1]],"(*net/netip.uint128).subOne":[[0],[]],"(*net/netip.uint128).xor":[[0],[1]],"(*net/rpc.Call).done":[[0]],"(*net/rpc.Client).Call":[[0,1,2,3],[1,2,3]],"(*net/rpc.Client).Close":[[0],[0]],"(*net/rpc.Client).Go":[[0,1,2,3,4],[1,2,3,4]],"(*net/rpc.Client).input":[[0]],"(*net/rpc.Client).send":[[0,1]],"(*net/rpc.Server).Accept":[[0]],"(*net/rpc.Server).HandleHTTP":[[0]],"(*net/rpc.Server).Register":[[0],[]],"(*net/rpc.Server).RegisterName":[[0],[1]],"(*net/rpc.Server).ServeCodec":[[0]],"(*net/rpc.Server).ServeConn":[[0]],"(*net/rpc.Server).ServeHTTP":[[0]],"(*net/rpc.Server).ServeRequest":[[0],[0,1]],"(*net/rpc.Server).freeRequest":[[0,1]],"(*net/rpc.Server).freeResponse":[[0,1]],"(*net/rpc.Server).getRequest":[[0],[0]],"(*net/rpc.Server).getResponse":[[0],[0]],"(*net/rpc.Server).readRequest":[[0],[],[0],[0],[0],[0],[],[0,1]],"(*net/rpc.Server).readRequestHeader":[[0],[],[0],[0],[],[0,1]],"(*net/rpc.Server).register":[[0],[2]],"(*net/rpc.Server).sendResponse":[[0,2,5]],"(*net/rpc.ServerError).Error":[[0],[]],"(*net/rpc.debugHTTP).Accept":[[0]],"(*net/rpc.debugHTTP).HandleHTTP":[[0]],"(*net/rpc.debugHTTP).Register":[[0],[]],"(*net/rpc.debugHTTP).RegisterName":[[0],[1]],"(*net/rpc.debugHTTP).ServeCodec":[[0]],"(*net/rpc.debugHTTP).ServeConn":[[0]],"(*net/rpc.debugHTTP).ServeHTTP":[[0]],"(*net/rpc.debugHTTP).ServeRequest":[[0],[0,1]],"(*net/rpc.debugHTTP).freeRequest":[[0,1]],"(*net/rpc.debugHTTP).freeResponse":[[0,1]],"(*net/rpc.debugHTTP).getRequest":[[0],[0]],"(*net/rpc.debugHTTP).getResponse":[[0],[0]],"(*net/rpc.debugHTTP).readRequest":[[0],[],[0],[0],[0],[0],[],[0,1]],"(*net/rpc.debugHTTP).readRequestHeader":[[0],[],[0],[0],[],[0,1]],"(*net/rpc.debugHTTP).register":[[0],[2]],"(*net/rpc.debugHTTP).sendResponse":[[0,2,5]],"(*net/rpc.gobClientCodec).Close":[[0],[0]],"(*net/rpc.gobClientCodec).ReadResponseBody":[[0],[0]],"(*net/rpc.gobClientCodec).ReadResponseHeader":[[0],[0]],"(*net/rpc.gobClientCodec).WriteRequest":[[0],[0]],"(*net/rpc.gobServerCodec).Close":[[0],[0]],"(*net/rpc.gobServerCodec).ReadRequestBody":[[0],[0]],"(*net/rpc.gobServerCodec).ReadRequestHeader":[[0],[0]],"(*net/rpc.gobServerCodec).WriteResponse":[[0],[0]],"(*net/rpc.methodArray).Len":[[0],[]],"(*net/rpc.methodArray).Less":[[0],[]],"(*net/rpc.methodArray).Swap":[[0]],"(*net/rpc.methodType).Lock":[[0]],"(*net/rpc.methodType).NumCalls":[[0],[0]],"(*net/rpc.methodType).TryLock":[[0],[]],"(*net/rpc.methodType).Unlock":[[0]],"(*net/rpc.methodType).lockSlow":[[0]],"(*net/rpc.methodType).unlockSlow":[[0]],"(*net/rpc.service).call":[[0]],"(*net/rpc.serviceArray).Len":[[0],[]],"(*net/rpc.serviceArray).Less":[[0],[]],"(*net/rpc.serviceArray).Swap":[[0]],"(*net/rpc/jsonrpc.clientCodec).Close":[[0],[0]],"(*net/rpc/jsonrpc.clientCodec).ReadResponseBody":[[0],[0,1]],"(*net/rpc/jsonrpc.clientCodec).ReadResponseHeader":[[0],[0]],"(*net/rpc/jsonrpc.clientCodec).WriteRequest":[[0,1],[0,1]],"(*net/rpc/jsonrpc.clientResponse).reset":[[0]],"(*net/rpc/jsonrpc.serverCodec).Close":[[0],[0]],"(*net/rpc/jsonrpc.serverCodec).ReadRequestBody":[[0],[0,1]],"(*net/rpc/jsonrpc.serverCodec).ReadRequestHeader":[[0],[0]],"(*net/rpc/jsonrpc.serverCodec).WriteResponse":[[0],[0]],"(*net/rpc/jsonrpc.serverRequest).reset":[[0]],"(*net/smtp.Client).Auth":[[0],[0]],"(*net/smtp.Client).Close":[[0],[0]],"(*net/smtp.Client).Data":[[0],[0],[0]],"(*net/smtp.Client).Extension":[[0],[],[0,1]],"(*net/smtp.Client).Hello":[[0],[0]],"(*net/smtp.Client).Mail":[[0],[0]],"(*net/smtp.Client).Noop":[[0],[0]],"(*net/smtp.Client).Quit":[[0],[0]],"(*net/smtp.Client).Rcpt":[[0],[0]],"(*net/smtp.Client).Reset":[[0],[0]],"(*net/smtp.Client).StartTLS":[[0],[0]],"(*net/smtp.Client).TLSConnectionState":[[0],[0],[]],"(*net/smtp.Client).Verify":[[0],[0]],"(*net/smtp.Client).cmd":[[0],[0],[0],[0]],"(*net/smtp.Client).ehlo":[[0],[0]],"(*net/smtp.Client).hello":[[0],[0]],"(*net/smtp.Client).helo":[[0],[0]],"(*net/smtp.cramMD5Auth).Next":[[0],[],[]],"(*net/smtp.cramMD5Auth).Start":[[0],[],[],[]],"(*net/smtp.dataCloser).Close":[[0],[0]],"(*net/smtp.dataCloser).Write":[[0],[],[0]],"(*net/smtp.plainAuth).Next":[[0],[],[]],"(*net/smtp.plainAuth).Start":[[0],[],[0],[]],"(*net/textproto.Conn).Close":[[0],[0]],"(*net/textproto.Conn).Cmd":[[0],[0],[0]],"(*net/textproto.Conn).DotReader":[[0],[0]],"(*net/textproto.Conn).DotWriter":[[0],[0]],"(*net/textproto.Conn).EndRequest":[[0,1]],"(*net/textproto.Conn).EndResponse":[[0,1]],"(*net/textproto.Conn).Next":[[0],[0]],"(*net/textproto.Conn).PrintfLine":[[0],[0]],"(*net/textproto.Conn).ReadCodeLine":[[0],[0],[0],[0]],"(*net/textproto.Conn).ReadContinuedLine":[[0],[0],[0]],"(*net/textproto.Conn).ReadContinuedLineBytes":[[0],[0],[0]],"(*net/textproto.Conn).ReadDotBytes":[[0],[],[0]],"(*net/textproto.Conn).ReadDotLines":[[0],[0],[0]],"(*net/textproto.Conn).ReadLine":[[0],[0],[0]],"(*net/textproto.Conn).ReadLineBytes":[[0],[0],[0]],"(*net/textproto.Conn).ReadMIMEHeader":[[0],[0],[0]],"(*net/textproto.Conn).ReadResponse":[[0],[0],[0],[0]],"(*net/textproto.Conn).StartRequest":[[0]],"(*net/textproto.Conn).StartResponse":[[0]],"(*net/textproto.Conn).readCodeLine":[[0],[0],[0],[0],[0]],"(*net/textproto.Conn).readContinuedLineSlice":[[0],[0],[0]],"(*net/textproto.Conn).readLineSlice":[[0],[0],[0]],"(*net/textproto.Conn).skipSpace":[[0],[]],"(*net/textproto.Conn).upcomingHeaderNewlines":[[0],[]],"(*net/textproto.Error).Error":[[0],[]],"(*net/textproto.MIMEHeader).Add":[[0]],"(*net/textproto.MIMEHeader).Del":[[0]],"(*net/textproto.MIMEHeader).Get":[[0],[1]],"(*net/textproto.MIMEHeader).Set":[[0]],"(*net/textproto.MIMEHeader).Values":[[0],[1]],"(*net/textproto.Pipeline).EndRequest":[[0,1]],"(*net/textproto.Pipeline).EndResponse":[[0,1]],"(*net/textproto.Pipeline).Next":[[0],[0]],"(*net/textproto.Pipeline).StartRequest":[[0]],"(*net/textproto.Pipeline).StartResponse":[[0]],"(*net/textproto.ProtocolError).Error":[[0],[]],"(*net/textproto.Reader).DotReader":[[0],[0]],"(*net/textproto.Reader).ReadCodeLine":[[0],[0],[0],[0]],"(*net/textproto.Reader).ReadContinuedLine":[[0],[0],[0]],"(*net/textproto.Reader).ReadContinuedLineBytes":[[0],[0],[0]],"(*net/textproto.Reader).ReadDotBytes":[[0],[],[0]],"(*net/textproto.Reader).ReadDotLines":[[0],[0],[0]],"(*net/textproto.Reader).ReadLine":[[0],[0],[0]],"(*net/textproto.Reader).ReadLineBytes":[[0],[0],[0]],"(*net/textproto.Reader).ReadMIMEHeader":[[0],[0],[0]],"(*net/textproto.Reader).ReadResponse":[[0],[0],[0],[0]],"(*net/textproto.Reader).closeDot":[[0]],"(*net/textproto.Reader).readCodeLine":[[0],[0],[0],[0],[0]],"(*net/textproto.Reader).readContinuedLineSlice":[[0],[0],[0]],"(*net/textproto.Reader).readLineSlice":[[0],[0],[0]],"(*net/textproto.Reader).skipSpace":[[0],[]],"(*net/textproto.Reader).upcomingHeaderNewlines":[[0],[]],"(*net/textproto.Writer).DotWriter":[[0],[0]],"(*net/textproto.Writer).PrintfLine":[[0],[0]],"(*net/textproto.Writer).closeDot":[[0]],"(*net/textproto.dotReader).Read":[[0],[],[0]],"(*net/textproto.dotWriter).Close":[[0],[0]],"(*net/textproto.dotWriter).Write":[[0],[],[0]],"(*net/textproto.sequencer).End":[[0,1]],"(*net/textproto.sequencer).Start":[[0]],"(*net/url.Error).Error":[[0],[]],"(*net/url.Error).Temporary":[[0],[]],"(*net/url.Error).Timeout":[[0],[]],"(*net/url.Error).Unwrap":[[0],[0]],"(*net/url.EscapeError).Error":[[0],[]],"(*net/url.InvalidHostError).Error":[[0],[]],"(*net/url.URL).EscapedFragment":[[0],[0]],"(*net/url.URL).EscapedPath":[[0],[0]],"(*net/url.URL).Hostname":[[0],[0]],"(*net/url.URL).IsAbs":[[0],[0]],"(*net/url.URL).JoinPath":[[0],[0,1]],"(*net/url.URL).MarshalBinary":[[0],[0],[]],"(*net/url.URL).Parse":[[0],[0,1],[1]],"(*net/url.URL).Port":[[0],[0]],"(*net/url.URL).Query":[[0],[]],"(*net/url.URL).Redacted":[[0],[0]],"(*net/url.URL).RequestURI":[[0],[0]],"(*net/url.URL).ResolveReference":[[0],[0,1]],"(*net/url.URL).String":[[0],[0]],"(*net/url.URL).UnmarshalBinary":[[0,1],[1]],"(*net/url.URL).setFragment":[[0,1],[1]],"(*net/url.URL).setPath":[[0,1],[1]],"(*net/url.Userinfo).Password":[[0],[0],[0]],"(*net/url.Userinfo).String":[[0],[0]],"(*net/url.Userinfo).Username":[[0],[0]],"(*net/url.Values).Add":[[0]],"(*net/url.Values).Del":[[0]],"(*net/url.Values).Encode":[[0],[]],"(*net/url.Values).Get":[[0],[1]],"(*net/url.Values).Has":[[0],[]],"(*net/url.Values).Set":[[0]],"(*os.File).Chdir":[[0],[0]],"(*os.File).Chmod":[[0],[0]],"(*os.File).Chown":[[0],[0]],"(*os.File).Close":[[0],[0]],"(*os.File).Fd":[[0],[0]],"(*os.File).Name":[[0],[0]],"(*os.File).Read":[[0],[],[0]],"(*os.File).ReadAt":[[0],[],[0]],"(*os.File).ReadDir":[[0],[0],[0]],"(*os.File).ReadFrom":[[0],[],[0,1]],"(*os.File).Readdir":[[0],[],[0]],"(*os.File).Readdirnames":[[0],[],[0]],"(*os.File).Seek":[[0],[],[0]],"(*os.File).SetDeadline":[[0],[]],"(*os.File).SetReadDeadline":[[0],[]],"(*os.File).SetWriteDeadline":[[0],[]],"(*os.File).Stat":[[0],[],[0]],"(*os.File).Sync":[[0],[0]],"(*os.File).SyscallConn":[[0],[0],[]],"(*os.File).Truncate":[[0],[0]],"(*os.File).Write":[[0],[],[0]],"(*os.File).WriteAt":[[0],[],[0]],"(*os.File).WriteString":[[0],[],[0]],"(*os.File).checkValid":[[0],[]],"(*os.File).chmod":[[0],[0]],"(*os.File).close":[[0],[0]],"(*os.File).pread":[[0],[],[]],"(*os.File).pwrite":[[0],[],[]],"(*os.File).read":[[0],[],[]],"(*os.File).readFrom":[[0],[],[],[]],"(*os.File).readdir":[[0],[],[0],[],[0]],"(*os.File).seek":[[0],[],[]],"(*os.File).setDeadline":[[0],[]],"(*os.File).setReadDeadline":[[0],[]],"(*os.File).setWriteDeadline":[[0],[]],"(*os.File).wrapErr":[[0],[0,1,2]],"(*os.File).write":[[0],[],[]],"(*os.LinkError).Error":[[0],[0]],"(*os.LinkError).Unwrap":[[0],[0]],"(*os.Process).Kill":[[0],[]],"(*os.Process).Release":[[0],[]],"(*os.Process).Release$thunk":[[]],"(*os.Process).Signal":[[0],[]],"(*os.Process).Wait":[[0],[],[]],"(*os.Process).blockUntilWaitable":[[0],[],[]],"(*os.Process).done":[[0],[]],"(*os.Process).kill":[[0],[]],"(*os.Process).release":[[0],[]],"(*os.Process).setDone":[[0]],"(*os.Process).signal":[[0],[]],"(*os.Process).wait":[[0],[],[]],"(*os.ProcessState).ExitCode":[[0],[0]],"(*os.ProcessState).Exited":[[0],[0]],"(*os.ProcessState).Pid":[[0],[0]],"(*os.ProcessState).String":[[0],[0]],"(*os.ProcessState).Success":[[0],[0]],"(*os.ProcessState).Sys":[[0],[0]],"(*os.ProcessState).SysUsage":[[0],[0]],"(*os.ProcessState).SystemTime":[[0],[0]],"(*os.ProcessState).UserTime":[[0],[0]],"(*os.ProcessState).exited":[[0],[0]],"(*os.ProcessState).success":[[0],[0]],"(*os.ProcessState).sys":[[0],[0]],"(*os.ProcessState).sysUsage":[[0],[0]],"(*os.ProcessState).systemTime":[[0],[0]],"(*os.ProcessState).userTime":[[0],[0]],"(*os.SyscallError).Error":[[0],[0]],"(*os.SyscallError).Timeout":[[0],[]],"(*os.SyscallError).Unwrap":[[0],[0]],"(*os.dirFS).Open":[[0],[],[1]],"(*os.dirFS).Stat":[[0],[],[1]],"(*os.dirInfo).close":[[0]],"(*os.file).close":[[0],[0]],"(*os.file).close$thunk":[[0]],"(*os.fileStat).IsDir":[[0],[0]],"(*os.fileStat).ModTime":[[0],[0]],"(*os.fileStat).Mode":[[0],[0]],"(*os.fileStat).Name":[[0],[0]],"(*os.fileStat).Size":[[0],[0]],"(*os.fileStat).Sys":[[0],[0]],"(*os.onlyWriter).Write":[[0],[],[0]],"(*os.rawConn).Control":[[0],[]],"(*os.rawConn).Read":[[0],[]],"(*os.rawConn).Write":[[0],[]],"(*os.unixDirent).Info":[[0],[0],[0]],"(*os.unixDirent).IsDir":[[0],[0]],"(*os.unixDirent).Name":[[0],[0]],"(*os.unixDirent).Type":[[0],[0]],"(*os/exec.Cmd).CombinedOutput":[[0],[],[0]],"(*os/exec.Cmd).Environ":[[0],[0]],"(*os/exec.Cmd).Output":[[0],[],[0]],"(*os/exec.Cmd).Run":[[0],[0]],"(*os/exec.Cmd).Start":[[0],[0]],"(*os/exec.Cmd).Start$1":[],"(*os/exec.Cmd).StderrPipe":[[0],[],[]],"(*os/exec.Cmd).StdinPipe":[[0],[],[]],"(*os/exec.Cmd).StdoutPipe":[[0],[],[]],"(*os/exec.Cmd).String":[[0],[0]],"(*os/exec.Cmd).Wait":[[0],[0]],"(*os/exec.Cmd).argv":[[0],[0]],"(*os/exec.Cmd).closeDescriptors":[[0]],"(*os/exec.Cmd).environ":[[0],[0],[]],"(*os/exec.Cmd).stderr":[[0],[0],[]],"(*os/exec.Cmd).stderr$thunk":[[0],[]],"(*os/exec.Cmd).stdin":[[0],[0],[]],"(*os/exec.Cmd).stdin$1":[[]],"(*os/exec.Cmd).stdin$thunk":[[0],[]],"(*os/exec.Cmd).stdout":[[0],[0],[]],"(*os/exec.Cmd).stdout$thunk":[[0],[]],"(*os/exec.Cmd).watchCtx":[[0],[]],"(*os/exec.Cmd).watchCtx$1":[],"(*os/exec.Cmd).writerDescriptor":[[0],[1],[]],"(*os/exec.Cmd).writerDescriptor$1":[[]],"(*os/exec.Error).Error":[[0],[0]],"(*os/exec.Error).Unwrap":[[0],[0]],"(*os/exec.ExitError).Error":[[0],[0]],"(*os/exec.ExitError).ExitCode":[[0],[0]],"(*os/exec.ExitError).Exited":[[0],[0]],"(*os/exec.ExitError).Pid":[[0],[0]],"(*os/exec.ExitError).String":[[0],[0]],"(*os/exec.ExitError).Success":[[0],[0]],"(*os/exec.ExitError).Sys":[[0],[0]],"(*os/exec.ExitError).SysUsage":[[0],[0]],"(*os/exec.ExitError).SystemTime":[[0],[0]],"(*os/exec.ExitError).UserTime":[[0],[0]],"(*os/exec.ExitError).exited":[[0],[0]],"(*os/exec.ExitError).success":[[0],[0]],"(*os/exec.ExitError).sys":[[0],[0]],"(*os/exec.ExitError).sysUsage":[[0],[0]],"(*os/exec.ExitError).systemTime":[[0],[0]],"(*os/exec.ExitError).userTime":[[0],[0]],"(*os/exec.closeOnce).Chdir":[[0],[0]],"(*os/exec.closeOnce).Chmod":[[0],[0]],"(*os/exec.closeOnce).Chown":[[0],[0]],"(*os/exec.closeOnce).Close":[[0],[0]],"(*os/exec.closeOnce).Fd":[[0],[0]],"(*os/exec.closeOnce).Name":[[0],[0]],"(*os/exec.closeOnce).Read":[[0],[],[0]],"(*os/exec.closeOnce).ReadAt":[[0],[],[0]],"(*os/exec.closeOnce).ReadDir":[[0],[0],[0]],"(*os/exec.closeOnce).ReadFrom":[[0],[],[0,1]],"(*os/exec.closeOnce).Readdir":[[0],[],[0]],"(*os/exec.closeOnce).Readdirnames":[[0],[],[0]],"(*os/exec.closeOnce).Seek":[[0],[],[0]],"(*os/exec.closeOnce).SetDeadline":[[0],[]],"(*os/exec.closeOnce).SetReadDeadline":[[0],[]],"(*os/exec.closeOnce).SetWriteDeadline":[[0],[]],"(*os/exec.closeOnce).Stat":[[0],[],[0]],"(*os/exec.closeOnce).Sync":[[0],[0]],"(*os/exec.closeOnce).SyscallConn":[[0],[0],[]],"(*os/exec.closeOnce).Truncate":[[0],[0]],"(*os/exec.closeOnce).Write":[[0],[],[0]],"(*os/exec.closeOnce).WriteAt":[[0],[],[0]],"(*os/exec.closeOnce).WriteString":[[0],[],[0]],"(*os/exec.closeOnce).checkValid":[[0],[]],"(*os/exec.closeOnce).chmod":[[0],[0]],"(*os/exec.closeOnce).close":[[0]],"(*os/exec.closeOnce).close$bound":[],"(*os/exec.closeOnce).pread":[[0],[],[]],"(*os/exec.closeOnce).pwrite":[[0],[],[]],"(*os/exec.closeOnce).read":[[0],[],[]],"(*os/exec.closeOnce).readFrom":[[0],[],[],[]],"(*os/exec.closeOnce).readdir":[[0],[],[0],[],[0]],"(*os/exec.closeOnce).seek":[[0],[],[]],"(*os/exec.closeOnce).setDeadline":[[0],[]],"(*os/exec.closeOnce).setReadDeadline":[[0],[]],"(*os/exec.closeOnce).setWriteDeadline":[[0],[]],"(*os/exec.closeOnce).wrapErr":[[0],[0,1,2]],"(*os/exec.closeOnce).write":[[0],[],[]],"(*os/exec.prefixSuffixSaver).Bytes":[[0],[0]],"(*os/exec.prefixSuffixSaver).Write":[[0],[],[]],"(*os/exec.prefixSuffixSaver).fill":[[0],[2]],"(*os/exec.wrappedError).Error":[[0],[]],"(*os/exec.wrappedError).Unwrap":[[0],[]],"(*os/signal.handler).clear":[[0]],"(*os/signal.handler).set":[[0]],"(*os/signal.handler).want":[[0],[0,1]],"(*os/signal.signalCtx).Deadline":[[0],[0],[]],"(*os/signal.signalCtx).Done":[[0],[]],"(*os/signal.signalCtx).Err":[[0],[]],"(*os/signal.signalCtx).String":[[0],[]],"(*os/signal.signalCtx).Value":[[0],[0]],"(*os/signal.signalCtx).stop":[[0]],"(*os/signal.signalCtx).stop$bound":[],"(*os/signal/internal/pty.PtyError).Error":[[0],[]],"(*os/signal/internal/pty.PtyError).Unwrap":[[0],[0]],"(*os/user.UnknownGroupError).Error":[[0],[]],"(*os/user.UnknownGroupIdError).Error":[[0],[]],"(*os/user.UnknownUserError).Error":[[0],[]],"(*os/user.UnknownUserIdError).Error":[[0],[]],"(*os/user.User).GroupIds":[[0],[],[0]],"(*os/user.memBuffer).free":[[0]],"(*os/user.memBuffer).free$1":[],"(*os/user.memBuffer).resize":[[0]],"(*os/user.memBuffer).resize$1":[[]],"(*path.lazybuf).append":[[0]],"(*path.lazybuf).index":[[0],[0,1]],"(*path.lazybuf).string":[[0],[0]],"(*path/filepath.lazybuf).append":[[0]],"(*path/filepath.lazybuf).index":[[0],[0,1]],"(*path/filepath.lazybuf).string":[[0],[0]],"(*path/filepath.statDirEntry).Info":[[0],[0],[]],"(*path/filepath.statDirEntry).IsDir":[[0],[]],"(*path/filepath.statDirEntry).Name":[[0],[0]],"(*path/filepath.statDirEntry).Type":[[0],[]],"(*plugin.Plugin).Lookup":[[0],[0,1],[0,1]],"(*reflect.ChanDir).String":[[0],[]],"(*reflect.Kind).String":[[0],[]],"(*reflect.MapIter).Key":[[0],[0]],"(*reflect.MapIter).Next":[[0],[]],"(*reflect.MapIter).Reset":[[0,1]],"(*reflect.MapIter).Value":[[0],[0]],"(*reflect.Method).IsExported":[[0],[]],"(*reflect.StructField).IsExported":[[0],[]],"(*reflect.StructTag).Get":[[0],[]],"(*reflect.StructTag).Lookup":[[0],[],[]],"(*reflect.Value).Addr":[[0],[]],"(*reflect.Value).Bool":[[0],[]],"(*reflect.Value).Bytes":[[0],[]],"(*reflect.Value).Call":[[0],[]],"(*reflect.Value).CallSlice":[[0],[]],"(*reflect.Value).CanAddr":[[0],[]],"(*reflect.Value).CanComplex":[[0],[]],"(*reflect.Value).CanConvert":[[0],[]],"(*reflect.Value).CanFloat":[[0],[]],"(*reflect.Value).CanInt":[[0],[]],"(*reflect.Value).CanInterface":[[0],[]],"(*reflect.Value).CanSet":[[0],[]],"(*reflect.Value).CanUint":[[0],[]],"(*reflect.Value).Cap":[[0],[]],"(*reflect.Value).Close":[[0]],"(*reflect.Value).Complex":[[0],[]],"(*reflect.Value).Convert":[[0],[1]],"(*reflect.Value).Elem":[[0],[]],"(*reflect.Value).Field":[[0],[]],"(*reflect.Value).FieldByIndex":[[0],[]],"(*reflect.Value).FieldByIndexErr":[[0],[],[]],"(*reflect.Value).FieldByName":[[0],[]],"(*reflect.Value).FieldByNameFunc":[[0],[]],"(*reflect.Value).Float":[[0],[]],"(*reflect.Value).Index":[[0],[1]],"(*reflect.Value).Int":[[0],[]],"(*reflect.Value).Interface":[[0],[]],"(*reflect.Value).InterfaceData":[[0],[]],"(*reflect.Value).IsNil":[[0],[]],"(*reflect.Value).IsValid":[[0],[]],"(*reflect.Value).IsZero":[[0],[]],"(*reflect.Value).Kind":[[0],[]],"(*reflect.Value).Len":[[0],[]],"(*reflect.Value).MapIndex":[[0],[]],"(*reflect.Value).MapKeys":[[0],[]],"(*reflect.Value).MapRange":[[0],[]],"(*reflect.Value).Method":[[0],[1]],"(*reflect.Value).MethodByName":[[0],[]],"(*reflect.Value).NumField":[[0],[]],"(*reflect.Value).NumMethod":[[0],[]],"(*reflect.Value).OverflowComplex":[[0],[]],"(*reflect.Value).OverflowFloat":[[0],[1]],"(*reflect.Value).OverflowInt":[[0],[1]],"(*reflect.Value).OverflowUint":[[0],[1]],"(*reflect.Value).Pointer":[[0],[]],"(*reflect.Value).Recv":[[0],[],[]],"(*reflect.Value).Send":[[0]],"(*reflect.Value).Set":[[0]],"(*reflect.Value).SetBool":[[0]],"(*reflect.Value).SetBytes":[[0]],"(*reflect.Value).SetCap":[[0]],"(*reflect.Value).SetComplex":[[0]],"(*reflect.Value).SetFloat":[[0]],"(*reflect.Value).SetInt":[[0]],"(*reflect.Value).SetIterKey":[[0]],"(*reflect.Value).SetIterValue":[[0]],"(*reflect.Value).SetLen":[[0]],"(*reflect.Value).SetMapIndex":[[0]],"(*reflect.Value).SetPointer":[[0]],"(*reflect.Value).SetString":[[0]],"(*reflect.Value).SetUint":[[0]],"(*reflect.Value).Slice":[[0],[1,2]],"(*reflect.Value).Slice3":[[0],[]],"(*reflect.Value).String":[[0],[]],"(*reflect.Value).TryRecv":[[0],[],[]],"(*reflect.Value).TrySend":[[0],[]],"(*reflect.Value).Type":[[0],[]],"(*reflect.Value).Uint":[[0],[]],"(*reflect.Value).UnsafeAddr":[[0],[]],"(*reflect.Value).UnsafePointer":[[0],[]],"(*reflect.Value).assignTo":[[0],[2,3]],"(*reflect.Value).bytesSlow":[[0],[]],"(*reflect.Value).call":[[0],[]],"(*reflect.Value).capNonSlice":[[0],[]],"(*reflect.Value).kind":[[0],[0]],"(*reflect.Value).lenNonSlice":[[0],[]],"(*reflect.Value).mustBe":[[0]],"(*reflect.Value).mustBeAssignable":[[0]],"(*reflect.Value).mustBeAssignableSlow":[[0]],"(*reflect.Value).mustBeExported":[[0]],"(*reflect.Value).mustBeExportedSlow":[[0]],"(*reflect.Value).panicNotBool":[[0]],"(*reflect.Value).panicNotMap":[[0]],"(*reflect.Value).pointer":[[0],[]],"(*reflect.Value).recv":[[0],[],[]],"(*reflect.Value).ro":[[0],[]],"(*reflect.Value).runes":[[0],[]],"(*reflect.Value).send":[[0],[]],"(*reflect.Value).setRunes":[[0]],"(*reflect.Value).stringNonString":[[0],[]],"(*reflect.Value).typeSlow":[[0],[]],"(*reflect.ValueError).Error":[[0],[0]],"(*reflect.abiDesc).dump":[[0]],"(*reflect.abiSeq).addArg":[[0,1],[0,1]],"(*reflect.abiSeq).addRcvr":[[0],[0],[]],"(*reflect.abiSeq).assignFloatN":[[0,1,2],[]],"(*reflect.abiSeq).assignIntN":[[0,1,2],[]],"(*reflect.abiSeq).dump":[[0]],"(*reflect.abiSeq).regAssign":[[0,1,2],[]],"(*reflect.abiSeq).stackAssign":[[0,1,2]],"(*reflect.abiSeq).stepsForValue":[[0],[0]],"(*reflect.bitVector).append":[[0]],"(*reflect.flag).kind":[[0],[]],"(*reflect.flag).mustBe":[[0]],"(*reflect.flag).mustBeAssignable":[[0]],"(*reflect.flag).mustBeAssignableSlow":[[0]],"(*reflect.flag).mustBeExported":[[0]],"(*reflect.flag).mustBeExportedSlow":[[0]],"(*reflect.flag).panicNotMap":[[0]],"(*reflect.flag).ro":[[0],[]],"(*reflect.funcType).Align":[[0],[0]],"(*reflect.funcType).AssignableTo":[[0],[]],"(*reflect.funcType).Bits":[[0],[0]],"(*reflect.funcType).ChanDir":[[0],[0]],"(*reflect.funcType).Comparable":[[0],[0]],"(*reflect.funcType).ConvertibleTo":[[0],[]],"(*reflect.funcType).Elem":[[0],[0]],"(*reflect.funcType).Field":[[0],[0,1]],"(*reflect.funcType).FieldAlign":[[0],[0]],"(*reflect.funcType).FieldByIndex":[[0],[0,1]],"(*reflect.funcType).FieldByName":[[0],[0],[]],"(*reflect.funcType).FieldByNameFunc":[[0],[],[]],"(*reflect.funcType).Implements":[[0],[]],"(*reflect.funcType).In":[[0],[0]],"(*reflect.funcType).IsVariadic":[[0],[0]],"(*reflect.funcType).Key":[[0],[0]],"(*reflect.funcType).Kind":[[0],[0]],"(*reflect.funcType).Len":[[0],[0]],"(*reflect.funcType).Method":[[0],[0,1]],"(*reflect.funcType).MethodByName":[[0],[0],[]],"(*reflect.funcType).Name":[[0],[]],"(*reflect.funcType).NumField":[[0],[]],"(*reflect.funcType).NumIn":[[0],[0]],"(*reflect.funcType).NumMethod":[[0],[]],"(*reflect.funcType).NumOut":[[0],[]],"(*reflect.funcType).Out":[[0],[0]],"(*reflect.funcType).PkgPath":[[0],[]],"(*reflect.funcType).Size":[[0],[0]],"(*reflect.funcType).String":[[0],[]],"(*reflect.funcType).common":[[0],[0]],"(*reflect.funcType).exportedMethods":[[0],[0]],"(*reflect.funcType).gcSlice":[[0],[0]],"(*reflect.funcType).hasName":[[0],[0]],"(*reflect.funcType).in":[[0],[0]],"(*reflect.funcType).nameOff":[[0],[]],"(*reflect.funcType).out":[[0],[0]],"(*reflect.funcType).pointers":[[0],[0]],"(*reflect.funcType).ptrTo":[[0],[0]],"(*reflect.funcType).textOff":[[0],[]],"(*reflect.funcType).typeOff":[[0],[]],"(*reflect.funcType).uncommon":[[0],[0]],"(*reflect.hiter).initialized":[[0],[0]],"(*reflect.interfaceType).Method":[[0],[1]],"(*reflect.interfaceType).MethodByName":[[0],[],[]],"(*reflect.interfaceType).NumMethod":[[0],[]],"(*reflect.name).data":[[0],[1]],"(*reflect.name).embedded":[[0],[]],"(*reflect.name).hasTag":[[0],[]],"(*reflect.name).isExported":[[0],[]],"(*reflect.name).name":[[0],[]],"(*reflect.name).pkgPath":[[0],[]],"(*reflect.name).readVarint":[[0],[],[1]],"(*reflect.name).tag":[[0],[]],"(*reflect.ptrType).Align":[[0],[0]],"(*reflect.ptrType).AssignableTo":[[0],[]],"(*reflect.ptrType).Bits":[[0],[0]],"(*reflect.ptrType).ChanDir":[[0],[0]],"(*reflect.ptrType).Comparable":[[0],[0]],"(*reflect.ptrType).ConvertibleTo":[[0],[]],"(*reflect.ptrType).Elem":[[0],[0]],"(*reflect.ptrType).Field":[[0],[0,1]],"(*reflect.ptrType).FieldAlign":[[0],[0]],"(*reflect.ptrType).FieldByIndex":[[0],[0,1]],"(*reflect.ptrType).FieldByName":[[0],[0],[]],"(*reflect.ptrType).FieldByNameFunc":[[0],[],[]],"(*reflect.ptrType).Implements":[[0],[]],"(*reflect.ptrType).In":[[0],[0]],"(*reflect.ptrType).IsVariadic":[[0],[0]],"(*reflect.ptrType).Key":[[0],[0]],"(*reflect.ptrType).Kind":[[0],[0]],"(*reflect.ptrType).Len":[[0],[0]],"(*reflect.ptrType).Method":[[0],[0,1]],"(*reflect.ptrType).MethodByName":[[0],[0],[]],"(*reflect.ptrType).Name":[[0],[]],"(*reflect.ptrType).NumField":[[0],[]],"(*reflect.ptrType).NumIn":[[0],[0]],"(*reflect.ptrType).NumMethod":[[0],[]],"(*reflect.ptrType).NumOut":[[0],[]],"(*reflect.ptrType).Out":[[0],[0]],"(*reflect.ptrType).PkgPath":[[0],[]],"(*reflect.ptrType).Size":[[0],[0]],"(*reflect.ptrType).String":[[0],[]],"(*reflect.ptrType).common":[[0],[0]],"(*reflect.ptrType).exportedMethods":[[0],[0]],"(*reflect.ptrType).gcSlice":[[0],[0]],"(*reflect.ptrType).hasName":[[0],[0]],"(*reflect.ptrType).nameOff":[[0],[]],"(*reflect.ptrType).pointers":[[0],[0]],"(*reflect.ptrType).ptrTo":[[0],[0]],"(*reflect.ptrType).textOff":[[0],[]],"(*reflect.ptrType).typeOff":[[0],[]],"(*reflect.ptrType).uncommon":[[0],[0]],"(*reflect.rtype).Align":[[0],[0]],"(*reflect.rtype).AssignableTo":[[0],[]],"(*reflect.rtype).Bits":[[0],[0]],"(*reflect.rtype).ChanDir":[[0],[0]],"(*reflect.rtype).Comparable":[[0],[0]],"(*reflect.rtype).ConvertibleTo":[[0],[]],"(*reflect.rtype).Elem":[[0],[0]],"(*reflect.rtype).Field":[[0],[0,1]],"(*reflect.rtype).FieldAlign":[[0],[0]],"(*reflect.rtype).FieldByIndex":[[0],[0,1]],"(*reflect.rtype).FieldByName":[[0],[0],[]],"(*reflect.rtype).FieldByNameFunc":[[0],[],[]],"(*reflect.rtype).Implements":[[0],[]],"(*reflect.rtype).In":[[0],[0]],"(*reflect.rtype).IsVariadic":[[0],[0]],"(*reflect.rtype).Key":[[0],[0]],"(*reflect.rtype).Kind":[[0],[0]],"(*reflect.rtype).Len":[[0],[0]],"(*reflect.rtype).Method":[[0],[0,1]],"(*reflect.rtype).MethodByName":[[0],[0],[]],"(*reflect.rtype).Name":[[0],[]],"(*reflect.rtype).NumField":[[0],[]],"(*reflect.rtype).NumIn":[[0],[0]],"(*reflect.rtype).NumMethod":[[0],[]],"(*reflect.rtype).NumOut":[[0],[]],"(*reflect.rtype).Out":[[0],[0]],"(*reflect.rtype).PkgPath":[[0],[]],"(*reflect.rtype).Size":[[0],[0]],"(*reflect.rtype).String":[[0],[]],"(*reflect.rtype).common":[[0],[0]],"(*reflect.rtype).exportedMethods":[[0],[0]],"(*reflect.rtype).gcSlice":[[0],[0]],"(*reflect.rtype).hasName":[[0],[0]],"(*reflect.rtype).nameOff":[[0],[]],"(*reflect.rtype).pointers":[[0],[0]],"(*reflect.rtype).ptrTo":[[0],[0]],"(*reflect.rtype).textOff":[[0],[]],"(*reflect.rtype).typeOff":[[0],[]],"(*reflect.rtype).uncommon":[[0],[0]],"(*reflect.structField).embedded":[[0],[0]],"(*reflect.structType).Align":[[0],[0]],"(*reflect.structType).AssignableTo":[[0],[]],"(*reflect.structType).Bits":[[0],[0]],"(*reflect.structType).ChanDir":[[0],[0]],"(*reflect.structType).Comparable":[[0],[0]],"(*reflect.structType).ConvertibleTo":[[0],[]],"(*reflect.structType).Elem":[[0],[0]],"(*reflect.structType).Field":[[0],[0,1]],"(*reflect.structType).FieldAlign":[[0],[0]],"(*reflect.structType).FieldByIndex":[[0],[0,1]],"(*reflect.structType).FieldByName":[[0],[0],[]],"(*reflect.structType).FieldByName$1":[[0]],"(*reflect.structType).FieldByNameFunc":[[0],[],[]],"(*reflect.structType).Implements":[[0],[]],"(*reflect.structType).In":[[0],[0]],"(*reflect.structType).IsVariadic":[[0],[0]],"(*reflect.structType).Key":[[0],[0]],"(*reflect.structType).Kind":[[0],[0]],"(*reflect.structType).Len":[[0],[0]],"(*reflect.structType).Method":[[0],[0,1]],"(*reflect.structType).MethodByName":[[0],[0],[]],"(*reflect.structType).Name":[[0],[]],"(*reflect.structType).NumField":[[0],[]],"(*reflect.structType).NumIn":[[0],[0]],"(*reflect.structType).NumMethod":[[0],[]],"(*reflect.structType).NumOut":[[0],[]],"(*reflect.structType).Out":[[0],[0]],"(*reflect.structType).PkgPath":[[0],[]],"(*reflect.structType).Size":[[0],[0]],"(*reflect.structType).String":[[0],[]],"(*reflect.structType).common":[[0],[0]],"(*reflect.structType).exportedMethods":[[0],[0]],"(*reflect.structType).gcSlice":[[0],[0]],"(*reflect.structType).hasName":[[0],[0]],"(*reflect.structType).nameOff":[[0],[]],"(*reflect.structType).pointers":[[0],[0]],"(*reflect.structType).ptrTo":[[0],[0]],"(*reflect.structType).textOff":[[0],[]],"(*reflect.structType).typeOff":[[0],[]],"(*reflect.structType).uncommon":[[0],[0]],"(*reflect.uncommonType).exportedMethods":[[0],[0]],"(*reflect.uncommonType).methods":[[0],[0]],"(*reflect.visibleFieldsWalker).walk":[[0,1]],"(*regexp.Regexp).Copy":[[0],[0]],"(*regexp.Regexp).Expand":[[0],[1,2,3]],"(*regexp.Regexp).ExpandString":[[0],[1,2,3]],"(*regexp.Regexp).Find":[[0],[1]],"(*regexp.Regexp).FindAll":[[0],[]],"(*regexp.Regexp).FindAll$1":[],"(*regexp.Regexp).FindAllIndex":[[0],[]],"(*regexp.Regexp).FindAllIndex$1":[],"(*regexp.Regexp).FindAllString":[[0],[]],"(*regexp.Regexp).FindAllString$1":[],"(*regexp.Regexp).FindAllStringIndex":[[0],[]],"(*regexp.Regexp).FindAllStringIndex$1":[],"(*regexp.Regexp).FindAllStringSubmatch":[[0],[]],"(*regexp.Regexp).FindAllStringSubmatch$1":[],"(*regexp.Regexp).FindAllStringSubmatchIndex":[[0],[]],"(*regexp.Regexp).FindAllStringSubmatchIndex$1":[],"(*regexp.Regexp).FindAllSubmatch":[[0],[]],"(*regexp.Regexp).FindAllSubmatch$1":[],"(*regexp.Regexp).FindAllSubmatchIndex":[[0],[]],"(*regexp.Regexp).FindAllSubmatchIndex$1":[],"(*regexp.Regexp).FindIndex":[[0],[0,1]],"(*regexp.Regexp).FindReaderIndex":[[0],[0,1]],"(*regexp.Regexp).FindReaderSubmatchIndex":[[0],[0,1]],"(*regexp.Regexp).FindString":[[0],[1]],"(*regexp.Regexp).FindStringIndex":[[0],[0,1]],"(*regexp.Regexp).FindStringSubmatch":[[0],[1]],"(*regexp.Regexp).FindStringSubmatchIndex":[[0],[0,1]],"(*regexp.Regexp).FindSubmatch":[[0],[1]],"(*regexp.Regexp).FindSubmatchIndex":[[0],[0,1]],"(*regexp.Regexp).LiteralPrefix":[[0],[0],[0]],"(*regexp.Regexp).Longest":[[0]],"(*regexp.Regexp).Match":[[0],[0,1]],"(*regexp.Regexp).MatchReader":[[0],[0,1]],"(*regexp.Regexp).MatchString":[[0],[0,1]],"(*regexp.Regexp).NumSubexp":[[0],[0]],"(*regexp.Regexp).ReplaceAll":[[0],[1]],"(*regexp.Regexp).ReplaceAll$1":[[0]],"(*regexp.Regexp).ReplaceAllFunc":[[0],[1]],"(*regexp.Regexp).ReplaceAllFunc$1":[[0]],"(*regexp.Regexp).ReplaceAllLiteral":[[0],[1]],"(*regexp.Regexp).ReplaceAllLiteral$1":[[0]],"(*regexp.Regexp).ReplaceAllLiteralString":[[0],[1]],"(*regexp.Regexp).ReplaceAllLiteralString$1":[[0]],"(*regexp.Regexp).ReplaceAllString":[[0],[1]],"(*regexp.Regexp).ReplaceAllString$1":[[0]],"(*regexp.Regexp).ReplaceAllStringFunc":[[0],[1]],"(*regexp.Regexp).ReplaceAllStringFunc$1":[[0]],"(*regexp.Regexp).Split":[[0],[1]],"(*regexp.Regexp).String":[[0],[0]],"(*regexp.Regexp).SubexpIndex":[[0],[]],"(*regexp.Regexp).SubexpNames":[[0],[0]],"(*regexp.Regexp).allMatches":[[0]],"(*regexp.Regexp).backtrack":[[0],[1,2,5]],"(*regexp.Regexp).doExecute":[[0],[0,1,2,3,6]],"(*regexp.Regexp).doMatch":[[0],[0,1,2,3]],"(*regexp.Regexp).doOnePass":[[0],[1,2,3,6]],"(*regexp.Regexp).expand":[[0],[1,2,3,4]],"(*regexp.Regexp).get":[[0],[0]],"(*regexp.Regexp).pad":[[0],[1]],"(*regexp.Regexp).put":[[0]],"(*regexp.Regexp).replaceAll":[[0],[1,2]],"(*regexp.Regexp).tryBacktrack":[[0],[1,3,4]],"(*regexp.bitState).push":[[0,2,3,4]],"(*regexp.bitState).reset":[[0,2]],"(*regexp.bitState).shouldVisit":[[0],[]],"(*regexp.inputBytes).canCheckPrefix":[[0],[]],"(*regexp.inputBytes).context":[[0],[0]],"(*regexp.inputBytes).hasPrefix":[[0],[0,1]],"(*regexp.inputBytes).index":[[0],[]],"(*regexp.inputBytes).step":[[0],[0],[]],"(*regexp.inputReader).canCheckPrefix":[[0],[]],"(*regexp.inputReader).context":[[0],[]],"(*regexp.inputReader).hasPrefix":[[0],[]],"(*regexp.inputReader).index":[[0],[]],"(*regexp.inputReader).step":[[0],[0],[]],"(*regexp.inputString).canCheckPrefix":[[0],[]],"(*regexp.inputString).context":[[0],[0,1]],"(*regexp.inputString).hasPrefix":[[0],[0,1]],"(*regexp.inputString).index":[[0],[]],"(*regexp.inputString).step":[[0],[0,1],[]],"(*regexp.inputs).clear":[[0]],"(*regexp.inputs).init":[[0,1,2,3],[0,1,2,3],[]],"(*regexp.inputs).newBytes":[[0,1],[0,1]],"(*regexp.inputs).newReader":[[0,1],[0,1]],"(*regexp.inputs).newString":[[0,1],[0,1]],"(*regexp.lazyFlag).match":[[0],[1]],"(*regexp.machine).add":[[0],[0,6]],"(*regexp.machine).alloc":[[0],[0,1]],"(*regexp.machine).clear":[[0,1]],"(*regexp.machine).init":[[0]],"(*regexp.machine).match":[[0],[0]],"(*regexp.machine).step":[[0,1]],"(*regexp.onePassInst).MatchEmptyWidth":[[0],[1,2]],"(*regexp.onePassInst).MatchRune":[[0],[]],"(*regexp.onePassInst).MatchRunePos":[[0],[]],"(*regexp.onePassInst).String":[[0],[]],"(*regexp.onePassInst).op":[[0],[0]],"(*regexp.queueOnePass).clear":[[0]],"(*regexp.queueOnePass).contains":[[0],[0,1]],"(*regexp.queueOnePass).empty":[[0],[0]],"(*regexp.queueOnePass).insert":[[0]],"(*regexp.queueOnePass).insertNew":[[0]],"(*regexp.queueOnePass).next":[[0],[0]],"(*regexp.runeSlice).Len":[[0],[]],"(*regexp.runeSlice).Less":[[0],[]],"(*regexp.runeSlice).Swap":[[0]],"(*regexp/syntax.Error).Error":[[0],[0]],"(*regexp/syntax.ErrorCode).String":[[0],[]],"(*regexp/syntax.Inst).MatchEmptyWidth":[[0],[1,2]],"(*regexp/syntax.Inst).MatchRune":[[0],[]],"(*regexp/syntax.Inst).MatchRunePos":[[0],[]],"(*regexp/syntax.Inst).String":[[0],[]],"(*regexp/syntax.Inst).op":[[0],[0]],"(*regexp/syntax.InstOp).String":[[0],[]],"(*regexp/syntax.Op).String":[[0],[]],"(*regexp/syntax.Prog).Prefix":[[0],[0],[0]],"(*regexp/syntax.Prog).StartCond":[[0],[0]],"(*regexp/syntax.Prog).String":[[0],[]],"(*regexp/syntax.Prog).skipNop":[[0],[0]],"(*regexp/syntax.Regexp).CapNames":[[0],[]],"(*regexp/syntax.Regexp).Equal":[[0],[0,1]],"(*regexp/syntax.Regexp).MaxCap":[[0],[0]],"(*regexp/syntax.Regexp).Simplify":[[0],[0]],"(*regexp/syntax.Regexp).String":[[0],[]],"(*regexp/syntax.Regexp).capNames":[[0]],"(*regexp/syntax.compiler).alt":[[0],[1,2]],"(*regexp/syntax.compiler).cap":[[0,1],[]],"(*regexp/syntax.compiler).cat":[[0],[1,2]],"(*regexp/syntax.compiler).compile":[[0],[]],"(*regexp/syntax.compiler).empty":[[0],[]],"(*regexp/syntax.compiler).fail":[[0],[]],"(*regexp/syntax.compiler).init":[[0]],"(*regexp/syntax.compiler).inst":[[0,1],[]],"(*regexp/syntax.compiler).loop":[[0],[]],"(*regexp/syntax.compiler).nop":[[0],[]],"(*regexp/syntax.compiler).plus":[[0],[1]],"(*regexp/syntax.compiler).quest":[[0],[1]],"(*regexp/syntax.compiler).rune":[[0],[]],"(*regexp/syntax.compiler).star":[[0],[1]],"(*regexp/syntax.parser).alternate":[[0],[0]],"(*regexp/syntax.parser).appendGroup":[[0,2],[0,1,2]],"(*regexp/syntax.parser).calcHeight":[[0],[0,1]],"(*regexp/syntax.parser).checkHeight":[[0]],"(*regexp/syntax.parser).collapse":[[0,1,2],[0,1,2]],"(*regexp/syntax.parser).concat":[[0],[0]],"(*regexp/syntax.parser).factor":[[0,1],[0,1]],"(*regexp/syntax.parser).leadingRegexp":[[0],[1]],"(*regexp/syntax.parser).leadingString":[[0],[1],[1]],"(*regexp/syntax.parser).literal":[[0]],"(*regexp/syntax.parser).maybeConcat":[[0],[]],"(*regexp/syntax.parser).newRegexp":[[0],[0,1]],"(*regexp/syntax.parser).op":[[0],[0,1]],"(*regexp/syntax.parser).parseClass":[[0,1],[1],[1]],"(*regexp/syntax.parser).parseClassChar":[[0],[1],[1],[1,2]],"(*regexp/syntax.parser).parseEscape":[[0],[1],[1],[1]],"(*regexp/syntax.parser).parseInt":[[0],[1],[1],[]],"(*regexp/syntax.parser).parseNamedClass":[[0,1],[0,1,2],[1],[1]],"(*regexp/syntax.parser).parsePerlClassEscape":[[0,1],[0,1,2],[1]],"(*regexp/syntax.parser).parsePerlFlags":[[0],[1],[1]],"(*regexp/syntax.parser).parseRepeat":[[0],[1],[1],[1],[]],"(*regexp/syntax.parser).parseRightParen":[[0],[0]],"(*regexp/syntax.parser).parseUnicodeClass":[[0,1],[0,1,2],[1],[1]],"(*regexp/syntax.parser).parseVerticalBar":[[0],[]],"(*regexp/syntax.parser).push":[[0],[0,1]],"(*regexp/syntax.parser).removeLeadingRegexp":[[0,1],[0,1]],"(*regexp/syntax.parser).removeLeadingString":[[0,1],[1]],"(*regexp/syntax.parser).repeat":[[0],[5],[4,6]],"(*regexp/syntax.parser).reuse":[[0,1]],"(*regexp/syntax.parser).swapVerticalBar":[[0],[]],"(*regexp/syntax.ranges).Len":[[0],[]],"(*regexp/syntax.ranges).Less":[[0],[]],"(*regexp/syntax.ranges).Swap":[[0]],"(*runtime.BlockProfileRecord).Stack":[[0],[0]],"(*runtime.Frames).Next":[[0],[0],[]],"(*runtime.Func).Entry":[[0],[0]],"(*runtime.Func).FileLine":[[0],[0],[0]],"(*runtime.Func).Name":[[0],[0]],"(*runtime.Func).funcInfo":[[0],[0]],"(*runtime.Func).raw":[[0],[0]],"(*runtime.MemProfileRecord).InUseBytes":[[0],[0]],"(*runtime.MemProfileRecord).InUseObjects":[[0],[0]],"(*runtime.MemProfileRecord).Stack":[[0],[0]],"(*runtime.StackRecord).Stack":[[0],[0]],"(*runtime.TypeAssertionError).Error":[[0],[0]],"(*runtime.TypeAssertionError).RuntimeError":[[0]],"(*runtime._func).funcInfo":[[0],[0]],"(*runtime._func).isInlined":[[0],[0]],"(*runtime._type).name":[[0],[]],"(*runtime._type).nameOff":[[0],[1]],"(*runtime._type).pkgpath":[[0],[]],"(*runtime._type).string":[[0],[]],"(*runtime._type).textOff":[[0],[1]],"(*runtime._type).typeOff":[[0],[1]],"(*runtime._type).uncommon":[[0],[0]],"(*runtime.activeSweep).begin":[[0],[]],"(*runtime.activeSweep).end":[[0]],"(*runtime.activeSweep).isDone":[[0],[0]],"(*runtime.activeSweep).markDrained":[[0],[]],"(*runtime.activeSweep).reset":[[0]],"(*runtime.activeSweep).sweepers":[[0],[0]],"(*runtime.addrRange).contains":[[0],[1]],"(*runtime.addrRange).removeGreaterEqual":[[0],[1]],"(*runtime.addrRange).size":[[0],[]],"(*runtime.addrRange).subtract":[[0],[1]],"(*runtime.addrRanges).add":[[0,1]],"(*runtime.addrRanges).cloneInto":[[0]],"(*runtime.addrRanges).contains":[[0],[0,1]],"(*runtime.addrRanges).findAddrGreaterEqual":[[0],[0,1],[]],"(*runtime.addrRanges).findSucc":[[0],[]],"(*runtime.addrRanges).init":[[0,1]],"(*runtime.addrRanges).removeGreaterEqual":[[0,1]],"(*runtime.addrRanges).removeLast":[[0,1],[0,1]],"(*runtime.atomicOffAddr).Clear":[[0]],"(*runtime.atomicOffAddr).Load":[[0],[],[]],"(*runtime.atomicOffAddr).StoreMarked":[[0]],"(*runtime.atomicOffAddr).StoreMin":[[0]],"(*runtime.atomicOffAddr).StoreUnmark":[[0]],"(*runtime.bitvector).ptrbit":[[0],[0,1]],"(*runtime.bmap).keys":[[0],[0]],"(*runtime.bmap).overflow":[[0],[0,1]],"(*runtime.bmap).setoverflow":[[0]],"(*runtime.boundsError).Error":[[0],[]],"(*runtime.boundsError).RuntimeError":[[0]],"(*runtime.bucket).bp":[[0],[0]],"(*runtime.bucket).mp":[[0],[0]],"(*runtime.bucket).stk":[[0],[0]],"(*runtime.chunkIdx).l1":[[0],[]],"(*runtime.chunkIdx).l2":[[0],[]],"(*runtime.consistentHeapStats).acquire":[[0],[0]],"(*runtime.consistentHeapStats).read":[[0]],"(*runtime.consistentHeapStats).release":[[0]],"(*runtime.consistentHeapStats).unsafeRead":[[0]],"(*runtime.cpuProfile).add":[[0]],"(*runtime.cpuProfile).addExtra":[[0]],"(*runtime.cpuProfile).addNonGo":[[0]],"(*runtime.debugLogReader).header":[[0],[0],[0],[0],[0]],"(*runtime.debugLogReader).peek":[[0],[0]],"(*runtime.debugLogReader).printVal":[[0],[]],"(*runtime.debugLogReader).readUint16LEAt":[[0],[0]],"(*runtime.debugLogReader).readUint64LEAt":[[0],[0]],"(*runtime.debugLogReader).skip":[[0],[0]],"(*runtime.debugLogReader).uvarint":[[0],[0]],"(*runtime.debugLogReader).varint":[[0],[0]],"(*runtime.debugLogWriter).bytes":[[0]],"(*runtime.debugLogWriter).ensure":[[0]],"(*runtime.debugLogWriter).uvarint":[[0]],"(*runtime.debugLogWriter).varint":[[0]],"(*runtime.debugLogWriter).writeFrameAt":[[0],[2]],"(*runtime.debugLogWriter).writeSync":[[0]],"(*runtime.debugLogWriter).writeUint64LE":[[0]],"(*runtime.errorAddressString).Addr":[[0],[]],"(*runtime.errorAddressString).Error":[[0],[]],"(*runtime.errorAddressString).RuntimeError":[[0]],"(*runtime.errorString).Error":[[0],[]],"(*runtime.errorString).RuntimeError":[[0]],"(*runtime.fixalloc).alloc":[[0],[0]],"(*runtime.fixalloc).free":[[0,1]],"(*runtime.fixalloc).init":[[0,1,2,3,4]],"(*runtime.funcInfo)._Func":[[0],[]],"(*runtime.funcInfo).entry":[[0],[]],"(*runtime.funcInfo).funcInfo":[[0],[0]],"(*runtime.funcInfo).isInlined":[[0],[0]],"(*runtime.funcInfo).valid":[[0],[]],"(*runtime.functype).dotdotdot":[[0],[0]],"(*runtime.functype).in":[[0],[0]],"(*runtime.functype).out":[[0],[0]],"(*runtime.gList).empty":[[0],[0]],"(*runtime.gList).pop":[[0],[0]],"(*runtime.gList).push":[[0,1]],"(*runtime.gList).pushAll":[[0,1]],"(*runtime.gQueue).empty":[[0],[0]],"(*runtime.gQueue).pop":[[0],[0]],"(*runtime.gQueue).popList":[[0],[0]],"(*runtime.gQueue).push":[[0,1]],"(*runtime.gQueue).pushBack":[[0,1]],"(*runtime.gQueue).pushBackAll":[[0,1]],"(*runtime.gcBits).bitp":[[0],[0,1],[1]],"(*runtime.gcBits).bytep":[[0],[0,1]],"(*runtime.gcBitsArena).tryAlloc":[[0],[0]],"(*runtime.gcCPULimiterState).accumulate":[[0,1,2]],"(*runtime.gcCPULimiterState).addAssistTime":[[0]],"(*runtime.gcCPULimiterState).addIdleTime":[[0]],"(*runtime.gcCPULimiterState).finishGCTransition":[[0]],"(*runtime.gcCPULimiterState).limiting":[[0],[0]],"(*runtime.gcCPULimiterState).needUpdate":[[0],[1]],"(*runtime.gcCPULimiterState).resetCapacity":[[0]],"(*runtime.gcCPULimiterState).startGCTransition":[[0,1,2]],"(*runtime.gcCPULimiterState).tryLock":[[0],[]],"(*runtime.gcCPULimiterState).unlock":[[0]],"(*runtime.gcCPULimiterState).update":[[0]],"(*runtime.gcCPULimiterState).updateLocked":[[0,1]],"(*runtime.gcControllerState).addGlobals":[[0]],"(*runtime.gcControllerState).addIdleMarkWorker":[[0],[]],"(*runtime.gcControllerState).addScannableStack":[[0]],"(*runtime.gcControllerState).commit":[[0]],"(*runtime.gcControllerState).endCycle":[[0,1,2]],"(*runtime.gcControllerState).enlistWorker":[[0]],"(*runtime.gcControllerState).findRunnableGCWorker":[[0],[],[2]],"(*runtime.gcControllerState).findRunnableGCWorker$1":[[]],"(*runtime.gcControllerState).heapGoal":[[0],[0]],"(*runtime.gcControllerState).heapGoalInternal":[[0],[0],[0]],"(*runtime.gcControllerState).init":[[0]],"(*runtime.gcControllerState).markWorkerStop":[[0]],"(*runtime.gcControllerState).memoryLimitHeapGoal":[[0],[0]],"(*runtime.gcControllerState).needIdleMarkWorker":[[0],[0]],"(*runtime.gcControllerState).removeIdleMarkWorker":[[0]],"(*runtime.gcControllerState).resetLive":[[0,1]],"(*runtime.gcControllerState).revise":[[0]],"(*runtime.gcControllerState).setGCPercent":[[0,1],[]],"(*runtime.gcControllerState).setMaxIdleMarkWorkers":[[0]],"(*runtime.gcControllerState).setMemoryLimit":[[0],[]],"(*runtime.gcControllerState).startCycle":[[0]],"(*runtime.gcControllerState).trigger":[[0],[0],[0]],"(*runtime.gcControllerState).update":[[0]],"(*runtime.gcWork).balance":[[0]],"(*runtime.gcWork).dispose":[[0]],"(*runtime.gcWork).empty":[[0],[0]],"(*runtime.gcWork).init":[[0]],"(*runtime.gcWork).put":[[0]],"(*runtime.gcWork).putBatch":[[0]],"(*runtime.gcWork).putFast":[[0],[]],"(*runtime.gcWork).tryGet":[[0],[0]],"(*runtime.gcWork).tryGetFast":[[0],[0]],"(*runtime.gclinkptr).ptr":[[0],[]],"(*runtime.goroutineProfileStateHolder).CompareAndSwap":[[0],[]],"(*runtime.goroutineProfileStateHolder).Load":[[0],[0]],"(*runtime.goroutineProfileStateHolder).Store":[[0]],"(*runtime.guintptr).cas":[[0],[]],"(*runtime.guintptr).ptr":[[0],[]],"(*runtime.guintptr).set":[[0,1]],"(*runtime.hchan).raceaddr":[[0],[0]],"(*runtime.hchan).sortkey":[[0],[0]],"(*runtime.headTailIndex).cas":[[0],[]],"(*runtime.headTailIndex).incTail":[[0],[]],"(*runtime.headTailIndex).load":[[0],[0]],"(*runtime.headTailIndex).reset":[[0]],"(*runtime.heapStatsAggregate).compute":[[0]],"(*runtime.heapStatsDelta).merge":[[0,1]],"(*runtime.hmap).createOverflow":[[0]],"(*runtime.hmap).growing":[[0],[0]],"(*runtime.hmap).incrnoverflow":[[0]],"(*runtime.hmap).newoverflow":[[0],[0,1]],"(*runtime.hmap).noldbuckets":[[0],[0]],"(*runtime.hmap).oldbucketmask":[[0],[0]],"(*runtime.hmap).sameSizeGrow":[[0],[0]],"(*runtime.itab).init":[[0],[]],"(*runtime.itabTableType).add":[[0]],"(*runtime.itabTableType).add$bound":[],"(*runtime.itabTableType).find":[[0],[0,1,2]],"(*runtime.lfstack).empty":[[0],[0]],"(*runtime.lfstack).pop":[[0],[0]],"(*runtime.lfstack).push":[[0]],"(*runtime.limiterEvent).consume":[[0],[0],[0,1]],"(*runtime.limiterEvent).start":[[0],[]],"(*runtime.limiterEvent).stop":[[0]],"(*runtime.linearAlloc).alloc":[[0,1,2],[0,2]],"(*runtime.linearAlloc).init":[[0,1,2,3]],"(*runtime.lockRank).String":[[0],[]],"(*runtime.mProfCycleHolder).increment":[[0]],"(*runtime.mProfCycleHolder).read":[[0],[0]],"(*runtime.mProfCycleHolder).setFlushed":[[0],[0],[0]],"(*runtime.mSpanList).init":[[0]],"(*runtime.mSpanList).insert":[[0,1]],"(*runtime.mSpanList).insertBack":[[0,1]],"(*runtime.mSpanList).isEmpty":[[0],[0]],"(*runtime.mSpanList).remove":[[0,1]],"(*runtime.mSpanList).takeAll":[[0,1]],"(*runtime.mSpanStateBox).get":[[0],[0]],"(*runtime.mSpanStateBox).set":[[0]],"(*runtime.maptype).hashMightPanic":[[0],[0]],"(*runtime.maptype).indirectelem":[[0],[0]],"(*runtime.maptype).indirectkey":[[0],[0]],"(*runtime.maptype).needkeyupdate":[[0],[0]],"(*runtime.maptype).reflexivekey":[[0],[0]],"(*runtime.markBits).advance":[[0]],"(*runtime.markBits).clearMarked":[[0]],"(*runtime.markBits).isMarked":[[0],[]],"(*runtime.markBits).setMarked":[[0]],"(*runtime.markBits).setMarkedNonAtomic":[[0]],"(*runtime.mcache).allocLarge":[[0],[1]],"(*runtime.mcache).nextFree":[[0],[0],[0],[]],"(*runtime.mcache).prepareForSweep":[[0]],"(*runtime.mcache).refill":[[0]],"(*runtime.mcache).releaseAll":[[0]],"(*runtime.mcentral).cacheSpan":[[0],[0]],"(*runtime.mcentral).fullSwept":[[0],[0]],"(*runtime.mcentral).fullUnswept":[[0],[0]],"(*runtime.mcentral).grow":[[0],[]],"(*runtime.mcentral).init":[[0,1]],"(*runtime.mcentral).partialSwept":[[0],[0]],"(*runtime.mcentral).partialUnswept":[[0],[0]],"(*runtime.mcentral).uncacheSpan":[[0]],"(*runtime.memRecordCycle).add":[[0,1]],"(*runtime.metricValue).float64HistOrInit":[[0],[0,1]],"(*runtime.mheap).alloc":[[0],[]],"(*runtime.mheap).alloc$1":[],"(*runtime.mheap).allocMSpanLocked":[[0],[0]],"(*runtime.mheap).allocManual":[[0,1],[0,1]],"(*runtime.mheap).allocNeedsZero":[[0],[]],"(*runtime.mheap).allocSpan":[[0,1],[0,1,3]],"(*runtime.mheap).allocSpan$1":[[]],"(*runtime.mheap).freeMSpanLocked":[[0,1]],"(*runtime.mheap).freeManual":[[0,1]],"(*runtime.mheap).freeSpan":[[0]],"(*runtime.mheap).freeSpan$1":[],"(*runtime.mheap).freeSpanLocked":[[0,1]],"(*runtime.mheap).grow":[[0,1],[0,1],[]],"(*runtime.mheap).init":[[0]],"(*runtime.mheap).nextSpanForSweep":[[0],[0]],"(*runtime.mheap).reclaim":[[0]],"(*runtime.mheap).reclaimChunk":[[0],[0]],"(*runtime.mheap).scavengeAll":[[0]],"(*runtime.mheap).setSpans":[[0]],"(*runtime.mheap).sysAlloc":[[0,1],[0,1],[1]],"(*runtime.mheap).tryAllocMSpan":[[0],[]],"(*runtime.moduledata).textAddr":[[0],[0,1]],"(*runtime.moduledata).textOff":[[0],[0,1],[]],"(*runtime.mspan).allocBitsForIndex":[[0],[0,1]],"(*runtime.mspan).base":[[0],[0]],"(*runtime.mspan).countAlloc":[[0],[0]],"(*runtime.mspan).divideByElemSize":[[0],[0,1]],"(*runtime.mspan).ensureSwept":[[0]],"(*runtime.mspan).inList":[[0],[0]],"(*runtime.mspan).init":[[0,1,2]],"(*runtime.mspan).isFree":[[0],[0,1]],"(*runtime.mspan).layout":[[0],[0],[0],[0]],"(*runtime.mspan).markBitsForBase":[[0],[0]],"(*runtime.mspan).markBitsForIndex":[[0],[0,1]],"(*runtime.mspan).nextFreeIndex":[[0],[0]],"(*runtime.mspan).objIndex":[[0],[0,1]],"(*runtime.mspan).refillAllocCache":[[0,1]],"(*runtime.mspan).reportZombies":[[0]],"(*runtime.muintptr).ptr":[[0],[]],"(*runtime.muintptr).set":[[0,1]],"(*runtime.name).data":[[0],[1]],"(*runtime.name).isBlank":[[0],[]],"(*runtime.name).isEmbedded":[[0],[]],"(*runtime.name).isExported":[[0],[]],"(*runtime.name).name":[[0],[]],"(*runtime.name).pkgPath":[[0],[]],"(*runtime.name).readvarint":[[0],[],[1]],"(*runtime.name).tag":[[0],[]],"(*runtime.notInHeap).add":[[0],[0,1]],"(*runtime.offAddr).add":[[0],[1]],"(*runtime.offAddr).addr":[[0],[]],"(*runtime.offAddr).diff":[[0],[1]],"(*runtime.offAddr).equal":[[0],[1]],"(*runtime.offAddr).lessEqual":[[0],[1]],"(*runtime.offAddr).lessThan":[[0],[1]],"(*runtime.offAddr).sub":[[0],[1]],"(*runtime.p).destroy":[[0]],"(*runtime.p).destroy$1":[],"(*runtime.p).init":[[0,1]],"(*runtime.pageAlloc).alloc":[[0],[0],[0,1]],"(*runtime.pageAlloc).allocRange":[[0],[0,1,2]],"(*runtime.pageAlloc).allocToCache":[[0],[0]],"(*runtime.pageAlloc).chunkOf":[[0],[0]],"(*runtime.pageAlloc).find":[[0],[0],[0]],"(*runtime.pageAlloc).find$1":[],"(*runtime.pageAlloc).findMappedAddr":[[0],[0,1]],"(*runtime.pageAlloc).free":[[0]],"(*runtime.pageAlloc).grow":[[0]],"(*runtime.pageAlloc).init":[[0,1]],"(*runtime.pageAlloc).scavenge":[[0],[]],"(*runtime.pageAlloc).scavenge$1":[],"(*runtime.pageAlloc).scavengeOne":[[0],[3]],"(*runtime.pageAlloc).sysGrow":[[0]],"(*runtime.pageAlloc).sysGrow$1":[[1],[1]],"(*runtime.pageAlloc).sysGrow$2":[[1,2]],"(*runtime.pageAlloc).sysGrow$3":[[1]],"(*runtime.pageAlloc).sysInit":[[0]],"(*runtime.pageAlloc).tryChunkOf":[[0],[0]],"(*runtime.pageAlloc).update":[[0]],"(*runtime.pageBits).block64":[[0],[0]],"(*runtime.pageBits).clear":[[0,1]],"(*runtime.pageBits).clearAll":[[0]],"(*runtime.pageBits).clearBlock64":[[0,2]],"(*runtime.pageBits).clearRange":[[0,1,2]],"(*runtime.pageBits).get":[[0],[0,1]],"(*runtime.pageBits).popcntRange":[[0],[0,1,2]],"(*runtime.pageBits).set":[[0,1]],"(*runtime.pageBits).setAll":[[0]],"(*runtime.pageBits).setBlock64":[[0,2]],"(*runtime.pageBits).setRange":[[0,1,2]],"(*runtime.pageCache).alloc":[[0,1],[0,1],[0,1]],"(*runtime.pageCache).allocN":[[0,1],[0,1],[0,1]],"(*runtime.pageCache).empty":[[0],[0]],"(*runtime.pageCache).flush":[[0]],"(*runtime.pallocBits).allocAll":[[0]],"(*runtime.pallocBits).allocPages64":[[0]],"(*runtime.pallocBits).allocRange":[[0]],"(*runtime.pallocBits).find":[[0],[2],[2]],"(*runtime.pallocBits).find1":[[0],[1]],"(*runtime.pallocBits).findLargeN":[[0],[2],[2]],"(*runtime.pallocBits).findSmallN":[[0],[2],[2]],"(*runtime.pallocBits).free":[[0]],"(*runtime.pallocBits).free1":[[0]],"(*runtime.pallocBits).freeAll":[[0]],"(*runtime.pallocBits).pages64":[[0],[0]],"(*runtime.pallocBits).summarize":[[0],[]],"(*runtime.pallocData).allocAll":[[0]],"(*runtime.pallocData).allocPages64":[[0]],"(*runtime.pallocData).allocRange":[[0,1,2]],"(*runtime.pallocData).find":[[0],[2],[2]],"(*runtime.pallocData).find1":[[0],[1]],"(*runtime.pallocData).findLargeN":[[0],[2],[2]],"(*runtime.pallocData).findScavengeCandidate":[[0],[1,2,3],[1,2,3]],"(*runtime.pallocData).findSmallN":[[0],[2],[2]],"(*runtime.pallocData).free":[[0]],"(*runtime.pallocData).free1":[[0]],"(*runtime.pallocData).freeAll":[[0]],"(*runtime.pallocData).pages64":[[0],[0]],"(*runtime.pallocData).summarize":[[0],[]],"(*runtime.pallocSum).end":[[0],[]],"(*runtime.pallocSum).max":[[0],[]],"(*runtime.pallocSum).start":[[0],[]],"(*runtime.pallocSum).unpack":[[0],[],[],[]],"(*runtime.piController).next":[[0,1,2,3],[0,1,2],[]],"(*runtime.piController).reset":[[0]],"(*runtime.plainError).Error":[[0],[]],"(*runtime.plainError).RuntimeError":[[0]],"(*runtime.pollCache).alloc":[[0],[0]],"(*runtime.pollCache).free":[[0,1]],"(*runtime.pollDesc).info":[[0],[0]],"(*runtime.pollDesc).makeArg":[[0],[]],"(*runtime.pollDesc).publishInfo":[[0]],"(*runtime.pollDesc).setEventErr":[[0]],"(*runtime.pollInfo).closing":[[0],[]],"(*runtime.pollInfo).eventErr":[[0],[]],"(*runtime.pollInfo).expiredReadDeadline":[[0],[]],"(*runtime.pollInfo).expiredWriteDeadline":[[0],[]],"(*runtime.profAtomic).cas":[[0],[]],"(*runtime.profAtomic).load":[[0],[0]],"(*runtime.profAtomic).store":[[0]],"(*runtime.profBuf).canWriteRecord":[[0],[0,1]],"(*runtime.profBuf).canWriteTwoRecords":[[0],[0,1,2]],"(*runtime.profBuf).close":[[0]],"(*runtime.profBuf).hasOverflow":[[0],[0]],"(*runtime.profBuf).incrementOverflow":[[0]],"(*runtime.profBuf).read":[[0],[0],[0],[]],"(*runtime.profBuf).takeOverflow":[[0],[0],[0]],"(*runtime.profBuf).wakeupExtra":[[0]],"(*runtime.profBuf).write":[[0]],"(*runtime.puintptr).ptr":[[0],[]],"(*runtime.puintptr).set":[[0,1]],"(*runtime.randomEnum).done":[[0],[0]],"(*runtime.randomEnum).next":[[0]],"(*runtime.randomEnum).position":[[0],[0]],"(*runtime.randomOrder).reset":[[0,1]],"(*runtime.randomOrder).start":[[0],[0,1]],"(*runtime.rwmutex).lock":[[0]],"(*runtime.rwmutex).lock$1":[],"(*runtime.rwmutex).rlock":[[0]],"(*runtime.rwmutex).rlock$1":[],"(*runtime.rwmutex).runlock":[[0]],"(*runtime.rwmutex).unlock":[[0]],"(*runtime.scavengeIndex).clear":[[0]],"(*runtime.scavengeIndex).find":[[0],[],[]],"(*runtime.scavengeIndex).grow":[[0],[0,1,2]],"(*runtime.scavengeIndex).mark":[[0]],"(*runtime.scavengerState).controllerFailed":[[0]],"(*runtime.scavengerState).init":[[0]],"(*runtime.scavengerState).init$1":[],"(*runtime.scavengerState).init$2":[[],[]],"(*runtime.scavengerState).init$3":[[]],"(*runtime.scavengerState).init$4":[[]],"(*runtime.scavengerState).park":[[0]],"(*runtime.scavengerState).ready":[[0]],"(*runtime.scavengerState).run":[[0],[],[]],"(*runtime.scavengerState).sleep":[[0,1]],"(*runtime.scavengerState).wake":[[0]],"(*runtime.semTable).rootFor":[[0],[0]],"(*runtime.semaRoot).dequeue":[[0],[0],[]],"(*runtime.semaRoot).queue":[[0,1,2]],"(*runtime.semaRoot).rotateLeft":[[0,1]],"(*runtime.semaRoot).rotateRight":[[0,1]],"(*runtime.sigctxt).cs":[[0],[0]],"(*runtime.sigctxt).fault":[[0],[0]],"(*runtime.sigctxt).fixsigcode":[[0]],"(*runtime.sigctxt).fs":[[0],[0]],"(*runtime.sigctxt).gs":[[0],[0]],"(*runtime.sigctxt).preparePanic":[[0]],"(*runtime.sigctxt).pushCall":[[0]],"(*runtime.sigctxt).r10":[[0],[0]],"(*runtime.sigctxt).r11":[[0],[0]],"(*runtime.sigctxt).r12":[[0],[0]],"(*runtime.sigctxt).r13":[[0],[0]],"(*runtime.sigctxt).r14":[[0],[0]],"(*runtime.sigctxt).r15":[[0],[0]],"(*runtime.sigctxt).r8":[[0],[0]],"(*runtime.sigctxt).r9":[[0],[0]],"(*runtime.sigctxt).rax":[[0],[0]],"(*runtime.sigctxt).rbp":[[0],[0]],"(*runtime.sigctxt).rbx":[[0],[0]],"(*runtime.sigctxt).rcx":[[0],[0]],"(*runtime.sigctxt).rdi":[[0],[0]],"(*runtime.sigctxt).rdx":[[0],[0]],"(*runtime.sigctxt).regs":[[0],[0]],"(*runtime.sigctxt).rflags":[[0],[0]],"(*runtime.sigctxt).rip":[[0],[0]],"(*runtime.sigctxt).rsi":[[0],[0]],"(*runtime.sigctxt).rsp":[[0],[0]],"(*runtime.sigctxt).set_rip":[[0]],"(*runtime.sigctxt).set_rsp":[[0]],"(*runtime.sigctxt).set_sigaddr":[[0,1]],"(*runtime.sigctxt).set_sigcode":[[0,1]],"(*runtime.sigctxt).sigaddr":[[0],[0]],"(*runtime.sigctxt).sigcode":[[0],[0]],"(*runtime.sigctxt).siglr":[[0],[]],"(*runtime.sigctxt).sigpc":[[0],[0]],"(*runtime.sigctxt).sigsp":[[0],[0]],"(*runtime.spanClass).noscan":[[0],[]],"(*runtime.spanClass).sizeclass":[[0],[]],"(*runtime.spanSet).pop":[[0],[0]],"(*runtime.spanSet).push":[[0]],"(*runtime.spanSet).reset":[[0]],"(*runtime.spanSetBlockAlloc).alloc":[[0],[0]],"(*runtime.spanSetBlockAlloc).free":[[0]],"(*runtime.specialsIter).next":[[0]],"(*runtime.specialsIter).unlinkAndNext":[[0],[0]],"(*runtime.specialsIter).valid":[[0],[0]],"(*runtime.stackObject).setRecord":[[0]],"(*runtime.stackObjectRecord).gcdata":[[0],[0]],"(*runtime.stackObjectRecord).ptrdata":[[0],[0]],"(*runtime.stackObjectRecord).useGCProg":[[0],[0]],"(*runtime.stackScanState).addObject":[[0]],"(*runtime.stackScanState).buildIndex":[[0]],"(*runtime.stackScanState).findObject":[[0],[0]],"(*runtime.stackScanState).getPtr":[[0],[0],[0]],"(*runtime.stackScanState).putPtr":[[0]],"(*runtime.statAggregate).ensure":[[0,1]],"(*runtime.statDepSet).empty":[[0],[]],"(*runtime.statDepSet).has":[[0],[0,1]],"(*runtime.sweepClass).clear":[[0]],"(*runtime.sweepClass).load":[[0],[0]],"(*runtime.sweepClass).update":[[0]],"(*runtime.sweepLocked).sweep":[[0],[]],"(*runtime.sweepLocker).tryAcquire":[[0],[1],[]],"(*runtime.sysMemStat).add":[[0]],"(*runtime.sysMemStat).load":[[0],[0]],"(*runtime.sysStatsAggregate).compute":[[0]],"(*runtime.sysStatsAggregate).compute$1":[],"(*runtime.timeHistogram).record":[[0]],"(*runtime.timespec).setNsec":[[0,1]],"(*runtime.timeval).set_usec":[[0,1]],"(*runtime.traceAlloc).alloc":[[0,1],[0]],"(*runtime.traceAlloc).drop":[[0]],"(*runtime.traceAllocBlockPtr).set":[[0,1]],"(*runtime.traceBuf).byte":[[0]],"(*runtime.traceBuf).varint":[[0]],"(*runtime.traceBufPtr).ptr":[[0],[]],"(*runtime.traceBufPtr).set":[[0,1]],"(*runtime.traceStack).stack":[[0],[0]],"(*runtime.traceStackTable).dump":[[0]],"(*runtime.traceStackTable).find":[[0],[0]],"(*runtime.traceStackTable).newStack":[[0,1],[0,1]],"(*runtime.traceStackTable).put":[[0],[0]],"(*runtime.waitReason).String":[[0],[]],"(*runtime.waitq).dequeue":[[0],[0]],"(*runtime.waitq).dequeueSudoG":[[0,1]],"(*runtime.waitq).enqueue":[[0,1]],"(*runtime.wbBuf).discard":[[0]],"(*runtime.wbBuf).empty":[[0],[0]],"(*runtime.wbBuf).putFast":[[0],[0]],"(*runtime.wbBuf).reset":[[0]],"(*runtime.workbuf).checkempty":[[0]],"(*runtime.workbuf).checknonempty":[[0]],"(*runtime/cgo.Handle).Delete":[[0]],"(*runtime/cgo.Handle).Value":[[0],[]],"(*runtime/debug.BuildInfo).String":[[0],[]],"(*runtime/debug.BuildInfo).String$1":[],"(*runtime/internal/atomic.Bool).Load":[[0],[0]],"(*runtime/internal/atomic.Bool).Store":[[0]],"(*runtime/internal/atomic.Float64).Load":[[0],[0]],"(*runtime/internal/atomic.Float64).Store":[[0]],"(*runtime/internal/atomic.Int32).Add":[[0],[]],"(*runtime/internal/atomic.Int32).CompareAndSwap":[[0],[]],"(*runtime/internal/atomic.Int32).Load":[[0],[]],"(*runtime/internal/atomic.Int32).Store":[[0]],"(*runtime/internal/atomic.Int32).Swap":[[0],[]],"(*runtime/internal/atomic.Int64).Add":[[0],[]],"(*runtime/internal/atomic.Int64).CompareAndSwap":[[0],[]],"(*runtime/internal/atomic.Int64).Load":[[0],[]],"(*runtime/internal/atomic.Int64).Store":[[0]],"(*runtime/internal/atomic.Int64).Swap":[[0],[]],"(*runtime/internal/atomic.Uint32).Add":[[0],[]],"(*runtime/internal/atomic.Uint32).And":[[0]],"(*runtime/internal/atomic.Uint32).CompareAndSwap":[[0],[]],"(*runtime/internal/atomic.Uint32).CompareAndSwapRelease":[[0],[]],"(*runtime/internal/atomic.Uint32).Load":[[0],[0]],"(*runtime/internal/atomic.Uint32).LoadAcquire":[[0],[0]],"(*runtime/internal/atomic.Uint32).Or":[[0]],"(*runtime/internal/atomic.Uint32).Store":[[0]],"(*runtime/internal/atomic.Uint32).StoreRelease":[[0]],"(*runtime/internal/atomic.Uint32).Swap":[[0],[]],"(*runtime/internal/atomic.Uint64).Add":[[0],[]],"(*runtime/internal/atomic.Uint64).CompareAndSwap":[[0],[]],"(*runtime/internal/atomic.Uint64).Load":[[0],[0]],"(*runtime/internal/atomic.Uint64).LoadAcquire":[[0],[0]],"(*runtime/internal/atomic.Uint64).Store":[[0]],"(*runtime/internal/atomic.Uint64).StoreRelease":[[0]],"(*runtime/internal/atomic.Uint64).Swap":[[0],[]],"(*runtime/internal/atomic.Uint8).And":[[0]],"(*runtime/internal/atomic.Uint8).Load":[[0],[0]],"(*runtime/internal/atomic.Uint8).Or":[[0]],"(*runtime/internal/atomic.Uint8).Store":[[0]],"(*runtime/internal/atomic.Uintptr).Add":[[0],[]],"(*runtime/internal/atomic.Uintptr).CompareAndSwap":[[0],[]],"(*runtime/internal/atomic.Uintptr).Load":[[0],[]],"(*runtime/internal/atomic.Uintptr).LoadAcquire":[[0],[0]],"(*runtime/internal/atomic.Uintptr).Store":[[0]],"(*runtime/internal/atomic.Uintptr).StoreRelease":[[0]],"(*runtime/internal/atomic.Uintptr).Swap":[[0],[]],"(*runtime/internal/atomic.UnsafePointer).CompareAndSwapNoWB":[[0],[]],"(*runtime/internal/atomic.UnsafePointer).Load":[[0],[0]],"(*runtime/internal/atomic.UnsafePointer).StoreNoWB":[[0]],"(*runtime/internal/atomic.noCopy).Lock":[[0]],"(*runtime/internal/atomic.noCopy).Unlock":[[0]],"(*runtime/metrics.Value).Float64":[[0],[]],"(*runtime/metrics.Value).Float64Histogram":[[0],[]],"(*runtime/metrics.Value).Kind":[[0],[]],"(*runtime/metrics.Value).Uint64":[[0],[]],"(*runtime/pprof.Profile).Add":[[0]],"(*runtime/pprof.Profile).Count":[[0],[]],"(*runtime/pprof.Profile).Name":[[0],[0]],"(*runtime/pprof.Profile).Remove":[[0]],"(*runtime/pprof.Profile).WriteTo":[[0],[1]],"(*runtime/pprof.Profile).WriteTo$1":[[]],"(*runtime/pprof.keysByCount).Len":[[0],[]],"(*runtime/pprof.keysByCount).Less":[[0],[0]],"(*runtime/pprof.keysByCount).Swap":[[0]],"(*runtime/pprof.labelMap).String":[[0],[]],"(*runtime/pprof.pcDeck).reset":[[0]],"(*runtime/pprof.pcDeck).tryAdd":[[0,1,2,3],[]],"(*runtime/pprof.profMap).lookup":[[0,1,2],[0,1,2]],"(*runtime/pprof.profileBuilder).addCPUData":[[0,1,2],[]],"(*runtime/pprof.profileBuilder).addMapping":[[0,1,2,3,4,5]],"(*runtime/pprof.profileBuilder).addMapping$bound":[],"(*runtime/pprof.profileBuilder).addMappingEntry":[[0,1,2,3,4,5,6]],"(*runtime/pprof.profileBuilder).appendLocsForStack":[[0],[0,1]],"(*runtime/pprof.profileBuilder).build":[[0]],"(*runtime/pprof.profileBuilder).build$1":[],"(*runtime/pprof.profileBuilder).emitLocation":[[0],[]],"(*runtime/pprof.profileBuilder).flush":[[0]],"(*runtime/pprof.profileBuilder).pbLabel":[[0,2,3,4]],"(*runtime/pprof.profileBuilder).pbLine":[[0,2,3]],"(*runtime/pprof.profileBuilder).pbMapping":[[0,2,3,4,5,6,7]],"(*runtime/pprof.profileBuilder).pbSample":[[0]],"(*runtime/pprof.profileBuilder).pbValueType":[[0,2,3]],"(*runtime/pprof.profileBuilder).readMapping":[[0]],"(*runtime/pprof.profileBuilder).stringIndex":[[0,1],[0,1]],"(*runtime/pprof.protobuf).bool":[[0]],"(*runtime/pprof.protobuf).endMessage":[[0,2]],"(*runtime/pprof.protobuf).int64":[[0,2]],"(*runtime/pprof.protobuf).int64Opt":[[0,2]],"(*runtime/pprof.protobuf).int64s":[[0,2]],"(*runtime/pprof.protobuf).length":[[0,2]],"(*runtime/pprof.protobuf).startMessage":[[0],[]],"(*runtime/pprof.protobuf).string":[[0,2]],"(*runtime/pprof.protobuf).strings":[[0,2]],"(*runtime/pprof.protobuf).uint64":[[0,2]],"(*runtime/pprof.protobuf).uint64Opt":[[0,2]],"(*runtime/pprof.protobuf).uint64s":[[0,2]],"(*runtime/pprof.protobuf).varint":[[0,1]],"(*runtime/pprof.runtimeProfile).Label":[[0],[0]],"(*runtime/pprof.runtimeProfile).Len":[[0],[]],"(*runtime/pprof.runtimeProfile).Stack":[[0],[0]],"(*runtime/pprof.stackProfile).Label":[[0],[]],"(*runtime/pprof.stackProfile).Len":[[0],[]],"(*runtime/pprof.stackProfile).Stack":[[0],[]],"(*runtime/trace.Region).End":[[0]],"(*runtime/trace.Task).End":[[0]],"(*sort.Float64Slice).Len":[[0],[]],"(*sort.Float64Slice).Less":[[0],[]],"(*sort.Float64Slice).Search":[[0],[]],"(*sort.Float64Slice).Sort":[[0]],"(*sort.Float64Slice).Swap":[[0]],"(*sort.IntSlice).Len":[[0],[]],"(*sort.IntSlice).Less":[[0],[]],"(*sort.IntSlice).Search":[[0],[]],"(*sort.IntSlice).Sort":[[0]],"(*sort.IntSlice).Swap":[[0]],"(*sort.StringSlice).Len":[[0],[]],"(*sort.StringSlice).Less":[[0],[]],"(*sort.StringSlice).Search":[[0],[]],"(*sort.StringSlice).Sort":[[0]],"(*sort.StringSlice).Swap":[[0]],"(*sort.reverse).Len":[[0],[]],"(*sort.reverse).Less":[[0],[]],"(*sort.reverse).Swap":[[0]],"(*sort.xorshift).Next":[[0],[0]],"(*strconv.NumError).Error":[[0],[0]],"(*strconv.NumError).Unwrap":[[0],[0]],"(*strconv.decimal).Assign":[[0]],"(*strconv.decimal).Round":[[0,1]],"(*strconv.decimal).RoundDown":[[0,1]],"(*strconv.decimal).RoundUp":[[0,1]],"(*strconv.decimal).RoundedInteger":[[0],[0]],"(*strconv.decimal).Shift":[[0]],"(*strconv.decimal).floatBits":[[0],[0,1],[]],"(*strconv.decimal).set":[[0,1],[]],"(*strings.Builder).Cap":[[0],[]],"(*strings.Builder).Grow":[[0]],"(*strings.Builder).Len":[[0],[]],"(*strings.Builder).Reset":[[0]],"(*strings.Builder).String":[[0],[0]],"(*strings.Builder).Write":[[0,1],[],[]],"(*strings.Builder).WriteByte":[[0,1],[]],"(*strings.Builder).WriteRune":[[0,1],[],[]],"(*strings.Builder).WriteString":[[0,1],[],[]],"(*strings.Builder).copyCheck":[[0]],"(*strings.Builder).grow":[[0]],"(*strings.Reader).Len":[[0],[0]],"(*strings.Reader).Read":[[0],[],[]],"(*strings.Reader).ReadAt":[[0],[],[]],"(*strings.Reader).ReadByte":[[0],[0],[]],"(*strings.Reader).ReadRune":[[0],[0],[],[]],"(*strings.Reader).Reset":[[0,1]],"(*strings.Reader).Seek":[[0,1],[0,1],[]],"(*strings.Reader).Size":[[0],[]],"(*strings.Reader).UnreadByte":[[0],[]],"(*strings.Reader).UnreadRune":[[0],[]],"(*strings.Reader).WriteTo":[[0],[],[1]],"(*strings.Replacer).Replace":[[0],[0,1]],"(*strings.Replacer).WriteString":[[0],[],[1]],"(*strings.Replacer).build":[[0],[0]],"(*strings.Replacer).buildOnce":[[0]],"(*strings.Replacer).buildOnce$bound":[],"(*strings.appendSliceWriter).Write":[[0,1],[],[]],"(*strings.appendSliceWriter).WriteString":[[0,1],[],[]],"(*strings.asciiSet).contains":[[0],[0,1]],"(*strings.byteReplacer).Replace":[[0],[0,1]],"(*strings.byteReplacer).WriteString":[[0],[],[1]],"(*strings.byteStringReplacer).Replace":[[0],[1]],"(*strings.byteStringReplacer).WriteString":[[0],[],[1]],"(*strings.genericReplacer).Replace":[[0],[]],"(*strings.genericReplacer).WriteString":[[0],[],[]],"(*strings.genericReplacer).lookup":[[0],[0],[],[]],"(*strings.singleStringReplacer).Replace":[[0],[0,1]],"(*strings.singleStringReplacer).WriteString":[[0],[],[]],"(*strings.stringFinder).next":[[0],[0]],"(*strings.stringWriter).WriteString":[[0],[],[]],"(*strings.trieNode).add":[[0,1,2,3]],"(*struct{go/ast.Node}).End":[[0],[]],"(*struct{go/ast.Node}).Pos":[[0],[0]],"(*struct{go/types.Type}).String":[[0],[]],"(*struct{go/types.Type}).Underlying":[[0],[0]],"(*sync.Cond).Broadcast":[[0]],"(*sync.Cond).Signal":[[0]],"(*sync.Cond).Wait":[[0]],"(*sync.Map).Delete":[[0]],"(*sync.Map).Load":[[0],[],[]],"(*sync.Map).LoadAndDelete":[[0],[],[]],"(*sync.Map).LoadOrStore":[[0],[2],[]],"(*sync.Map).Range":[[0]],"(*sync.Map).Store":[[0]],"(*sync.Map).dirtyLocked":[[0]],"(*sync.Map).missLocked":[[0]],"(*sync.Mutex).Lock":[[0]],"(*sync.Mutex).TryLock":[[0],[]],"(*sync.Mutex).Unlock":[[0]],"(*sync.Mutex).lockSlow":[[0]],"(*sync.Mutex).unlockSlow":[[0]],"(*sync.Once).Do":[[0]],"(*sync.Once).doSlow":[[0]],"(*sync.Pool).Get":[[0],[0]],"(*sync.Pool).Put":[[0]],"(*sync.Pool).getSlow":[[0],[0,1]],"(*sync.Pool).pin":[[0],[0],[]],"(*sync.Pool).pinSlow":[[0],[0],[]],"(*sync.RWMutex).Lock":[[0]],"(*sync.RWMutex).RLock":[[0]],"(*sync.RWMutex).RLocker":[[0],[0]],"(*sync.RWMutex).RUnlock":[[0]],"(*sync.RWMutex).TryLock":[[0],[]],"(*sync.RWMutex).TryRLock":[[0],[]],"(*sync.RWMutex).Unlock":[[0]],"(*sync.RWMutex).rUnlockSlow":[[0]],"(*sync.WaitGroup).Add":[[0]],"(*sync.WaitGroup).Done":[[0]],"(*sync.WaitGroup).Wait":[[0]],"(*sync.WaitGroup).state":[[0],[0],[0]],"(*sync.copyChecker).check":[[0]],"(*sync.entry).delete":[[0],[],[]],"(*sync.entry).load":[[0],[],[]],"(*sync.entry).storeLocked":[[0]],"(*sync.entry).tryExpungeLocked":[[0],[]],"(*sync.entry).tryLoadOrStore":[[0],[1],[],[]],"(*sync.entry).tryStore":[[0],[]],"(*sync.entry).unexpungeLocked":[[0],[]],"(*sync.noCopy).Lock":[[0]],"(*sync.noCopy).Unlock":[[0]],"(*sync.poolChain).popHead":[[0],[0],[]],"(*sync.poolChain).popTail":[[0],[],[]],"(*sync.poolChain).pushHead":[[0]],"(*sync.poolChainElt).pack":[[0],[1,2]],"(*sync.poolChainElt).popHead":[[0],[0],[]],"(*sync.poolChainElt).popTail":[[0],[0],[]],"(*sync.poolChainElt).pushHead":[[0],[]],"(*sync.poolChainElt).unpack":[[0],[1],[1]],"(*sync.poolDequeue).pack":[[0],[1,2]],"(*sync.poolDequeue).popHead":[[0],[0],[]],"(*sync.poolDequeue).popTail":[[0],[0],[]],"(*sync.poolDequeue).pushHead":[[0],[]],"(*sync.poolDequeue).unpack":[[0],[1],[1]],"(*sync.rlocker).Lock":[[0]],"(*sync.rlocker).Unlock":[[0]],"(*sync/atomic.Bool).CompareAndSwap":[[0],[]],"(*sync/atomic.Bool).Load":[[0],[]],"(*sync/atomic.Bool).Store":[[0]],"(*sync/atomic.Bool).Swap":[[0],[]],"(*sync/atomic.Int32).Add":[[0],[]],"(*sync/atomic.Int32).CompareAndSwap":[[0],[]],"(*sync/atomic.Int32).Load":[[0],[]],"(*sync/atomic.Int32).Store":[[0]],"(*sync/atomic.Int32).Swap":[[0],[]],"(*sync/atomic.Int64).Add":[[0],[]],"(*sync/atomic.Int64).CompareAndSwap":[[0],[]],"(*sync/atomic.Int64).Load":[[0],[]],"(*sync/atomic.Int64).Store":[[0]],"(*sync/atomic.Int64).Swap":[[0],[]],"(*sync/atomic.Pointer[go/token.File]).CompareAndSwap[go/token.File]":[[],[]],"(*sync/atomic.Pointer[go/token.File]).Load[go/token.File]":[[],[]],"(*sync/atomic.Pointer[go/token.File]).Store[go/token.File]":[[]],"(*sync/atomic.Pointer[go/token.File]).Swap[go/token.File]":[[],[]],"(*sync/atomic.Uint32).Add":[[0],[]],"(*sync/atomic.Uint32).CompareAndSwap":[[0],[]],"(*sync/atomic.Uint32).Load":[[0],[]],"(*sync/atomic.Uint32).Store":[[0]],"(*sync/atomic.Uint32).Swap":[[0],[]],"(*sync/atomic.Uint64).Add":[[0],[]],"(*sync/atomic.Uint64).CompareAndSwap":[[0],[]],"(*sync/atomic.Uint64).Load":[[0],[]],"(*sync/atomic.Uint64).Store":[[0]],"(*sync/atomic.Uint64).Swap":[[0],[]],"(*sync/atomic.Uintptr).Add":[[0],[]],"(*sync/atomic.Uintptr).CompareAndSwap":[[0],[]],"(*sync/atomic.Uintptr).Load":[[0],[]],"(*sync/atomic.Uintptr).Store":[[0]],"(*sync/atomic.Uintptr).Swap":[[0],[]],"(*sync/atomic.Value).CompareAndSwap":[[0],[]],"(*sync/atomic.Value).Load":[[0],[]],"(*sync/atomic.Value).Store":[[0]],"(*sync/atomic.Value).Swap":[[0],[]],"(*sync/atomic.noCopy).Lock":[[0]],"(*sync/atomic.noCopy).Unlock":[[0]],"(*syscall.Cmsghdr).SetLen":[[0,1]],"(*syscall.Cmsghdr).data":[[0],[0,1]],"(*syscall.Errno).Error":[[0],[]],"(*syscall.Errno).Is":[[0],[]],"(*syscall.Errno).Temporary":[[0],[]],"(*syscall.Errno).Timeout":[[0],[]],"(*syscall.InterfaceAddrMessage).sockaddr":[[0],[0],[]],"(*syscall.InterfaceMessage).sockaddr":[[0],[0],[]],"(*syscall.InterfaceMulticastAddrMessage).sockaddr":[[0],[0],[]],"(*syscall.Iovec).SetLen":[[0,1]],"(*syscall.Msghdr).SetControllen":[[0,1]],"(*syscall.RouteMessage).sockaddr":[[0],[0],[]],"(*syscall.Signal).Signal":[[0]],"(*syscall.Signal).String":[[0],[]],"(*syscall.SockaddrDatalink).sockaddr":[[0],[0],[],[]],"(*syscall.SockaddrInet4).sockaddr":[[0],[0],[0],[]],"(*syscall.SockaddrInet6).sockaddr":[[0],[0],[0],[]],"(*syscall.SockaddrUnix).sockaddr":[[0],[0],[0],[]],"(*syscall.Timespec).Nano":[[0],[0]],"(*syscall.Timespec).Unix":[[0],[0],[0]],"(*syscall.Timeval).Nano":[[0],[0]],"(*syscall.Timeval).Unix":[[0],[0],[0]],"(*syscall.WaitStatus).Continued":[[0],[]],"(*syscall.WaitStatus).CoreDump":[[0],[]],"(*syscall.WaitStatus).ExitStatus":[[0],[]],"(*syscall.WaitStatus).Exited":[[0],[]],"(*syscall.WaitStatus).Signal":[[0],[]],"(*syscall.WaitStatus).Signaled":[[0],[]],"(*syscall.WaitStatus).StopSignal":[[0],[]],"(*syscall.WaitStatus).Stopped":[[0],[]],"(*syscall.WaitStatus).TrapCause":[[0],[]],"(*syscall.anyMessage).toRoutingMessage":[[0],[0,1]],"(*syscall.mmapper).Mmap":[[0],[],[]],"(*syscall.mmapper).Munmap":[[0],[]],"(*testing.B).Cleanup":[[0]],"(*testing.B).Error":[[0]],"(*testing.B).Errorf":[[0]],"(*testing.B).Fail":[[0]],"(*testing.B).FailNow":[[0]],"(*testing.B).Failed":[[0],[0]],"(*testing.B).Fatal":[[0]],"(*testing.B).Fatalf":[[0]],"(*testing.B).Helper":[[0]],"(*testing.B).Log":[[0]],"(*testing.B).Logf":[[0]],"(*testing.B).Name":[[0],[0]],"(*testing.B).ReportAllocs":[[0]],"(*testing.B).ReportMetric":[[0]],"(*testing.B).ResetTimer":[[0]],"(*testing.B).Run":[[0],[0,1,2]],"(*testing.B).Run$1":[],"(*testing.B).RunParallel":[[0]],"(*testing.B).RunParallel$1":[],"(*testing.B).SetBytes":[[0,1]],"(*testing.B).SetParallelism":[[0,1]],"(*testing.B).Setenv":[[0]],"(*testing.B).Skip":[[0]],"(*testing.B).SkipNow":[[0]],"(*testing.B).Skipf":[[0]],"(*testing.B).Skipped":[[0],[0]],"(*testing.B).StartTimer":[[0]],"(*testing.B).StopTimer":[[0]],"(*testing.B).TempDir":[[0],[]],"(*testing.B).add":[[0,1]],"(*testing.B).checkFuzzFn":[[0]],"(*testing.B).decorate":[[0],[1]],"(*testing.B).doBench":[[0],[0]],"(*testing.B).flushToParent":[[0,1]],"(*testing.B).frameSkip":[[0],[0]],"(*testing.B).launch":[[0]],"(*testing.B).launch$1":[],"(*testing.B).log":[[0]],"(*testing.B).logDepth":[[0]],"(*testing.B).private":[[0]],"(*testing.B).run":[[0]],"(*testing.B).run$1":[],"(*testing.B).run1":[[0],[]],"(*testing.B).run1$1":[],"(*testing.B).run1$1$1":[],"(*testing.B).runCleanup":[[0],[]],"(*testing.B).runN":[[0,1]],"(*testing.B).setRan":[[0]],"(*testing.B).trimOutput":[[0]],"(*testing.BenchmarkResult).AllocedBytesPerOp":[[0],[]],"(*testing.BenchmarkResult).AllocsPerOp":[[0],[]],"(*testing.BenchmarkResult).MemString":[[0],[]],"(*testing.BenchmarkResult).NsPerOp":[[0],[]],"(*testing.BenchmarkResult).String":[[0],[]],"(*testing.BenchmarkResult).mbPerSec":[[0],[]],"(*testing.F).Add":[[0,1]],"(*testing.F).Cleanup":[[0]],"(*testing.F).Error":[[0]],"(*testing.F).Errorf":[[0]],"(*testing.F).Fail":[[0]],"(*testing.F).FailNow":[[0]],"(*testing.F).Failed":[[0],[0]],"(*testing.F).Fatal":[[0]],"(*testing.F).Fatalf":[[0]],"(*testing.F).Fuzz":[[0]],"(*testing.F).Fuzz$1":[[]],"(*testing.F).Fuzz$1$1":[],"(*testing.F).Fuzz$2":[[]],"(*testing.F).Helper":[[0]],"(*testing.F).Log":[[0]],"(*testing.F).Logf":[[0]],"(*testing.F).Name":[[0],[0]],"(*testing.F).Setenv":[[0]],"(*testing.F).Skip":[[0]],"(*testing.F).SkipNow":[[0]],"(*testing.F).Skipf":[[0]],"(*testing.F).Skipped":[[0],[0]],"(*testing.F).TempDir":[[0],[]],"(*testing.F).checkFuzzFn":[[0]],"(*testing.F).decorate":[[0],[1]],"(*testing.F).flushToParent":[[0,1]],"(*testing.F).frameSkip":[[0],[0]],"(*testing.F).log":[[0]],"(*testing.F).logDepth":[[0]],"(*testing.F).private":[[0]],"(*testing.F).report":[[0]],"(*testing.F).runCleanup":[[0],[]],"(*testing.F).setRan":[[0]],"(*testing.InternalExample).processRunResult":[[0],[]],"(*testing.M).Run":[[0],[]],"(*testing.M).Run$1":[],"(*testing.M).Run$2":[],"(*testing.M).Run$3":[],"(*testing.M).after":[[0]],"(*testing.M).after$1":[],"(*testing.M).before":[[0]],"(*testing.M).startAlarm":[[0],[]],"(*testing.M).startAlarm$1":[],"(*testing.M).stopAlarm":[[0]],"(*testing.M).writeProfiles":[[0]],"(*testing.PB).Next":[[0],[]],"(*testing.T).Cleanup":[[0]],"(*testing.T).Deadline":[[0],[0],[0]],"(*testing.T).Error":[[0]],"(*testing.T).Errorf":[[0]],"(*testing.T).Fail":[[0]],"(*testing.T).FailNow":[[0]],"(*testing.T).Failed":[[0],[0]],"(*testing.T).Fatal":[[0]],"(*testing.T).Fatalf":[[0]],"(*testing.T).Helper":[[0]],"(*testing.T).Log":[[0]],"(*testing.T).Logf":[[0]],"(*testing.T).Name":[[0],[0]],"(*testing.T).Parallel":[[0]],"(*testing.T).Run":[[0],[0,1]],"(*testing.T).Setenv":[[0]],"(*testing.T).Skip":[[0]],"(*testing.T).SkipNow":[[0]],"(*testing.T).Skipf":[[0]],"(*testing.T).Skipped":[[0],[0]],"(*testing.T).TempDir":[[0],[]],"(*testing.T).checkFuzzFn":[[0]],"(*testing.T).decorate":[[0],[1]],"(*testing.T).flushToParent":[[0,1]],"(*testing.T).frameSkip":[[0],[0]],"(*testing.T).log":[[0]],"(*testing.T).logDepth":[[0]],"(*testing.T).private":[[0]],"(*testing.T).report":[[0]],"(*testing.T).runCleanup":[[0],[]],"(*testing.T).setRan":[[0]],"(*testing.alternationMatch).matches":[[0],[],[]],"(*testing.alternationMatch).verify":[[0],[]],"(*testing.benchContext).processBench":[[0]],"(*testing.chattyPrinter).Printf":[[0,1]],"(*testing.chattyPrinter).Updatef":[[0,1]],"(*testing.common).Cleanup":[[0]],"(*testing.common).Cleanup$1":[],"(*testing.common).Cleanup$1$1":[],"(*testing.common).Error":[[0]],"(*testing.common).Errorf":[[0]],"(*testing.common).Fail":[[0]],"(*testing.common).FailNow":[[0]],"(*testing.common).Failed":[[0],[0]],"(*testing.common).Fatal":[[0]],"(*testing.common).Fatalf":[[0]],"(*testing.common).Helper":[[0]],"(*testing.common).Log":[[0]],"(*testing.common).Logf":[[0]],"(*testing.common).Name":[[0],[0]],"(*testing.common).Setenv":[[0]],"(*testing.common).Setenv$1":[],"(*testing.common).Setenv$2":[],"(*testing.common).Skip":[[0]],"(*testing.common).SkipNow":[[0]],"(*testing.common).Skipf":[[0]],"(*testing.common).Skipped":[[0],[0]],"(*testing.common).TempDir":[[0],[]],"(*testing.common).TempDir$1":[[0]],"(*testing.common).TempDir$2":[],"(*testing.common).checkFuzzFn":[[0]],"(*testing.common).decorate":[[0],[1]],"(*testing.common).flushToParent":[[0,1]],"(*testing.common).frameSkip":[[0],[0]],"(*testing.common).frameSkip$1":[],"(*testing.common).log":[[0]],"(*testing.common).logDepth":[[0]],"(*testing.common).private":[[0]],"(*testing.common).runCleanup":[[0],[]],"(*testing.common).runCleanup$1":[],"(*testing.common).runCleanup$2":[],"(*testing.common).setRan":[[0]],"(*testing.discard).Write":[[0],[],[]],"(*testing.durationOrCountFlag).Set":[[0,1],[]],"(*testing.durationOrCountFlag).String":[[0],[]],"(*testing.fuzzResult).String":[[0],[]],"(*testing.indenter).Write":[[0],[],[]],"(*testing.matchStringOnly).CheckCorpus":[[0],[]],"(*testing.matchStringOnly).CoordinateFuzzing":[[0],[]],"(*testing.matchStringOnly).ImportPath":[[0],[]],"(*testing.matchStringOnly).MatchString":[[0],[1,2],[1]],"(*testing.matchStringOnly).ReadCorpus":[[0],[],[]],"(*testing.matchStringOnly).ResetCoverage":[[0]],"(*testing.matchStringOnly).RunFuzzWorker":[[0],[]],"(*testing.matchStringOnly).SetPanicOnExit0":[[0]],"(*testing.matchStringOnly).SnapshotCoverage":[[0]],"(*testing.matchStringOnly).StartCPUProfile":[[0],[]],"(*testing.matchStringOnly).StartTestLog":[[0]],"(*testing.matchStringOnly).StopCPUProfile":[[0]],"(*testing.matchStringOnly).StopTestLog":[[0],[]],"(*testing.matchStringOnly).WriteProfileTo":[[0],[]],"(*testing.matcher).clearSubNames":[[0]],"(*testing.matcher).fullName":[[0],[1,2],[],[]],"(*testing.matcher).unique":[[0],[1,2]],"(*testing.simpleMatch).matches":[[0],[],[]],"(*testing.simpleMatch).verify":[[0],[1]],"(*testing.testContext).release":[[0]],"(*testing.testContext).waitParallel":[[0]],"(*text/scanner.Position).IsValid":[[0],[0]],"(*text/scanner.Position).String":[[0],[]],"(*text/scanner.Scanner).Init":[[0,1],[0,1]],"(*text/scanner.Scanner).IsValid":[[0],[0]],"(*text/scanner.Scanner).Next":[[0],[0]],"(*text/scanner.Scanner).Peek":[[0],[0]],"(*text/scanner.Scanner).Pos":[[0],[0]],"(*text/scanner.Scanner).Scan":[[0],[0]],"(*text/scanner.Scanner).String":[[0],[0]],"(*text/scanner.Scanner).TokenText":[[0],[0]],"(*text/scanner.Scanner).digits":[[0],[0,1],[]],"(*text/scanner.Scanner).error":[[0]],"(*text/scanner.Scanner).errorf":[[0]],"(*text/scanner.Scanner).isIdentRune":[[0],[2]],"(*text/scanner.Scanner).next":[[0],[0]],"(*text/scanner.Scanner).scanChar":[[0]],"(*text/scanner.Scanner).scanComment":[[0],[0]],"(*text/scanner.Scanner).scanDigits":[[0],[0,1]],"(*text/scanner.Scanner).scanEscape":[[0],[0]],"(*text/scanner.Scanner).scanIdentifier":[[0],[0]],"(*text/scanner.Scanner).scanNumber":[[0],[],[0,1]],"(*text/scanner.Scanner).scanRawString":[[0]],"(*text/scanner.Scanner).scanString":[[0],[]],"(*text/tabwriter.Writer).Flush":[[0],[]],"(*text/tabwriter.Writer).Init":[[0],[0]],"(*text/tabwriter.Writer).Write":[[0,1],[],[]],"(*text/tabwriter.Writer).addLine":[[0]],"(*text/tabwriter.Writer).append":[[0,1]],"(*text/tabwriter.Writer).dump":[[0]],"(*text/tabwriter.Writer).endEscape":[[0]],"(*text/tabwriter.Writer).flush":[[0],[]],"(*text/tabwriter.Writer).flushNoDefers":[[0]],"(*text/tabwriter.Writer).format":[[0],[0,1]],"(*text/tabwriter.Writer).handlePanic":[[0]],"(*text/tabwriter.Writer).reset":[[0]],"(*text/tabwriter.Writer).startEscape":[[0]],"(*text/tabwriter.Writer).terminateCell":[[0,1],[]],"(*text/tabwriter.Writer).updateWidth":[[0]],"(*text/tabwriter.Writer).write0":[[0]],"(*text/tabwriter.Writer).writeLines":[[0],[0,1]],"(*text/tabwriter.Writer).writeN":[[0]],"(*text/tabwriter.Writer).writePadding":[[0]],"(*text/template.ExecError).Error":[[0],[]],"(*text/template.ExecError).Unwrap":[[0],[]],"(*text/template.Template).AddParseTree":[[0],[0,1,2],[]],"(*text/template.Template).Clone":[[0],[0],[]],"(*text/template.Template).Copy":[[0],[0]],"(*text/template.Template).DefinedTemplates":[[0],[]],"(*text/template.Template).Delims":[[0,1,2],[0,1,2]],"(*text/template.Template).ErrorContext":[[0],[],[]],"(*text/template.Template).Execute":[[0],[]],"(*text/template.Template).ExecuteTemplate":[[0],[0,2]],"(*text/template.Template).Funcs":[[0],[0]],"(*text/template.Template).Lookup":[[0],[0,1]],"(*text/template.Template).Name":[[0],[0]],"(*text/template.Template).New":[[0],[0,1]],"(*text/template.Template).Option":[[0],[0]],"(*text/template.Template).Parse":[[0],[0],[]],"(*text/template.Template).ParseFS":[[0],[0],[1,2]],"(*text/template.Template).ParseFiles":[[0],[0,1],[1]],"(*text/template.Template).ParseGlob":[[0],[0,1],[1]],"(*text/template.Template).Templates":[[0],[0]],"(*text/template.Template).action":[[0],[0]],"(*text/template.Template).add":[[0]],"(*text/template.Template).associate":[[0],[]],"(*text/template.Template).backup":[[0]],"(*text/template.Template).backup2":[[0]],"(*text/template.Template).backup3":[[0]],"(*text/template.Template).blockControl":[[0],[0]],"(*text/template.Template).breakControl":[[0],[0,1,2]],"(*text/template.Template).checkPipeline":[[0]],"(*text/template.Template).clearActionLine":[[0]],"(*text/template.Template).command":[[0],[0]],"(*text/template.Template).continueControl":[[0],[0,1,2]],"(*text/template.Template).copy":[[0],[0,1]],"(*text/template.Template).elseControl":[[0],[0]],"(*text/template.Template).endControl":[[0],[0]],"(*text/template.Template).error":[[0]],"(*text/template.Template).errorf":[[0]],"(*text/template.Template).execute":[[0],[]],"(*text/template.Template).expect":[[0],[0]],"(*text/template.Template).expectOneOf":[[0],[0]],"(*text/template.Template).hasFunction":[[0],[]],"(*text/template.Template).ifControl":[[0],[0]],"(*text/template.Template).init":[[0]],"(*text/template.Template).itemList":[[0],[0],[]],"(*text/template.Template).newAction":[[0],[0,1,2,3]],"(*text/template.Template).newBool":[[0],[0,1,2]],"(*text/template.Template).newBreak":[[0],[0,1,2]],"(*text/template.Template).newChain":[[0],[0,1,2]],"(*text/template.Template).newCommand":[[0],[0,1]],"(*text/template.Template).newComment":[[0],[0,1,2]],"(*text/template.Template).newContinue":[[0],[0,1,2]],"(*text/template.Template).newDot":[[0],[0,1]],"(*text/template.Template).newElse":[[0],[0,1,2]],"(*text/template.Template).newEnd":[[0],[0,1]],"(*text/template.Template).newField":[[0],[0,1,2]],"(*text/template.Template).newIf":[[0],[0,1,2,3,4,5]],"(*text/template.Template).newList":[[0],[0,1]],"(*text/template.Template).newNil":[[0],[0,1]],"(*text/template.Template).newNumber":[[0],[0,1,2],[2]],"(*text/template.Template).newPipeline":[[0],[0,1,2,3]],"(*text/template.Template).newRange":[[0],[0,1,2,3,4,5]],"(*text/template.Template).newString":[[0],[0,1,2,3]],"(*text/template.Template).newTemplate":[[0],[0,1,2,3,4]],"(*text/template.Template).newText":[[0],[0,1,2]],"(*text/template.Template).newVariable":[[0],[0,1,2]],"(*text/template.Template).newWith":[[0],[0,1,2,3,4,5]],"(*text/template.Template).next":[[0],[0]],"(*text/template.Template).nextNonSpace":[[0],[0]],"(*text/template.Template).operand":[[0],[0]],"(*text/template.Template).parse":[[0]],"(*text/template.Template).parseControl":[[0],[0],[0],[0],[0],[0]],"(*text/template.Template).parseDefinition":[[0]],"(*text/template.Template).parseTemplateName":[[0],[1]],"(*text/template.Template).peek":[[0],[0]],"(*text/template.Template).peekNonSpace":[[0],[0]],"(*text/template.Template).pipeline":[[0],[0]],"(*text/template.Template).popVars":[[0]],"(*text/template.Template).rangeControl":[[0],[0]],"(*text/template.Template).recover":[[0]],"(*text/template.Template).setOption":[[0]],"(*text/template.Template).startParse":[[0,1,2,3]],"(*text/template.Template).stopParse":[[0]],"(*text/template.Template).templateControl":[[0],[0]],"(*text/template.Template).term":[[0],[0]],"(*text/template.Template).textOrAction":[[0],[0]],"(*text/template.Template).unexpected":[[0]],"(*text/template.Template).useVar":[[0],[0,1,2]],"(*text/template.Template).withControl":[[0],[0]],"(*text/template.state).at":[[0,1]],"(*text/template.state).errorf":[[0]],"(*text/template.state).evalArg":[[0,3],[1,2,3]],"(*text/template.state).evalBool":[[0,2],[1]],"(*text/template.state).evalCall":[[0,6],[1,2,6,7]],"(*text/template.state).evalCall$1":[[0]],"(*text/template.state).evalChainNode":[[0,2],[]],"(*text/template.state).evalCommand":[[0,2],[0,1,2,3]],"(*text/template.state).evalComplex":[[0],[1]],"(*text/template.state).evalEmptyInterface":[[0,2],[1,2]],"(*text/template.state).evalField":[[0,4],[1,4,5,6]],"(*text/template.state).evalFieldChain":[[0,5],[1,2,5,6]],"(*text/template.state).evalFieldNode":[[0,2],[]],"(*text/template.state).evalFloat":[[0,2],[1]],"(*text/template.state).evalFunction":[[0,2],[]],"(*text/template.state).evalInteger":[[0,2],[1]],"(*text/template.state).evalPipeline":[[0,1,2],[0,1,2]],"(*text/template.state).evalString":[[0,2],[1]],"(*text/template.state).evalUnsignedInteger":[[0,2],[1]],"(*text/template.state).evalVariableNode":[[0,3],[0,1,3,4]],"(*text/template.state).idealConstant":[[0,1],[1]],"(*text/template.state).mark":[[0],[]],"(*text/template.state).notAFunction":[[0]],"(*text/template.state).pop":[[0]],"(*text/template.state).printValue":[[0,1]],"(*text/template.state).push":[[0,1,2]],"(*text/template.state).setTopVar":[[0]],"(*text/template.state).setVar":[[0]],"(*text/template.state).validateType":[[0],[1,2]],"(*text/template.state).varValue":[[0],[0]],"(*text/template.state).walk":[[0,1,2]],"(*text/template.state).walkIfOrWith":[[0,2,3]],"(*text/template.state).walkRange":[[0]],"(*text/template.state).walkRange$1":[],"(*text/template.state).walkRange$2":[],"(*text/template.state).walkRange$2$1":[],"(*text/template.state).walkTemplate":[[0,1,2]],"(*text/template.state).writeError":[[0]],"(*text/template/parse.ActionNode).Copy":[[0],[0]],"(*text/template/parse.ActionNode).Position":[[0],[0]],"(*text/template/parse.ActionNode).String":[[0],[]],"(*text/template/parse.ActionNode).Type":[[0],[0]],"(*text/template/parse.ActionNode).tree":[[0],[0]],"(*text/template/parse.ActionNode).writeTo":[[0]],"(*text/template/parse.BoolNode).Copy":[[0],[0]],"(*text/template/parse.BoolNode).Position":[[0],[0]],"(*text/template/parse.BoolNode).String":[[0],[]],"(*text/template/parse.BoolNode).Type":[[0],[0]],"(*text/template/parse.BoolNode).tree":[[0],[0]],"(*text/template/parse.BoolNode).writeTo":[[0]],"(*text/template/parse.BranchNode).Copy":[[0],[0]],"(*text/template/parse.BranchNode).Position":[[0],[0]],"(*text/template/parse.BranchNode).String":[[0],[]],"(*text/template/parse.BranchNode).Type":[[0],[0]],"(*text/template/parse.BranchNode).tree":[[0],[0]],"(*text/template/parse.BranchNode).writeTo":[[0]],"(*text/template/parse.BreakNode).Copy":[[0],[0]],"(*text/template/parse.BreakNode).Position":[[0],[0]],"(*text/template/parse.BreakNode).String":[[0],[]],"(*text/template/parse.BreakNode).Type":[[0],[0]],"(*text/template/parse.BreakNode).tree":[[0],[0]],"(*text/template/parse.BreakNode).writeTo":[[0]],"(*text/template/parse.ChainNode).Add":[[0,1]],"(*text/template/parse.ChainNode).Copy":[[0],[0]],"(*text/template/parse.ChainNode).Position":[[0],[0]],"(*text/template/parse.ChainNode).String":[[0],[]],"(*text/template/parse.ChainNode).Type":[[0],[0]],"(*text/template/parse.ChainNode).tree":[[0],[0]],"(*text/template/parse.ChainNode).writeTo":[[0]],"(*text/template/parse.CommandNode).Copy":[[0],[0]],"(*text/template/parse.CommandNode).Position":[[0],[0]],"(*text/template/parse.CommandNode).String":[[0],[]],"(*text/template/parse.CommandNode).Type":[[0],[0]],"(*text/template/parse.CommandNode).append":[[0,1]],"(*text/template/parse.CommandNode).tree":[[0],[0]],"(*text/template/parse.CommandNode).writeTo":[[0]],"(*text/template/parse.CommentNode).Copy":[[0],[0]],"(*text/template/parse.CommentNode).Position":[[0],[0]],"(*text/template/parse.CommentNode).String":[[0],[]],"(*text/template/parse.CommentNode).Type":[[0],[0]],"(*text/template/parse.CommentNode).tree":[[0],[0]],"(*text/template/parse.CommentNode).writeTo":[[0]],"(*text/template/parse.ContinueNode).Copy":[[0],[0]],"(*text/template/parse.ContinueNode).Position":[[0],[0]],"(*text/template/parse.ContinueNode).String":[[0],[]],"(*text/template/parse.ContinueNode).Type":[[0],[0]],"(*text/template/parse.ContinueNode).tree":[[0],[0]],"(*text/template/parse.ContinueNode).writeTo":[[0]],"(*text/template/parse.DotNode).Copy":[[0],[0]],"(*text/template/parse.DotNode).Position":[[0],[0]],"(*text/template/parse.DotNode).String":[[0],[]],"(*text/template/parse.DotNode).Type":[[0],[]],"(*text/template/parse.DotNode).tree":[[0],[0]],"(*text/template/parse.DotNode).writeTo":[[0]],"(*text/template/parse.FieldNode).Copy":[[0],[0]],"(*text/template/parse.FieldNode).Position":[[0],[0]],"(*text/template/parse.FieldNode).String":[[0],[]],"(*text/template/parse.FieldNode).Type":[[0],[0]],"(*text/template/parse.FieldNode).tree":[[0],[0]],"(*text/template/parse.FieldNode).writeTo":[[0]],"(*text/template/parse.IdentifierNode).Copy":[[0],[0]],"(*text/template/parse.IdentifierNode).Position":[[0],[0]],"(*text/template/parse.IdentifierNode).SetPos":[[0,1],[0,1]],"(*text/template/parse.IdentifierNode).SetTree":[[0,1],[0,1]],"(*text/template/parse.IdentifierNode).String":[[0],[0]],"(*text/template/parse.IdentifierNode).Type":[[0],[0]],"(*text/template/parse.IdentifierNode).tree":[[0],[0]],"(*text/template/parse.IdentifierNode).writeTo":[[0]],"(*text/template/parse.IfNode).Copy":[[0],[0]],"(*text/template/parse.IfNode).Position":[[0],[0]],"(*text/template/parse.IfNode).String":[[0],[]],"(*text/template/parse.IfNode).Type":[[0],[0]],"(*text/template/parse.IfNode).tree":[[0],[0]],"(*text/template/parse.IfNode).writeTo":[[0]],"(*text/template/parse.ListNode).Copy":[[0],[0]],"(*text/template/parse.ListNode).CopyList":[[0],[0]],"(*text/template/parse.ListNode).Position":[[0],[0]],"(*text/template/parse.ListNode).String":[[0],[]],"(*text/template/parse.ListNode).Type":[[0],[0]],"(*text/template/parse.ListNode).append":[[0,1]],"(*text/template/parse.ListNode).tree":[[0],[0]],"(*text/template/parse.ListNode).writeTo":[[0]],"(*text/template/parse.NilNode).Copy":[[0],[0]],"(*text/template/parse.NilNode).Position":[[0],[0]],"(*text/template/parse.NilNode).String":[[0],[]],"(*text/template/parse.NilNode).Type":[[0],[]],"(*text/template/parse.NilNode).tree":[[0],[0]],"(*text/template/parse.NilNode).writeTo":[[0]],"(*text/template/parse.NodeType).Type":[[0],[]],"(*text/template/parse.NumberNode).Copy":[[0],[0]],"(*text/template/parse.NumberNode).Position":[[0],[0]],"(*text/template/parse.NumberNode).String":[[0],[0]],"(*text/template/parse.NumberNode).Type":[[0],[0]],"(*text/template/parse.NumberNode).simplifyComplex":[[0]],"(*text/template/parse.NumberNode).tree":[[0],[0]],"(*text/template/parse.NumberNode).writeTo":[[0]],"(*text/template/parse.PipeNode).Copy":[[0],[0]],"(*text/template/parse.PipeNode).CopyPipe":[[0],[0]],"(*text/template/parse.PipeNode).Position":[[0],[0]],"(*text/template/parse.PipeNode).String":[[0],[]],"(*text/template/parse.PipeNode).Type":[[0],[0]],"(*text/template/parse.PipeNode).append":[[0,1]],"(*text/template/parse.PipeNode).tree":[[0],[0]],"(*text/template/parse.PipeNode).writeTo":[[0]],"(*text/template/parse.Pos).Position":[[0],[]],"(*text/template/parse.RangeNode).Copy":[[0],[0]],"(*text/template/parse.RangeNode).Position":[[0],[0]],"(*text/template/parse.RangeNode).String":[[0],[]],"(*text/template/parse.RangeNode).Type":[[0],[0]],"(*text/template/parse.RangeNode).tree":[[0],[0]],"(*text/template/parse.RangeNode).writeTo":[[0]],"(*text/template/parse.StringNode).Copy":[[0],[0]],"(*text/template/parse.StringNode).Position":[[0],[0]],"(*text/template/parse.StringNode).String":[[0],[0]],"(*text/template/parse.StringNode).Type":[[0],[0]],"(*text/template/parse.StringNode).tree":[[0],[0]],"(*text/template/parse.StringNode).writeTo":[[0]],"(*text/template/parse.TemplateNode).Copy":[[0],[0]],"(*text/template/parse.TemplateNode).Position":[[0],[0]],"(*text/template/parse.TemplateNode).String":[[0],[]],"(*text/template/parse.TemplateNode).Type":[[0],[0]],"(*text/template/parse.TemplateNode).tree":[[0],[0]],"(*text/template/parse.TemplateNode).writeTo":[[0]],"(*text/template/parse.TextNode).Copy":[[0],[0]],"(*text/template/parse.TextNode).Position":[[0],[0]],"(*text/template/parse.TextNode).String":[[0],[]],"(*text/template/parse.TextNode).Type":[[0],[0]],"(*text/template/parse.TextNode).tree":[[0],[0]],"(*text/template/parse.TextNode).writeTo":[[0]],"(*text/template/parse.Tree).Copy":[[0],[0]],"(*text/template/parse.Tree).ErrorContext":[[0],[],[]],"(*text/template/parse.Tree).Parse":[[0],[0],[]],"(*text/template/parse.Tree).action":[[0],[0]],"(*text/template/parse.Tree).add":[[0]],"(*text/template/parse.Tree).backup":[[0]],"(*text/template/parse.Tree).backup2":[[0]],"(*text/template/parse.Tree).backup3":[[0]],"(*text/template/parse.Tree).blockControl":[[0],[0]],"(*text/template/parse.Tree).breakControl":[[0],[0,1,2]],"(*text/template/parse.Tree).checkPipeline":[[0]],"(*text/template/parse.Tree).clearActionLine":[[0]],"(*text/template/parse.Tree).command":[[0],[0]],"(*text/template/parse.Tree).continueControl":[[0],[0,1,2]],"(*text/template/parse.Tree).elseControl":[[0],[0]],"(*text/template/parse.Tree).endControl":[[0],[0]],"(*text/template/parse.Tree).error":[[0]],"(*text/template/parse.Tree).errorf":[[0]],"(*text/template/parse.Tree).expect":[[0],[0]],"(*text/template/parse.Tree).expectOneOf":[[0],[0]],"(*text/template/parse.Tree).hasFunction":[[0],[]],"(*text/template/parse.Tree).ifControl":[[0],[0]],"(*text/template/parse.Tree).itemList":[[0],[0],[]],"(*text/template/parse.Tree).newAction":[[0],[0,1,2,3]],"(*text/template/parse.Tree).newBool":[[0],[0,1,2]],"(*text/template/parse.Tree).newBreak":[[0],[0,1,2]],"(*text/template/parse.Tree).newChain":[[0],[0,1,2]],"(*text/template/parse.Tree).newCommand":[[0],[0,1]],"(*text/template/parse.Tree).newComment":[[0],[0,1,2]],"(*text/template/parse.Tree).newContinue":[[0],[0,1,2]],"(*text/template/parse.Tree).newDot":[[0],[0,1]],"(*text/template/parse.Tree).newElse":[[0],[0,1,2]],"(*text/template/parse.Tree).newEnd":[[0],[0,1]],"(*text/template/parse.Tree).newField":[[0],[0,1,2]],"(*text/template/parse.Tree).newIf":[[0],[0,1,2,3,4,5]],"(*text/template/parse.Tree).newList":[[0],[0,1]],"(*text/template/parse.Tree).newNil":[[0],[0,1]],"(*text/template/parse.Tree).newNumber":[[0],[0,1,2],[2]],"(*text/template/parse.Tree).newPipeline":[[0],[0,1,2,3]],"(*text/template/parse.Tree).newRange":[[0],[0,1,2,3,4,5]],"(*text/template/parse.Tree).newString":[[0],[0,1,2,3]],"(*text/template/parse.Tree).newTemplate":[[0],[0,1,2,3,4]],"(*text/template/parse.Tree).newText":[[0],[0,1,2]],"(*text/template/parse.Tree).newVariable":[[0],[0,1,2]],"(*text/template/parse.Tree).newWith":[[0],[0,1,2,3,4,5]],"(*text/template/parse.Tree).next":[[0],[0]],"(*text/template/parse.Tree).nextNonSpace":[[0],[0]],"(*text/template/parse.Tree).operand":[[0],[0]],"(*text/template/parse.Tree).parse":[[0]],"(*text/template/parse.Tree).parseControl":[[0],[0],[0],[0],[0],[0]],"(*text/template/parse.Tree).parseDefinition":[[0]],"(*text/template/parse.Tree).parseTemplateName":[[0],[1]],"(*text/template/parse.Tree).peek":[[0],[0]],"(*text/template/parse.Tree).peekNonSpace":[[0],[0]],"(*text/template/parse.Tree).pipeline":[[0],[0]],"(*text/template/parse.Tree).popVars":[[0]],"(*text/template/parse.Tree).rangeControl":[[0],[0]],"(*text/template/parse.Tree).recover":[[0]],"(*text/template/parse.Tree).startParse":[[0,1,2,3]],"(*text/template/parse.Tree).stopParse":[[0]],"(*text/template/parse.Tree).templateControl":[[0],[0]],"(*text/template/parse.Tree).term":[[0],[0]],"(*text/template/parse.Tree).textOrAction":[[0],[0]],"(*text/template/parse.Tree).unexpected":[[0]],"(*text/template/parse.Tree).useVar":[[0],[0,1,2]],"(*text/template/parse.Tree).withControl":[[0],[0]],"(*text/template/parse.VariableNode).Copy":[[0],[0]],"(*text/template/parse.VariableNode).Position":[[0],[0]],"(*text/template/parse.VariableNode).String":[[0],[]],"(*text/template/parse.VariableNode).Type":[[0],[0]],"(*text/template/parse.VariableNode).tree":[[0],[0]],"(*text/template/parse.VariableNode).writeTo":[[0]],"(*text/template/parse.WithNode).Copy":[[0],[0]],"(*text/template/parse.WithNode).Position":[[0],[0]],"(*text/template/parse.WithNode).String":[[0],[]],"(*text/template/parse.WithNode).Type":[[0],[0]],"(*text/template/parse.WithNode).tree":[[0],[0]],"(*text/template/parse.WithNode).writeTo":[[0]],"(*text/template/parse.elseNode).Copy":[[0],[0]],"(*text/template/parse.elseNode).Position":[[0],[0]],"(*text/template/parse.elseNode).String":[[0],[]],"(*text/template/parse.elseNode).Type":[[0],[]],"(*text/template/parse.elseNode).tree":[[0],[0]],"(*text/template/parse.elseNode).writeTo":[[0]],"(*text/template/parse.endNode).Copy":[[0],[0]],"(*text/template/parse.endNode).Position":[[0],[0]],"(*text/template/parse.endNode).String":[[0],[]],"(*text/template/parse.endNode).Type":[[0],[0]],"(*text/template/parse.endNode).tree":[[0],[0]],"(*text/template/parse.endNode).writeTo":[[0]],"(*text/template/parse.item).String":[[0],[]],"(*text/template/parse.lexer).accept":[[0],[]],"(*text/template/parse.lexer).acceptRun":[[0]],"(*text/template/parse.lexer).atRightDelim":[[0],[],[]],"(*text/template/parse.lexer).atTerminator":[[0],[0]],"(*text/template/parse.lexer).backup":[[0]],"(*text/template/parse.lexer).drain":[[0]],"(*text/template/parse.lexer).emit":[[0]],"(*text/template/parse.lexer).errorf":[[0],[]],"(*text/template/parse.lexer).ignore":[[0]],"(*text/template/parse.lexer).next":[[0],[0]],"(*text/template/parse.lexer).nextItem":[[0],[0]],"(*text/template/parse.lexer).peek":[[0],[0]],"(*text/template/parse.lexer).run":[[0]],"(*text/template/parse.lexer).scanNumber":[[0],[]],"(*time.Duration).Abs":[[0],[]],"(*time.Duration).Hours":[[0],[]],"(*time.Duration).Microseconds":[[0],[]],"(*time.Duration).Milliseconds":[[0],[]],"(*time.Duration).Minutes":[[0],[]],"(*time.Duration).Nanoseconds":[[0],[]],"(*time.Duration).Round":[[0],[1]],"(*time.Duration).Seconds":[[0],[]],"(*time.Duration).String":[[0],[]],"(*time.Duration).Truncate":[[0],[1]],"(*time.Location).String":[[0],[0]],"(*time.Location).firstZoneUsed":[[0],[]],"(*time.Location).get":[[0],[0]],"(*time.Location).lookup":[[0],[0],[0],[0,1],[0,1],[0]],"(*time.Location).lookupFirstZone":[[0],[0]],"(*time.Location).lookupName":[[0],[0],[]],"(*time.Month).String":[[0],[]],"(*time.ParseError).Error":[[0],[0]],"(*time.Ticker).Reset":[[0]],"(*time.Ticker).Stop":[[0]],"(*time.Time).Add":[[0],[1]],"(*time.Time).AddDate":[[0],[1,2,3]],"(*time.Time).After":[[0],[1]],"(*time.Time).AppendFormat":[[0],[1]],"(*time.Time).Before":[[0],[1]],"(*time.Time).Clock":[[0],[],[],[]],"(*time.Time).Date":[[0],[],[],[]],"(*time.Time).Day":[[0],[]],"(*time.Time).Equal":[[0],[1]],"(*time.Time).Format":[[0],[]],"(*time.Time).GoString":[[0],[]],"(*time.Time).GobDecode":[[0],[]],"(*time.Time).GobEncode":[[0],[],[]],"(*time.Time).Hour":[[0],[]],"(*time.Time).ISOWeek":[[0],[],[]],"(*time.Time).In":[[0],[1]],"(*time.Time).IsDST":[[0],[]],"(*time.Time).IsZero":[[0],[]],"(*time.Time).Local":[[0],[]],"(*time.Time).Location":[[0],[]],"(*time.Time).MarshalBinary":[[0],[],[]],"(*time.Time).MarshalJSON":[[0],[],[]],"(*time.Time).MarshalText":[[0],[],[]],"(*time.Time).Minute":[[0],[]],"(*time.Time).Month":[[0],[]],"(*time.Time).Nanosecond":[[0],[]],"(*time.Time).Round":[[0],[1]],"(*time.Time).Second":[[0],[]],"(*time.Time).String":[[0],[]],"(*time.Time).Sub":[[0],[1]],"(*time.Time).Truncate":[[0],[1]],"(*time.Time).UTC":[[0],[]],"(*time.Time).Unix":[[0],[]],"(*time.Time).UnixMicro":[[0],[]],"(*time.Time).UnixMilli":[[0],[]],"(*time.Time).UnixNano":[[0],[]],"(*time.Time).UnmarshalBinary":[[0],[]],"(*time.Time).UnmarshalJSON":[[0,1],[1]],"(*time.Time).UnmarshalText":[[0,1],[1]],"(*time.Time).Weekday":[[0],[]],"(*time.Time).Year":[[0],[]],"(*time.Time).YearDay":[[0],[]],"(*time.Time).Zone":[[0],[],[]],"(*time.Time).ZoneBounds":[[0],[],[]],"(*time.Time).abs":[[0],[]],"(*time.Time).addSec":[[0,1]],"(*time.Time).date":[[0],[],[],[],[]],"(*time.Time).locabs":[[0],[],[],[]],"(*time.Time).mono":[[0],[0]],"(*time.Time).nsec":[[0],[0]],"(*time.Time).sec":[[0],[0]],"(*time.Time).setLoc":[[0,1]],"(*time.Time).setMono":[[0,1]],"(*time.Time).stripMono":[[0]],"(*time.Time).unixSec":[[0],[0]],"(*time.Timer).Reset":[[0],[]],"(*time.Timer).Stop":[[0],[]],"(*time.Weekday).String":[[0],[]],"(*time.dataIO).big4":[[0],[0],[]],"(*time.dataIO).big8":[[0],[0],[]],"(*time.dataIO).byte":[[0],[0],[]],"(*time.dataIO).read":[[0],[0]],"(*time.dataIO).rest":[[0],[0]],"(*time.fileSizeError).Error":[[0],[]],"(*unicode.SpecialCase).ToLower":[[0],[1]],"(*unicode.SpecialCase).ToTitle":[[0],[1]],"(*unicode.SpecialCase).ToUpper":[[0],[1]],"(*vendor/golang.org/x/crypto/chacha20.Cipher).SetCounter":[[0,1]],"(*vendor/golang.org/x/crypto/chacha20.Cipher).XORKeyStream":[[0]],"(*vendor/golang.org/x/crypto/chacha20.Cipher).xorKeyStreamBlocks":[[0]],"(*vendor/golang.org/x/crypto/chacha20.Cipher).xorKeyStreamBlocksGeneric":[[0]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).NonceSize":[[0],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).Open":[[0],[1],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).Overhead":[[0],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).Seal":[[0],[1]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).open":[[0],[1],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).openGeneric":[[0],[1],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).seal":[[0],[1]],"(*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305).sealGeneric":[[0],[1]],"(*vendor/golang.org/x/crypto/chacha20poly1305.xchacha20poly1305).NonceSize":[[0],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.xchacha20poly1305).Open":[[0],[1],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.xchacha20poly1305).Overhead":[[0],[]],"(*vendor/golang.org/x/crypto/chacha20poly1305.xchacha20poly1305).Seal":[[0],[1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1BigInt":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1BigInt$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1BitString":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1BitString$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1Boolean":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1Boolean$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1Enum":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1GeneralizedTime":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1GeneralizedTime$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1Int64":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1Int64WithTag":[[0,2]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1NULL":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1ObjectIdentifier":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1ObjectIdentifier$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1OctetString":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1OctetString$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1UTCTime":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1UTCTime$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1Uint64":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddASN1Uint64$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddBytes":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint16":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint16LengthPrefixed":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint24":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint24LengthPrefixed":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint32":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint32LengthPrefixed":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint8":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddUint8LengthPrefixed":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).AddValue":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).Bytes":[[0],[0],[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).BytesOrPanic":[[0],[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).MarshalASN1":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).SetError":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).Unwrite":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).add":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).addASN1Signed":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).addASN1Signed$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).addBase128Int":[[0,1]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).addLengthPrefixed":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).callContinuation":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).callContinuation$1":[],"(*vendor/golang.org/x/crypto/cryptobyte.Builder).flushChild":[[0]],"(*vendor/golang.org/x/crypto/cryptobyte.String).CopyBytes":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).Empty":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).PeekASN1Tag":[[0],[1]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1BitString":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1BitStringAsBytes":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1Boolean":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1Bytes":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1Element":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1Enum":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1GeneralizedTime":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1Int64WithTag":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1Integer":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1ObjectIdentifier":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadASN1UTCTime":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadAnyASN1":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadAnyASN1Element":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadBytes":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadOptionalASN1":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadOptionalASN1Boolean":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadOptionalASN1Integer":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadOptionalASN1OctetString":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadUint16":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadUint16LengthPrefixed":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadUint24":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadUint24LengthPrefixed":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadUint32":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadUint8":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).ReadUint8LengthPrefixed":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).Skip":[[0],[0]],"(*vendor/golang.org/x/crypto/cryptobyte.String).SkipASN1":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).SkipOptionalASN1":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).read":[[0],[0]],"(*vendor/golang.org/x/crypto/cryptobyte.String).readASN1":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).readASN1BigInt":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).readASN1Int64":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).readASN1Uint64":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).readBase128Int":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).readLengthPrefixed":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte.String).readUnsigned":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte/asn1.Tag).Constructed":[[0],[]],"(*vendor/golang.org/x/crypto/cryptobyte/asn1.Tag).ContextSpecific":[[0],[]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Absolute":[[0,1],[0,1]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Add":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Bytes":[[0],[]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Equal":[[0],[]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Invert":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).IsNegative":[[0],[]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Mult32":[[0,1,2],[0,1,2]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Multiply":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Negate":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).One":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Pow22523":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Select":[[0,1,2,3],[0,1,2,3]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Set":[[0,1],[0,1]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).SetBytes":[[0,1],[0,1]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).SqrtRatio":[[0],[0],[]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Square":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Subtract":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Swap":[[0,1,2]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).Zero":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).bytes":[[0],[1]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).carryPropagate":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).carryPropagateGeneric":[[0],[0]],"(*vendor/golang.org/x/crypto/curve25519/internal/field.Element).reduce":[[0],[0]],"(*vendor/golang.org/x/crypto/hkdf.hkdf).Read":[[0],[],[]],"(*vendor/golang.org/x/crypto/internal/poly1305.MAC).Size":[[0],[]],"(*vendor/golang.org/x/crypto/internal/poly1305.MAC).Sum":[[0],[1]],"(*vendor/golang.org/x/crypto/internal/poly1305.MAC).Verify":[[0],[1]],"(*vendor/golang.org/x/crypto/internal/poly1305.MAC).Write":[[0],[],[]],"(*vendor/golang.org/x/crypto/internal/poly1305.mac).Sum":[[0]],"(*vendor/golang.org/x/crypto/internal/poly1305.mac).Write":[[0],[],[]],"(*vendor/golang.org/x/crypto/internal/poly1305.macGeneric).Sum":[[0]],"(*vendor/golang.org/x/crypto/internal/poly1305.macGeneric).Write":[[0],[],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.AAAAResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.AAAAResource).pack":[[0],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.AAAAResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.AResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.AResource).pack":[[0],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.AResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).AAAAResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).AResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).CNAMEResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).EnableCompression":[[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).Finish":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).MXResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).NSResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).OPTResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).PTRResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).Question":[[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).SOAResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).SRVResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).StartAdditionals":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).StartAnswers":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).StartAuthorities":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).StartQuestions":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).TXTResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).UnknownResource":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).checkResourceSection":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).incrementSectionCount":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Builder).startCheck":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.CNAMEResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.CNAMEResource).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.CNAMEResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Class).GoString":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Class).String":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Header).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.Header).pack":[[0],[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.MXResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.MXResource).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.MXResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Message).AppendPack":[[0],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Message).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.Message).Pack":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Message).Unpack":[[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Message).pack":[[0],[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.NSResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.NSResource).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.NSResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Name).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.Name).String":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Name).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Name).unpack":[[0],[1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Name).unpackCompressed":[[0],[1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.OPTResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.OPTResource).pack":[[0],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.OPTResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.OpCode).GoString":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Option).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.PTRResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.PTRResource).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.PTRResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AAAAResource":[[0],[],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AResource":[[0],[],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).Additional":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AdditionalHeader":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AllAdditionals":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AllAnswers":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AllAuthorities":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AllQuestions":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).Answer":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AnswerHeader":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).Authority":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).AuthorityHeader":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).CNAMEResource":[[0],[],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).MXResource":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).NSResource":[[0],[],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).OPTResource":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).PTRResource":[[0],[],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).Question":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SOAResource":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SRVResource":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipAdditional":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipAllAdditionals":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipAllAnswers":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipAllAuthorities":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipAllQuestions":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipAnswer":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipAuthority":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).SkipQuestion":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).Start":[[0,1],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).TXTResource":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).UnknownResource":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).checkAdvance":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).resource":[[0],[0],[1]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).resourceHeader":[[0],[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Parser).skipResource":[[0],[1]],"(*vendor/golang.org/x/net/dns/dnsmessage.Question).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.Question).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.RCode).GoString":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.RCode).String":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Resource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.Resource).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader).DNSSECAllowed":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader).ExtendedRCode":[[0],[0,1]],"(*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader).SetEDNS0":[[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader).fixLen":[[0,3],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader).pack":[[0],[0,1,2],[],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader).unpack":[[0,1],[1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.SOAResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.SOAResource).pack":[[0],[0,1,2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.SOAResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.SRVResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.SRVResource).pack":[[0],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.SRVResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.TXTResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.TXTResource).pack":[[0],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.TXTResource).realType":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Type).GoString":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.Type).String":[[0],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.UnknownResource).GoString":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.UnknownResource).pack":[[0],[0,1],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.UnknownResource).realType":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.header).count":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.header).header":[[0],[0]],"(*vendor/golang.org/x/net/dns/dnsmessage.header).pack":[[0],[0,1]],"(*vendor/golang.org/x/net/dns/dnsmessage.header).unpack":[[0,1],[2],[]],"(*vendor/golang.org/x/net/dns/dnsmessage.nestedError).Error":[[0],[0]],"(*vendor/golang.org/x/net/http/httpproxy.Config).ProxyFunc":[[0],[]],"(*vendor/golang.org/x/net/http/httpproxy.allMatch).match":[[0],[]],"(*vendor/golang.org/x/net/http/httpproxy.cidrMatch).match":[[0],[]],"(*vendor/golang.org/x/net/http/httpproxy.config).init":[[0]],"(*vendor/golang.org/x/net/http/httpproxy.config).proxyForURL":[[0],[0],[]],"(*vendor/golang.org/x/net/http/httpproxy.config).proxyForURL$bound":[[],[]],"(*vendor/golang.org/x/net/http/httpproxy.config).useProxy":[[0],[]],"(*vendor/golang.org/x/net/http/httpproxy.domainMatch).match":[[0],[2]],"(*vendor/golang.org/x/net/http/httpproxy.ipMatch).match":[[0],[2]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).Close":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).DecodeFull":[[0],[],[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).DecodeFull$1":[],"(*vendor/golang.org/x/net/http2/hpack.Decoder).DecodeFull$2":[],"(*vendor/golang.org/x/net/http2/hpack.Decoder).EmitEnabled":[[0],[0]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).SetAllowedMaxDynamicTableSize":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).SetEmitEnabled":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).SetEmitFunc":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).SetMaxDynamicTableSize":[[0]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).SetMaxStringLength":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).Write":[[0,1],[],[0]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).at":[[0],[0],[]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).callEmit":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).maxTableIndex":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).parseDynamicTableSizeUpdate":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).parseFieldIndexed":[[0],[0]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).parseFieldLiteral":[[0],[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).parseHeaderFieldRepr":[[0],[0]],"(*vendor/golang.org/x/net/http2/hpack.Decoder).readString":[[0],[1],[1],[]],"(*vendor/golang.org/x/net/http2/hpack.DecodingError).Error":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.Encoder).SetMaxDynamicTableSize":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Encoder).SetMaxDynamicTableSizeLimit":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Encoder).WriteField":[[0,1],[0,1]],"(*vendor/golang.org/x/net/http2/hpack.Encoder).searchTable":[[0],[0,1],[]],"(*vendor/golang.org/x/net/http2/hpack.Encoder).shouldIndex":[[0],[0]],"(*vendor/golang.org/x/net/http2/hpack.HeaderField).IsPseudo":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.HeaderField).Size":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.HeaderField).String":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.InvalidIndexError).Error":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.dynamicTable).add":[[0]],"(*vendor/golang.org/x/net/http2/hpack.dynamicTable).evict":[[0]],"(*vendor/golang.org/x/net/http2/hpack.dynamicTable).setMaxSize":[[0]],"(*vendor/golang.org/x/net/http2/hpack.headerFieldTable).addEntry":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.headerFieldTable).evictOldest":[[0,1]],"(*vendor/golang.org/x/net/http2/hpack.headerFieldTable).idToIndex":[[0],[0,1]],"(*vendor/golang.org/x/net/http2/hpack.headerFieldTable).init":[[0]],"(*vendor/golang.org/x/net/http2/hpack.headerFieldTable).len":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.headerFieldTable).search":[[0],[0,1],[]],"(*vendor/golang.org/x/net/http2/hpack.indexType).indexed":[[0],[]],"(*vendor/golang.org/x/net/http2/hpack.indexType).sensitive":[[0],[]],"(*vendor/golang.org/x/net/idna.Profile).String":[[0],[]],"(*vendor/golang.org/x/net/idna.Profile).ToASCII":[[0],[1],[1]],"(*vendor/golang.org/x/net/idna.Profile).ToUnicode":[[0],[1],[1]],"(*vendor/golang.org/x/net/idna.Profile).process":[[0],[1],[1]],"(*vendor/golang.org/x/net/idna.Profile).simplify":[[0],[1]],"(*vendor/golang.org/x/net/idna.Profile).validateLabel":[[0],[1]],"(*vendor/golang.org/x/net/idna.idnaTrie).lookup":[[0],[1],[]],"(*vendor/golang.org/x/net/idna.idnaTrie).lookupString":[[0],[1],[]],"(*vendor/golang.org/x/net/idna.idnaTrie).lookupStringUnsafe":[[0],[1]],"(*vendor/golang.org/x/net/idna.idnaTrie).lookupUnsafe":[[0],[1]],"(*vendor/golang.org/x/net/idna.idnaTrie).lookupValue":[[0],[2]],"(*vendor/golang.org/x/net/idna.labelError).Error":[[0],[]],"(*vendor/golang.org/x/net/idna.labelError).code":[[0],[]],"(*vendor/golang.org/x/net/idna.labelIter).done":[[0],[0]],"(*vendor/golang.org/x/net/idna.labelIter).label":[[0],[0]],"(*vendor/golang.org/x/net/idna.labelIter).next":[[0]],"(*vendor/golang.org/x/net/idna.labelIter).reset":[[0]],"(*vendor/golang.org/x/net/idna.labelIter).result":[[0],[0]],"(*vendor/golang.org/x/net/idna.labelIter).set":[[0]],"(*vendor/golang.org/x/net/idna.runeError).Error":[[0],[]],"(*vendor/golang.org/x/net/idna.runeError).code":[[0],[]],"(*vendor/golang.org/x/net/idna.sparseBlocks).lookup":[[0],[0,2]],"(*vendor/golang.org/x/net/route.DefaultAddr).Family":[[0],[0]],"(*vendor/golang.org/x/net/route.DefaultAddr).lenAndSpace":[[0],[],[]],"(*vendor/golang.org/x/net/route.DefaultAddr).marshal":[[0],[],[]],"(*vendor/golang.org/x/net/route.Inet4Addr).Family":[[0],[]],"(*vendor/golang.org/x/net/route.Inet4Addr).lenAndSpace":[[0],[],[]],"(*vendor/golang.org/x/net/route.Inet4Addr).marshal":[[0],[],[]],"(*vendor/golang.org/x/net/route.Inet6Addr).Family":[[0],[]],"(*vendor/golang.org/x/net/route.Inet6Addr).lenAndSpace":[[0],[],[]],"(*vendor/golang.org/x/net/route.Inet6Addr).marshal":[[0],[],[]],"(*vendor/golang.org/x/net/route.InterfaceAddrMessage).Sys":[[0],[]],"(*vendor/golang.org/x/net/route.InterfaceAnnounceMessage).Sys":[[0],[]],"(*vendor/golang.org/x/net/route.InterfaceMessage).Sys":[[0],[0]],"(*vendor/golang.org/x/net/route.InterfaceMetrics).SysType":[[0],[]],"(*vendor/golang.org/x/net/route.InterfaceMulticastAddrMessage).Sys":[[0],[]],"(*vendor/golang.org/x/net/route.LinkAddr).Family":[[0],[]],"(*vendor/golang.org/x/net/route.LinkAddr).lenAndSpace":[[0],[],[]],"(*vendor/golang.org/x/net/route.LinkAddr).marshal":[[0],[],[]],"(*vendor/golang.org/x/net/route.RIBType).parseable":[[0],[]],"(*vendor/golang.org/x/net/route.RouteMessage).Marshal":[[0],[0],[]],"(*vendor/golang.org/x/net/route.RouteMessage).Sys":[[0],[0]],"(*vendor/golang.org/x/net/route.RouteMessage).marshal":[[0],[0],[]],"(*vendor/golang.org/x/net/route.RouteMetrics).SysType":[[0],[]],"(*vendor/golang.org/x/net/route.binaryBigEndian).PutUint16":[[0]],"(*vendor/golang.org/x/net/route.binaryBigEndian).PutUint32":[[0]],"(*vendor/golang.org/x/net/route.binaryBigEndian).Uint16":[[0],[1]],"(*vendor/golang.org/x/net/route.binaryBigEndian).Uint32":[[0],[1]],"(*vendor/golang.org/x/net/route.binaryBigEndian).Uint64":[[0],[1]],"(*vendor/golang.org/x/net/route.binaryLittleEndian).PutUint16":[[0]],"(*vendor/golang.org/x/net/route.binaryLittleEndian).PutUint32":[[0]],"(*vendor/golang.org/x/net/route.binaryLittleEndian).Uint16":[[0],[1]],"(*vendor/golang.org/x/net/route.binaryLittleEndian).Uint32":[[0],[1]],"(*vendor/golang.org/x/net/route.binaryLittleEndian).Uint64":[[0],[1]],"(*vendor/golang.org/x/net/route.wireFormat).parseInterfaceAddrMessage":[[0],[2],[]],"(*vendor/golang.org/x/net/route.wireFormat).parseInterfaceAddrMessage$bound":[[1],[]],"(*vendor/golang.org/x/net/route.wireFormat).parseInterfaceMessage":[[0],[0,2],[]],"(*vendor/golang.org/x/net/route.wireFormat).parseInterfaceMessage$bound":[[1],[]],"(*vendor/golang.org/x/net/route.wireFormat).parseInterfaceMulticastAddrMessage":[[0],[2],[]],"(*vendor/golang.org/x/net/route.wireFormat).parseInterfaceMulticastAddrMessage$bound":[[1],[]],"(*vendor/golang.org/x/net/route.wireFormat).parseRouteMessage":[[0],[0,2],[]],"(*vendor/golang.org/x/net/route.wireFormat).parseRouteMessage$bound":[[1],[]],"(*vendor/golang.org/x/sys/cpu.bigEndian).Uint32":[[0],[1]],"(*vendor/golang.org/x/sys/cpu.bigEndian).Uint64":[[0],[1]],"(*vendor/golang.org/x/sys/cpu.littleEndian).Uint32":[[0],[1]],"(*vendor/golang.org/x/sys/cpu.littleEndian).Uint64":[[0],[1]],"(*vendor/golang.org/x/text/secure/bidirule.Transformer).Reset":[[0]],"(*vendor/golang.org/x/text/secure/bidirule.Transformer).Span":[[0,1],[],[]],"(*vendor/golang.org/x/text/secure/bidirule.Transformer).Transform":[[0,2],[],[],[]],"(*vendor/golang.org/x/text/secure/bidirule.Transformer).advance":[[0,1],[],[]],"(*vendor/golang.org/x/text/secure/bidirule.Transformer).advanceString":[[0,1],[],[]],"(*vendor/golang.org/x/text/secure/bidirule.Transformer).isFinal":[[0],[0]],"(*vendor/golang.org/x/text/secure/bidirule.Transformer).isRTL":[[0],[0]],"(*vendor/golang.org/x/text/transform.NopResetter).Reset":[[0]],"(*vendor/golang.org/x/text/transform.Reader).Read":[[0],[],[0]],"(*vendor/golang.org/x/text/transform.Writer).Close":[[0],[0]],"(*vendor/golang.org/x/text/transform.Writer).Write":[[0],[],[0]],"(*vendor/golang.org/x/text/transform.chain).Reset":[[0]],"(*vendor/golang.org/x/text/transform.chain).Transform":[[0],[0,1],[0,2],[0]],"(*vendor/golang.org/x/text/transform.chain).fatalError":[[0,1,2]],"(*vendor/golang.org/x/text/transform.discard).Reset":[[0]],"(*vendor/golang.org/x/text/transform.discard).Transform":[[0],[],[],[]],"(*vendor/golang.org/x/text/transform.link).dst":[[0],[0]],"(*vendor/golang.org/x/text/transform.link).src":[[0],[0]],"(*vendor/golang.org/x/text/transform.nop).Reset":[[0]],"(*vendor/golang.org/x/text/transform.nop).Span":[[0],[],[]],"(*vendor/golang.org/x/text/transform.nop).Transform":[[0],[],[],[]],"(*vendor/golang.org/x/text/transform.removeF).Reset":[[0]],"(*vendor/golang.org/x/text/transform.removeF).Transform":[[0],[],[],[]],"(*vendor/golang.org/x/text/unicode/bidi.Class).in":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.Ordering).Direction":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Ordering).NumRuns":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.Ordering).Run":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).Direction":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).IsLeftToRight":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).Line":[[0],[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).Order":[[0],[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).RunAt":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).SetBytes":[[0],[],[]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).SetString":[[0],[],[]],"(*vendor/golang.org/x/text/unicode/bidi.Paragraph).prepareInput":[[0],[],[]],"(*vendor/golang.org/x/text/unicode/bidi.Properties).Class":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.Properties).IsBracket":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.Properties).IsOpeningBracket":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.Properties).reverseBracket":[[0],[1]],"(*vendor/golang.org/x/text/unicode/bidi.Run).Bytes":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Run).Direction":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Run).Pos":[[0],[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.Run).String":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.bidiTrie).lookupValue":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPair).String":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).assignBracketType":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).classBeforePair":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).classifyPairContent":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).getStrongTypeN0":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).locateBrackets":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).matchOpener":[[0],[1]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).resolveBrackets":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairer).setBracketsToType":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairs).Len":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairs).Less":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.bracketPairs).Swap":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.directionalStatusStack).depth":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.directionalStatusStack).empty":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.directionalStatusStack).lastDirectionalIsolateStatus":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.directionalStatusStack).lastDirectionalOverrideStatus":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.directionalStatusStack).lastEmbeddingLevel":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.directionalStatusStack).pop":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.directionalStatusStack).push":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.isolatingRunSequence).Len":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.isolatingRunSequence).applyLevelsAndTypes":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.isolatingRunSequence).assertOnly":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.isolatingRunSequence).findRunLimit":[[0],[1]],"(*vendor/golang.org/x/text/unicode/bidi.isolatingRunSequence).resolveImplicitLevels":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.isolatingRunSequence).resolveNeutralTypes":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.isolatingRunSequence).resolveWeakTypes":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).Len":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).assignLevelsToCharactersRemovedByX9":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).determineExplicitEmbeddingLevels":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).determineIsolatingRunSequences":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).determineLevelRuns":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).determineMatchingIsolates":[[0]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).determineParagraphEmbeddingLevel":[[0],[]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).getLevels":[[0],[0]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).isolatingRunSequence":[[0],[0,1]],"(*vendor/golang.org/x/text/unicode/bidi.paragraph).run":[[0]],"(*vendor/golang.org/x/text/unicode/norm.Form).Append":[[0],[1,2]],"(*vendor/golang.org/x/text/unicode/norm.Form).AppendString":[[0],[1,2]],"(*vendor/golang.org/x/text/unicode/norm.Form).Bytes":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).FirstBoundary":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).FirstBoundaryInString":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).IsNormal":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Form).IsNormalString":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Form).LastBoundary":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Form).NextBoundary":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).NextBoundaryInString":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).Properties":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).PropertiesString":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).QuickSpan":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).QuickSpanString":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).Reader":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).Reset":[[0]],"(*vendor/golang.org/x/text/unicode/norm.Form).Span":[[0],[1],[]],"(*vendor/golang.org/x/text/unicode/norm.Form).SpanString":[[0],[1],[]],"(*vendor/golang.org/x/text/unicode/norm.Form).String":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).Transform":[[0],[],[1,2],[]],"(*vendor/golang.org/x/text/unicode/norm.Form).Writer":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.Form).doAppend":[[0],[1,2,3]],"(*vendor/golang.org/x/text/unicode/norm.Form).firstBoundary":[[0],[1,2]],"(*vendor/golang.org/x/text/unicode/norm.Form).nextBoundary":[[0],[1,2]],"(*vendor/golang.org/x/text/unicode/norm.Form).transform":[[0],[],[1,2],[]],"(*vendor/golang.org/x/text/unicode/norm.Iter).Done":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.Iter).Init":[[0,2]],"(*vendor/golang.org/x/text/unicode/norm.Iter).InitString":[[0,2]],"(*vendor/golang.org/x/text/unicode/norm.Iter).Next":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.Iter).Pos":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.Iter).Seek":[[0,1],[0,1],[]],"(*vendor/golang.org/x/text/unicode/norm.Iter).returnSlice":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.Iter).setDone":[[0]],"(*vendor/golang.org/x/text/unicode/norm.Properties).BoundaryAfter":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).BoundaryBefore":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).CCC":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).Decomposition":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).LeadCCC":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).Size":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).TrailCCC":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).combinesBackward":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).combinesForward":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).hasDecomposition":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).isInert":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).isYesC":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).isYesD":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).multiSegment":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).nLeadingNonStarters":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.Properties).nTrailingNonStarters":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.formInfo).quickSpan":[[0],[1,2,3],[]],"(*vendor/golang.org/x/text/unicode/norm.input)._byte":[[0],[0,1]],"(*vendor/golang.org/x/text/unicode/norm.input).appendSlice":[[0],[0,1,2]],"(*vendor/golang.org/x/text/unicode/norm.input).charinfoNFC":[[0],[0],[]],"(*vendor/golang.org/x/text/unicode/norm.input).charinfoNFKC":[[0],[0],[]],"(*vendor/golang.org/x/text/unicode/norm.input).copySlice":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.input).hangul":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.input).setBytes":[[0,1]],"(*vendor/golang.org/x/text/unicode/norm.input).setString":[[0,1]],"(*vendor/golang.org/x/text/unicode/norm.input).skipASCII":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.input).skipContinuationBytes":[[0],[1]],"(*vendor/golang.org/x/text/unicode/norm.nfcTrie).lookup":[[0],[1],[]],"(*vendor/golang.org/x/text/unicode/norm.nfcTrie).lookupString":[[0],[1],[]],"(*vendor/golang.org/x/text/unicode/norm.nfcTrie).lookupValue":[[0],[2]],"(*vendor/golang.org/x/text/unicode/norm.nfkcTrie).lookup":[[0],[1],[]],"(*vendor/golang.org/x/text/unicode/norm.nfkcTrie).lookupString":[[0],[1],[]],"(*vendor/golang.org/x/text/unicode/norm.nfkcTrie).lookupValue":[[0],[2]],"(*vendor/golang.org/x/text/unicode/norm.normReader).Read":[[0],[],[0]],"(*vendor/golang.org/x/text/unicode/norm.normWriter).Close":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.normWriter).Write":[[0,1],[],[0,1]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).appendRune":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).assignRune":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).bytesAt":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).combineHangul":[[0,3]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).compose":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).decomposeHangul":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).doFlush":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).flush":[[0],[0,1]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).flushCopy":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).init":[[0,2]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).initString":[[0,2]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).insertCGJ":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).insertDecomposed":[[0,1],[]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).insertFlush":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).insertOrdered":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).insertSingle":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).insertUnsafe":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).reset":[[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).runeAt":[[0],[0]],"(*vendor/golang.org/x/text/unicode/norm.reorderBuffer).setFlusher":[[0,1,2]],"(*vendor/golang.org/x/text/unicode/norm.sparseBlocks).lookup":[[0],[0,2]],"(*vendor/golang.org/x/text/unicode/norm.streamSafe).backwards":[[0,1],[]],"(*vendor/golang.org/x/text/unicode/norm.streamSafe).first":[[0,1]],"(*vendor/golang.org/x/text/unicode/norm.streamSafe).isMax":[[0],[]],"(*vendor/golang.org/x/text/unicode/norm.streamSafe).next":[[0,1],[]],"(archive/tar.Format).String":[[0],[]],"(archive/tar.Format).has":[[0],[0,1]],"(archive/tar.Header).allowedFormats":[[0],[0],[],[]],"(archive/tar.Header).allowedFormats$1":[],"(archive/tar.Header).allowedFormats$2":[],"(archive/tar.Header).allowedFormats$3":[],"(archive/tar.headerError).Error":[[0],[]],"(archive/tar.headerFileInfo).IsDir":[[0],[0]],"(archive/tar.headerFileInfo).ModTime":[[0],[0]],"(archive/tar.headerFileInfo).Mode":[[0],[0]],"(archive/tar.headerFileInfo).Name":[[0],[0]],"(archive/tar.headerFileInfo).Size":[[0],[0]],"(archive/tar.headerFileInfo).Sys":[[0],[0]],"(archive/tar.regFileReader).logicalRemaining":[[0],[0]],"(archive/tar.regFileReader).physicalRemaining":[[0],[0]],"(archive/tar.regFileWriter).logicalRemaining":[[0],[0]],"(archive/tar.regFileWriter).physicalRemaining":[[0],[0]],"(archive/tar.sparseArray).entry":[[0],[0]],"(archive/tar.sparseArray).isExtended":[[0],[0]],"(archive/tar.sparseArray).maxEntries":[[0],[]],"(archive/tar.sparseElem).length":[[0],[0]],"(archive/tar.sparseElem).offset":[[0],[0]],"(archive/tar.sparseEntry).endOffset":[[0],[0]],"(archive/tar.sparseFileReader).logicalRemaining":[[0],[0]],"(archive/tar.sparseFileReader).physicalRemaining":[[0],[]],"(archive/tar.sparseFileWriter).logicalRemaining":[[0],[0]],"(archive/tar.sparseFileWriter).physicalRemaining":[[0],[]],"(archive/tar.zeroReader).Read":[[0],[],[]],"(archive/tar.zeroWriter).Write":[[0],[],[]],"(archive/zip.dirWriter).Write":[[0],[],[]],"(archive/zip.fileWriter).FileInfo":[[0],[0]],"(archive/zip.fileWriter).ModTime":[[0],[0]],"(archive/zip.fileWriter).Mode":[[0],[0]],"(archive/zip.fileWriter).SetModTime":[[0]],"(archive/zip.fileWriter).SetMode":[[0]],"(archive/zip.fileWriter).hasDataDescriptor":[[0],[0]],"(archive/zip.fileWriter).isZip64":[[0],[0]],"(archive/zip.header).FileInfo":[[0],[0]],"(archive/zip.header).ModTime":[[0],[0]],"(archive/zip.header).Mode":[[0],[0]],"(archive/zip.header).SetModTime":[[0]],"(archive/zip.header).SetMode":[[0]],"(archive/zip.header).hasDataDescriptor":[[0],[0]],"(archive/zip.header).isZip64":[[0],[0]],"(archive/zip.headerFileInfo).Info":[[0],[0],[]],"(archive/zip.headerFileInfo).IsDir":[[0],[0]],"(archive/zip.headerFileInfo).ModTime":[[0],[0]],"(archive/zip.headerFileInfo).Mode":[[0],[0]],"(archive/zip.headerFileInfo).Name":[[0],[0]],"(archive/zip.headerFileInfo).Size":[[0],[0]],"(archive/zip.headerFileInfo).Sys":[[0],[0]],"(archive/zip.headerFileInfo).Type":[[0],[0]],"(archive/zip.nopCloser).Close":[[0],[]],"(archive/zip.nopCloser).Write":[[0],[],[0]],"(bufio.ReadWriter).Available":[[0],[0]],"(bufio.ReadWriter).AvailableBuffer":[[0],[0]],"(bufio.ReadWriter).Discard":[[0],[0,1],[0,1]],"(bufio.ReadWriter).Flush":[[0],[0]],"(bufio.ReadWriter).Peek":[[0],[0],[0]],"(bufio.ReadWriter).Read":[[0],[],[0]],"(bufio.ReadWriter).ReadByte":[[0],[0],[0]],"(bufio.ReadWriter).ReadBytes":[[0],[],[0]],"(bufio.ReadWriter).ReadFrom":[[0],[],[0,1]],"(bufio.ReadWriter).ReadLine":[[0],[0],[],[0]],"(bufio.ReadWriter).ReadRune":[[0],[0],[],[0]],"(bufio.ReadWriter).ReadSlice":[[0],[0],[0]],"(bufio.ReadWriter).ReadString":[[0],[0],[0]],"(bufio.ReadWriter).UnreadByte":[[0],[]],"(bufio.ReadWriter).UnreadRune":[[0],[]],"(bufio.ReadWriter).Write":[[0],[],[0]],"(bufio.ReadWriter).WriteByte":[[0],[0]],"(bufio.ReadWriter).WriteRune":[[0],[],[0]],"(bufio.ReadWriter).WriteString":[[0],[],[0]],"(bufio.ReadWriter).WriteTo":[[0],[],[0,1]],"(bufio.ReadWriter).collectFragments":[[0],[0],[0],[],[0]],"(bufio.ReadWriter).fill":[[0]],"(bufio.ReadWriter).readErr":[[0],[0]],"(bufio.ReadWriter).reset":[[0]],"(bufio.ReadWriter).writeBuf":[[0],[],[1]],"(compress/bzip2.StructuralError).Error":[[0],[0]],"(compress/bzip2.moveToFrontDecoder).Decode":[[0],[0]],"(compress/bzip2.moveToFrontDecoder).First":[[0],[0]],"(compress/flate.CorruptInputError).Error":[[0],[0]],"(compress/flate.InternalError).Error":[[0],[0]],"(compress/flate.byFreq).Len":[[0],[]],"(compress/flate.byFreq).Less":[[0],[0]],"(compress/flate.byFreq).Swap":[[0]],"(compress/flate.byLiteral).Len":[[0],[]],"(compress/flate.byLiteral).Less":[[0],[0]],"(compress/flate.byLiteral).Swap":[[0]],"(compress/flate.token).length":[[0],[0]],"(compress/flate.token).literal":[[0],[0]],"(compress/flate.token).offset":[[0],[0]],"(context.cancelCtx).Deadline":[[0],[0],[]],"(context.deadlineExceededError).Error":[[0],[]],"(context.deadlineExceededError).Temporary":[[0],[]],"(context.deadlineExceededError).Timeout":[[0],[]],"(context.valueCtx).Deadline":[[0],[0],[]],"(context.valueCtx).Done":[[0],[]],"(context.valueCtx).Err":[[0],[]],"(crypto.Hash).Available":[[0],[]],"(crypto.Hash).HashFunc":[[0],[0]],"(crypto.Hash).New":[[0],[]],"(crypto.Hash).New$bound":[[]],"(crypto.Hash).Size":[[0],[]],"(crypto.Hash).String":[[0],[0]],"(crypto/aes.KeySizeError).Error":[[0],[0]],"(crypto/cipher.StreamReader).Read":[[0],[],[0]],"(crypto/cipher.StreamWriter).Close":[[0],[0]],"(crypto/cipher.StreamWriter).Write":[[0],[],[0]],"(crypto/des.KeySizeError).Error":[[0],[0]],"(crypto/ecdsa.PrivateKey).Add":[[0],[],[]],"(crypto/ecdsa.PrivateKey).Double":[[0],[],[]],"(crypto/ecdsa.PrivateKey).IsOnCurve":[[0],[]],"(crypto/ecdsa.PrivateKey).Params":[[0],[]],"(crypto/ecdsa.PrivateKey).ScalarBaseMult":[[0],[],[]],"(crypto/ecdsa.PrivateKey).ScalarMult":[[0],[],[]],"(crypto/ecdsa.PublicKey).Add":[[0],[],[]],"(crypto/ecdsa.PublicKey).Double":[[0],[],[]],"(crypto/ecdsa.PublicKey).IsOnCurve":[[0],[]],"(crypto/ecdsa.PublicKey).Params":[[0],[]],"(crypto/ecdsa.PublicKey).ScalarBaseMult":[[0],[],[]],"(crypto/ecdsa.PublicKey).ScalarMult":[[0],[],[]],"(crypto/ecdsa.zr).Read":[[0],[],[]],"(crypto/ed25519.PrivateKey).Equal":[[0],[0,1]],"(crypto/ed25519.PrivateKey).Public":[[0],[0]],"(crypto/ed25519.PrivateKey).Seed":[[0],[0]],"(crypto/ed25519.PrivateKey).Sign":[[0],[],[]],"(crypto/ed25519.PublicKey).Equal":[[0],[0,1]],"(crypto/elliptic.p256Curve).Inverse":[[0],[]],"(crypto/internal/boring.randReader).Read":[[0],[],[]],"(crypto/rand.hideAgainReader).Read":[[0],[],[0]],"(crypto/rc4.KeySizeError).Error":[[0],[0]],"(crypto/tls.ClientAuthType).String":[[0],[0]],"(crypto/tls.CurveID).String":[[0],[0]],"(crypto/tls.RecordHeaderError).Error":[[0],[0]],"(crypto/tls.SignatureScheme).String":[[0],[0]],"(crypto/tls.alert).Error":[[0],[0]],"(crypto/tls.alert).String":[[0],[0]],"(crypto/tls.finishedHash).Sum":[[0],[0]],"(crypto/tls.finishedHash).clientSum":[[0],[]],"(crypto/tls.finishedHash).hashForClientCertificate":[[0],[0]],"(crypto/tls.finishedHash).serverSum":[[0],[]],"(crypto/tls.listener).Addr":[[0],[0]],"(crypto/tls.listener).Close":[[0],[]],"(crypto/tls.marshalingFunction).Marshal":[[0],[]],"(crypto/tls.rsaKeyAgreement).generateClientKeyExchange":[[0],[2],[],[1]],"(crypto/tls.rsaKeyAgreement).generateServerKeyExchange":[[0],[],[]],"(crypto/tls.rsaKeyAgreement).processClientKeyExchange":[[0],[],[1]],"(crypto/tls.rsaKeyAgreement).processServerKeyExchange":[[0],[]],"(crypto/x509.CertificateInvalidError).Error":[[0],[0]],"(crypto/x509.ConstraintViolationError).Error":[[0],[]],"(crypto/x509.HostnameError).Error":[[0],[0]],"(crypto/x509.InsecureAlgorithmError).Error":[[0],[]],"(crypto/x509.PublicKeyAlgorithm).String":[[0],[0]],"(crypto/x509.SignatureAlgorithm).String":[[0],[0]],"(crypto/x509.SignatureAlgorithm).isRSAPSS":[[0],[]],"(crypto/x509.SystemRootsError).Error":[[0],[0]],"(crypto/x509.SystemRootsError).Unwrap":[[0],[0]],"(crypto/x509.UnhandledCriticalExtension).Error":[[0],[]],"(crypto/x509.UnknownAuthorityError).Error":[[0],[]],"(crypto/x509.rfc1423Algo).deriveKey":[[0],[]],"(crypto/x509/internal/macos.OSStatus).Error":[[0],[0]],"(crypto/x509/pkix.Name).String":[[0],[0]],"(crypto/x509/pkix.Name).ToRDNSequence":[[0],[0]],"(crypto/x509/pkix.Name).appendRDNs":[[0],[1]],"(crypto/x509/pkix.RDNSequence).String":[[0],[0]],"(database/sql.IsolationLevel).String":[[0],[0]],"(database/sql.NullBool).Value":[[0],[0],[]],"(database/sql.NullByte).Value":[[0],[0],[]],"(database/sql.NullFloat64).Value":[[0],[0],[]],"(database/sql.NullInt16).Value":[[0],[0],[]],"(database/sql.NullInt32).Value":[[0],[0],[]],"(database/sql.NullInt64).Value":[[0],[0],[]],"(database/sql.NullString).Value":[[0],[0],[]],"(database/sql.NullTime).Value":[[0],[0],[]],"(database/sql.ccChecker).CheckNamedValue":[[0],[1]],"(database/sql.ccChecker).CheckNamedValue$bound":[[0]],"(database/sql.driverResult).LastInsertId":[[0],[],[]],"(database/sql.driverResult).Lock":[[0]],"(database/sql.driverResult).RowsAffected":[[0],[],[]],"(database/sql.driverResult).Unlock":[[0]],"(database/sql.driverStmt).Lock":[[0]],"(database/sql.driverStmt).Unlock":[[0]],"(database/sql.dsnConnector).Connect":[[0],[],[]],"(database/sql.dsnConnector).Driver":[[0],[0]],"(database/sql.finalCloser).finalClose$bound":[[]],"(database/sql/driver.NamedValueChecker).CheckNamedValue$bound":[[0]],"(database/sql/driver.NotNull).ConvertValue":[[0],[1],[1]],"(database/sql/driver.Null).ConvertValue":[[0],[1],[1]],"(database/sql/driver.RowsAffected).LastInsertId":[[0],[],[]],"(database/sql/driver.RowsAffected).RowsAffected":[[0],[0],[]],"(database/sql/driver.boolType).ConvertValue":[[0],[1],[1]],"(database/sql/driver.boolType).String":[[0],[]],"(database/sql/driver.defaultConverter).ConvertValue":[[0],[1],[1]],"(database/sql/driver.int32Type).ConvertValue":[[0],[1],[1]],"(database/sql/driver.noRows).LastInsertId":[[0],[],[]],"(database/sql/driver.noRows).RowsAffected":[[0],[],[]],"(database/sql/driver.stringType).ConvertValue":[[0],[1],[]],"(debug/dwarf.Attr).GoString":[[0],[0]],"(debug/dwarf.Attr).String":[[0],[0]],"(debug/dwarf.Class).GoString":[[0],[0]],"(debug/dwarf.Class).String":[[0],[0]],"(debug/dwarf.DecodeError).Error":[[0],[0]],"(debug/dwarf.Tag).GoString":[[0],[0]],"(debug/dwarf.Tag).String":[[0],[0]],"(debug/dwarf.unknownFormat).addrsize":[[0],[]],"(debug/dwarf.unknownFormat).dwarf64":[[0],[],[]],"(debug/dwarf.unknownFormat).version":[[0],[]],"(debug/elf.Class).GoString":[[0],[0]],"(debug/elf.Class).String":[[0],[0]],"(debug/elf.CompressionType).GoString":[[0],[0]],"(debug/elf.CompressionType).String":[[0],[0]],"(debug/elf.Data).GoString":[[0],[0]],"(debug/elf.Data).String":[[0],[0]],"(debug/elf.DynFlag).GoString":[[0],[0]],"(debug/elf.DynFlag).String":[[0],[0]],"(debug/elf.DynTag).GoString":[[0],[0]],"(debug/elf.DynTag).String":[[0],[0]],"(debug/elf.Machine).GoString":[[0],[0]],"(debug/elf.Machine).String":[[0],[0]],"(debug/elf.NType).GoString":[[0],[0]],"(debug/elf.NType).String":[[0],[0]],"(debug/elf.OSABI).GoString":[[0],[0]],"(debug/elf.OSABI).String":[[0],[0]],"(debug/elf.Prog).ReadAt":[[0],[],[]],"(debug/elf.ProgFlag).GoString":[[0],[0]],"(debug/elf.ProgFlag).String":[[0],[0]],"(debug/elf.ProgType).GoString":[[0],[0]],"(debug/elf.ProgType).String":[[0],[0]],"(debug/elf.R_386).GoString":[[0],[0]],"(debug/elf.R_386).String":[[0],[0]],"(debug/elf.R_390).GoString":[[0],[0]],"(debug/elf.R_390).String":[[0],[0]],"(debug/elf.R_AARCH64).GoString":[[0],[0]],"(debug/elf.R_AARCH64).String":[[0],[0]],"(debug/elf.R_ALPHA).GoString":[[0],[0]],"(debug/elf.R_ALPHA).String":[[0],[0]],"(debug/elf.R_ARM).GoString":[[0],[0]],"(debug/elf.R_ARM).String":[[0],[0]],"(debug/elf.R_LARCH).GoString":[[0],[0]],"(debug/elf.R_LARCH).String":[[0],[0]],"(debug/elf.R_MIPS).GoString":[[0],[0]],"(debug/elf.R_MIPS).String":[[0],[0]],"(debug/elf.R_PPC).GoString":[[0],[0]],"(debug/elf.R_PPC).String":[[0],[0]],"(debug/elf.R_PPC64).GoString":[[0],[0]],"(debug/elf.R_PPC64).String":[[0],[0]],"(debug/elf.R_RISCV).GoString":[[0],[0]],"(debug/elf.R_RISCV).String":[[0],[0]],"(debug/elf.R_SPARC).GoString":[[0],[0]],"(debug/elf.R_SPARC).String":[[0],[0]],"(debug/elf.R_X86_64).GoString":[[0],[0]],"(debug/elf.R_X86_64).String":[[0],[0]],"(debug/elf.Section).ReadAt":[[0],[],[]],"(debug/elf.SectionFlag).GoString":[[0],[0]],"(debug/elf.SectionFlag).String":[[0],[0]],"(debug/elf.SectionIndex).GoString":[[0],[0]],"(debug/elf.SectionIndex).String":[[0],[0]],"(debug/elf.SectionType).GoString":[[0],[0]],"(debug/elf.SectionType).String":[[0],[0]],"(debug/elf.SymBind).GoString":[[0],[0]],"(debug/elf.SymBind).String":[[0],[0]],"(debug/elf.SymType).GoString":[[0],[0]],"(debug/elf.SymType).String":[[0],[0]],"(debug/elf.SymVis).GoString":[[0],[0]],"(debug/elf.SymVis).String":[[0],[0]],"(debug/elf.Type).GoString":[[0],[0]],"(debug/elf.Type).String":[[0],[0]],"(debug/elf.Version).GoString":[[0],[0]],"(debug/elf.Version).String":[[0],[0]],"(debug/elf.errorReader).Close":[[0],[0]],"(debug/elf.errorReader).Error":[[0],[0]],"(debug/elf.errorReader).Read":[[0],[],[0]],"(debug/elf.errorReader).ReadAt":[[0],[],[0]],"(debug/elf.errorReader).Seek":[[0],[],[0]],"(debug/gosym.Func).BaseName":[[0],[0]],"(debug/gosym.Func).PackageName":[[0],[0]],"(debug/gosym.Func).ReceiverName":[[0],[0]],"(debug/gosym.Func).Static":[[0],[0]],"(debug/gosym.Func).nameWithoutInst":[[0],[0]],"(debug/gosym.UnknownFileError).Error":[[0],[0]],"(debug/gosym.funcData).IsZero":[[0],[0]],"(debug/gosym.funcData).cuOffset":[[0],[0]],"(debug/gosym.funcData).deferreturn":[[0],[0]],"(debug/gosym.funcData).field":[[0],[0]],"(debug/gosym.funcData).nameoff":[[0],[0]],"(debug/gosym.funcData).pcfile":[[0],[0]],"(debug/gosym.funcData).pcln":[[0],[0]],"(debug/gosym.funcTab).Count":[[0],[0]],"(debug/gosym.funcTab).LineToPC":[[0],[0]],"(debug/gosym.funcTab).PCToLine":[[0],[0]],"(debug/gosym.funcTab).findFileLine":[[0],[1]],"(debug/gosym.funcTab).findFunc":[[0],[0]],"(debug/gosym.funcTab).funcData":[[0],[0]],"(debug/gosym.funcTab).funcName":[[0],[0,1]],"(debug/gosym.funcTab).funcOff":[[0],[0]],"(debug/gosym.funcTab).funcTab":[[0],[0]],"(debug/gosym.funcTab).functabFieldSize":[[0],[0]],"(debug/gosym.funcTab).go12Funcs":[[0],[]],"(debug/gosym.funcTab).go12LineToPC":[[0],[0]],"(debug/gosym.funcTab).go12MapFiles":[[0]],"(debug/gosym.funcTab).go12PCToFile":[[0],[0]],"(debug/gosym.funcTab).go12PCToLine":[[0],[]],"(debug/gosym.funcTab).initFileMap":[[0]],"(debug/gosym.funcTab).isGo12":[[0],[0]],"(debug/gosym.funcTab).parse":[[0],[0],[0],[0]],"(debug/gosym.funcTab).parsePclnTab":[[0]],"(debug/gosym.funcTab).pc":[[0],[0]],"(debug/gosym.funcTab).pcvalue":[[0],[]],"(debug/gosym.funcTab).readvarint":[[0],[1]],"(debug/gosym.funcTab).slice":[[0],[0]],"(debug/gosym.funcTab).step":[[0],[]],"(debug/gosym.funcTab).string":[[0],[0,1]],"(debug/gosym.funcTab).stringFrom":[[0],[0,1,2]],"(debug/gosym.funcTab).uint":[[0],[1]],"(debug/gosym.funcTab).uintptr":[[0],[1]],"(debug/macho.Cpu).GoString":[[0],[0]],"(debug/macho.Cpu).String":[[0],[0]],"(debug/macho.Dylib).Raw":[[0],[0]],"(debug/macho.Dysymtab).Raw":[[0],[0]],"(debug/macho.FatArch).Close":[[0],[0]],"(debug/macho.FatArch).DWARF":[[0],[0],[0]],"(debug/macho.FatArch).ImportedLibraries":[[0],[0],[]],"(debug/macho.FatArch).ImportedSymbols":[[0],[0],[]],"(debug/macho.FatArch).Section":[[0],[0]],"(debug/macho.FatArch).Segment":[[0],[0]],"(debug/macho.FatArch).parseSymtab":[[0],[3],[1,5]],"(debug/macho.FatArch).pushSection":[[0],[]],"(debug/macho.LoadBytes).Raw":[[0],[0]],"(debug/macho.LoadCmd).GoString":[[0],[0]],"(debug/macho.LoadCmd).String":[[0],[0]],"(debug/macho.RelocTypeARM).GoString":[[0],[0]],"(debug/macho.RelocTypeARM).String":[[0],[0]],"(debug/macho.RelocTypeARM64).GoString":[[0],[0]],"(debug/macho.RelocTypeARM64).String":[[0],[0]],"(debug/macho.RelocTypeGeneric).GoString":[[0],[0]],"(debug/macho.RelocTypeGeneric).String":[[0],[0]],"(debug/macho.RelocTypeX86_64).GoString":[[0],[0]],"(debug/macho.RelocTypeX86_64).String":[[0],[0]],"(debug/macho.Rpath).Raw":[[0],[0]],"(debug/macho.Section).ReadAt":[[0],[],[]],"(debug/macho.Segment).Raw":[[0],[0]],"(debug/macho.Segment).ReadAt":[[0],[],[]],"(debug/macho.Symtab).Raw":[[0],[0]],"(debug/macho.Type).GoString":[[0],[0]],"(debug/macho.Type).String":[[0],[0]],"(debug/pe.Section).ReadAt":[[0],[],[]],"(debug/pe.StringTable).String":[[0],[0],[1]],"(debug/pe.zeroReaderAt).ReadAt":[[0],[],[]],"(debug/plan9obj.Section).ReadAt":[[0],[],[]],"(embed.FS).Open":[[0],[0],[1]],"(embed.FS).ReadDir":[[0],[0],[1]],"(embed.FS).ReadFile":[[0],[0],[1]],"(embed.FS).lookup":[[0],[0]],"(embed.FS).lookup$1":[[]],"(embed.FS).readDir":[[0],[0]],"(embed.FS).readDir$1":[[]],"(embed.FS).readDir$2":[[]],"(encoding/ascii85.CorruptInputError).Error":[[0],[0]],"(encoding/asn1.BitString).At":[[0],[0,1]],"(encoding/asn1.BitString).RightAlign":[[0],[0]],"(encoding/asn1.ObjectIdentifier).Equal":[[0],[]],"(encoding/asn1.ObjectIdentifier).String":[[0],[0]],"(encoding/asn1.StructuralError).Error":[[0],[0]],"(encoding/asn1.SyntaxError).Error":[[0],[0]],"(encoding/asn1.bitStringEncoder).Encode":[[0]],"(encoding/asn1.bitStringEncoder).Len":[[0],[]],"(encoding/asn1.byteEncoder).Encode":[[0]],"(encoding/asn1.byteEncoder).Len":[[0],[]],"(encoding/asn1.bytesEncoder).Encode":[[0]],"(encoding/asn1.bytesEncoder).Len":[[0],[]],"(encoding/asn1.int64Encoder).Encode":[[0]],"(encoding/asn1.int64Encoder).Len":[[0],[]],"(encoding/asn1.multiEncoder).Encode":[[0]],"(encoding/asn1.multiEncoder).Len":[[0],[]],"(encoding/asn1.oidEncoder).Encode":[[0]],"(encoding/asn1.oidEncoder).Len":[[0],[]],"(encoding/asn1.setEncoder).Encode":[[0]],"(encoding/asn1.setEncoder).Encode$1":[[]],"(encoding/asn1.setEncoder).Len":[[0],[]],"(encoding/asn1.stringEncoder).Encode":[[0]],"(encoding/asn1.stringEncoder).Len":[[0],[]],"(encoding/base32.CorruptInputError).Error":[[0],[0]],"(encoding/base32.Encoding).WithPadding":[[0],[0,1]],"(encoding/base64.CorruptInputError).Error":[[0],[0]],"(encoding/base64.Encoding).Strict":[[0],[0]],"(encoding/base64.Encoding).WithPadding":[[0],[0,1]],"(encoding/binary.ByteOrder).Uint64$bound":[[0]],"(encoding/binary.bigEndian).AppendUint16":[[0],[1,2]],"(encoding/binary.bigEndian).AppendUint32":[[0],[1,2]],"(encoding/binary.bigEndian).AppendUint64":[[0],[1,2]],"(encoding/binary.bigEndian).GoString":[[0],[]],"(encoding/binary.bigEndian).PutUint16":[[0]],"(encoding/binary.bigEndian).PutUint32":[[0]],"(encoding/binary.bigEndian).PutUint64":[[0]],"(encoding/binary.bigEndian).String":[[0],[]],"(encoding/binary.bigEndian).Uint16":[[0],[1]],"(encoding/binary.bigEndian).Uint32":[[0],[1]],"(encoding/binary.bigEndian).Uint64":[[0],[1]],"(encoding/binary.littleEndian).AppendUint16":[[0],[1,2]],"(encoding/binary.littleEndian).AppendUint32":[[0],[1,2]],"(encoding/binary.littleEndian).AppendUint64":[[0],[1,2]],"(encoding/binary.littleEndian).GoString":[[0],[]],"(encoding/binary.littleEndian).PutUint16":[[0]],"(encoding/binary.littleEndian).PutUint32":[[0]],"(encoding/binary.littleEndian).PutUint64":[[0]],"(encoding/binary.littleEndian).String":[[0],[]],"(encoding/binary.littleEndian).Uint16":[[0],[1]],"(encoding/binary.littleEndian).Uint32":[[0],[1]],"(encoding/binary.littleEndian).Uint64":[[0],[1]],"(encoding/gob.typeId).gobType":[[0],[0]],"(encoding/gob.typeId).name":[[0],[0]],"(encoding/gob.typeId).string":[[0],[0]],"(encoding/hex.InvalidByteError).Error":[[0],[]],"(encoding/json.Delim).String":[[0],[0]],"(encoding/json.Number).Float64":[[0],[0],[0]],"(encoding/json.Number).Int64":[[0],[0],[0]],"(encoding/json.Number).String":[[0],[0]],"(encoding/json.RawMessage).MarshalJSON":[[0],[0],[]],"(encoding/json.arrayEncoder).encode":[[0]],"(encoding/json.arrayEncoder).encode$bound":[],"(encoding/json.byIndex).Len":[[0],[]],"(encoding/json.byIndex).Less":[[0],[0]],"(encoding/json.byIndex).Swap":[[0]],"(encoding/json.condAddrEncoder).encode":[[0]],"(encoding/json.condAddrEncoder).encode$bound":[],"(encoding/json.floatEncoder).encode":[[0]],"(encoding/json.floatEncoder).encode$bound":[],"(encoding/json.jsonError).Error":[[0],[0]],"(encoding/json.mapEncoder).encode":[[0]],"(encoding/json.mapEncoder).encode$1":[[]],"(encoding/json.mapEncoder).encode$bound":[],"(encoding/json.ptrEncoder).encode":[[0]],"(encoding/json.ptrEncoder).encode$bound":[],"(encoding/json.sliceEncoder).encode":[[0]],"(encoding/json.sliceEncoder).encode$bound":[],"(encoding/json.structEncoder).encode":[[0]],"(encoding/json.structEncoder).encode$bound":[],"(encoding/json.tagOptions).Contains":[[0],[]],"(encoding/xml.CharData).Copy":[[0],[0]],"(encoding/xml.Comment).Copy":[[0],[0]],"(encoding/xml.Directive).Copy":[[0],[0]],"(encoding/xml.ProcInst).Copy":[[0],[0]],"(encoding/xml.StartElement).Copy":[[0],[0]],"(encoding/xml.StartElement).End":[[0],[0]],"(encoding/xml.UnmarshalError).Error":[[0],[0]],"(encoding/xml.printer).Available":[[0],[0]],"(encoding/xml.printer).AvailableBuffer":[[0],[0]],"(encoding/xml.printer).Buffered":[[0],[0]],"(encoding/xml.printer).Flush":[[0],[0]],"(encoding/xml.printer).ReadFrom":[[0],[],[0,1]],"(encoding/xml.printer).Reset":[[0]],"(encoding/xml.printer).Size":[[0],[]],"(encoding/xml.printer).Write":[[0],[],[0]],"(encoding/xml.printer).WriteByte":[[0],[0]],"(encoding/xml.printer).WriteRune":[[0],[],[0]],"(encoding/xml.printer).WriteString":[[0],[],[0]],"(expvar.Func).String":[[0],[]],"(expvar.Func).Value":[[0],[]],"(flag.funcValue).Set":[[0],[]],"(flag.funcValue).String":[[0],[]],"(flag.textValue).Get":[[0],[0]],"(flag.textValue).Set":[[0],[1]],"(flag.textValue).String":[[0],[0]],"(go/ast.CommentMap).Comments":[[0],[]],"(go/ast.CommentMap).Filter":[[0],[]],"(go/ast.CommentMap).Filter$1":[[]],"(go/ast.CommentMap).String":[[0],[]],"(go/ast.CommentMap).Update":[[0],[2]],"(go/ast.CommentMap).addComment":[[0]],"(go/ast.ObjKind).String":[[0],[]],"(go/ast.byInterval).Len":[[0],[]],"(go/ast.byInterval).Less":[[0],[]],"(go/ast.byInterval).Swap":[[0]],"(go/ast.byPos).Len":[[0],[]],"(go/ast.byPos).Less":[[0],[0]],"(go/ast.byPos).Swap":[[0]],"(go/ast.inspector).Visit":[[0],[0]],"(go/constant.Kind).String":[[0],[0]],"(go/constant.boolVal).ExactString":[[0],[]],"(go/constant.boolVal).Kind":[[0],[]],"(go/constant.boolVal).String":[[0],[]],"(go/constant.boolVal).implementsValue":[[0]],"(go/constant.complexVal).ExactString":[[0],[]],"(go/constant.complexVal).Kind":[[0],[]],"(go/constant.complexVal).String":[[0],[]],"(go/constant.complexVal).implementsValue":[[0]],"(go/constant.floatVal).ExactString":[[0],[0]],"(go/constant.floatVal).Kind":[[0],[]],"(go/constant.floatVal).String":[[0],[0]],"(go/constant.floatVal).implementsValue":[[0]],"(go/constant.int64Val).ExactString":[[0],[0]],"(go/constant.int64Val).Kind":[[0],[]],"(go/constant.int64Val).String":[[0],[0]],"(go/constant.int64Val).implementsValue":[[0]],"(go/constant.intVal).ExactString":[[0],[0]],"(go/constant.intVal).Kind":[[0],[]],"(go/constant.intVal).String":[[0],[0]],"(go/constant.intVal).implementsValue":[[0]],"(go/constant.ratVal).ExactString":[[0],[0]],"(go/constant.ratVal).Kind":[[0],[]],"(go/constant.ratVal).String":[[0],[0]],"(go/constant.ratVal).implementsValue":[[0]],"(go/constant.unknownVal).ExactString":[[0],[]],"(go/constant.unknownVal).Kind":[[0],[]],"(go/constant.unknownVal).String":[[0],[]],"(go/constant.unknownVal).implementsValue":[[0]],"(go/doc.methodSet).add":[[0]],"(go/doc.methodSet).set":[[0]],"(go/doc/comment.Italic).text":[[0]],"(go/doc/comment.Plain).text":[[0]],"(go/internal/gccgoimporter.importError).Error":[[0],[]],"(go/internal/gccgoimporter.seekerReadAt).ReadAt":[[0],[],[]],"(go/internal/gcimporter.anyType).String":[[0],[]],"(go/internal/gcimporter.anyType).Underlying":[[0],[0]],"(go/internal/gcimporter.byPath).Len":[[0],[]],"(go/internal/gcimporter.byPath).Less":[[0],[0]],"(go/internal/gcimporter.byPath).Swap":[[0]],"(go/internal/gcimporter.intReader).Buffered":[[0],[0]],"(go/internal/gcimporter.intReader).Discard":[[0],[0,1],[0,1]],"(go/internal/gcimporter.intReader).Peek":[[0],[0],[0]],"(go/internal/gcimporter.intReader).Read":[[0],[],[0]],"(go/internal/gcimporter.intReader).ReadByte":[[0],[0],[0]],"(go/internal/gcimporter.intReader).ReadBytes":[[0],[],[0]],"(go/internal/gcimporter.intReader).ReadLine":[[0],[0],[],[0]],"(go/internal/gcimporter.intReader).ReadRune":[[0],[0],[],[0]],"(go/internal/gcimporter.intReader).ReadSlice":[[0],[0],[0]],"(go/internal/gcimporter.intReader).ReadString":[[0],[0],[0]],"(go/internal/gcimporter.intReader).Reset":[[0]],"(go/internal/gcimporter.intReader).Size":[[0],[]],"(go/internal/gcimporter.intReader).UnreadByte":[[0],[]],"(go/internal/gcimporter.intReader).UnreadRune":[[0],[]],"(go/internal/gcimporter.intReader).WriteTo":[[0],[],[0,1]],"(go/internal/gcimporter.intReader).collectFragments":[[0],[0],[0],[],[0]],"(go/internal/gcimporter.intReader).fill":[[0]],"(go/internal/gcimporter.intReader).readErr":[[0],[0]],"(go/internal/gcimporter.intReader).reset":[[0]],"(go/internal/gcimporter.intReader).writeBuf":[[0],[],[1]],"(go/internal/typeparams.IndexExpr).End":[[0],[0]],"(go/internal/typeparams.IndexExpr).Pos":[[0],[0]],"(go/internal/typeparams.IndexExpr).exprNode":[[0]],"(go/scanner.Error).Error":[[0],[0]],"(go/scanner.ErrorList).Err":[[0],[0]],"(go/scanner.ErrorList).Error":[[0],[0]],"(go/scanner.ErrorList).Len":[[0],[]],"(go/scanner.ErrorList).Less":[[0],[0]],"(go/scanner.ErrorList).Sort":[[0]],"(go/scanner.ErrorList).Swap":[[0]],"(go/token.Pos).IsValid":[[0],[0]],"(go/token.Position).String":[[0],[0]],"(go/token.Token).IsKeyword":[[0],[0]],"(go/token.Token).IsLiteral":[[0],[0]],"(go/token.Token).IsOperator":[[0],[0]],"(go/token.Token).Precedence":[[0],[]],"(go/token.Token).String":[[0],[0]],"(go/types.Checker).ObjectOf":[[0],[0,1]],"(go/types.Checker).TypeOf":[[0],[0,1]],"(go/types.Error).Error":[[0],[]],"(go/types.TypeAndValue).Addressable":[[0],[0]],"(go/types.TypeAndValue).Assignable":[[0],[0]],"(go/types.TypeAndValue).HasOk":[[0],[0]],"(go/types.TypeAndValue).IsBuiltin":[[0],[0]],"(go/types.TypeAndValue).IsNil":[[0],[0]],"(go/types.TypeAndValue).IsType":[[0],[0]],"(go/types.TypeAndValue).IsValue":[[0],[]],"(go/types.TypeAndValue).IsVoid":[[0],[0]],"(go/types.atPos).Pos":[[0],[0]],"(go/types.byUniqueMethodName).Len":[[0],[]],"(go/types.byUniqueMethodName).Less":[[0],[0]],"(go/types.byUniqueMethodName).Swap":[[0]],"(go/types.color).String":[[0],[]],"(go/types.constDecl).node":[[0],[0]],"(go/types.funcDecl).node":[[0],[0]],"(go/types.importDecl).node":[[0],[0]],"(go/types.inSourceOrder).Len":[[0],[]],"(go/types.inSourceOrder).Less":[[0],[0]],"(go/types.inSourceOrder).Swap":[[0]],"(go/types.methodSet).add":[[0],[0,1,3]],"(go/types.methodSet).addOne":[[0],[0,1,2,3]],"(go/types.nodeQueue).Len":[[0],[]],"(go/types.nodeQueue).Less":[[0],[0]],"(go/types.nodeQueue).Swap":[[0]],"(go/types.posSpan).Pos":[[0],[0]],"(go/types.substMap).empty":[[0],[]],"(go/types.substMap).lookup":[[0],[0,1]],"(go/types.termlist).String":[[0],[]],"(go/types.termlist).equal":[[0],[]],"(go/types.termlist).includes":[[0],[]],"(go/types.termlist).intersect":[[0],[0,1]],"(go/types.termlist).isAll":[[0],[]],"(go/types.termlist).isEmpty":[[0],[]],"(go/types.termlist).norm":[[0],[0]],"(go/types.termlist).subsetOf":[[0],[]],"(go/types.termlist).supersetOf":[[0],[]],"(go/types.termlist).union":[[0],[0]],"(go/types.typeDecl).node":[[0],[0]],"(go/types.varDecl).node":[[0],[0]],"(golang.org/x/mod/modfile.ErrorList).Error":[[0],[0]],"(golang.org/x/mod/modfile.Position).add":[[0],[0]],"(golang.org/x/mod/modfile.tokenKind).isComment":[[0],[0]],"(golang.org/x/mod/modfile.tokenKind).isEOL":[[0],[0]],"(golang.org/x/mod/module.Version).String":[[0],[0]],"(golang.org/x/mod/semver.ByVersion).Len":[[0],[]],"(golang.org/x/mod/semver.ByVersion).Less":[[0],[0]],"(golang.org/x/mod/semver.ByVersion).Swap":[[0]],"(golang.org/x/mod/sumdb/tlog.Hash).MarshalJSON":[[0],[],[]],"(golang.org/x/mod/sumdb/tlog.Hash).String":[[0],[]],"(golang.org/x/mod/sumdb/tlog.HashReaderFunc).ReadHashes":[[0],[],[]],"(golang.org/x/mod/sumdb/tlog.Tile).Path":[[0],[]],"(golang.org/x/mod/zip.CheckedFiles).Err":[[0],[0]],"(golang.org/x/mod/zip.FileError).Error":[[0],[]],"(golang.org/x/mod/zip.FileError).Unwrap":[[0],[0]],"(golang.org/x/mod/zip.FileErrorList).Error":[[0],[]],"(golang.org/x/mod/zip.collisionChecker).check":[[0],[0,1]],"(golang.org/x/mod/zip.dirFile).Lstat":[[0],[0],[]],"(golang.org/x/mod/zip.dirFile).Open":[[0],[],[0]],"(golang.org/x/mod/zip.dirFile).Path":[[0],[0]],"(golang.org/x/mod/zip.zipFile).Lstat":[[0],[0],[]],"(golang.org/x/mod/zip.zipFile).Open":[[0],[0],[]],"(golang.org/x/mod/zip.zipFile).Path":[[0],[0]],"(golang.org/x/sys/cpu.bigEndian).Uint32":[[0],[1]],"(golang.org/x/sys/cpu.bigEndian).Uint64":[[0],[1]],"(golang.org/x/sys/cpu.littleEndian).Uint32":[[0],[1]],"(golang.org/x/sys/cpu.littleEndian).Uint64":[[0],[1]],"(golang.org/x/sys/unix.WaitStatus).Continued":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).CoreDump":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).ExitStatus":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).Exited":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).Killed":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).Signal":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).Signaled":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).StopSignal":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).Stopped":[[0],[0]],"(golang.org/x/sys/unix.WaitStatus).TrapCause":[[0],[]],"(golang.org/x/sys/unix/internal/mkmerge.specGroups).add":[[0],[1]],"(golang.org/x/sys/unix/internal/mkmerge.specGroups).filterEmptyLines":[[0],[],[1]],"(golang.org/x/tools/cmd/auth/authtest.Cred).Apply":[[0],[]],"(golang.org/x/tools/cmd/auth/authtest.Cred).String":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaAllocedBytesPerOp":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaAllocedBytesPerOp$thunk":[[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaAllocsPerOp":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaAllocsPerOp$thunk":[[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaMBPerS":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaMBPerS$thunk":[[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaNsPerOp":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).DeltaNsPerOp$thunk":[[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).Measured":[[0],[0,1]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).Name":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.BenchCmp).String":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaAllocedBytesPerOp).Len":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaAllocedBytesPerOp).Less":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaAllocedBytesPerOp).Swap":[[0]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaAllocsPerOp).Len":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaAllocsPerOp).Less":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaAllocsPerOp).Swap":[[0]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaMBPerS).Len":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaMBPerS).Less":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaMBPerS).Swap":[[0]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaNsPerOp).Len":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaNsPerOp).Less":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.ByDeltaNsPerOp).Swap":[[0]],"(golang.org/x/tools/cmd/benchcmp.ByParseOrder).Len":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.ByParseOrder).Less":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.ByParseOrder).Swap":[[0]],"(golang.org/x/tools/cmd/benchcmp.Delta).Changed":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.Delta).Float64":[[0],[0]],"(golang.org/x/tools/cmd/benchcmp.Delta).Multiple":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.Delta).Percent":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.Delta).String":[[0],[]],"(golang.org/x/tools/cmd/benchcmp.Delta).mag":[[0],[0]],"(golang.org/x/tools/cmd/bundle.flagFunc).Set":[[0],[]],"(golang.org/x/tools/cmd/bundle.flagFunc).String":[[0],[]],"(golang.org/x/tools/cmd/compilebench.compile).long":[[0],[]],"(golang.org/x/tools/cmd/compilebench.compile).run":[[0],[0]],"(golang.org/x/tools/cmd/compilebench.goBuild).long":[[0],[]],"(golang.org/x/tools/cmd/compilebench.goBuild).run":[[0],[0]],"(golang.org/x/tools/cmd/compilebench.link).long":[[0],[]],"(golang.org/x/tools/cmd/compilebench.link).run":[[0],[0]],"(golang.org/x/tools/cmd/compilebench.size).long":[[0],[0]],"(golang.org/x/tools/cmd/compilebench.size).run":[[0],[0]],"(golang.org/x/tools/cmd/cover.blockSlice).Len":[[0],[]],"(golang.org/x/tools/cmd/cover.blockSlice).Less":[[0],[0]],"(golang.org/x/tools/cmd/cover.blockSlice).Swap":[[0]],"(golang.org/x/tools/cmd/digraph.graph).addEdges":[[0]],"(golang.org/x/tools/cmd/digraph.graph).addNode":[[0],[0,1]],"(golang.org/x/tools/cmd/digraph.graph).allpaths":[[0],[]],"(golang.org/x/tools/cmd/digraph.graph).allpaths$1":[[0]],"(golang.org/x/tools/cmd/digraph.graph).reachableFrom":[[0],[]],"(golang.org/x/tools/cmd/digraph.graph).reachableFrom$1":[],"(golang.org/x/tools/cmd/digraph.graph).sccs":[[0],[]],"(golang.org/x/tools/cmd/digraph.graph).sccs$1":[],"(golang.org/x/tools/cmd/digraph.graph).sccs$2":[],"(golang.org/x/tools/cmd/digraph.graph).somepath":[[0],[1,2]],"(golang.org/x/tools/cmd/digraph.graph).somepath$1":[[]],"(golang.org/x/tools/cmd/digraph.graph).transpose":[[0],[]],"(golang.org/x/tools/cmd/digraph.nodelist).println":[[0]],"(golang.org/x/tools/cmd/digraph.nodeset).addAll":[[0]],"(golang.org/x/tools/cmd/digraph.nodeset).sort":[[0],[0]],"(golang.org/x/tools/cmd/eg.pkgsImporter).Import":[[0],[],[1]],"(golang.org/x/tools/cmd/eg.pkgsImporter).Import$1":[[]],"(golang.org/x/tools/cmd/fiximports.packageError).Error":[[0],[0]],"(golang.org/x/tools/cmd/godex.sourceImporter).Import":[[0],[],[]],"(golang.org/x/tools/cmd/guru.byFuncPos).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.byFuncPos).Less":[[0],[0]],"(golang.org/x/tools/cmd/guru.byFuncPos).Swap":[[0]],"(golang.org/x/tools/cmd/guru.byNamePos).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.byNamePos).Less":[[0],[0]],"(golang.org/x/tools/cmd/guru.byNamePos).Swap":[[0]],"(golang.org/x/tools/cmd/guru.byPos).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.byPos).Less":[[0],[0]],"(golang.org/x/tools/cmd/guru.byPos).Swap":[[0]],"(golang.org/x/tools/cmd/guru.byPosAndString).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.byPosAndString).Less":[[0],[0]],"(golang.org/x/tools/cmd/guru.byPosAndString).Swap":[[0]],"(golang.org/x/tools/cmd/guru.byRef).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.byRef).Less":[[0],[0]],"(golang.org/x/tools/cmd/guru.byRef).Swap":[[0]],"(golang.org/x/tools/cmd/guru.byTypeString).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.byTypeString).Less":[[0],[]],"(golang.org/x/tools/cmd/guru.byTypeString).Swap":[[0]],"(golang.org/x/tools/cmd/guru.membersByPosAndString).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.membersByPosAndString).Less":[[0],[0]],"(golang.org/x/tools/cmd/guru.membersByPosAndString).Swap":[[0]],"(golang.org/x/tools/cmd/guru.sorterrorType).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.sorterrorType).Less":[[0],[]],"(golang.org/x/tools/cmd/guru.sorterrorType).Swap":[[0]],"(golang.org/x/tools/cmd/guru.typesByString).Len":[[0],[]],"(golang.org/x/tools/cmd/guru.typesByString).Less":[[0],[]],"(golang.org/x/tools/cmd/guru.typesByString).Swap":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).Declare":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).GenElemRef":[[0],[],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).GenValue":[[0],[],[3]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).HasPointer":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).IsControl":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).NumElements":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).QualName":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).String":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).TypeName":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).Declare":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).GenElemRef":[[0],[],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).GenValue":[[0],[],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).HasPointer":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).IsControl":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).NumElements":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).QualName":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).String":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mapparm).TypeName":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).Declare":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).GenElemRef":[[0],[2],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).GenValue":[[0],[],[3]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).HasPointer":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).IsControl":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).NumElements":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).QualName":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).String":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).TypeName":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).genRandNum":[[0],[],[2]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).Declare":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).GenElemRef":[[0],[2],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).GenValue":[[0],[],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).HasPointer":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).IsControl":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).NumElements":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).QualName":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).String":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.pointerparm).TypeName":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).Declare":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).GenElemRef":[[0],[2],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).GenValue":[[0],[],[3]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).HasPointer":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).IsControl":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).NumElements":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).QualName":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).String":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.stringparm).TypeName":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).Declare":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).FieldName":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).GenElemRef":[[0],[],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).GenValue":[[0],[],[3]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).HasPointer":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).IsControl":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).NumElements":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).QualName":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).String":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).TypeName":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).Declare":[[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).GenElemRef":[[0],[],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).GenValue":[[0],[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).HasPointer":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).IsControl":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).NumElements":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).QualName":[[0],[0]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).String":[[0],[]],"(golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).TypeName":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Cpu).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Cpu).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfo).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DyldInfoCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylib).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylibCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dylinker).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DylinkerCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Dysymtab).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.DysymtabCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfo).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EncryptionInfoCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.EntryPointCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).AddLoad":[[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).AddSection":[[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).AddSegment":[[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Close":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).DWARF":[[0],[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).DerivedCopy":[[0],[0,1,2]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).FileSize":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).HdrSize":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).ImportedLibraries":[[0],[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).ImportedSymbols":[[0],[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).LoadAlign":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).LoadSize":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Section":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).Segment":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).SymbolSize":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).TOCSize":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).parseSymtab":[[0],[],[1,5]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.FatArch).pushSection":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.HdrType).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.HdrType).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditData).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LinkEditDataCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).Copy":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).LoadSize":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).Raw":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadBytes).String":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Copy":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).LoadSize":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).Raw":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.LoadCmdBytes).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.NoteCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM64).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeARM64).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeGeneric).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeGeneric).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeX86_64).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RelocTypeX86_64).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Rpath).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.RpathCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Section).ReadAt":[[0],[],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment).ReadAt":[[0],[],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment32).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Segment64).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.SegmentHeader).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.SegmentHeader).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.SegmentHeader).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Symtab).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.SymtabCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Thread).String":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.Uuid).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).Command":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).GoString":[[0],[0]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).Put":[[0],[]],"(golang.org/x/tools/cmd/splitdwarf/internal/macho.UuidCmd).String":[[0],[0]],"(golang.org/x/tools/cmd/stringer.byValue).Len":[[0],[]],"(golang.org/x/tools/cmd/stringer.byValue).Less":[[0],[0]],"(golang.org/x/tools/cmd/stringer.byValue).Swap":[[0]],"(golang.org/x/tools/cover.blocksByStart).Len":[[0],[]],"(golang.org/x/tools/cover.blocksByStart).Less":[[0],[0]],"(golang.org/x/tools/cover.blocksByStart).Swap":[[0]],"(golang.org/x/tools/cover.boundariesByPos).Len":[[0],[]],"(golang.org/x/tools/cover.boundariesByPos).Less":[[0],[0]],"(golang.org/x/tools/cover.boundariesByPos).Swap":[[0]],"(golang.org/x/tools/cover.byFileName).Len":[[0],[]],"(golang.org/x/tools/cover.byFileName).Less":[[0],[0]],"(golang.org/x/tools/cover.byFileName).Swap":[[0]],"(golang.org/x/tools/go/analysis/internal/analysisflags.JSONTree).Add":[[0]],"(golang.org/x/tools/go/analysis/internal/analysisflags.JSONTree).Print":[[0]],"(golang.org/x/tools/go/analysis/internal/analysisflags.triState).IsBoolFlag":[[0],[]],"(golang.org/x/tools/go/analysis/internal/analysisflags.triState).isTrue":[[0],[0]],"(golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).Get":[[0],[]],"(golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).IsBoolFlag":[[0],[]],"(golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).Set":[[0],[]],"(golang.org/x/tools/go/analysis/internal/analysisflags.versionFlag).String":[[0],[]],"(golang.org/x/tools/go/analysis/internal/checker.typeParseError).Error":[[0],[0]],"(golang.org/x/tools/go/analysis/passes/bools.boolOp).checkRedundant":[[0]],"(golang.org/x/tools/go/analysis/passes/bools.boolOp).checkSuspect":[[0]],"(golang.org/x/tools/go/analysis/passes/bools.boolOp).commutativeSets":[[0],[2]],"(golang.org/x/tools/go/analysis/passes/bools.boolOp).split":[[0],[1]],"(golang.org/x/tools/go/analysis/passes/cgocall.importerFunc).Import":[[0],[1],[]],"(golang.org/x/tools/go/analysis/passes/copylock.typePath).String":[[0],[]],"(golang.org/x/tools/go/analysis/passes/nilness.fact).negate":[[0],[0]],"(golang.org/x/tools/go/analysis/passes/nilness.facts).negate":[[0],[0]],"(golang.org/x/tools/go/analysis/passes/nilness.nilness).String":[[0],[]],"(golang.org/x/tools/go/analysis/passes/printf.Kind).String":[[0],[]],"(golang.org/x/tools/go/analysis/passes/printf.stringSet).Set":[[0],[]],"(golang.org/x/tools/go/analysis/passes/printf.stringSet).String":[[0],[0]],"(golang.org/x/tools/go/analysis/passes/shadow.span).contains":[[0],[0,1]],"(golang.org/x/tools/go/analysis/unitchecker.importerFunc).Import":[[0],[1],[]],"(golang.org/x/tools/go/ast/astutil.byPos).Len":[[0],[]],"(golang.org/x/tools/go/ast/astutil.byPos).Less":[[0],[0]],"(golang.org/x/tools/go/ast/astutil.byPos).Swap":[[0]],"(golang.org/x/tools/go/ast/astutil.tokenNode).End":[[0],[0]],"(golang.org/x/tools/go/ast/astutil.tokenNode).Pos":[[0],[0]],"(golang.org/x/tools/go/ast/astutil.visitFn).Visit":[[0],[0]],"(golang.org/x/tools/go/buildutil.byName).Len":[[0],[]],"(golang.org/x/tools/go/buildutil.byName).Less":[[0],[0]],"(golang.org/x/tools/go/buildutil.byName).Swap":[[0]],"(golang.org/x/tools/go/buildutil.fakeDirInfo).IsDir":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeDirInfo).ModTime":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeDirInfo).Mode":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeDirInfo).Name":[[0],[0]],"(golang.org/x/tools/go/buildutil.fakeDirInfo).Size":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeDirInfo).Sys":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeFileInfo).IsDir":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeFileInfo).ModTime":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeFileInfo).Mode":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeFileInfo).Name":[[0],[0]],"(golang.org/x/tools/go/buildutil.fakeFileInfo).Size":[[0],[]],"(golang.org/x/tools/go/buildutil.fakeFileInfo).Sys":[[0],[]],"(golang.org/x/tools/go/callgraph.Edge).Description":[[0],[]],"(golang.org/x/tools/go/callgraph.Edge).Pos":[[0],[0]],"(golang.org/x/tools/go/callgraph.Edge).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.channelElem).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.channelElem).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.constant).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.constant).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.field).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.field).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.function).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.function).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.global).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.global).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.indexedLocal).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.indexedLocal).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.local).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.local).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.mapKey).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.mapKey).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.mapValue).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.mapValue).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.methodCache).methods":[[0],[0,1,2,3]],"(golang.org/x/tools/go/callgraph/vta.nestedPtrFunction).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.nestedPtrFunction).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.nestedPtrInterface).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.nestedPtrInterface).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.panicArg).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.panicArg).Type":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.pointer).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.pointer).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.propTypeMap).propTypes":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.recoverReturn).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.recoverReturn).Type":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.sliceElem).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta.sliceElem).Type":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta.vtaGraph).addEdge":[[0]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Map).DeepEqual":[[0],[0,1]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Lookup":[[0],[],[]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Range":[[0],[]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Scope":[[0],[0]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Map).Size":[[0],[]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Map).String":[[0],[]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Map).String$1":[[]],"(golang.org/x/tools/go/callgraph/vta/internal/trie.Scope).String":[[0],[0]],"(golang.org/x/tools/go/gcexportdata.importer).Import":[[0],[0],[1]],"(golang.org/x/tools/go/gcexportdata.importer).ImportFrom":[[0],[0],[1]],"(golang.org/x/tools/go/gcexportdata.importer).ImportFrom$1":[],"(golang.org/x/tools/go/internal/gccgoimporter.importError).Error":[[0],[]],"(golang.org/x/tools/go/internal/gccgoimporter.seekerReadAt).ReadAt":[[0],[],[]],"(golang.org/x/tools/go/internal/gcimporter.anyType).String":[[0],[]],"(golang.org/x/tools/go/internal/gcimporter.anyType).Underlying":[[0],[0]],"(golang.org/x/tools/go/internal/gcimporter.byPath).Len":[[0],[]],"(golang.org/x/tools/go/internal/gcimporter.byPath).Less":[[0],[0]],"(golang.org/x/tools/go/internal/gcimporter.byPath).Swap":[[0]],"(golang.org/x/tools/go/internal/gcimporter.importError).Error":[[0],[]],"(golang.org/x/tools/go/internal/gcimporter.internalError).Error":[[0],[0]],"(golang.org/x/tools/go/internal/gcimporter.methodsByName).Len":[[0],[]],"(golang.org/x/tools/go/internal/gcimporter.methodsByName).Less":[[0],[0]],"(golang.org/x/tools/go/internal/gcimporter.methodsByName).Swap":[[0]],"(golang.org/x/tools/go/internal/pkgbits.CodeObj).Marker":[[0],[]],"(golang.org/x/tools/go/internal/pkgbits.CodeObj).Value":[[0],[0]],"(golang.org/x/tools/go/internal/pkgbits.CodeType).Marker":[[0],[]],"(golang.org/x/tools/go/internal/pkgbits.CodeType).Value":[[0],[0]],"(golang.org/x/tools/go/internal/pkgbits.CodeVal).Marker":[[0],[]],"(golang.org/x/tools/go/internal/pkgbits.CodeVal).Value":[[0],[0]],"(golang.org/x/tools/go/internal/pkgbits.SyncMarker).String":[[0],[0]],"(golang.org/x/tools/go/loader.byImportPath).Len":[[0],[]],"(golang.org/x/tools/go/loader.byImportPath).Less":[[0],[0]],"(golang.org/x/tools/go/loader.byImportPath).Swap":[[0]],"(golang.org/x/tools/go/loader.closure).Import":[[0],[0,1],[0,1]],"(golang.org/x/tools/go/packages.Error).Error":[[0],[0]],"(golang.org/x/tools/go/packages.LoadMode).String":[[0],[]],"(golang.org/x/tools/go/packages.goTooOldError).Error":[[0],[0]],"(golang.org/x/tools/go/packages.importerFunc).Import":[[0],[1],[]],"(golang.org/x/tools/go/packages.loaderPackage).MarshalJSON":[[0],[],[]],"(golang.org/x/tools/go/packages.loaderPackage).String":[[0],[0]],"(golang.org/x/tools/go/packages.loaderPackage).UnmarshalJSON":[[0],[1]],"(golang.org/x/tools/go/packages/packagestest.gopath).Filename":[[0],[1,2,3]],"(golang.org/x/tools/go/packages/packagestest.gopath).Finalize":[[0],[]],"(golang.org/x/tools/go/packages/packagestest.gopath).Name":[[0],[]],"(golang.org/x/tools/go/packages/packagestest.modules).Filename":[[0],[1,2,3]],"(golang.org/x/tools/go/packages/packagestest.modules).Finalize":[[0],[1]],"(golang.org/x/tools/go/packages/packagestest.modules).Name":[[0],[]],"(golang.org/x/tools/go/pointer.Label).Path":[[0],[]],"(golang.org/x/tools/go/pointer.Label).Pos":[[0],[0]],"(golang.org/x/tools/go/pointer.Label).ReflectType":[[0],[0]],"(golang.org/x/tools/go/pointer.Label).String":[[0],[0]],"(golang.org/x/tools/go/pointer.Label).Value":[[0],[0]],"(golang.org/x/tools/go/pointer.Pointer).DynamicTypes":[[0],[0]],"(golang.org/x/tools/go/pointer.Pointer).MayAlias":[[0],[0]],"(golang.org/x/tools/go/pointer.Pointer).PointsTo":[[0],[0]],"(golang.org/x/tools/go/pointer.Pointer).String":[[0],[]],"(golang.org/x/tools/go/pointer.PointsToSet).DynamicTypes":[[0],[0]],"(golang.org/x/tools/go/pointer.PointsToSet).Intersects":[[0],[0]],"(golang.org/x/tools/go/pointer.PointsToSet).Labels":[[0],[0]],"(golang.org/x/tools/go/pointer.PointsToSet).String":[[0],[]],"(golang.org/x/tools/go/pointer.nodeid).String":[[0],[]],"(golang.org/x/tools/go/ssa.BuilderMode).Get":[[0],[0]],"(golang.org/x/tools/go/ssa.BuilderMode).String":[[0],[]],"(golang.org/x/tools/go/ssa.blank).address":[[0],[]],"(golang.org/x/tools/go/ssa.blank).load":[[0],[]],"(golang.org/x/tools/go/ssa.blank).store":[[0]],"(golang.org/x/tools/go/ssa.blank).typ":[[0],[]],"(golang.org/x/tools/go/ssa.byDomPreorder).Len":[[0],[]],"(golang.org/x/tools/go/ssa.byDomPreorder).Less":[[0],[0]],"(golang.org/x/tools/go/ssa.byDomPreorder).Swap":[[0]],"(golang.org/x/tools/go/ssa.domFrontier).add":[[0]],"(golang.org/x/tools/go/ssa.domFrontier).build":[[0]],"(golang.org/x/tools/go/ssa.extentNode).End":[[0],[0]],"(golang.org/x/tools/go/ssa.extentNode).Pos":[[0],[0]],"(golang.org/x/tools/go/ssa.fieldlist).At":[[0],[0]],"(golang.org/x/tools/go/ssa.fieldlist).Len":[[0],[]],"(golang.org/x/tools/go/ssa.opaqueType).Underlying":[[0],[0]],"(golang.org/x/tools/go/ssa/interp.array).eq":[[0],[]],"(golang.org/x/tools/go/ssa/interp.array).hash":[[0],[0]],"(golang.org/x/tools/go/ssa/interp.iface).eq":[[0],[0,2]],"(golang.org/x/tools/go/ssa/interp.iface).hash":[[0],[0]],"(golang.org/x/tools/go/ssa/interp.opaqueType).Underlying":[[0],[0]],"(golang.org/x/tools/go/ssa/interp.rtype).eq":[[0],[0,2]],"(golang.org/x/tools/go/ssa/interp.rtype).hash":[[0],[0]],"(golang.org/x/tools/go/ssa/interp.stringIter).Len":[[0],[0]],"(golang.org/x/tools/go/ssa/interp.stringIter).Read":[[0],[],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).ReadAt":[[0],[],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).ReadByte":[[0],[0],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).ReadRune":[[0],[0],[],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).Reset":[[0]],"(golang.org/x/tools/go/ssa/interp.stringIter).Seek":[[0],[0,1],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).Size":[[0],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).UnreadByte":[[0],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).UnreadRune":[[0],[]],"(golang.org/x/tools/go/ssa/interp.stringIter).WriteTo":[[0],[],[1]],"(golang.org/x/tools/go/ssa/interp.structure).eq":[[0],[]],"(golang.org/x/tools/go/ssa/interp.structure).hash":[[0],[]],"(golang.org/x/tools/go/ssa/interp.targetPanic).String":[[0],[]],"(golang.org/x/tools/go/types/typeutil.Hasher).Hash":[[0],[0,1]],"(golang.org/x/tools/go/types/typeutil.Hasher).hashFor":[[0],[0,1]],"(golang.org/x/tools/go/types/typeutil.Hasher).hashPtr":[[0],[0,1]],"(golang.org/x/tools/go/types/typeutil.Hasher).hashTermSet":[[0],[]],"(golang.org/x/tools/go/types/typeutil.Hasher).hashTuple":[[0],[]],"(golang.org/x/tools/go/types/typeutil.Hasher).hashTypeParam":[[0],[0,1]],"(golang.org/x/tools/go/types/typeutil.Hasher).hashUnion":[[0],[]],"(golang.org/x/tools/godoc/analysis.linksByStart).Len":[[0],[]],"(golang.org/x/tools/godoc/analysis.linksByStart).Less":[[0],[]],"(golang.org/x/tools/godoc/analysis.linksByStart).Swap":[[0]],"(golang.org/x/tools/godoc/vfs.FileSystem).Lstat$thunk":[[],[0,1]],"(golang.org/x/tools/godoc/vfs.FileSystem).Stat$thunk":[[],[0,1]],"(golang.org/x/tools/godoc/vfs.NameSpace).Bind":[[0]],"(golang.org/x/tools/godoc/vfs.NameSpace).Fprint":[[0]],"(golang.org/x/tools/godoc/vfs.NameSpace).Lstat":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs.NameSpace).Open":[[0],[0,1],[1]],"(golang.org/x/tools/godoc/vfs.NameSpace).ReadDir":[[0],[0],[]],"(golang.org/x/tools/godoc/vfs.NameSpace).RootType":[[0],[]],"(golang.org/x/tools/godoc/vfs.NameSpace).Stat":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs.NameSpace).String":[[0],[]],"(golang.org/x/tools/godoc/vfs.NameSpace).clean":[[0],[1]],"(golang.org/x/tools/godoc/vfs.NameSpace).resolve":[[0],[0,1]],"(golang.org/x/tools/godoc/vfs.NameSpace).stat":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs.byName).Len":[[0],[]],"(golang.org/x/tools/godoc/vfs.byName).Less":[[0],[0]],"(golang.org/x/tools/godoc/vfs.byName).Swap":[[0]],"(golang.org/x/tools/godoc/vfs.dirInfo).IsDir":[[0],[]],"(golang.org/x/tools/godoc/vfs.dirInfo).ModTime":[[0],[]],"(golang.org/x/tools/godoc/vfs.dirInfo).Mode":[[0],[]],"(golang.org/x/tools/godoc/vfs.dirInfo).Name":[[0],[0]],"(golang.org/x/tools/godoc/vfs.dirInfo).Size":[[0],[]],"(golang.org/x/tools/godoc/vfs.dirInfo).Sys":[[0],[]],"(golang.org/x/tools/godoc/vfs.mountedFS).translate":[[0],[0,1]],"(golang.org/x/tools/godoc/vfs.noSeekFile).Close":[[0],[]],"(golang.org/x/tools/godoc/vfs.noSeekFile).Read":[[0],[],[]],"(golang.org/x/tools/godoc/vfs.noSeekFile).Stat":[[0],[],[0]],"(golang.org/x/tools/godoc/vfs.osFS).Lstat":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs.osFS).Open":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs.osFS).ReadDir":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs.osFS).RootType":[[0],[0]],"(golang.org/x/tools/godoc/vfs.osFS).Stat":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs.osFS).String":[[0],[0]],"(golang.org/x/tools/godoc/vfs.osFS).resolve":[[0],[0,1]],"(golang.org/x/tools/godoc/vfs/gatefs.gate).enter":[[0]],"(golang.org/x/tools/godoc/vfs/gatefs.gate).leave":[[0]],"(golang.org/x/tools/godoc/vfs/gatefs.gatef).Close":[[0],[]],"(golang.org/x/tools/godoc/vfs/gatefs.gatef).Read":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/gatefs.gatef).Seek":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/gatefs.gatef).enter":[[0]],"(golang.org/x/tools/godoc/vfs/gatefs.gatef).leave":[[0]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).Lstat":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).Open":[[0],[0],[]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).ReadDir":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).RootType":[[0],[]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).Stat":[[0],[],[0,1]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).String":[[0],[]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).enter":[[0]],"(golang.org/x/tools/godoc/vfs/gatefs.gatefs).leave":[[0]],"(golang.org/x/tools/godoc/vfs/httpfs.httpFile).Close":[[0],[]],"(golang.org/x/tools/godoc/vfs/httpfs.httpFile).Read":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/httpfs.httpFile).Seek":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFI).IsDir":[[0],[0]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFI).ModTime":[[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFI).Mode":[[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFI).Name":[[0],[0]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFI).Size":[[0],[0]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFI).Sys":[[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFS).Close":[[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFS).Lstat":[[0],[1],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFS).Open":[[0],[0,1],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFS).ReadDir":[[0],[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFS).RootType":[[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFS).Stat":[[0],[1],[]],"(golang.org/x/tools/godoc/vfs/mapfs.mapFS).String":[[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.nopCloser).Close":[[0],[]],"(golang.org/x/tools/godoc/vfs/mapfs.nopCloser).Read":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/mapfs.nopCloser).Seek":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFI).IsDir":[[0],[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFI).ModTime":[[0],[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFI).Mode":[[0],[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFI).Name":[[0],[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFI).Size":[[0],[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFI).Sys":[[0],[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFS).RegisterDecompressor":[[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFS).decompressor":[[0],[0,1]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFS).init":[[0],[0,1,2]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFS).initFileList":[[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFS).openLookup":[[0],[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipFS).openReadDir":[[0],[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipList).Len":[[0],[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipList).Less":[[0],[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipList).Swap":[[0]],"(golang.org/x/tools/godoc/vfs/zipfs.zipList).lookup":[[0],[],[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipList).lookup$1":[[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipList).lookup$2":[[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipSeek).Close":[[0],[]],"(golang.org/x/tools/godoc/vfs/zipfs.zipSeek).Read":[[0],[],[]],"(golang.org/x/tools/internal/apidiff.Report).String":[[0],[]],"(golang.org/x/tools/internal/apidiff.Report).Text":[[0],[1]],"(golang.org/x/tools/internal/apidiff.Report).TextCompatible":[[0],[1]],"(golang.org/x/tools/internal/apidiff.Report).TextIncompatible":[[0],[1]],"(golang.org/x/tools/internal/apidiff.Report).messages":[[0],[0]],"(golang.org/x/tools/internal/apidiff.Report).writeMessages":[[0],[1]],"(golang.org/x/tools/internal/apidiff.messageSet).add":[[0]],"(golang.org/x/tools/internal/apidiff.messageSet).collect":[[0],[0]],"(golang.org/x/tools/internal/event/core.Event).At":[[0],[0]],"(golang.org/x/tools/internal/event/core.Event).Find":[[0],[0]],"(golang.org/x/tools/internal/event/core.Event).Format":[[0]],"(golang.org/x/tools/internal/event/core.Event).Label":[[0],[0]],"(golang.org/x/tools/internal/event/core.Event).Valid":[[0],[1]],"(golang.org/x/tools/internal/event/export.SpanID).IsValid":[[0],[0]],"(golang.org/x/tools/internal/event/export.SpanID).String":[[0],[]],"(golang.org/x/tools/internal/event/export.TraceID).String":[[0],[]],"(golang.org/x/tools/internal/event/export/metric.HistogramFloat64).Record":[[0]],"(golang.org/x/tools/internal/event/export/metric.HistogramInt64).Record":[[0]],"(golang.org/x/tools/internal/event/export/metric.Scalar).Count":[[0]],"(golang.org/x/tools/internal/event/export/metric.Scalar).LatestFloat64":[[0]],"(golang.org/x/tools/internal/event/export/metric.Scalar).LatestInt64":[[0]],"(golang.org/x/tools/internal/event/export/metric.Scalar).SumFloat64":[[0]],"(golang.org/x/tools/internal/event/export/metric.Scalar).SumInt64":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.Annotation).labelTimeEventValue":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.BoolAttribute).labelAttribute":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.DoubleAttribute).labelAttribute":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.IntAttribute).labelAttribute":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.MessageEvent).labelTimeEventValue":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.PointDistributionValue).labelPointValue":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.PointDoubleValue).labelPointValue":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.PointInt64Value).labelPointValue":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.PointSummaryValue).labelPointValue":[[0]],"(golang.org/x/tools/internal/event/export/ocagent/wire.StringAttribute).labelAttribute":[[0]],"(golang.org/x/tools/internal/event/label.Label).Format":[[0]],"(golang.org/x/tools/internal/event/label.Label).Key":[[0],[0]],"(golang.org/x/tools/internal/event/label.Label).Unpack64":[[0],[0]],"(golang.org/x/tools/internal/event/label.Label).UnpackString":[[0],[]],"(golang.org/x/tools/internal/event/label.Label).UnpackValue":[[0],[0]],"(golang.org/x/tools/internal/event/label.Label).Valid":[[0],[0]],"(golang.org/x/tools/internal/event/label.listMap).Find":[[0],[0]],"(golang.org/x/tools/internal/event/label.mapChain).Find":[[0],[]],"(golang.org/x/tools/internal/fakenet.fakeAddr).Network":[[0],[]],"(golang.org/x/tools/internal/fakenet.fakeAddr).String":[[0],[0]],"(golang.org/x/tools/internal/imports.byCommentPos).Len":[[0],[]],"(golang.org/x/tools/internal/imports.byCommentPos).Less":[[0],[0]],"(golang.org/x/tools/internal/imports.byCommentPos).Swap":[[0]],"(golang.org/x/tools/internal/imports.byDistanceOrImportPathShortLength).Len":[[0],[]],"(golang.org/x/tools/internal/imports.byDistanceOrImportPathShortLength).Less":[[0],[0]],"(golang.org/x/tools/internal/imports.byDistanceOrImportPathShortLength).Swap":[[0]],"(golang.org/x/tools/internal/imports.byImportSpec).Len":[[0],[]],"(golang.org/x/tools/internal/imports.byImportSpec).Less":[[0],[0]],"(golang.org/x/tools/internal/imports.byImportSpec).Swap":[[0]],"(golang.org/x/tools/internal/imports.visitFn).Visit":[[0],[]],"(golang.org/x/tools/internal/jsonrpc2.ID).Format":[[0]],"(golang.org/x/tools/internal/jsonrpc2.ServerFunc).ServeStream":[[0],[]],"(golang.org/x/tools/internal/jsonrpc2.constError).Error":[[0],[0]],"(golang.org/x/tools/internal/jsonrpc2.wireVersionTag).MarshalJSON":[[0],[],[]],"(golang.org/x/tools/internal/jsonrpc2.wireVersionTag).UnmarshalJSON":[[0],[1]],"(golang.org/x/tools/internal/jsonrpc2/servertest.PipeServer).Close":[[0],[0]],"(golang.org/x/tools/internal/jsonrpc2/servertest.PipeServer).add":[[0]],"(golang.org/x/tools/internal/jsonrpc2/servertest.TCPServer).Close":[[0],[0]],"(golang.org/x/tools/internal/jsonrpc2/servertest.TCPServer).add":[[0]],"(golang.org/x/tools/internal/jsonrpc2_v2.ConnectionOptions).Bind":[[0],[0],[]],"(golang.org/x/tools/internal/jsonrpc2_v2.HandlerFunc).Handle":[[0],[],[]],"(golang.org/x/tools/internal/jsonrpc2_v2.ID).IsValid":[[0],[0]],"(golang.org/x/tools/internal/jsonrpc2_v2.ID).Raw":[[0],[0]],"(golang.org/x/tools/internal/jsonrpc2_v2.defaultHandler).Handle":[[0],[],[]],"(golang.org/x/tools/internal/jsonrpc2_v2.defaultHandler).Preempt":[[0],[],[]],"(golang.org/x/tools/internal/jsonrpc2_v2.headerFramer).Reader":[[0],[1]],"(golang.org/x/tools/internal/jsonrpc2_v2.headerFramer).Writer":[[0],[1]],"(golang.org/x/tools/internal/jsonrpc2_v2.rawFramer).Reader":[[0],[1]],"(golang.org/x/tools/internal/jsonrpc2_v2.rawFramer).Writer":[[0],[1]],"(golang.org/x/tools/internal/lsp/command.Command).ID":[[0],[0]],"(golang.org/x/tools/internal/lsp/debug/log.Level).Log":[[0]],"(golang.org/x/tools/internal/lsp/debug/log.Level).Logf":[[0]],"(golang.org/x/tools/internal/lsp/diff.OpKind).String":[[0],[]],"(golang.org/x/tools/internal/lsp/diff.Unified).Format":[[0]],"(golang.org/x/tools/internal/lsp/diff/lcs.lcs).fix":[[0],[0]],"(golang.org/x/tools/internal/lsp/diff/lcs.lcs).fix$1":[[]],"(golang.org/x/tools/internal/lsp/diff/lcs.lcs).sort":[[0],[0]],"(golang.org/x/tools/internal/lsp/diff/lcs.lcs).sort$1":[[]],"(golang.org/x/tools/internal/lsp/diff/lcs.lcs).valid":[[0],[]],"(golang.org/x/tools/internal/lsp/fake.Edit).toProtocolChangeEvent":[[0],[0]],"(golang.org/x/tools/internal/lsp/fake.Pos).String":[[0],[]],"(golang.org/x/tools/internal/lsp/fake.Pos).ToProtocolPosition":[[0],[0]],"(golang.org/x/tools/internal/lsp/fake.RelativeTo).AbsPath":[[0],[0,1]],"(golang.org/x/tools/internal/lsp/fake.RelativeTo).RelPath":[[0],[1]],"(golang.org/x/tools/internal/lsp/fake.Workdir).AbsPath":[[0],[0,1]],"(golang.org/x/tools/internal/lsp/fake.Workdir).RelPath":[[0],[1]],"(golang.org/x/tools/internal/lsp/fake.buffer).text":[[0],[0]],"(golang.org/x/tools/internal/lsp/fuzzy.scoreVal).prevK":[[0],[0]],"(golang.org/x/tools/internal/lsp/fuzzy.scoreVal).val":[[0],[0]],"(golang.org/x/tools/internal/lsp/protocol.CompletionItemKind).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.CompletionTriggerKind).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.DiagnosticSeverity).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.DiagnosticTag).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.DocumentHighlightKind).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.DocumentURI).SpanURI":[[0],[0]],"(golang.org/x/tools/internal/lsp/protocol.FileChangeType).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.InitializeError).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.InsertTextFormat).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.MessageType).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.Range).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.SymbolKind).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.TextDocumentSaveReason).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.TextDocumentSyncKind).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.WatchKind).Format":[[0]],"(golang.org/x/tools/internal/lsp/protocol.clientConn).Call":[[0],[0,4]],"(golang.org/x/tools/internal/lsp/protocol.clientConn).Close":[[0],[0]],"(golang.org/x/tools/internal/lsp/protocol.clientConn).Notify":[[0],[0]],"(golang.org/x/tools/internal/lsp/protocol.clientConnV2).Call":[[0],[4]],"(golang.org/x/tools/internal/lsp/protocol.clientConnV2).Close":[[0],[0]],"(golang.org/x/tools/internal/lsp/protocol.clientConnV2).Notify":[[0],[0]],"(golang.org/x/tools/internal/span.Point).Column":[[0],[0]],"(golang.org/x/tools/internal/span.Point).HasOffset":[[0],[0]],"(golang.org/x/tools/internal/span.Point).HasPosition":[[0],[0]],"(golang.org/x/tools/internal/span.Point).IsValid":[[0],[0]],"(golang.org/x/tools/internal/span.Point).Line":[[0],[0]],"(golang.org/x/tools/internal/span.Point).Offset":[[0],[0]],"(golang.org/x/tools/internal/span.Range).IsPoint":[[0],[0]],"(golang.org/x/tools/internal/span.Range).Span":[[0],[0],[0]],"(golang.org/x/tools/internal/span.Span).End":[[0],[0]],"(golang.org/x/tools/internal/span.Span).Format":[[0]],"(golang.org/x/tools/internal/span.Span).HasOffset":[[0],[0]],"(golang.org/x/tools/internal/span.Span).HasPosition":[[0],[0]],"(golang.org/x/tools/internal/span.Span).IsPoint":[[0],[0]],"(golang.org/x/tools/internal/span.Span).IsValid":[[0],[0]],"(golang.org/x/tools/internal/span.Span).Range":[[0],[0,1],[0,1]],"(golang.org/x/tools/internal/span.Span).Start":[[0],[0]],"(golang.org/x/tools/internal/span.Span).URI":[[0],[0]],"(golang.org/x/tools/internal/span.Span).WithAll":[[0],[0],[0,1]],"(golang.org/x/tools/internal/span.Span).WithOffset":[[0],[0],[0,1]],"(golang.org/x/tools/internal/span.Span).WithPosition":[[0],[0],[0,1]],"(golang.org/x/tools/internal/span.URI).Filename":[[0],[0]],"(golang.org/x/tools/internal/span.URI).IsFile":[[0],[0]],"(golang.org/x/tools/internal/span.point).hasOffset":[[0],[0]],"(golang.org/x/tools/internal/span.point).hasPosition":[[0],[0]],"(golang.org/x/tools/internal/span.point).isValid":[[0],[0]],"(golang.org/x/tools/internal/span.point).isZero":[[0],[0]],"(golang.org/x/tools/internal/stack.Call).Format":[[0]],"(golang.org/x/tools/internal/stack.Frame).Format":[[0]],"(golang.org/x/tools/internal/stack.Frame).equal":[[0],[0,1]],"(golang.org/x/tools/internal/stack.Frame).less":[[0],[0,1]],"(golang.org/x/tools/internal/stack.Function).Format":[[0]],"(golang.org/x/tools/internal/stack.Group).Format":[[0]],"(golang.org/x/tools/internal/stack.Position).Format":[[0]],"(golang.org/x/tools/internal/stack.Position).equal":[[0],[0,1]],"(golang.org/x/tools/internal/stack.Position).less":[[0],[0,1]],"(golang.org/x/tools/internal/stack.Stack).equal":[[0],[]],"(golang.org/x/tools/internal/stack.Stack).less":[[0],[]],"(golang.org/x/tools/internal/stack.Summary).Format":[[0]],"(golang.org/x/tools/internal/tool.commandLineError).Error":[[0],[0]],"(golang.org/x/tools/internal/typeparams.termlist).String":[[0],[]],"(golang.org/x/tools/internal/typeparams.termlist).intersect":[[0],[0,1]],"(golang.org/x/tools/internal/typeparams.termlist).isAll":[[0],[]],"(golang.org/x/tools/internal/typeparams.termlist).isEmpty":[[0],[]],"(golang.org/x/tools/internal/typeparams.termlist).norm":[[0],[0]],"(golang.org/x/tools/internal/typeparams.termlist).union":[[0],[0]],"(golang.org/x/tools/internal/typeparams/genericfeatures.Features).String":[[0],[]],"(golang.org/x/tools/internal/typesinternal.ErrorCode).String":[[0],[0]],"(golang.org/x/tools/internal/xcontext.detachedContext).Deadline":[[0],[],[]],"(golang.org/x/tools/internal/xcontext.detachedContext).Done":[[0],[]],"(golang.org/x/tools/internal/xcontext.detachedContext).Err":[[0],[]],"(golang.org/x/tools/internal/xcontext.detachedContext).Value":[[0],[0]],"(golang.org/x/tools/refactor/importgraph.Graph).Search":[[0],[]],"(golang.org/x/tools/refactor/importgraph.Graph).Search$1":[],"(golang.org/x/tools/refactor/importgraph.Graph).addEdge":[[0]],"(html/template.attr).String":[[0],[0]],"(html/template.context).String":[[0],[]],"(html/template.context).eq":[[0],[0,1]],"(html/template.context).mangle":[[0],[0,1]],"(html/template.delim).String":[[0],[0]],"(html/template.element).String":[[0],[0]],"(html/template.jsCtx).String":[[0],[0]],"(html/template.state).String":[[0],[0]],"(html/template.urlPart).String":[[0],[0]],"(image.Point).Add":[[0],[0,1]],"(image.Point).Div":[[0],[0,1]],"(image.Point).Eq":[[0],[0,1]],"(image.Point).In":[[0],[0,1]],"(image.Point).Mod":[[0],[0,1]],"(image.Point).Mul":[[0],[0,1]],"(image.Point).String":[[0],[0]],"(image.Point).Sub":[[0],[0,1]],"(image.Rectangle).Add":[[0],[0,1]],"(image.Rectangle).At":[[0],[]],"(image.Rectangle).Bounds":[[0],[0]],"(image.Rectangle).Canon":[[0],[0]],"(image.Rectangle).ColorModel":[[0],[]],"(image.Rectangle).Dx":[[0],[0]],"(image.Rectangle).Dy":[[0],[0]],"(image.Rectangle).Empty":[[0],[0]],"(image.Rectangle).Eq":[[0],[1]],"(image.Rectangle).In":[[0],[0,1]],"(image.Rectangle).Inset":[[0],[0,1]],"(image.Rectangle).Intersect":[[0],[0,1]],"(image.Rectangle).Overlaps":[[0],[0,1]],"(image.Rectangle).RGBA64At":[[0],[]],"(image.Rectangle).Size":[[0],[0]],"(image.Rectangle).String":[[0],[0]],"(image.Rectangle).Sub":[[0],[0,1]],"(image.Rectangle).Union":[[0],[0,1]],"(image.YCbCrSubsampleRatio).String":[[0],[]],"(image/color.Alpha).RGBA":[[0],[0],[0],[0],[0]],"(image/color.Alpha16).RGBA":[[0],[0],[0],[0],[0]],"(image/color.CMYK).RGBA":[[0],[0],[0],[0],[]],"(image/color.Gray).RGBA":[[0],[0],[0],[0],[]],"(image/color.Gray16).RGBA":[[0],[0],[0],[0],[]],"(image/color.NRGBA).RGBA":[[0],[0],[0],[0],[0]],"(image/color.NRGBA64).RGBA":[[0],[0],[0],[0],[0]],"(image/color.NYCbCrA).RGBA":[[0],[0],[0],[0],[0]],"(image/color.Palette).Convert":[[0],[0]],"(image/color.Palette).Index":[[0],[]],"(image/color.RGBA).RGBA":[[0],[0],[0],[0],[0]],"(image/color.RGBA64).RGBA":[[0],[0],[0],[0],[0]],"(image/color.YCbCr).RGBA":[[0],[0],[0],[0],[]],"(image/draw.Op).Draw":[[0]],"(image/draw.floydSteinberg).Draw":[[0]],"(image/gif.blockWriter).Flush":[[0],[0]],"(image/gif.blockWriter).Write":[[0],[],[0]],"(image/gif.blockWriter).WriteByte":[[0],[0]],"(image/gif.blockWriter).close":[[0]],"(image/gif.blockWriter).setup":[[0]],"(image/jpeg.FormatError).Error":[[0],[0]],"(image/jpeg.UnsupportedError).Error":[[0],[0]],"(image/png.FormatError).Error":[[0],[0]],"(image/png.UnsupportedError).Error":[[0],[0]],"(internal/buildcfg.gowasmFeatures).String":[[0],[]],"(internal/intern.key).Value":[[0],[0]],"(internal/pkgbits.CodeObj).Marker":[[0],[]],"(internal/pkgbits.CodeObj).Value":[[0],[0]],"(internal/pkgbits.CodeType).Marker":[[0],[]],"(internal/pkgbits.CodeType).Value":[[0],[0]],"(internal/pkgbits.CodeVal).Marker":[[0],[]],"(internal/pkgbits.CodeVal).Value":[[0],[0]],"(internal/pkgbits.SyncMarker).String":[[0],[0]],"(internal/poll.errNetClosing).Error":[[0],[]],"(internal/poll.errNetClosing).Temporary":[[0],[]],"(internal/poll.errNetClosing).Timeout":[[0],[]],"(internal/profile.Label).decoder":[[0],[]],"(internal/profile.Label).encode":[[0]],"(internal/reflectlite.Kind).String":[[0],[]],"(internal/reflectlite.Value).CanSet":[[0],[0]],"(internal/reflectlite.Value).Elem":[[0],[0]],"(internal/reflectlite.Value).IsNil":[[0],[0]],"(internal/reflectlite.Value).IsValid":[[0],[0]],"(internal/reflectlite.Value).Kind":[[0],[0]],"(internal/reflectlite.Value).Len":[[0],[0]],"(internal/reflectlite.Value).Set":[[0]],"(internal/reflectlite.Value).Type":[[0],[0]],"(internal/reflectlite.Value).assignTo":[[0],[0,2,3]],"(internal/reflectlite.Value).kind":[[0],[0]],"(internal/reflectlite.Value).mustBeAssignable":[[0]],"(internal/reflectlite.Value).mustBeExported":[[0]],"(internal/reflectlite.Value).numMethod":[[0],[]],"(internal/reflectlite.Value).pointer":[[0],[0]],"(internal/reflectlite.Value).ro":[[0],[]],"(internal/reflectlite.flag).kind":[[0],[0]],"(internal/reflectlite.flag).mustBeAssignable":[[0]],"(internal/reflectlite.flag).mustBeExported":[[0]],"(internal/reflectlite.flag).ro":[[0],[]],"(internal/reflectlite.name).data":[[0],[0,1]],"(internal/reflectlite.name).embedded":[[0],[0]],"(internal/reflectlite.name).hasTag":[[0],[0]],"(internal/reflectlite.name).isExported":[[0],[0]],"(internal/reflectlite.name).name":[[0],[]],"(internal/reflectlite.name).pkgPath":[[0],[]],"(internal/reflectlite.name).readVarint":[[0],[],[0,1]],"(internal/reflectlite.name).tag":[[0],[]],"(internal/xcoff.Section).ReadAt":[[0],[],[]],"(internal/xcoff.zeroReaderAt).ReadAt":[[0],[],[]],"(io.Reader).Read$bound":[[],[]],"(io.Writer).Write$bound":[[],[]],"(io.discard).ReadFrom":[[0],[],[1]],"(io.discard).Write":[[0],[],[]],"(io.discard).WriteString":[[0],[],[]],"(io.eofReader).Read":[[0],[],[]],"(io.nopCloser).Close":[[0],[]],"(io.nopCloser).Read":[[0],[],[0]],"(io.nopCloserWriterTo).Close":[[0],[]],"(io.nopCloserWriterTo).Read":[[0],[],[0]],"(io.nopCloserWriterTo).WriteTo":[[0],[],[0,1]],"(io/fs.FileMode).IsDir":[[0],[0]],"(io/fs.FileMode).IsRegular":[[0],[0]],"(io/fs.FileMode).Perm":[[0],[0]],"(io/fs.FileMode).String":[[0],[]],"(io/fs.FileMode).Type":[[0],[0]],"(io/fs.dirInfo).Info":[[0],[0],[]],"(io/fs.dirInfo).IsDir":[[0],[]],"(io/fs.dirInfo).Name":[[0],[0]],"(io/fs.dirInfo).Type":[[0],[]],"(math/big.Accuracy).String":[[0],[0]],"(math/big.ErrNaN).Error":[[0],[0]],"(math/big.RoundingMode).String":[[0],[0]],"(math/big.byteReader).Read":[[0],[],[]],"(math/big.byteReader).ReadByte":[[0],[0],[0]],"(math/big.byteReader).ReadRune":[[0],[0],[],[]],"(math/big.byteReader).SkipSpace":[[0]],"(math/big.byteReader).Token":[[0],[],[]],"(math/big.byteReader).UnreadByte":[[0],[]],"(math/big.byteReader).UnreadRune":[[0],[]],"(math/big.byteReader).Width":[[0],[],[]],"(math/big.nat).add":[[0],[0,1]],"(math/big.nat).and":[[0],[0,1,2]],"(math/big.nat).andNot":[[0],[0,1,2]],"(math/big.nat).bit":[[0],[0,1]],"(math/big.nat).bitLen":[[0],[0]],"(math/big.nat).bytes":[[0],[]],"(math/big.nat).clear":[[0]],"(math/big.nat).cmp":[[0],[]],"(math/big.nat).convertWords":[[0]],"(math/big.nat).div":[[0],[0,2],[1,2,3]],"(math/big.nat).divBasic":[[0]],"(math/big.nat).divLarge":[[0],[0],[1]],"(math/big.nat).divRecursive":[[0]],"(math/big.nat).divRecursiveStep":[[0]],"(math/big.nat).divW":[[0],[0,1],[1,2]],"(math/big.nat).expNN":[[0],[0,1,3]],"(math/big.nat).expNNMontgomery":[[0],[0,3]],"(math/big.nat).expNNWindowed":[[0],[0,1,3]],"(math/big.nat).expWW":[[0],[0,1]],"(math/big.nat).itoa":[[0],[0]],"(math/big.nat).make":[[0],[0]],"(math/big.nat).modW":[[0],[0,1]],"(math/big.nat).montgomery":[[0],[0]],"(math/big.nat).mul":[[0],[0]],"(math/big.nat).mulAddWW":[[0],[0,3]],"(math/big.nat).mulRange":[[0],[0,1]],"(math/big.nat).norm":[[0],[0]],"(math/big.nat).or":[[0],[0,1,2]],"(math/big.nat).probablyPrimeLucas":[[0],[0]],"(math/big.nat).probablyPrimeMillerRabin":[[0],[]],"(math/big.nat).random":[[0],[0,3]],"(math/big.nat).scan":[[0],[0,2],[2],[],[]],"(math/big.nat).set":[[0],[0,1]],"(math/big.nat).setBit":[[0],[0,1,2]],"(math/big.nat).setBytes":[[0],[0,1]],"(math/big.nat).setUint64":[[0],[0,1]],"(math/big.nat).setWord":[[0],[0,1]],"(math/big.nat).shl":[[0],[0,1]],"(math/big.nat).shr":[[0],[0,1]],"(math/big.nat).sqr":[[0],[0,1]],"(math/big.nat).sqrt":[[0],[0,1]],"(math/big.nat).sticky":[[0],[]],"(math/big.nat).sub":[[0],[0,1]],"(math/big.nat).trailingZeroBits":[[0],[]],"(math/big.nat).utoa":[[0],[0]],"(math/big.nat).xor":[[0],[0,1,2]],"(mime.WordEncoder).Encode":[[0],[2]],"(mime.WordEncoder).bEncode":[[0]],"(mime.WordEncoder).encodeWord":[[0],[]],"(mime.WordEncoder).openWord":[[0]],"(mime.WordEncoder).qEncode":[[0]],"(mime.WordEncoder).splitWord":[[0]],"(mime/multipart.partReader).Read":[[0],[],[0]],"(mime/multipart.sectionReadCloser).Close":[[0],[]],"(mime/multipart.sectionReadCloser).Read":[[0],[],[]],"(mime/multipart.sectionReadCloser).ReadAt":[[0],[],[]],"(mime/multipart.sectionReadCloser).Seek":[[0],[0,1],[]],"(mime/multipart.sectionReadCloser).Size":[[0],[0]],"(net.Flags).String":[[0],[]],"(net.HardwareAddr).String":[[0],[0]],"(net.IP).DefaultMask":[[0],[]],"(net.IP).Equal":[[0],[0,1]],"(net.IP).IsGlobalUnicast":[[0],[0]],"(net.IP).IsInterfaceLocalMulticast":[[0],[0]],"(net.IP).IsLinkLocalMulticast":[[0],[0]],"(net.IP).IsLinkLocalUnicast":[[0],[0]],"(net.IP).IsLoopback":[[0],[0]],"(net.IP).IsMulticast":[[0],[0]],"(net.IP).IsPrivate":[[0],[0]],"(net.IP).IsUnspecified":[[0],[0]],"(net.IP).MarshalText":[[0],[0],[0]],"(net.IP).Mask":[[0],[0,1]],"(net.IP).String":[[0],[0]],"(net.IP).To16":[[0],[0]],"(net.IP).To4":[[0],[0]],"(net.IP).matchAddrFamily":[[0],[1]],"(net.IPMask).Size":[[0],[],[]],"(net.IPMask).String":[[0],[0]],"(net.InvalidAddrError).Error":[[0],[0]],"(net.InvalidAddrError).Temporary":[[0],[]],"(net.InvalidAddrError).Timeout":[[0],[]],"(net.UnknownNetworkError).Error":[[0],[0]],"(net.UnknownNetworkError).Temporary":[[0],[]],"(net.UnknownNetworkError).Timeout":[[0],[]],"(net.addrList).first":[[0],[0]],"(net.addrList).forResolve":[[0],[0]],"(net.addrList).partition":[[0],[0],[0]],"(net.addrPortUDPAddr).Addr":[[0],[0]],"(net.addrPortUDPAddr).AppendTo":[[0],[0,1]],"(net.addrPortUDPAddr).IsValid":[[0],[0]],"(net.addrPortUDPAddr).MarshalBinary":[[0],[],[]],"(net.addrPortUDPAddr).MarshalText":[[0],[0],[]],"(net.addrPortUDPAddr).Network":[[0],[]],"(net.addrPortUDPAddr).Port":[[0],[0]],"(net.addrPortUDPAddr).String":[[0],[0]],"(net.addrPortUDPAddr).isZero":[[0],[0]],"(net.addrinfoErrno).Error":[[0],[]],"(net.addrinfoErrno).Temporary":[[0],[0]],"(net.addrinfoErrno).Timeout":[[0],[]],"(net.byMaskLength).Len":[[0],[]],"(net.byMaskLength).Less":[[0],[]],"(net.byMaskLength).Swap":[[0]],"(net.byPref).Len":[[0],[]],"(net.byPref).Less":[[0],[0]],"(net.byPref).Swap":[[0]],"(net.byPref).sort":[[0]],"(net.byPriorityWeight).Len":[[0],[]],"(net.byPriorityWeight).Less":[[0],[0]],"(net.byPriorityWeight).Swap":[[0]],"(net.byPriorityWeight).shuffleByWeight":[[0]],"(net.byPriorityWeight).sort":[[0]],"(net.canceledError).Error":[[0],[]],"(net.canceledError).Is":[[0],[1]],"(net.fileAddr).Network":[[0],[]],"(net.fileAddr).String":[[0],[0]],"(net.hostLookupOrder).String":[[0],[0]],"(net.nssCriterion).standardStatusAction":[[0],[0]],"(net.nssSource).standardCriteria":[[0],[]],"(net.onlyValuesCtx).Deadline":[[0],[0],[]],"(net.onlyValuesCtx).Done":[[0],[]],"(net.onlyValuesCtx).Err":[[0],[]],"(net.pipeAddr).Network":[[0],[]],"(net.pipeAddr).String":[[0],[]],"(net.policyTable).Classify":[[0],[0]],"(net.writerOnly).Write":[[0],[],[0]],"(net/http.ConnState).String":[[0],[0]],"(net/http.Dir).Open":[[0],[],[0,1]],"(net/http.Handler).ServeHTTP$bound":[],"(net/http.HandlerFunc).ServeHTTP":[[0]],"(net/http.Header).Add":[[0]],"(net/http.Header).Clone":[[0],[0]],"(net/http.Header).Del":[[0]],"(net/http.Header).Get":[[0],[0,1]],"(net/http.Header).Set":[[0]],"(net/http.Header).Values":[[0],[0,1]],"(net/http.Header).Write":[[0],[]],"(net/http.Header).WriteSubset":[[0],[]],"(net/http.Header).get":[[0],[0,1]],"(net/http.Header).has":[[0],[]],"(net/http.Header).sortedKeyValues":[[0],[0],[0]],"(net/http.Header).write":[[0],[]],"(net/http.Header).writeSubset":[[0],[]],"(net/http.bodyLocked).Read":[[0],[],[0]],"(net/http.bufioFlushWriter).Write":[[0],[],[0]],"(net/http.checkConnErrorWriter).Write":[[0],[],[]],"(net/http.connectMethodKey).String":[[0],[]],"(net/http.dirEntryDirs).isDir":[[0],[]],"(net/http.dirEntryDirs).len":[[0],[]],"(net/http.dirEntryDirs).name":[[0],[0]],"(net/http.errorReader).Read":[[0],[],[0]],"(net/http.extraHeader).Write":[[0]],"(net/http.fakeLocker).Lock":[[0]],"(net/http.fakeLocker).Unlock":[[0]],"(net/http.fileInfoDirs).isDir":[[0],[]],"(net/http.fileInfoDirs).len":[[0],[]],"(net/http.fileInfoDirs).name":[[0],[0]],"(net/http.fileTransport).RoundTrip":[[0],[],[]],"(net/http.fileTransport).RoundTrip$1":[],"(net/http.finishAsyncByteRead).Read":[[0],[0],[0]],"(net/http.globalOptionsHandler).ServeHTTP":[[0]],"(net/http.htmlSig).match":[[0],[]],"(net/http.http2ConnectionError).Error":[[0],[]],"(net/http.http2ContinuationFrame).Header":[[0],[0]],"(net/http.http2ContinuationFrame).String":[[0],[]],"(net/http.http2ContinuationFrame).writeDebug":[[0]],"(net/http.http2DataFrame).Header":[[0],[0]],"(net/http.http2DataFrame).String":[[0],[]],"(net/http.http2DataFrame).writeDebug":[[0]],"(net/http.http2ErrCode).String":[[0],[0]],"(net/http.http2ErrCode).stringToken":[[0],[0]],"(net/http.http2Flags).Has":[[0],[0,1]],"(net/http.http2FrameHeader).Header":[[0],[0]],"(net/http.http2FrameHeader).String":[[0],[]],"(net/http.http2FrameHeader).writeDebug":[[0]],"(net/http.http2FrameType).String":[[0],[0]],"(net/http.http2FrameWriteRequest).Consume":[[0],[0],[0],[]],"(net/http.http2FrameWriteRequest).DataSize":[[0],[]],"(net/http.http2FrameWriteRequest).StreamID":[[0],[0]],"(net/http.http2FrameWriteRequest).String":[[0],[]],"(net/http.http2FrameWriteRequest).isControl":[[0],[0]],"(net/http.http2GoAwayError).Error":[[0],[]],"(net/http.http2GoAwayFrame).Header":[[0],[0]],"(net/http.http2GoAwayFrame).String":[[0],[]],"(net/http.http2GoAwayFrame).writeDebug":[[0]],"(net/http.http2HeadersFrame).Header":[[0],[0]],"(net/http.http2HeadersFrame).String":[[0],[]],"(net/http.http2HeadersFrame).writeDebug":[[0]],"(net/http.http2MetaHeadersFrame).HasPriority":[[0],[0]],"(net/http.http2MetaHeadersFrame).Header":[[0],[0]],"(net/http.http2MetaHeadersFrame).HeaderBlockFragment":[[0],[0]],"(net/http.http2MetaHeadersFrame).HeadersEnded":[[0],[0]],"(net/http.http2MetaHeadersFrame).StreamEnded":[[0],[0]],"(net/http.http2MetaHeadersFrame).String":[[0],[]],"(net/http.http2MetaHeadersFrame).checkValid":[[0]],"(net/http.http2MetaHeadersFrame).invalidate":[[0]],"(net/http.http2MetaHeadersFrame).writeDebug":[[0]],"(net/http.http2PingFrame).Header":[[0],[0]],"(net/http.http2PingFrame).String":[[0],[]],"(net/http.http2PingFrame).writeDebug":[[0]],"(net/http.http2PriorityFrame).Header":[[0],[0]],"(net/http.http2PriorityFrame).IsZero":[[0],[0]],"(net/http.http2PriorityFrame).String":[[0],[]],"(net/http.http2PriorityFrame).writeDebug":[[0]],"(net/http.http2PriorityParam).IsZero":[[0],[0]],"(net/http.http2PushPromiseFrame).Header":[[0],[0]],"(net/http.http2PushPromiseFrame).String":[[0],[]],"(net/http.http2PushPromiseFrame).writeDebug":[[0]],"(net/http.http2RSTStreamFrame).Header":[[0],[0]],"(net/http.http2RSTStreamFrame).String":[[0],[]],"(net/http.http2RSTStreamFrame).writeDebug":[[0]],"(net/http.http2Setting).String":[[0],[]],"(net/http.http2Setting).Valid":[[0],[]],"(net/http.http2SettingID).String":[[0],[0]],"(net/http.http2SettingsFrame).Header":[[0],[0]],"(net/http.http2SettingsFrame).String":[[0],[]],"(net/http.http2SettingsFrame).writeDebug":[[0]],"(net/http.http2StreamError).Error":[[0],[]],"(net/http.http2StreamError).staysWithinBuffer":[[0],[1]],"(net/http.http2StreamError).writeFrame":[[0],[1]],"(net/http.http2UnknownFrame).Header":[[0],[0]],"(net/http.http2UnknownFrame).String":[[0],[]],"(net/http.http2UnknownFrame).writeDebug":[[0]],"(net/http.http2WindowUpdateFrame).Header":[[0],[0]],"(net/http.http2WindowUpdateFrame).String":[[0],[]],"(net/http.http2WindowUpdateFrame).writeDebug":[[0]],"(net/http.http2chunkWriter).Write":[[0],[],[]],"(net/http.http2closeWaiter).Close":[[0]],"(net/http.http2closeWaiter).Wait":[[0]],"(net/http.http2connError).Error":[[0],[]],"(net/http.http2duplicatePseudoHeaderError).Error":[[0],[]],"(net/http.http2erringRoundTripper).RoundTrip":[[0],[],[0]],"(net/http.http2erringRoundTripper).RoundTripErr":[[0],[0]],"(net/http.http2flushFrameWriter).staysWithinBuffer":[[0],[]],"(net/http.http2flushFrameWriter).writeFrame":[[0],[1]],"(net/http.http2gate).Done":[[0]],"(net/http.http2gate).Done$bound":[],"(net/http.http2goAwayFlowError).Error":[[0],[]],"(net/http.http2goroutineLock).check":[[0]],"(net/http.http2goroutineLock).checkNotOn":[[0]],"(net/http.http2handlerPanicRST).staysWithinBuffer":[[0],[1]],"(net/http.http2handlerPanicRST).writeFrame":[[0],[1]],"(net/http.http2headerFieldNameError).Error":[[0],[]],"(net/http.http2headerFieldValueError).Error":[[0],[]],"(net/http.http2missingBody).Close":[[0],[]],"(net/http.http2missingBody).Read":[[0],[],[]],"(net/http.http2noBodyReader).Close":[[0],[]],"(net/http.http2noBodyReader).Read":[[0],[],[]],"(net/http.http2noCachedConnError).Error":[[0],[]],"(net/http.http2noCachedConnError).IsHTTP2NoCachedConnError":[[0]],"(net/http.http2noDialClientConnPool).GetClientConn":[[0],[0,1,2],[0,1,2]],"(net/http.http2noDialClientConnPool).MarkDead":[[0]],"(net/http.http2noDialClientConnPool).addConnIfNeeded":[[0],[],[0,1]],"(net/http.http2noDialClientConnPool).addConnLocked":[[0]],"(net/http.http2noDialClientConnPool).closeIdleConnections":[[0]],"(net/http.http2noDialClientConnPool).getClientConn":[[0],[0,1,2],[0,1,2]],"(net/http.http2noDialClientConnPool).getStartDialLocked":[[0],[0,1,2]],"(net/http.http2noDialH2RoundTripper).CloseIdleConnections":[[0]],"(net/http.http2noDialH2RoundTripper).NewClientConn":[[0],[0,1],[0,1]],"(net/http.http2noDialH2RoundTripper).RoundTrip":[[0],[],[0,1]],"(net/http.http2noDialH2RoundTripper).RoundTripOpt":[[0],[],[0,1]],"(net/http.http2noDialH2RoundTripper).connPool":[[0],[0]],"(net/http.http2noDialH2RoundTripper).dialClientConn":[[0],[0,2,3],[0,2,3]],"(net/http.http2noDialH2RoundTripper).dialTLS":[[0],[0]],"(net/http.http2noDialH2RoundTripper).dialTLSWithContext":[[0],[2,3,4],[2,3,4]],"(net/http.http2noDialH2RoundTripper).disableCompression":[[0],[0]],"(net/http.http2noDialH2RoundTripper).disableKeepAlives":[[0],[0]],"(net/http.http2noDialH2RoundTripper).expectContinueTimeout":[[0],[0]],"(net/http.http2noDialH2RoundTripper).idleConnTimeout":[[0],[0]],"(net/http.http2noDialH2RoundTripper).initConnPool":[[0]],"(net/http.http2noDialH2RoundTripper).logf":[[0]],"(net/http.http2noDialH2RoundTripper).maxHeaderListSize":[[0],[0]],"(net/http.http2noDialH2RoundTripper).newClientConn":[[0],[0,1,2],[0,1,2]],"(net/http.http2noDialH2RoundTripper).newTLSConfig":[[0],[0,1]],"(net/http.http2noDialH2RoundTripper).pingTimeout":[[0],[0]],"(net/http.http2noDialH2RoundTripper).vlogf":[[0]],"(net/http.http2pseudoHeaderError).Error":[[0],[]],"(net/http.http2sortPriorityNodeSiblings).Len":[[0],[]],"(net/http.http2sortPriorityNodeSiblings).Less":[[0],[0]],"(net/http.http2sortPriorityNodeSiblings).Swap":[[0]],"(net/http.http2stickyErrWriter).Write":[[0],[],[0]],"(net/http.http2streamState).String":[[0],[]],"(net/http.http2transportResponseBody).Close":[[0],[]],"(net/http.http2transportResponseBody).Read":[[0],[0],[0]],"(net/http.http2write100ContinueHeadersFrame).staysWithinBuffer":[[0],[1]],"(net/http.http2write100ContinueHeadersFrame).writeFrame":[[0],[0,1]],"(net/http.http2writePingAck).staysWithinBuffer":[[0],[1]],"(net/http.http2writePingAck).writeFrame":[[0],[1]],"(net/http.http2writeSettings).staysWithinBuffer":[[0],[1]],"(net/http.http2writeSettings).writeFrame":[[0],[1]],"(net/http.http2writeSettingsAck).staysWithinBuffer":[[0],[1]],"(net/http.http2writeSettingsAck).writeFrame":[[0],[1]],"(net/http.http2writeWindowUpdate).staysWithinBuffer":[[0],[1]],"(net/http.http2writeWindowUpdate).writeFrame":[[0],[1]],"(net/http.httpRange).contentRange":[[0],[]],"(net/http.httpRange).mimeHeader":[[0],[1]],"(net/http.initALPNRequest).BaseContext":[[0],[0]],"(net/http.initALPNRequest).ServeHTTP":[[0]],"(net/http.ioFS).Open":[[0],[],[0,1]],"(net/http.ioFS).Open$1":[[],[0]],"(net/http.ioFile).Close":[[0],[]],"(net/http.ioFile).Read":[[0],[],[]],"(net/http.ioFile).ReadDir":[[0],[0,1],[]],"(net/http.ioFile).Readdir":[[0],[0,1],[]],"(net/http.ioFile).Seek":[[0],[],[]],"(net/http.ioFile).Stat":[[0],[],[0]],"(net/http.loggingConn).LocalAddr":[[0],[]],"(net/http.loggingConn).RemoteAddr":[[0],[0]],"(net/http.loggingConn).SetDeadline":[[0],[0]],"(net/http.loggingConn).SetReadDeadline":[[0],[0]],"(net/http.loggingConn).SetWriteDeadline":[[0],[]],"(net/http.mp4Sig).match":[[0],[]],"(net/http.noBody).Close":[[0],[]],"(net/http.noBody).Read":[[0],[],[]],"(net/http.noBody).WriteTo":[[0],[],[]],"(net/http.nothingWrittenError).Error":[[0],[0]],"(net/http.onceCloseListener).Accept":[[0],[0],[0]],"(net/http.onceCloseListener).Addr":[[0],[0]],"(net/http.persistConnWriter).ReadFrom":[[0],[],[0,1]],"(net/http.persistConnWriter).Write":[[0],[],[]],"(net/http.readWriteCloserBody).Close":[[0],[0]],"(net/http.readWriteCloserBody).Write":[[0],[],[]],"(net/http.requestBodyReadError).Error":[[0],[0]],"(net/http.serverHandler).ServeHTTP":[[0]],"(net/http.serverHandler).ServeHTTP$1":[],"(net/http.serverHandler).ServeHTTP$2":[],"(net/http.socksCommand).String":[[0],[0]],"(net/http.socksConn).Close":[[0],[0]],"(net/http.socksConn).LocalAddr":[[0],[]],"(net/http.socksConn).Read":[[0],[],[0]],"(net/http.socksConn).RemoteAddr":[[0],[0]],"(net/http.socksConn).SetDeadline":[[0],[0]],"(net/http.socksConn).SetReadDeadline":[[0],[0]],"(net/http.socksConn).SetWriteDeadline":[[0],[]],"(net/http.socksConn).Write":[[0],[],[]],"(net/http.socksReply).String":[[0],[0]],"(net/http.statusError).Error":[[0],[0]],"(net/http.stringWriter).WriteString":[[0],[],[0]],"(net/http.textSig).match":[[0],[]],"(net/http.tlsHandshakeTimeoutError).Error":[[0],[]],"(net/http.tlsHandshakeTimeoutError).Temporary":[[0],[]],"(net/http.tlsHandshakeTimeoutError).Timeout":[[0],[]],"(net/http.transportReadFromServerError).Error":[[0],[]],"(net/http.transportReadFromServerError).Unwrap":[[0],[0]],"(net/http.transportRequest).AddCookie":[[0]],"(net/http.transportRequest).BasicAuth":[[0],[],[],[]],"(net/http.transportRequest).Clone":[[0],[0,1]],"(net/http.transportRequest).Context":[[0],[0]],"(net/http.transportRequest).Cookie":[[0],[0],[]],"(net/http.transportRequest).Cookies":[[0],[0]],"(net/http.transportRequest).FormFile":[[0],[0,1],[0,1],[0,1]],"(net/http.transportRequest).FormValue":[[0],[0,1]],"(net/http.transportRequest).MultipartReader":[[0],[0],[]],"(net/http.transportRequest).ParseForm":[[0],[0]],"(net/http.transportRequest).ParseMultipartForm":[[0],[0,1]],"(net/http.transportRequest).PostFormValue":[[0],[0,1]],"(net/http.transportRequest).ProtoAtLeast":[[0],[0,2]],"(net/http.transportRequest).Referer":[[0],[0]],"(net/http.transportRequest).SetBasicAuth":[[0]],"(net/http.transportRequest).UserAgent":[[0],[0]],"(net/http.transportRequest).WithContext":[[0],[0,1]],"(net/http.transportRequest).Write":[[0],[0,1]],"(net/http.transportRequest).WriteProxy":[[0],[0,1]],"(net/http.transportRequest).closeBody":[[0],[]],"(net/http.transportRequest).expectsContinue":[[0],[]],"(net/http.transportRequest).isH2Upgrade":[[0],[0]],"(net/http.transportRequest).isReplayable":[[0],[]],"(net/http.transportRequest).multipartReader":[[0],[0],[]],"(net/http.transportRequest).outgoingLength":[[0],[0]],"(net/http.transportRequest).requiresHTTP1":[[0],[]],"(net/http.transportRequest).wantsClose":[[0],[]],"(net/http.transportRequest).wantsHttp10KeepAlive":[[0],[]],"(net/http.transportRequest).write":[[0],[0,1]],"(net/http.writerOnly).Write":[[0],[],[0]],"(net/http/fcgi.bufWriter).Available":[[0],[0]],"(net/http/fcgi.bufWriter).AvailableBuffer":[[0],[0]],"(net/http/fcgi.bufWriter).Buffered":[[0],[0]],"(net/http/fcgi.bufWriter).Flush":[[0],[0]],"(net/http/fcgi.bufWriter).ReadFrom":[[0],[],[0,1]],"(net/http/fcgi.bufWriter).Reset":[[0]],"(net/http/fcgi.bufWriter).Size":[[0],[]],"(net/http/fcgi.bufWriter).Write":[[0],[],[0]],"(net/http/fcgi.bufWriter).WriteByte":[[0],[0]],"(net/http/fcgi.bufWriter).WriteRune":[[0],[],[0]],"(net/http/fcgi.bufWriter).WriteString":[[0],[],[0]],"(net/http/httputil.dumpConn).Read":[[0],[],[0]],"(net/http/httputil.dumpConn).Write":[[0],[],[0]],"(net/http/httputil.failureToReadBody).Close":[[0],[]],"(net/http/httputil.failureToReadBody).Read":[[0],[],[]],"(net/http/httputil.neverEnding).Read":[[0],[],[]],"(net/http/httputil.switchProtocolCopier).copyFromBackend":[[0]],"(net/http/httputil.switchProtocolCopier).copyToBackend":[[0]],"(net/http/internal.FlushAfterChunkWriter).Available":[[0],[0]],"(net/http/internal.FlushAfterChunkWriter).AvailableBuffer":[[0],[0]],"(net/http/internal.FlushAfterChunkWriter).Buffered":[[0],[0]],"(net/http/internal.FlushAfterChunkWriter).Flush":[[0],[0]],"(net/http/internal.FlushAfterChunkWriter).ReadFrom":[[0],[],[0,1]],"(net/http/internal.FlushAfterChunkWriter).Reset":[[0]],"(net/http/internal.FlushAfterChunkWriter).Size":[[0],[]],"(net/http/internal.FlushAfterChunkWriter).Write":[[0],[],[0]],"(net/http/internal.FlushAfterChunkWriter).WriteByte":[[0],[0]],"(net/http/internal.FlushAfterChunkWriter).WriteRune":[[0],[],[0]],"(net/http/internal.FlushAfterChunkWriter).WriteString":[[0],[],[0]],"(net/http/pprof.handler).ServeHTTP":[[0]],"(net/http/pprof.handler).serveDeltaProfile":[[0]],"(net/internal/socktest.AfterFilter).apply":[[0],[]],"(net/internal/socktest.Cookie).Family":[[0],[0]],"(net/internal/socktest.Cookie).Protocol":[[0],[0]],"(net/internal/socktest.Cookie).Type":[[0],[0]],"(net/internal/socktest.Filter).apply":[[0],[],[]],"(net/internal/socktest.Stat).String":[[0],[]],"(net/internal/socktest.Status).String":[[0],[]],"(net/internal/socktest.stats).getLocked":[[0],[0,1]],"(net/mail.Header).AddressList":[[0],[],[0,1]],"(net/mail.Header).Date":[[0],[0],[]],"(net/mail.Header).Get":[[0],[0,1]],"(net/mail.charsetError).Error":[[0],[]],"(net/mail.debugT).Printf":[[0]],"(net/netip.Addr).AppendTo":[[0],[0,1]],"(net/netip.Addr).As16":[[0],[]],"(net/netip.Addr).As4":[[0],[]],"(net/netip.Addr).AsSlice":[[0],[]],"(net/netip.Addr).BitLen":[[0],[]],"(net/netip.Addr).Compare":[[0],[]],"(net/netip.Addr).Is4":[[0],[0]],"(net/netip.Addr).Is4In6":[[0],[0]],"(net/netip.Addr).Is6":[[0],[0]],"(net/netip.Addr).IsGlobalUnicast":[[0],[0]],"(net/netip.Addr).IsInterfaceLocalMulticast":[[0],[0]],"(net/netip.Addr).IsLinkLocalMulticast":[[0],[0]],"(net/netip.Addr).IsLinkLocalUnicast":[[0],[0]],"(net/netip.Addr).IsLoopback":[[0],[0]],"(net/netip.Addr).IsMulticast":[[0],[0]],"(net/netip.Addr).IsPrivate":[[0],[0]],"(net/netip.Addr).IsUnspecified":[[0],[0]],"(net/netip.Addr).IsValid":[[0],[0]],"(net/netip.Addr).Less":[[0],[]],"(net/netip.Addr).MarshalBinary":[[0],[],[]],"(net/netip.Addr).MarshalText":[[0],[0],[]],"(net/netip.Addr).Next":[[0],[0]],"(net/netip.Addr).Prefix":[[0],[0,1],[1]],"(net/netip.Addr).Prev":[[0],[0]],"(net/netip.Addr).String":[[0],[0]],"(net/netip.Addr).StringExpanded":[[0],[0]],"(net/netip.Addr).Unmap":[[0],[0]],"(net/netip.Addr).WithZone":[[0],[0,1]],"(net/netip.Addr).Zone":[[0],[0]],"(net/netip.Addr).appendTo4":[[0],[0]],"(net/netip.Addr).appendTo6":[[0],[0,1]],"(net/netip.Addr).hasZone":[[0],[0]],"(net/netip.Addr).isZero":[[0],[0]],"(net/netip.Addr).lessOrEq":[[0],[]],"(net/netip.Addr).marshalBinaryWithTrailingBytes":[[0],[]],"(net/netip.Addr).string4":[[0],[0]],"(net/netip.Addr).string6":[[0],[0]],"(net/netip.Addr).v4":[[0],[0,1]],"(net/netip.Addr).v6":[[0],[0,1]],"(net/netip.Addr).v6u16":[[0],[0,1]],"(net/netip.Addr).withoutZone":[[0],[0]],"(net/netip.AddrPort).Addr":[[0],[0]],"(net/netip.AddrPort).AppendTo":[[0],[0,1]],"(net/netip.AddrPort).IsValid":[[0],[0]],"(net/netip.AddrPort).MarshalBinary":[[0],[],[]],"(net/netip.AddrPort).MarshalText":[[0],[0],[]],"(net/netip.AddrPort).Port":[[0],[0]],"(net/netip.AddrPort).String":[[0],[0]],"(net/netip.AddrPort).isZero":[[0],[0]],"(net/netip.Prefix).Addr":[[0],[0]],"(net/netip.Prefix).AppendTo":[[0],[0,1]],"(net/netip.Prefix).Bits":[[0],[0]],"(net/netip.Prefix).Contains":[[0],[0,1]],"(net/netip.Prefix).IsSingleIP":[[0],[0]],"(net/netip.Prefix).IsValid":[[0],[0]],"(net/netip.Prefix).MarshalBinary":[[0],[0],[]],"(net/netip.Prefix).MarshalText":[[0],[0],[]],"(net/netip.Prefix).Masked":[[0],[0]],"(net/netip.Prefix).Overlaps":[[0],[0,1]],"(net/netip.Prefix).String":[[0],[0]],"(net/netip.Prefix).isZero":[[0],[0]],"(net/netip.parseAddrError).Error":[[0],[0]],"(net/netip.uint128).addOne":[[0],[0]],"(net/netip.uint128).and":[[0],[0,1]],"(net/netip.uint128).bitsClearedFrom":[[0],[0,1]],"(net/netip.uint128).bitsSetFrom":[[0],[0,1]],"(net/netip.uint128).commonPrefixLen":[[0],[0,1]],"(net/netip.uint128).isZero":[[0],[0]],"(net/netip.uint128).not":[[0],[0]],"(net/netip.uint128).or":[[0],[0,1]],"(net/netip.uint128).subOne":[[0],[0]],"(net/netip.uint128).xor":[[0],[0,1]],"(net/rpc.ServerError).Error":[[0],[0]],"(net/rpc.debugHTTP).Accept":[[0]],"(net/rpc.debugHTTP).HandleHTTP":[[0]],"(net/rpc.debugHTTP).Register":[[0],[]],"(net/rpc.debugHTTP).RegisterName":[[0],[1]],"(net/rpc.debugHTTP).ServeCodec":[[0]],"(net/rpc.debugHTTP).ServeConn":[[0]],"(net/rpc.debugHTTP).ServeHTTP":[[0]],"(net/rpc.debugHTTP).ServeHTTP$1":[[]],"(net/rpc.debugHTTP).ServeRequest":[[0],[0,1]],"(net/rpc.debugHTTP).freeRequest":[[0]],"(net/rpc.debugHTTP).freeResponse":[[0]],"(net/rpc.debugHTTP).getRequest":[[0],[0]],"(net/rpc.debugHTTP).getResponse":[[0],[0]],"(net/rpc.debugHTTP).readRequest":[[0],[],[0],[0],[0],[0],[],[0,1]],"(net/rpc.debugHTTP).readRequestHeader":[[0],[],[0],[0],[],[0,1]],"(net/rpc.debugHTTP).register":[[0],[2]],"(net/rpc.debugHTTP).sendResponse":[[0]],"(net/rpc.methodArray).Len":[[0],[]],"(net/rpc.methodArray).Less":[[0],[0]],"(net/rpc.methodArray).Swap":[[0]],"(net/rpc.serviceArray).Len":[[0],[]],"(net/rpc.serviceArray).Less":[[0],[0]],"(net/rpc.serviceArray).Swap":[[0]],"(net/smtp.dataCloser).Write":[[0],[],[0]],"(net/textproto.MIMEHeader).Add":[[0]],"(net/textproto.MIMEHeader).Del":[[0]],"(net/textproto.MIMEHeader).Get":[[0],[0,1]],"(net/textproto.MIMEHeader).Set":[[0]],"(net/textproto.MIMEHeader).Values":[[0],[0,1]],"(net/textproto.ProtocolError).Error":[[0],[0]],"(net/url.EscapeError).Error":[[0],[0]],"(net/url.InvalidHostError).Error":[[0],[0]],"(net/url.Values).Add":[[0]],"(net/url.Values).Del":[[0]],"(net/url.Values).Encode":[[0],[0]],"(net/url.Values).Get":[[0],[0,1]],"(net/url.Values).Has":[[0],[]],"(net/url.Values).Set":[[0]],"(os.File).close":[[0],[0]],"(os.dirFS).Open":[[0],[],[0,1]],"(os.dirFS).Stat":[[0],[],[0,1]],"(os.onlyWriter).Write":[[0],[],[0]],"(os/exec.ExitError).ExitCode":[[0],[0]],"(os/exec.ExitError).Exited":[[0],[0]],"(os/exec.ExitError).Pid":[[0],[0]],"(os/exec.ExitError).String":[[0],[0]],"(os/exec.ExitError).Success":[[0],[0]],"(os/exec.ExitError).Sys":[[0],[0]],"(os/exec.ExitError).SysUsage":[[0],[0]],"(os/exec.ExitError).SystemTime":[[0],[0]],"(os/exec.ExitError).UserTime":[[0],[0]],"(os/exec.ExitError).exited":[[0],[0]],"(os/exec.ExitError).success":[[0],[0]],"(os/exec.ExitError).sys":[[0],[0]],"(os/exec.ExitError).sysUsage":[[0],[0]],"(os/exec.ExitError).systemTime":[[0],[0]],"(os/exec.ExitError).userTime":[[0],[0]],"(os/exec.closeOnce).Chdir":[[0],[0]],"(os/exec.closeOnce).Chmod":[[0],[0]],"(os/exec.closeOnce).Chown":[[0],[0]],"(os/exec.closeOnce).Fd":[[0],[0]],"(os/exec.closeOnce).Name":[[0],[0]],"(os/exec.closeOnce).Read":[[0],[],[0]],"(os/exec.closeOnce).ReadAt":[[0],[],[0]],"(os/exec.closeOnce).ReadDir":[[0],[0],[0]],"(os/exec.closeOnce).ReadFrom":[[0],[],[0,1]],"(os/exec.closeOnce).Readdir":[[0],[],[0]],"(os/exec.closeOnce).Readdirnames":[[0],[],[0]],"(os/exec.closeOnce).Seek":[[0],[],[0]],"(os/exec.closeOnce).SetDeadline":[[0],[]],"(os/exec.closeOnce).SetReadDeadline":[[0],[]],"(os/exec.closeOnce).SetWriteDeadline":[[0],[]],"(os/exec.closeOnce).Stat":[[0],[],[0]],"(os/exec.closeOnce).Sync":[[0],[0]],"(os/exec.closeOnce).SyscallConn":[[0],[0],[]],"(os/exec.closeOnce).Truncate":[[0],[0]],"(os/exec.closeOnce).Write":[[0],[],[0]],"(os/exec.closeOnce).WriteAt":[[0],[],[0]],"(os/exec.closeOnce).WriteString":[[0],[],[0]],"(os/exec.closeOnce).checkValid":[[0],[]],"(os/exec.closeOnce).chmod":[[0],[0]],"(os/exec.closeOnce).close":[[0],[0]],"(os/exec.closeOnce).pread":[[0],[],[]],"(os/exec.closeOnce).pwrite":[[0],[],[]],"(os/exec.closeOnce).read":[[0],[],[]],"(os/exec.closeOnce).readFrom":[[0],[],[],[]],"(os/exec.closeOnce).readdir":[[0],[],[0],[],[0]],"(os/exec.closeOnce).seek":[[0],[],[]],"(os/exec.closeOnce).setDeadline":[[0],[]],"(os/exec.closeOnce).setReadDeadline":[[0],[]],"(os/exec.closeOnce).setWriteDeadline":[[0],[]],"(os/exec.closeOnce).wrapErr":[[0],[0,1,2]],"(os/exec.closeOnce).write":[[0],[],[]],"(os/exec.wrappedError).Error":[[0],[0]],"(os/exec.wrappedError).Unwrap":[[0],[0]],"(os/signal.signalCtx).Deadline":[[0],[0],[]],"(os/signal.signalCtx).Done":[[0],[]],"(os/signal.signalCtx).Err":[[0],[]],"(os/signal.signalCtx).Value":[[0],[0]],"(os/user.UnknownGroupError).Error":[[0],[0]],"(os/user.UnknownGroupIdError).Error":[[0],[0]],"(os/user.UnknownUserError).Error":[[0],[0]],"(os/user.UnknownUserIdError).Error":[[0],[0]],"(os/user.bufferKind).initialSize":[[0],[]],"(reflect.ChanDir).String":[[0],[0]],"(reflect.Kind).String":[[0],[0]],"(reflect.Method).IsExported":[[0],[0]],"(reflect.StructField).IsExported":[[0],[0]],"(reflect.StructTag).Get":[[0],[0]],"(reflect.StructTag).Lookup":[[0],[0],[]],"(reflect.Value).Addr":[[0],[0]],"(reflect.Value).Bool":[[0],[0]],"(reflect.Value).Bytes":[[0],[0]],"(reflect.Value).Call":[[0],[0]],"(reflect.Value).CallSlice":[[0],[0]],"(reflect.Value).CanAddr":[[0],[0]],"(reflect.Value).CanComplex":[[0],[]],"(reflect.Value).CanConvert":[[0],[]],"(reflect.Value).CanFloat":[[0],[]],"(reflect.Value).CanInt":[[0],[]],"(reflect.Value).CanInterface":[[0],[0]],"(reflect.Value).CanSet":[[0],[0]],"(reflect.Value).CanUint":[[0],[]],"(reflect.Value).Cap":[[0],[0]],"(reflect.Value).Close":[[0]],"(reflect.Value).Complex":[[0],[0]],"(reflect.Value).Convert":[[0],[1]],"(reflect.Value).Elem":[[0],[0]],"(reflect.Value).Field":[[0],[0]],"(reflect.Value).FieldByIndex":[[0],[0]],"(reflect.Value).FieldByIndexErr":[[0],[0],[]],"(reflect.Value).FieldByName":[[0],[0]],"(reflect.Value).FieldByNameFunc":[[0],[0]],"(reflect.Value).Float":[[0],[0]],"(reflect.Value).Index":[[0],[0,1]],"(reflect.Value).Int":[[0],[0]],"(reflect.Value).Interface":[[0],[0]],"(reflect.Value).InterfaceData":[[0],[0]],"(reflect.Value).IsNil":[[0],[0]],"(reflect.Value).IsValid":[[0],[0]],"(reflect.Value).IsZero":[[0],[0]],"(reflect.Value).Kind":[[0],[0]],"(reflect.Value).Len":[[0],[0]],"(reflect.Value).MapIndex":[[0],[0]],"(reflect.Value).MapKeys":[[0],[0]],"(reflect.Value).MapRange":[[0],[0]],"(reflect.Value).Method":[[0],[0,1]],"(reflect.Value).MethodByName":[[0],[0]],"(reflect.Value).NumField":[[0],[]],"(reflect.Value).NumMethod":[[0],[]],"(reflect.Value).OverflowComplex":[[0],[]],"(reflect.Value).OverflowFloat":[[0],[1]],"(reflect.Value).OverflowInt":[[0],[0,1]],"(reflect.Value).OverflowUint":[[0],[0,1]],"(reflect.Value).Pointer":[[0],[0]],"(reflect.Value).Recv":[[0],[0],[]],"(reflect.Value).Send":[[0]],"(reflect.Value).Set":[[0]],"(reflect.Value).SetBool":[[0]],"(reflect.Value).SetBool$bound":[],"(reflect.Value).SetBytes":[[0]],"(reflect.Value).SetCap":[[0]],"(reflect.Value).SetComplex":[[0]],"(reflect.Value).SetFloat":[[0]],"(reflect.Value).SetInt":[[0]],"(reflect.Value).SetIterKey":[[0]],"(reflect.Value).SetIterValue":[[0]],"(reflect.Value).SetLen":[[0]],"(reflect.Value).SetMapIndex":[[0]],"(reflect.Value).SetPointer":[[0]],"(reflect.Value).SetString":[[0]],"(reflect.Value).SetUint":[[0]],"(reflect.Value).Slice":[[0],[0,1,2]],"(reflect.Value).Slice3":[[0],[0]],"(reflect.Value).String":[[0],[0]],"(reflect.Value).TryRecv":[[0],[0],[]],"(reflect.Value).TrySend":[[0],[]],"(reflect.Value).Type":[[0],[0]],"(reflect.Value).Uint":[[0],[0]],"(reflect.Value).UnsafeAddr":[[0],[0]],"(reflect.Value).UnsafePointer":[[0],[0]],"(reflect.Value).assignTo":[[0],[0,2,3]],"(reflect.Value).bytesSlow":[[0],[0]],"(reflect.Value).call":[[0],[0]],"(reflect.Value).capNonSlice":[[0],[0]],"(reflect.Value).kind":[[0],[0]],"(reflect.Value).lenNonSlice":[[0],[0]],"(reflect.Value).mustBe":[[0]],"(reflect.Value).mustBeAssignable":[[0]],"(reflect.Value).mustBeAssignableSlow":[[0]],"(reflect.Value).mustBeExported":[[0]],"(reflect.Value).mustBeExportedSlow":[[0]],"(reflect.Value).panicNotBool":[[0]],"(reflect.Value).panicNotMap":[[0]],"(reflect.Value).pointer":[[0],[0]],"(reflect.Value).recv":[[0],[0],[]],"(reflect.Value).ro":[[0],[]],"(reflect.Value).runes":[[0],[0]],"(reflect.Value).send":[[0],[]],"(reflect.Value).setRunes":[[0]],"(reflect.Value).stringNonString":[[0],[]],"(reflect.Value).typeSlow":[[0],[0]],"(reflect.flag).kind":[[0],[0]],"(reflect.flag).mustBe":[[0]],"(reflect.flag).mustBeAssignable":[[0]],"(reflect.flag).mustBeAssignableSlow":[[0]],"(reflect.flag).mustBeExported":[[0]],"(reflect.flag).mustBeExportedSlow":[[0]],"(reflect.flag).panicNotMap":[[0]],"(reflect.flag).ro":[[0],[]],"(reflect.name).data":[[0],[0,1]],"(reflect.name).embedded":[[0],[0]],"(reflect.name).hasTag":[[0],[0]],"(reflect.name).isExported":[[0],[0]],"(reflect.name).name":[[0],[]],"(reflect.name).pkgPath":[[0],[]],"(reflect.name).readVarint":[[0],[],[0,1]],"(reflect.name).tag":[[0],[]],"(regexp.lazyFlag).match":[[0],[1]],"(regexp.runeSlice).Len":[[0],[]],"(regexp.runeSlice).Less":[[0],[0]],"(regexp.runeSlice).Swap":[[0]],"(regexp/syntax.ErrorCode).String":[[0],[0]],"(regexp/syntax.InstOp).String":[[0],[]],"(regexp/syntax.Op).String":[[0],[0]],"(regexp/syntax.patchList).append":[[0],[0,2]],"(regexp/syntax.patchList).patch":[[0]],"(regexp/syntax.ranges).Len":[[0],[]],"(regexp/syntax.ranges).Less":[[0],[0]],"(regexp/syntax.ranges).Swap":[[0]],"(runtime.addrRange).contains":[[0],[0,1]],"(runtime.addrRange).removeGreaterEqual":[[0],[0,1]],"(runtime.addrRange).size":[[0],[0]],"(runtime.addrRange).subtract":[[0],[0,1]],"(runtime.arenaIdx).l1":[[0],[0]],"(runtime.arenaIdx).l2":[[0],[0]],"(runtime.boundsError).Error":[[0],[]],"(runtime.boundsError).RuntimeError":[[0]],"(runtime.chunkIdx).l1":[[0],[0]],"(runtime.chunkIdx).l2":[[0],[0]],"(runtime.errorAddressString).Addr":[[0],[0]],"(runtime.errorAddressString).Error":[[0],[0]],"(runtime.errorAddressString).RuntimeError":[[0]],"(runtime.errorString).Error":[[0],[0]],"(runtime.errorString).RuntimeError":[[0]],"(runtime.funcInfo)._Func":[[0],[0]],"(runtime.funcInfo).entry":[[0],[0]],"(runtime.funcInfo).funcInfo":[[0],[0]],"(runtime.funcInfo).isInlined":[[0],[0]],"(runtime.funcInfo).valid":[[0],[0]],"(runtime.gcTrigger).test":[[0],[0]],"(runtime.gclinkptr).ptr":[[0],[0]],"(runtime.guintptr).ptr":[[0],[0]],"(runtime.headTailIndex).head":[[0],[0]],"(runtime.headTailIndex).split":[[0],[0],[0]],"(runtime.headTailIndex).tail":[[0],[0]],"(runtime.heapBits).bits":[[0],[0]],"(runtime.heapBits).forward":[[0],[0,1]],"(runtime.heapBits).forwardOrBoundary":[[0],[0,1],[0,1]],"(runtime.heapBits).initSpan":[[0]],"(runtime.heapBits).isPointer":[[0],[0]],"(runtime.heapBits).morePointers":[[0],[0]],"(runtime.heapBits).next":[[0],[0]],"(runtime.heapBits).nextArena":[[0],[0]],"(runtime.limiterEventStamp).duration":[[0],[0,1]],"(runtime.limiterEventStamp).typ":[[0],[0]],"(runtime.lockRank).String":[[0],[]],"(runtime.markBits).clearMarked":[[0]],"(runtime.markBits).isMarked":[[0],[0]],"(runtime.markBits).setMarked":[[0]],"(runtime.markBits).setMarkedNonAtomic":[[0]],"(runtime.muintptr).ptr":[[0],[0]],"(runtime.name).data":[[0],[0,1]],"(runtime.name).isBlank":[[0],[0]],"(runtime.name).isEmbedded":[[0],[0]],"(runtime.name).isExported":[[0],[0]],"(runtime.name).name":[[0],[]],"(runtime.name).pkgPath":[[0],[]],"(runtime.name).readvarint":[[0],[],[0,1]],"(runtime.name).tag":[[0],[]],"(runtime.offAddr).add":[[0],[0,1]],"(runtime.offAddr).addr":[[0],[0]],"(runtime.offAddr).diff":[[0],[0,1]],"(runtime.offAddr).equal":[[0],[0,1]],"(runtime.offAddr).lessEqual":[[0],[0,1]],"(runtime.offAddr).lessThan":[[0],[0,1]],"(runtime.offAddr).sub":[[0],[0,1]],"(runtime.pMask).clear":[[0]],"(runtime.pMask).read":[[0],[0,1]],"(runtime.pMask).set":[[0]],"(runtime.pallocSum).end":[[0],[0]],"(runtime.pallocSum).max":[[0],[0]],"(runtime.pallocSum).start":[[0],[0]],"(runtime.pallocSum).unpack":[[0],[0],[0],[0]],"(runtime.plainError).Error":[[0],[0]],"(runtime.plainError).RuntimeError":[[0]],"(runtime.pollInfo).closing":[[0],[0]],"(runtime.pollInfo).eventErr":[[0],[0]],"(runtime.pollInfo).expiredReadDeadline":[[0],[0]],"(runtime.pollInfo).expiredWriteDeadline":[[0],[0]],"(runtime.profIndex).addCountsAndClearFlags":[[0],[0,1,2]],"(runtime.profIndex).dataCount":[[0],[0]],"(runtime.profIndex).tagCount":[[0],[0]],"(runtime.puintptr).ptr":[[0],[0]],"(runtime.spanAllocType).manual":[[0],[0]],"(runtime.spanClass).noscan":[[0],[0]],"(runtime.spanClass).sizeclass":[[0],[0]],"(runtime.statDepSet).difference":[[0],[0,1]],"(runtime.statDepSet).union":[[0],[0,1]],"(runtime.sweepClass).split":[[0],[0],[0]],"(runtime.traceAllocBlockPtr).ptr":[[0],[0]],"(runtime.traceBufPtr).ptr":[[0],[0]],"(runtime.traceStackPtr).ptr":[[0],[0]],"(runtime.waitReason).String":[[0],[]],"(runtime/cgo.Handle).Delete":[[0]],"(runtime/cgo.Handle).Value":[[0],[]],"(runtime/metrics.Value).Float64":[[0],[0]],"(runtime/metrics.Value).Float64Histogram":[[0],[0]],"(runtime/metrics.Value).Kind":[[0],[0]],"(runtime/metrics.Value).Uint64":[[0],[0]],"(runtime/pprof.stackProfile).Label":[[0],[]],"(runtime/pprof.stackProfile).Len":[[0],[]],"(runtime/pprof.stackProfile).Stack":[[0],[0]],"(sort.Float64Slice).Len":[[0],[]],"(sort.Float64Slice).Less":[[0],[0]],"(sort.Float64Slice).Search":[[0],[]],"(sort.Float64Slice).Sort":[[0]],"(sort.Float64Slice).Swap":[[0]],"(sort.IntSlice).Len":[[0],[]],"(sort.IntSlice).Less":[[0],[0]],"(sort.IntSlice).Search":[[0],[]],"(sort.IntSlice).Sort":[[0]],"(sort.IntSlice).Swap":[[0]],"(sort.StringSlice).Len":[[0],[]],"(sort.StringSlice).Less":[[0],[0]],"(sort.StringSlice).Search":[[0],[]],"(sort.StringSlice).Sort":[[0]],"(sort.StringSlice).Swap":[[0]],"(sort.reverse).Len":[[0],[]],"(sort.reverse).Less":[[0],[0]],"(sort.reverse).Swap":[[0]],"(strings.stringWriter).WriteString":[[0],[],[0]],"(struct{go/ast.Node}).End":[[0],[]],"(struct{go/ast.Node}).Pos":[[0],[0]],"(struct{go/types.Type}).String":[[0],[]],"(struct{go/types.Type}).Underlying":[[0],[0]],"(struct{io.Reader; io.Closer}).Close":[[0],[0]],"(struct{io.Reader; io.Closer}).Read":[[0],[],[0]],"(struct{io.Reader; io.WriterTo}).Read":[[0],[],[0]],"(struct{io.Reader; io.WriterTo}).WriteTo":[[0],[],[0,1]],"(struct{io.Reader}).Read":[[0],[],[0]],"(struct{io.Writer}).Write":[[0],[],[0]],"(syscall.Errno).Error":[[0],[0]],"(syscall.Errno).Is":[[0],[0]],"(syscall.Errno).Temporary":[[0],[0]],"(syscall.Errno).Timeout":[[0],[0]],"(syscall.Signal).Signal":[[0]],"(syscall.Signal).String":[[0],[0]],"(syscall.WaitStatus).Continued":[[0],[0]],"(syscall.WaitStatus).CoreDump":[[0],[0]],"(syscall.WaitStatus).ExitStatus":[[0],[0]],"(syscall.WaitStatus).Exited":[[0],[0]],"(syscall.WaitStatus).Signal":[[0],[0]],"(syscall.WaitStatus).Signaled":[[0],[0]],"(syscall.WaitStatus).StopSignal":[[0],[0]],"(syscall.WaitStatus).Stopped":[[0],[0]],"(syscall.WaitStatus).TrapCause":[[0],[]],"(testing.BenchmarkResult).AllocedBytesPerOp":[[0],[0]],"(testing.BenchmarkResult).AllocsPerOp":[[0],[0]],"(testing.BenchmarkResult).MemString":[[0],[]],"(testing.BenchmarkResult).NsPerOp":[[0],[0]],"(testing.BenchmarkResult).String":[[0],[]],"(testing.BenchmarkResult).mbPerSec":[[0],[0]],"(testing.alternationMatch).matches":[[0],[],[]],"(testing.alternationMatch).verify":[[0],[]],"(testing.discard).Write":[[0],[],[]],"(testing.fuzzResult).String":[[0],[0]],"(testing.indenter).Write":[[0],[],[]],"(testing.matchStringOnly).CheckCorpus":[[0],[]],"(testing.matchStringOnly).CoordinateFuzzing":[[0],[]],"(testing.matchStringOnly).ImportPath":[[0],[]],"(testing.matchStringOnly).MatchString":[[0],[1,2],[1]],"(testing.matchStringOnly).ReadCorpus":[[0],[],[]],"(testing.matchStringOnly).ResetCoverage":[[0]],"(testing.matchStringOnly).RunFuzzWorker":[[0],[]],"(testing.matchStringOnly).SetPanicOnExit0":[[0]],"(testing.matchStringOnly).SnapshotCoverage":[[0]],"(testing.matchStringOnly).StartCPUProfile":[[0],[]],"(testing.matchStringOnly).StartTestLog":[[0]],"(testing.matchStringOnly).StopCPUProfile":[[0]],"(testing.matchStringOnly).StopTestLog":[[0],[]],"(testing.matchStringOnly).WriteProfileTo":[[0],[]],"(testing.simpleMatch).matches":[[0],[],[]],"(testing.simpleMatch).verify":[[0],[0,1]],"(testing.testDeps).MatchString$bound":[[0,1],[0]],"(text/scanner.Position).String":[[0],[0]],"(text/scanner.Scanner).String":[[0],[0]],"(text/template.ExecError).Error":[[0],[0]],"(text/template.ExecError).Unwrap":[[0],[0]],"(text/template.Template).Copy":[[0],[0]],"(text/template.Template).ErrorContext":[[0],[],[]],"(text/template.Template).action":[[0],[0]],"(text/template.Template).add":[[0]],"(text/template.Template).backup":[[0]],"(text/template.Template).backup2":[[0]],"(text/template.Template).backup3":[[0]],"(text/template.Template).blockControl":[[0],[0]],"(text/template.Template).breakControl":[[0],[0,1,2]],"(text/template.Template).checkPipeline":[[0]],"(text/template.Template).clearActionLine":[[0]],"(text/template.Template).command":[[0],[0]],"(text/template.Template).continueControl":[[0],[0,1,2]],"(text/template.Template).elseControl":[[0],[0]],"(text/template.Template).endControl":[[0],[0]],"(text/template.Template).error":[[0]],"(text/template.Template).errorf":[[0]],"(text/template.Template).expect":[[0],[0]],"(text/template.Template).expectOneOf":[[0],[0]],"(text/template.Template).hasFunction":[[0],[]],"(text/template.Template).ifControl":[[0],[0]],"(text/template.Template).itemList":[[0],[0],[]],"(text/template.Template).newAction":[[0],[0,1,2,3]],"(text/template.Template).newBool":[[0],[0,1,2]],"(text/template.Template).newBreak":[[0],[0,1,2]],"(text/template.Template).newChain":[[0],[0,1,2]],"(text/template.Template).newCommand":[[0],[0,1]],"(text/template.Template).newComment":[[0],[0,1,2]],"(text/template.Template).newContinue":[[0],[0,1,2]],"(text/template.Template).newDot":[[0],[0,1]],"(text/template.Template).newElse":[[0],[0,1,2]],"(text/template.Template).newEnd":[[0],[0,1]],"(text/template.Template).newField":[[0],[0,1,2]],"(text/template.Template).newIf":[[0],[0,1,2,3,4,5]],"(text/template.Template).newList":[[0],[0,1]],"(text/template.Template).newNil":[[0],[0,1]],"(text/template.Template).newNumber":[[0],[0,1,2],[2]],"(text/template.Template).newPipeline":[[0],[0,1,2,3]],"(text/template.Template).newRange":[[0],[0,1,2,3,4,5]],"(text/template.Template).newString":[[0],[0,1,2,3]],"(text/template.Template).newTemplate":[[0],[0,1,2,3,4]],"(text/template.Template).newText":[[0],[0,1,2]],"(text/template.Template).newVariable":[[0],[0,1,2]],"(text/template.Template).newWith":[[0],[0,1,2,3,4,5]],"(text/template.Template).next":[[0],[0]],"(text/template.Template).nextNonSpace":[[0],[0]],"(text/template.Template).operand":[[0],[0]],"(text/template.Template).parse":[[0]],"(text/template.Template).parseControl":[[0],[0],[0],[0],[0],[0]],"(text/template.Template).parseDefinition":[[0]],"(text/template.Template).parseTemplateName":[[0],[1]],"(text/template.Template).peek":[[0],[0]],"(text/template.Template).peekNonSpace":[[0],[0]],"(text/template.Template).pipeline":[[0],[0]],"(text/template.Template).popVars":[[0]],"(text/template.Template).rangeControl":[[0],[0]],"(text/template.Template).recover":[[0]],"(text/template.Template).startParse":[[0]],"(text/template.Template).stopParse":[[0]],"(text/template.Template).templateControl":[[0],[0]],"(text/template.Template).term":[[0],[0]],"(text/template.Template).textOrAction":[[0],[0]],"(text/template.Template).unexpected":[[0]],"(text/template.Template).useVar":[[0],[0,1,2]],"(text/template.Template).withControl":[[0],[0]],"(text/template/parse.ActionNode).Position":[[0],[0]],"(text/template/parse.ActionNode).Type":[[0],[0]],"(text/template/parse.BoolNode).Position":[[0],[0]],"(text/template/parse.BoolNode).Type":[[0],[0]],"(text/template/parse.BranchNode).Position":[[0],[0]],"(text/template/parse.BranchNode).Type":[[0],[0]],"(text/template/parse.BreakNode).Position":[[0],[0]],"(text/template/parse.BreakNode).Type":[[0],[0]],"(text/template/parse.ChainNode).Position":[[0],[0]],"(text/template/parse.ChainNode).Type":[[0],[0]],"(text/template/parse.CommandNode).Position":[[0],[0]],"(text/template/parse.CommandNode).Type":[[0],[0]],"(text/template/parse.CommentNode).Position":[[0],[0]],"(text/template/parse.CommentNode).Type":[[0],[0]],"(text/template/parse.ContinueNode).Position":[[0],[0]],"(text/template/parse.ContinueNode).Type":[[0],[0]],"(text/template/parse.DotNode).Position":[[0],[0]],"(text/template/parse.FieldNode).Position":[[0],[0]],"(text/template/parse.FieldNode).Type":[[0],[0]],"(text/template/parse.IdentifierNode).Position":[[0],[0]],"(text/template/parse.IdentifierNode).Type":[[0],[0]],"(text/template/parse.IfNode).Position":[[0],[0]],"(text/template/parse.IfNode).Type":[[0],[0]],"(text/template/parse.ListNode).Position":[[0],[0]],"(text/template/parse.ListNode).Type":[[0],[0]],"(text/template/parse.NilNode).Position":[[0],[0]],"(text/template/parse.NodeType).Type":[[0],[0]],"(text/template/parse.NumberNode).Position":[[0],[0]],"(text/template/parse.NumberNode).Type":[[0],[0]],"(text/template/parse.PipeNode).Position":[[0],[0]],"(text/template/parse.PipeNode).Type":[[0],[0]],"(text/template/parse.Pos).Position":[[0],[0]],"(text/template/parse.RangeNode).Position":[[0],[0]],"(text/template/parse.RangeNode).Type":[[0],[0]],"(text/template/parse.StringNode).Position":[[0],[0]],"(text/template/parse.StringNode).Type":[[0],[0]],"(text/template/parse.TemplateNode).Position":[[0],[0]],"(text/template/parse.TemplateNode).Type":[[0],[0]],"(text/template/parse.TextNode).Position":[[0],[0]],"(text/template/parse.TextNode).Type":[[0],[0]],"(text/template/parse.VariableNode).Position":[[0],[0]],"(text/template/parse.VariableNode).Type":[[0],[0]],"(text/template/parse.WithNode).Position":[[0],[0]],"(text/template/parse.WithNode).Type":[[0],[0]],"(text/template/parse.elseNode).Position":[[0],[0]],"(text/template/parse.endNode).Position":[[0],[0]],"(text/template/parse.endNode).Type":[[0],[0]],"(text/template/parse.item).String":[[0],[0]],"(time.Duration).Abs":[[0],[0]],"(time.Duration).Hours":[[0],[0]],"(time.Duration).Microseconds":[[0],[0]],"(time.Duration).Milliseconds":[[0],[0]],"(time.Duration).Minutes":[[0],[0]],"(time.Duration).Nanoseconds":[[0],[0]],"(time.Duration).Round":[[0],[0,1]],"(time.Duration).Seconds":[[0],[0]],"(time.Duration).String":[[0],[]],"(time.Duration).Truncate":[[0],[0,1]],"(time.Month).String":[[0],[]],"(time.Time).Add":[[0],[0,1]],"(time.Time).AddDate":[[0],[0,1,2,3]],"(time.Time).After":[[0],[0,1]],"(time.Time).AppendFormat":[[0],[0,1]],"(time.Time).Before":[[0],[0,1]],"(time.Time).Clock":[[0],[0],[0],[0]],"(time.Time).Date":[[0],[0],[0],[0]],"(time.Time).Day":[[0],[0]],"(time.Time).Equal":[[0],[0,1]],"(time.Time).Format":[[0],[0]],"(time.Time).GoString":[[0],[]],"(time.Time).GobEncode":[[0],[0],[]],"(time.Time).Hour":[[0],[0]],"(time.Time).ISOWeek":[[0],[0],[0]],"(time.Time).In":[[0],[0,1]],"(time.Time).IsDST":[[0],[0]],"(time.Time).IsZero":[[0],[0]],"(time.Time).Local":[[0],[0]],"(time.Time).Location":[[0],[0]],"(time.Time).MarshalBinary":[[0],[0],[]],"(time.Time).MarshalJSON":[[0],[],[]],"(time.Time).MarshalText":[[0],[0],[]],"(time.Time).Minute":[[0],[0]],"(time.Time).Month":[[0],[0]],"(time.Time).Nanosecond":[[0],[0]],"(time.Time).Round":[[0],[0,1]],"(time.Time).Second":[[0],[0]],"(time.Time).String":[[0],[0]],"(time.Time).Sub":[[0],[0,1]],"(time.Time).Truncate":[[0],[0,1]],"(time.Time).UTC":[[0],[0]],"(time.Time).Unix":[[0],[0]],"(time.Time).UnixMicro":[[0],[0]],"(time.Time).UnixMilli":[[0],[0]],"(time.Time).UnixNano":[[0],[0]],"(time.Time).Weekday":[[0],[0]],"(time.Time).Year":[[0],[0]],"(time.Time).YearDay":[[0],[0]],"(time.Time).Zone":[[0],[0],[0]],"(time.Time).ZoneBounds":[[0],[0],[0]],"(time.Time).abs":[[0],[0]],"(time.Time).date":[[0],[0],[0],[0],[0]],"(time.Time).locabs":[[0],[0],[0],[0]],"(time.Weekday).String":[[0],[]],"(time.fileSizeError).Error":[[0],[0]],"(unicode.SpecialCase).ToLower":[[0],[0,1]],"(unicode.SpecialCase).ToLower$bound":[[0]],"(unicode.SpecialCase).ToTitle":[[0],[0,1]],"(unicode.SpecialCase).ToTitle$bound":[[0]],"(unicode.SpecialCase).ToUpper":[[0],[0,1]],"(unicode.SpecialCase).ToUpper$bound":[[0]],"(vendor/golang.org/x/crypto/cryptobyte.String).Empty":[[0],[]],"(vendor/golang.org/x/crypto/cryptobyte.String).PeekASN1Tag":[[0],[0,1]],"(vendor/golang.org/x/crypto/cryptobyte/asn1.Tag).Constructed":[[0],[0]],"(vendor/golang.org/x/crypto/cryptobyte/asn1.Tag).ContextSpecific":[[0],[0]],"(vendor/golang.org/x/net/dns/dnsmessage.Class).GoString":[[0],[0]],"(vendor/golang.org/x/net/dns/dnsmessage.Class).String":[[0],[0]],"(vendor/golang.org/x/net/dns/dnsmessage.Name).String":[[0],[0]],"(vendor/golang.org/x/net/dns/dnsmessage.OpCode).GoString":[[0],[]],"(vendor/golang.org/x/net/dns/dnsmessage.RCode).GoString":[[0],[0]],"(vendor/golang.org/x/net/dns/dnsmessage.RCode).String":[[0],[0]],"(vendor/golang.org/x/net/dns/dnsmessage.Type).GoString":[[0],[0]],"(vendor/golang.org/x/net/dns/dnsmessage.Type).String":[[0],[0]],"(vendor/golang.org/x/net/http/httpproxy.allMatch).match":[[0],[]],"(vendor/golang.org/x/net/http/httpproxy.cidrMatch).match":[[0],[]],"(vendor/golang.org/x/net/http/httpproxy.domainMatch).match":[[0],[0,2]],"(vendor/golang.org/x/net/http/httpproxy.ipMatch).match":[[0],[0,2]],"(vendor/golang.org/x/net/http2/hpack.DecodingError).Error":[[0],[]],"(vendor/golang.org/x/net/http2/hpack.HeaderField).IsPseudo":[[0],[0]],"(vendor/golang.org/x/net/http2/hpack.HeaderField).Size":[[0],[]],"(vendor/golang.org/x/net/http2/hpack.HeaderField).String":[[0],[]],"(vendor/golang.org/x/net/http2/hpack.InvalidIndexError).Error":[[0],[]],"(vendor/golang.org/x/net/http2/hpack.indexType).indexed":[[0],[0]],"(vendor/golang.org/x/net/http2/hpack.indexType).sensitive":[[0],[0]],"(vendor/golang.org/x/net/idna.info).appendMapping":[[0],[0,1,2]],"(vendor/golang.org/x/net/idna.info).category":[[0],[0]],"(vendor/golang.org/x/net/idna.info).isBidi":[[0],[0]],"(vendor/golang.org/x/net/idna.info).isMapped":[[0],[0]],"(vendor/golang.org/x/net/idna.info).isModifier":[[0],[0]],"(vendor/golang.org/x/net/idna.info).isViramaModifier":[[0],[0]],"(vendor/golang.org/x/net/idna.info).joinType":[[0],[0]],"(vendor/golang.org/x/net/idna.labelError).Error":[[0],[]],"(vendor/golang.org/x/net/idna.labelError).code":[[0],[0]],"(vendor/golang.org/x/net/idna.runeError).Error":[[0],[]],"(vendor/golang.org/x/net/idna.runeError).code":[[0],[]],"(vendor/golang.org/x/net/route.RIBType).parseable":[[0],[]],"(vendor/golang.org/x/net/route.binaryBigEndian).PutUint16":[[0]],"(vendor/golang.org/x/net/route.binaryBigEndian).PutUint32":[[0]],"(vendor/golang.org/x/net/route.binaryBigEndian).Uint16":[[0],[1]],"(vendor/golang.org/x/net/route.binaryBigEndian).Uint32":[[0],[1]],"(vendor/golang.org/x/net/route.binaryBigEndian).Uint64":[[0],[1]],"(vendor/golang.org/x/net/route.binaryLittleEndian).PutUint16":[[0]],"(vendor/golang.org/x/net/route.binaryLittleEndian).PutUint32":[[0]],"(vendor/golang.org/x/net/route.binaryLittleEndian).Uint16":[[0],[1]],"(vendor/golang.org/x/net/route.binaryLittleEndian).Uint32":[[0],[1]],"(vendor/golang.org/x/net/route.binaryLittleEndian).Uint64":[[0],[1]],"(vendor/golang.org/x/sys/cpu.bigEndian).Uint32":[[0],[1]],"(vendor/golang.org/x/sys/cpu.bigEndian).Uint64":[[0],[1]],"(vendor/golang.org/x/sys/cpu.littleEndian).Uint32":[[0],[1]],"(vendor/golang.org/x/sys/cpu.littleEndian).Uint64":[[0],[1]],"(vendor/golang.org/x/text/transform.NopResetter).Reset":[[0]],"(vendor/golang.org/x/text/transform.discard).Reset":[[0]],"(vendor/golang.org/x/text/transform.discard).Transform":[[0],[],[],[]],"(vendor/golang.org/x/text/transform.nop).Reset":[[0]],"(vendor/golang.org/x/text/transform.nop).Span":[[0],[],[]],"(vendor/golang.org/x/text/transform.nop).Transform":[[0],[],[],[]],"(vendor/golang.org/x/text/transform.removeF).Reset":[[0]],"(vendor/golang.org/x/text/transform.removeF).Transform":[[0],[],[],[]],"(vendor/golang.org/x/text/unicode/bidi.Class).in":[[0],[]],"(vendor/golang.org/x/text/unicode/bidi.Properties).Class":[[0],[0]],"(vendor/golang.org/x/text/unicode/bidi.Properties).IsBracket":[[0],[0]],"(vendor/golang.org/x/text/unicode/bidi.Properties).IsOpeningBracket":[[0],[0]],"(vendor/golang.org/x/text/unicode/bidi.Properties).reverseBracket":[[0],[1]],"(vendor/golang.org/x/text/unicode/bidi.bracketPairs).Len":[[0],[]],"(vendor/golang.org/x/text/unicode/bidi.bracketPairs).Less":[[0],[0]],"(vendor/golang.org/x/text/unicode/bidi.bracketPairs).Swap":[[0]],"(vendor/golang.org/x/text/unicode/norm.Form).Append":[[0],[1,2]],"(vendor/golang.org/x/text/unicode/norm.Form).AppendString":[[0],[1,2]],"(vendor/golang.org/x/text/unicode/norm.Form).Bytes":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).FirstBoundary":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).FirstBoundaryInString":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).IsNormal":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Form).IsNormalString":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Form).IsNormalString$1":[[]],"(vendor/golang.org/x/text/unicode/norm.Form).LastBoundary":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Form).NextBoundary":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).NextBoundaryInString":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).Properties":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).PropertiesString":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).QuickSpan":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).QuickSpanString":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).Reader":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).Reset":[[0]],"(vendor/golang.org/x/text/unicode/norm.Form).Span":[[0],[1],[]],"(vendor/golang.org/x/text/unicode/norm.Form).SpanString":[[0],[1],[]],"(vendor/golang.org/x/text/unicode/norm.Form).String":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).Transform":[[0],[],[1,2],[]],"(vendor/golang.org/x/text/unicode/norm.Form).Writer":[[0],[1]],"(vendor/golang.org/x/text/unicode/norm.Form).doAppend":[[0],[1,2,3]],"(vendor/golang.org/x/text/unicode/norm.Form).firstBoundary":[[0],[1,2]],"(vendor/golang.org/x/text/unicode/norm.Form).nextBoundary":[[0],[1,2]],"(vendor/golang.org/x/text/unicode/norm.Form).transform":[[0],[],[1,2],[]],"(vendor/golang.org/x/text/unicode/norm.Properties).BoundaryAfter":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).BoundaryBefore":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Properties).CCC":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Properties).Decomposition":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Properties).LeadCCC":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Properties).Size":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).TrailCCC":[[0],[]],"(vendor/golang.org/x/text/unicode/norm.Properties).combinesBackward":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).combinesForward":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).hasDecomposition":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).isInert":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).isYesC":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).isYesD":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).multiSegment":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).nLeadingNonStarters":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.Properties).nTrailingNonStarters":[[0],[0]],"(vendor/golang.org/x/text/unicode/norm.streamSafe).isMax":[[0],[0]],"archive/tar.FileInfoHeader":[[0,1],[]],"archive/tar.NewReader":[[0]],"archive/tar.NewWriter":[[0]],"archive/tar.alignSparseEntries":[[0]],"archive/tar.blockPadding":[[0]],"archive/tar.discard":[[0,1]],"archive/tar.ensureEOF":[[0]],"archive/tar.fitsInBase256":[[0,1]],"archive/tar.fitsInOctal":[[0,1]],"archive/tar.formatPAXRecord":[[0,1],[]],"archive/tar.formatPAXTime":[[0]],"archive/tar.hasNUL":[[]],"archive/tar.init":[],"archive/tar.init#1":[],"archive/tar.invertSparseEntries":[[0,1]],"archive/tar.isASCII":[[]],"archive/tar.isHeaderOnlyType":[[]],"archive/tar.mergePAX":[[]],"archive/tar.min":[[0,1]],"archive/tar.mustReadFull":[[],[0]],"archive/tar.parsePAX":[[],[0]],"archive/tar.parsePAXRecord":[[0],[0],[0],[]],"archive/tar.parsePAXTime":[[0],[]],"archive/tar.readGNUSparseMap0x1":[[0],[]],"archive/tar.readGNUSparseMap1x0":[[],[]],"archive/tar.readGNUSparseMap1x0$1":[[]],"archive/tar.readGNUSparseMap1x0$2":[[]],"archive/tar.splitUSTARPath":[[0],[0],[]],"archive/tar.statAtime":[[0]],"archive/tar.statCtime":[[0]],"archive/tar.statUnix":[[]],"archive/tar.toASCII":[[0]],"archive/tar.tryReadFull":[[],[0]],"archive/tar.validPAXRecord":[[]],"archive/tar.validateSparseEntries":[[]],"archive/zip.FileInfoHeader":[[0],[]],"archive/zip.NewReader":[[0,1],[0,1]],"archive/zip.NewWriter":[[0]],"archive/zip.OpenReader":[[],[0]],"archive/zip.RegisterCompressor":[],"archive/zip.RegisterDecompressor":[],"archive/zip.compressor":[[]],"archive/zip.decompressor":[[]],"archive/zip.detectUTF8":[[],[]],"archive/zip.fileEntryLess":[[0,1]],"archive/zip.fileModeToUnixMode":[[0]],"archive/zip.findDirectory64End":[[],[]],"archive/zip.findSignatureInBlock":[[]],"archive/zip.init":[],"archive/zip.init#1":[],"archive/zip.init#1$1":[[0],[]],"archive/zip.init#1$2":[[0],[]],"archive/zip.min64":[[0,1]],"archive/zip.msDosTimeToTime":[[0,1]],"archive/zip.msdosModeToFileMode":[[]],"archive/zip.newFlateReader":[[0]],"archive/zip.newFlateWriter":[[0]],"archive/zip.readDataDescriptor":[[0]],"archive/zip.readDirectory64End":[[]],"archive/zip.readDirectoryEnd":[[],[1],[]],"archive/zip.readDirectoryHeader":[[1]],"archive/zip.split":[[0],[0],[]],"archive/zip.timeToMsDosTime":[[0],[0]],"archive/zip.timeZone":[[]],"archive/zip.toValidName":[[0]],"archive/zip.unixModeToFileMode":[[0]],"archive/zip.writeHeader":[[0]],"bufio.NewReadWriter":[[0,1]],"bufio.NewReader":[[0]],"bufio.NewReaderSize":[[0]],"bufio.NewScanner":[[0]],"bufio.NewWriter":[[0]],"bufio.NewWriterSize":[[0]],"bufio.ScanBytes":[[],[0],[]],"bufio.ScanLines":[[],[0],[]],"bufio.ScanRunes":[[],[0],[]],"bufio.ScanWords":[[],[0],[]],"bufio.dropCR":[[0]],"bufio.init":[],"bufio.isSpace":[[]],"bytes.Compare":[[]],"bytes.Contains":[[]],"bytes.ContainsAny":[[]],"bytes.ContainsRune":[[]],"bytes.Count":[[]],"bytes.Cut":[[0],[0],[]],"bytes.Equal":[[0,1]],"bytes.EqualFold":[[]],"bytes.Fields":[[0]],"bytes.FieldsFunc":[[0]],"bytes.HasPrefix":[[0,1]],"bytes.HasSuffix":[[0,1]],"bytes.Index":[[]],"bytes.IndexAny":[[]],"bytes.IndexByte":[[]],"bytes.IndexFunc":[[]],"bytes.IndexRune":[[]],"bytes.Join":[[0]],"bytes.LastIndex":[[]],"bytes.LastIndexAny":[[]],"bytes.LastIndexByte":[[]],"bytes.LastIndexFunc":[[]],"bytes.Map":[[]],"bytes.NewBuffer":[[0]],"bytes.NewBufferString":[[0]],"bytes.NewReader":[[0]],"bytes.Repeat":[[0]],"bytes.Replace":[[0]],"bytes.ReplaceAll":[[0]],"bytes.Runes":[[0]],"bytes.Split":[[0]],"bytes.SplitAfter":[[0]],"bytes.SplitAfterN":[[0]],"bytes.SplitN":[[0]],"bytes.Title":[[]],"bytes.Title$1":[[0]],"bytes.ToLower":[[0]],"bytes.ToLowerSpecial":[[]],"bytes.ToTitle":[[]],"bytes.ToTitleSpecial":[[]],"bytes.ToUpper":[[0]],"bytes.ToUpperSpecial":[[]],"bytes.ToValidUTF8":[[0,1]],"bytes.Trim":[[0]],"bytes.TrimFunc":[[0]],"bytes.TrimLeft":[[0]],"bytes.TrimLeftFunc":[[0]],"bytes.TrimPrefix":[[0]],"bytes.TrimRight":[[0]],"bytes.TrimRightFunc":[[0]],"bytes.TrimSpace":[[0]],"bytes.TrimSuffix":[[0]],"bytes.containsRune":[[]],"bytes.explode":[[0]],"bytes.genSplit":[[0]],"bytes.growSlice":[[0]],"bytes.growSlice$1":[],"bytes.indexBytePortable":[[]],"bytes.indexFunc":[[]],"bytes.init":[],"bytes.isSeparator":[[0]],"bytes.lastIndexFunc":[[]],"bytes.makeASCIISet":[[0],[]],"bytes.trimLeftASCII":[[0]],"bytes.trimLeftByte":[[0]],"bytes.trimLeftUnicode":[[0]],"bytes.trimRightASCII":[[0]],"bytes.trimRightByte":[[0]],"bytes.trimRightUnicode":[[0]],"compress/bzip2.NewReader":[[0]],"compress/bzip2.buildHuffmanNode":[[0],[]],"compress/bzip2.init":[],"compress/bzip2.init#1":[],"compress/bzip2.inverseBWT":[[0]],"compress/bzip2.newBitReader":[[0]],"compress/bzip2.newHuffmanTree":[[],[]],"compress/bzip2.newHuffmanTree$1":[[]],"compress/bzip2.newHuffmanTree$2":[[]],"compress/bzip2.newMTFDecoder":[[0]],"compress/bzip2.newMTFDecoderWithRange":[[]],"compress/bzip2.updateCRC":[[0]],"compress/flate.NewReader":[[0]],"compress/flate.NewReaderDict":[[0]],"compress/flate.NewWriter":[[0],[1]],"compress/flate.NewWriterDict":[[0,2],[1]],"compress/flate.bulkHash4":[],"compress/flate.emitLiteral":[[0,1]],"compress/flate.fixedHuffmanDecoderInit":[],"compress/flate.fixedHuffmanDecoderInit$1":[],"compress/flate.generateFixedLiteralEncoding":[[]],"compress/flate.generateFixedOffsetEncoding":[[]],"compress/flate.hash":[[0]],"compress/flate.hash4":[[0]],"compress/flate.histogram":[],"compress/flate.init":[],"compress/flate.init#1":[],"compress/flate.lengthCode":[[]],"compress/flate.literalToken":[[0]],"compress/flate.load32":[[0]],"compress/flate.load64":[[0]],"compress/flate.makeReader":[[0]],"compress/flate.matchLen":[[2]],"compress/flate.matchToken":[[0,1]],"compress/flate.maxNode":[[]],"compress/flate.newDeflateFast":[[]],"compress/flate.newHuffmanBitWriter":[[0]],"compress/flate.newHuffmanEncoder":[[]],"compress/flate.noEOF":[[0]],"compress/flate.offsetCode":[[]],"compress/flate.reverseBits":[[0,1]],"compress/gzip.NewReader":[[0],[0]],"compress/gzip.NewWriter":[[0]],"compress/gzip.NewWriterLevel":[[0,1],[1]],"compress/gzip.init":[],"compress/gzip.noEOF":[[0]],"compress/lzw.NewReader":[[0,2]],"compress/lzw.NewWriter":[[0,1,2]],"compress/lzw.init":[],"compress/lzw.newReader":[[0,2]],"compress/lzw.newWriter":[[0,1,2]],"compress/zlib.NewReader":[[0],[0]],"compress/zlib.NewReaderDict":[[0],[0]],"compress/zlib.NewWriter":[[0]],"compress/zlib.NewWriterLevel":[[0,1],[1]],"compress/zlib.NewWriterLevelDict":[[0,1,2],[1]],"compress/zlib.init":[],"container/heap.Fix":[],"container/heap.Init":[],"container/heap.Pop":[[0]],"container/heap.Push":[],"container/heap.Remove":[[0]],"container/heap.down":[[1]],"container/heap.init":[],"container/heap.up":[],"container/list.New":[[]],"container/list.init":[],"container/ring.New":[[]],"container/ring.init":[],"context.Background":[[]],"context.TODO":[[]],"context.WithCancel":[[0],[]],"context.WithCancel$1":[],"context.WithDeadline":[[0,1],[]],"context.WithDeadline$1":[],"context.WithDeadline$2":[],"context.WithDeadline$3":[],"context.WithTimeout":[[0,1],[]],"context.WithValue":[[0,1,2]],"context.contextName":[[]],"context.init":[],"context.init#1":[],"context.newCancelCtx":[[0]],"context.parentCancelCtx":[[0],[]],"context.propagateCancel":[],"context.propagateCancel$1":[],"context.removeChild":[],"context.stringify":[[0]],"context.value":[[0]],"crypto.RegisterHash":[],"crypto.init":[],"crypto/aes.NewCipher":[[],[]],"crypto/aes.decryptBlockAsm":[],"crypto/aes.decryptBlockGo":[],"crypto/aes.encryptBlockAsm":[],"crypto/aes.encryptBlockGo":[],"crypto/aes.expandKey":[],"crypto/aes.expandKeyAsm":[],"crypto/aes.expandKeyGo":[],"crypto/aes.gcmAesData":[],"crypto/aes.gcmAesDec":[],"crypto/aes.gcmAesEnc":[],"crypto/aes.gcmAesFinish":[],"crypto/aes.gcmAesInit":[],"crypto/aes.init":[],"crypto/aes.newCipher":[[],[]],"crypto/aes.newCipherGeneric":[[],[]],"crypto/aes.rotw":[[0]],"crypto/aes.sliceForAppend":[[0],[0]],"crypto/aes.subw":[[]],"crypto/cipher.NewCBCDecrypter":[[0,1]],"crypto/cipher.NewCBCEncrypter":[[0,1]],"crypto/cipher.NewCFBDecrypter":[[0]],"crypto/cipher.NewCFBEncrypter":[[0]],"crypto/cipher.NewCTR":[[0,1]],"crypto/cipher.NewGCM":[[0],[]],"crypto/cipher.NewGCMWithNonceSize":[[0,1],[]],"crypto/cipher.NewGCMWithTagSize":[[0,1],[]],"crypto/cipher.NewOFB":[[0]],"crypto/cipher.dup":[[0]],"crypto/cipher.gcmAdd":[[0,1]],"crypto/cipher.gcmDouble":[[0]],"crypto/cipher.gcmInc32":[],"crypto/cipher.init":[],"crypto/cipher.newCBC":[[0,1]],"crypto/cipher.newCBCGenericDecrypter":[[0,1]],"crypto/cipher.newCBCGenericEncrypter":[[0,1]],"crypto/cipher.newCFB":[[0,2]],"crypto/cipher.newGCMWithNonceAndTagSize":[[0,1,2],[]],"crypto/cipher.reverseBits":[[0]],"crypto/cipher.sliceForAppend":[[0],[0]],"crypto/cipher.xorBytes":[[]],"crypto/cipher.xorBytesSSE2":[],"crypto/cipher.xorWords":[],"crypto/des.NewCipher":[[],[]],"crypto/des.NewTripleDESCipher":[[],[]],"crypto/des.cryptBlock":[],"crypto/des.decryptBlock":[],"crypto/des.encryptBlock":[],"crypto/des.feistel":[[0],[1]],"crypto/des.init":[],"crypto/des.initFeistelBox":[],"crypto/des.ksRotate":[[0]],"crypto/des.permuteBlock":[[0,1]],"crypto/des.permuteFinalBlock":[[0]],"crypto/des.permuteInitialBlock":[[0]],"crypto/des.unpack":[[0]],"crypto/dsa.GenerateKey":[[1]],"crypto/dsa.GenerateParameters":[[1]],"crypto/dsa.Sign":[[1],[1,2],[0]],"crypto/dsa.Verify":[[]],"crypto/dsa.fermatInverse":[[0,1]],"crypto/dsa.init":[],"crypto/ecdsa.GenerateKey":[[0],[1]],"crypto/ecdsa.Sign":[[],[1,2],[0]],"crypto/ecdsa.SignASN1":[[],[0]],"crypto/ecdsa.Verify":[[]],"crypto/ecdsa.Verify$1":[],"crypto/ecdsa.VerifyASN1":[[]],"crypto/ecdsa.boringPrivateKey":[[],[]],"crypto/ecdsa.boringPublicKey":[[],[]],"crypto/ecdsa.fermatInverse":[[0,1]],"crypto/ecdsa.hashToInt":[[0]],"crypto/ecdsa.init":[],"crypto/ecdsa.randFieldElement":[[],[1]],"crypto/ecdsa.sign":[[],[0,3],[1]],"crypto/ecdsa.signGeneric":[[],[0,3],[1]],"crypto/ecdsa.verify":[[]],"crypto/ecdsa.verifyGeneric":[[]],"crypto/ed25519.GenerateKey":[[],[],[0]],"crypto/ed25519.NewKeyFromSeed":[[]],"crypto/ed25519.Sign":[[]],"crypto/ed25519.Verify":[[2]],"crypto/ed25519.init":[],"crypto/ed25519.newKeyFromSeed":[],"crypto/ed25519.sign":[],"crypto/elliptic.GenerateKey":[[],[],[],[1]],"crypto/elliptic.Marshal":[[]],"crypto/elliptic.MarshalCompressed":[[2]],"crypto/elliptic.P224":[[]],"crypto/elliptic.P256":[[]],"crypto/elliptic.P384":[[]],"crypto/elliptic.P521":[[]],"crypto/elliptic.Unmarshal":[[1],[1]],"crypto/elliptic.UnmarshalCompressed":[[1],[1]],"crypto/elliptic.bigFromDecimal":[[]],"crypto/elliptic.bigFromHex":[[]],"crypto/elliptic.init":[],"crypto/elliptic.initAll":[],"crypto/elliptic.initP224":[],"crypto/elliptic.initP256":[],"crypto/elliptic.initP384":[],"crypto/elliptic.initP521":[],"crypto/elliptic.matchesSpecificCurve":[[],[]],"crypto/elliptic.panicIfNotOnCurve":[],"crypto/elliptic.zForAffine":[[]],"crypto/hmac.Equal":[[0,1]],"crypto/hmac.New":[[]],"crypto/hmac.New$1":[],"crypto/hmac.New$1$1":[],"crypto/hmac.init":[],"crypto/internal/boring.DecryptRSANoPadding":[[],[]],"crypto/internal/boring.DecryptRSAOAEP":[[],[]],"crypto/internal/boring.DecryptRSAPKCS1":[[],[]],"crypto/internal/boring.EncryptRSANoPadding":[[],[]],"crypto/internal/boring.EncryptRSAOAEP":[[],[]],"crypto/internal/boring.EncryptRSAPKCS1":[[],[]],"crypto/internal/boring.GenerateKeyECDSA":[[],[],[],[]],"crypto/internal/boring.GenerateKeyRSA":[[],[],[],[],[],[],[],[],[]],"crypto/internal/boring.NewAESCipher":[[],[]],"crypto/internal/boring.NewGCMTLS":[[],[]],"crypto/internal/boring.NewHMAC":[[]],"crypto/internal/boring.NewPrivateKeyECDSA":[[],[]],"crypto/internal/boring.NewPrivateKeyRSA":[[],[]],"crypto/internal/boring.NewPublicKeyECDSA":[[],[]],"crypto/internal/boring.NewPublicKeyRSA":[[],[]],"crypto/internal/boring.NewSHA1":[[]],"crypto/internal/boring.NewSHA224":[[]],"crypto/internal/boring.NewSHA256":[[]],"crypto/internal/boring.NewSHA384":[[]],"crypto/internal/boring.NewSHA512":[[]],"crypto/internal/boring.SHA1":[[]],"crypto/internal/boring.SHA224":[[]],"crypto/internal/boring.SHA256":[[]],"crypto/internal/boring.SHA384":[[]],"crypto/internal/boring.SHA512":[[]],"crypto/internal/boring.SignMarshalECDSA":[[],[]],"crypto/internal/boring.SignRSAPKCS1v15":[[],[]],"crypto/internal/boring.SignRSAPSS":[[],[]],"crypto/internal/boring.Unreachable":[],"crypto/internal/boring.UnreachableExceptTests":[],"crypto/internal/boring.VerifyECDSA":[[]],"crypto/internal/boring.VerifyRSAPKCS1v15":[[]],"crypto/internal/boring.VerifyRSAPSS":[[]],"crypto/internal/boring.init":[],"crypto/internal/boring/bbig.Dec":[[]],"crypto/internal/boring/bbig.Enc":[[]],"crypto/internal/boring/bbig.init":[],"crypto/internal/boring/bcache.init":[],"crypto/internal/boring/bcache.registerCache":[],"crypto/internal/boring/sig.BoringCrypto":[],"crypto/internal/boring/sig.FIPSOnly":[],"crypto/internal/boring/sig.StandardCrypto":[],"crypto/internal/boring/sig.init":[],"crypto/internal/edwards25519.NewGeneratorPoint":[[]],"crypto/internal/edwards25519.NewIdentityPoint":[[]],"crypto/internal/edwards25519.NewScalar":[[]],"crypto/internal/edwards25519.basepointNafTable":[[]],"crypto/internal/edwards25519.basepointNafTable$1":[],"crypto/internal/edwards25519.basepointTable":[[]],"crypto/internal/edwards25519.basepointTable$1":[],"crypto/internal/edwards25519.checkInitialized":[],"crypto/internal/edwards25519.copyFieldElement":[[0]],"crypto/internal/edwards25519.init":[],"crypto/internal/edwards25519.isReduced":[[]],"crypto/internal/edwards25519.load3":[[0]],"crypto/internal/edwards25519.load4":[[0]],"crypto/internal/edwards25519.scMulAdd":[],"crypto/internal/edwards25519.scReduce":[],"crypto/internal/edwards25519/field.addMul64":[[0,1,2]],"crypto/internal/edwards25519/field.feMul":[],"crypto/internal/edwards25519/field.feMulGeneric":[],"crypto/internal/edwards25519/field.feSquare":[],"crypto/internal/edwards25519/field.feSquareGeneric":[],"crypto/internal/edwards25519/field.init":[],"crypto/internal/edwards25519/field.mask64Bits":[[0]],"crypto/internal/edwards25519/field.mul51":[[0,1],[0,1]],"crypto/internal/edwards25519/field.mul64":[[0,1]],"crypto/internal/edwards25519/field.shiftRightBy51":[[0]],"crypto/internal/nistec.NewP224Generator":[[]],"crypto/internal/nistec.NewP224Point":[[]],"crypto/internal/nistec.NewP256Generator":[[]],"crypto/internal/nistec.NewP256Point":[[]],"crypto/internal/nistec.NewP384Generator":[[]],"crypto/internal/nistec.NewP384Point":[[]],"crypto/internal/nistec.NewP521Generator":[[]],"crypto/internal/nistec.NewP521Point":[[]],"crypto/internal/nistec.P256OrdInverse":[[],[]],"crypto/internal/nistec.boothW5":[[0],[0]],"crypto/internal/nistec.boothW6":[[0],[0]],"crypto/internal/nistec.init":[],"crypto/internal/nistec.init#1":[],"crypto/internal/nistec.p224CheckOnCurve":[[]],"crypto/internal/nistec.p224Polynomial":[[0]],"crypto/internal/nistec.p224Sqrt":[[]],"crypto/internal/nistec.p224SqrtCandidate":[],"crypto/internal/nistec.p224SqrtCandidate$1":[],"crypto/internal/nistec.p256Add":[],"crypto/internal/nistec.p256BigToLittle":[],"crypto/internal/nistec.p256CheckOnCurve":[[]],"crypto/internal/nistec.p256Equal":[[0,1]],"crypto/internal/nistec.p256FromMont":[],"crypto/internal/nistec.p256Inverse":[],"crypto/internal/nistec.p256LessThanP":[[0]],"crypto/internal/nistec.p256LittleToBig":[],"crypto/internal/nistec.p256MovCond":[],"crypto/internal/nistec.p256Mul":[],"crypto/internal/nistec.p256NegCond":[],"crypto/internal/nistec.p256OrdBigToLittle":[],"crypto/internal/nistec.p256OrdLittleToBig":[],"crypto/internal/nistec.p256OrdMul":[],"crypto/internal/nistec.p256OrdSqr":[],"crypto/internal/nistec.p256PointAddAffineAsm":[],"crypto/internal/nistec.p256PointAddAsm":[[]],"crypto/internal/nistec.p256PointDoubleAsm":[],"crypto/internal/nistec.p256Polynomial":[[0]],"crypto/internal/nistec.p256Select":[],"crypto/internal/nistec.p256SelectAffine":[],"crypto/internal/nistec.p256Sqr":[],"crypto/internal/nistec.p256Sqrt":[[]],"crypto/internal/nistec.p384CheckOnCurve":[[]],"crypto/internal/nistec.p384Polynomial":[[0]],"crypto/internal/nistec.p384Sqrt":[[]],"crypto/internal/nistec.p384SqrtCandidate":[],"crypto/internal/nistec.p521CheckOnCurve":[[]],"crypto/internal/nistec.p521Polynomial":[[0]],"crypto/internal/nistec.p521Sqrt":[[]],"crypto/internal/nistec.p521SqrtCandidate":[],"crypto/internal/nistec.uint64IsZero":[[0]],"crypto/internal/nistec/fiat.init":[],"crypto/internal/nistec/fiat.p224Add":[],"crypto/internal/nistec/fiat.p224CmovznzU64":[],"crypto/internal/nistec/fiat.p224FromBytes":[],"crypto/internal/nistec/fiat.p224FromMontgomery":[],"crypto/internal/nistec/fiat.p224InvertEndianness":[],"crypto/internal/nistec/fiat.p224Mul":[],"crypto/internal/nistec/fiat.p224Selectznz":[],"crypto/internal/nistec/fiat.p224SetOne":[],"crypto/internal/nistec/fiat.p224Square":[],"crypto/internal/nistec/fiat.p224Sub":[],"crypto/internal/nistec/fiat.p224ToBytes":[],"crypto/internal/nistec/fiat.p224ToMontgomery":[],"crypto/internal/nistec/fiat.p256Add":[],"crypto/internal/nistec/fiat.p256CmovznzU64":[],"crypto/internal/nistec/fiat.p256FromBytes":[],"crypto/internal/nistec/fiat.p256FromMontgomery":[],"crypto/internal/nistec/fiat.p256InvertEndianness":[],"crypto/internal/nistec/fiat.p256Mul":[],"crypto/internal/nistec/fiat.p256Selectznz":[],"crypto/internal/nistec/fiat.p256SetOne":[],"crypto/internal/nistec/fiat.p256Square":[],"crypto/internal/nistec/fiat.p256Sub":[],"crypto/internal/nistec/fiat.p256ToBytes":[],"crypto/internal/nistec/fiat.p256ToMontgomery":[],"crypto/internal/nistec/fiat.p384Add":[],"crypto/internal/nistec/fiat.p384CmovznzU64":[],"crypto/internal/nistec/fiat.p384FromBytes":[],"crypto/internal/nistec/fiat.p384FromMontgomery":[],"crypto/internal/nistec/fiat.p384InvertEndianness":[],"crypto/internal/nistec/fiat.p384Mul":[],"crypto/internal/nistec/fiat.p384Selectznz":[],"crypto/internal/nistec/fiat.p384SetOne":[],"crypto/internal/nistec/fiat.p384Square":[],"crypto/internal/nistec/fiat.p384Sub":[],"crypto/internal/nistec/fiat.p384ToBytes":[],"crypto/internal/nistec/fiat.p384ToMontgomery":[],"crypto/internal/nistec/fiat.p521Add":[],"crypto/internal/nistec/fiat.p521CmovznzU64":[],"crypto/internal/nistec/fiat.p521FromBytes":[],"crypto/internal/nistec/fiat.p521FromMontgomery":[],"crypto/internal/nistec/fiat.p521InvertEndianness":[],"crypto/internal/nistec/fiat.p521Mul":[],"crypto/internal/nistec/fiat.p521Selectznz":[],"crypto/internal/nistec/fiat.p521SetOne":[],"crypto/internal/nistec/fiat.p521Square":[],"crypto/internal/nistec/fiat.p521Sub":[],"crypto/internal/nistec/fiat.p521ToBytes":[],"crypto/internal/nistec/fiat.p521ToMontgomery":[],"crypto/internal/randutil.MaybeReadByte":[],"crypto/internal/randutil.MaybeReadByte$1":[],"crypto/internal/randutil.init":[],"crypto/internal/subtle.AnyOverlap":[[0,1]],"crypto/internal/subtle.InexactOverlap":[[0,1]],"crypto/internal/subtle.init":[],"crypto/md5.New":[[]],"crypto/md5.Sum":[[]],"crypto/md5.appendUint32":[[0]],"crypto/md5.appendUint64":[[0]],"crypto/md5.block":[],"crypto/md5.blockGeneric":[],"crypto/md5.consumeUint32":[[0],[0]],"crypto/md5.consumeUint64":[[0],[0]],"crypto/md5.init":[],"crypto/md5.init#1":[],"crypto/rand.Int":[[1],[0]],"crypto/rand.Prime":[[1],[0]],"crypto/rand.Read":[[],[]],"crypto/rand.batched":[[]],"crypto/rand.batched$1":[[]],"crypto/rand.init":[],"crypto/rand.init#1":[],"crypto/rand.init#2":[],"crypto/rand.warnBlocked":[],"crypto/rc4.NewCipher":[[],[]],"crypto/rc4.init":[],"crypto/rsa.DecryptOAEP":[[],[1]],"crypto/rsa.DecryptPKCS1v15":[[],[0]],"crypto/rsa.DecryptPKCS1v15SessionKey":[[0]],"crypto/rsa.EncryptOAEP":[[],[1]],"crypto/rsa.EncryptPKCS1v15":[[],[0]],"crypto/rsa.GenerateKey":[[1],[0]],"crypto/rsa.GenerateMultiPrimeKey":[[1,2],[0]],"crypto/rsa.SignPKCS1v15":[[],[0]],"crypto/rsa.SignPSS":[[],[0]],"crypto/rsa.VerifyPKCS1v15":[[]],"crypto/rsa.VerifyPSS":[[]],"crypto/rsa.boringPrivateKey":[[],[]],"crypto/rsa.boringPublicKey":[[],[]],"crypto/rsa.checkPub":[[]],"crypto/rsa.decrypt":[[1,2],[0]],"crypto/rsa.decryptAndCheck":[[1,2],[0]],"crypto/rsa.decryptPKCS1v15":[[],[],[],[0]],"crypto/rsa.emsaPSSEncode":[[1],[]],"crypto/rsa.emsaPSSVerify":[[]],"crypto/rsa.encrypt":[[0,1,2]],"crypto/rsa.incCounter":[],"crypto/rsa.init":[],"crypto/rsa.mgf1XOR":[],"crypto/rsa.nonZeroRandomBytes":[[1]],"crypto/rsa.pkcs1v15HashInfo":[[1],[0],[]],"crypto/rsa.signPSSWithSalt":[[],[0]],"crypto/sha1.New":[[]],"crypto/sha1.Sum":[[]],"crypto/sha1.appendUint32":[[0]],"crypto/sha1.appendUint64":[[0]],"crypto/sha1.block":[],"crypto/sha1.blockAMD64":[],"crypto/sha1.blockAVX2":[],"crypto/sha1.blockGeneric":[],"crypto/sha1.boringNewSHA1":[[]],"crypto/sha1.boringSHA1":[[]],"crypto/sha1.boringUnreachable":[],"crypto/sha1.consumeUint32":[[0],[0]],"crypto/sha1.consumeUint64":[[0],[0]],"crypto/sha1.init":[],"crypto/sha1.init#1":[],"crypto/sha256.New":[[]],"crypto/sha256.New224":[[]],"crypto/sha256.Sum224":[[]],"crypto/sha256.Sum256":[[]],"crypto/sha256.appendUint32":[[0]],"crypto/sha256.appendUint64":[[0]],"crypto/sha256.block":[],"crypto/sha256.blockGeneric":[],"crypto/sha256.consumeUint32":[[0],[0]],"crypto/sha256.consumeUint64":[[0],[0]],"crypto/sha256.init":[],"crypto/sha256.init#1":[],"crypto/sha512.New":[[]],"crypto/sha512.New384":[[]],"crypto/sha512.New512_224":[[]],"crypto/sha512.New512_256":[[]],"crypto/sha512.Sum384":[[]],"crypto/sha512.Sum512":[[]],"crypto/sha512.Sum512_224":[[]],"crypto/sha512.Sum512_256":[[]],"crypto/sha512.appendUint64":[[0]],"crypto/sha512.block":[],"crypto/sha512.blockAMD64":[],"crypto/sha512.blockAVX2":[],"crypto/sha512.blockGeneric":[],"crypto/sha512.consumeUint64":[[0],[0]],"crypto/sha512.init":[],"crypto/sha512.init#1":[],"crypto/subtle.ConstantTimeByteEq":[[0,1]],"crypto/subtle.ConstantTimeCompare":[[0,1]],"crypto/subtle.ConstantTimeCopy":[],"crypto/subtle.ConstantTimeEq":[[0,1]],"crypto/subtle.ConstantTimeLessOrEq":[[0,1]],"crypto/subtle.ConstantTimeSelect":[[0,1,2]],"crypto/subtle.init":[],"crypto/tls.CipherSuiteName":[[]],"crypto/tls.CipherSuites":[[]],"crypto/tls.Client":[[0,1]],"crypto/tls.Dial":[[0,1,2],[0,1,2]],"crypto/tls.DialWithDialer":[[0,1,2,3],[0,1,2,3]],"crypto/tls.InsecureCipherSuites":[[]],"crypto/tls.Listen":[[0,1,2],[0,1]],"crypto/tls.LoadX509KeyPair":[[],[0,1]],"crypto/tls.NewLRUClientSessionCache":[[0]],"crypto/tls.NewListener":[[0,1]],"crypto/tls.Server":[[0,1]],"crypto/tls.X509KeyPair":[[0],[0,1]],"crypto/tls.X509KeyPair$1":[[],[0]],"crypto/tls.addBytesWithLength":[],"crypto/tls.addBytesWithLength$1":[[]],"crypto/tls.addUint64":[],"crypto/tls.aeadAESGCM":[[]],"crypto/tls.aeadAESGCMTLS13":[[]],"crypto/tls.aeadChaCha20Poly1305":[[]],"crypto/tls.aesgcmPreferred":[[0]],"crypto/tls.certificateRequestInfoFromMsg":[[0,1,2]],"crypto/tls.checkALPN":[[]],"crypto/tls.cipher3DES":[[1]],"crypto/tls.cipherAES":[[1]],"crypto/tls.cipherRC4":[[]],"crypto/tls.cipherSuiteByID":[[]],"crypto/tls.cipherSuiteTLS13ByID":[[]],"crypto/tls.clientHelloInfo":[[0,1,2]],"crypto/tls.clientSessionCacheKey":[[0,1]],"crypto/tls.cloneHash":[[]],"crypto/tls.curveForCurveID":[[],[]],"crypto/tls.defaultConfig":[[]],"crypto/tls.dial":[[1,2,3,4],[1,2,3,4]],"crypto/tls.ecdheECDSAKA":[[0]],"crypto/tls.ecdheRSAKA":[[0]],"crypto/tls.ekmFromMasterSecret":[[]],"crypto/tls.ekmFromMasterSecret$1":[[],[0]],"crypto/tls.extractPadding":[[0],[0]],"crypto/tls.fipsCipherSuites":[[]],"crypto/tls.fipsCurvePreferences":[[]],"crypto/tls.fipsMaxVersion":[[]],"crypto/tls.fipsMinVersion":[[]],"crypto/tls.generateECDHEParameters":[[1],[0]],"crypto/tls.hashForServerKeyExchange":[[3]],"crypto/tls.hostnameInSNI":[[0]],"crypto/tls.illegalClientHelloChange":[[0,1]],"crypto/tls.init":[],"crypto/tls.init$1":[[]],"crypto/tls.isSupportedSignatureAlgorithm":[[]],"crypto/tls.keysFromMasterSecret":[[],[],[],[],[],[]],"crypto/tls.legacyTypeAndHashFromPublicKey":[[],[],[0]],"crypto/tls.macSHA1":[[]],"crypto/tls.macSHA256":[[]],"crypto/tls.marshalCertificate":[],"crypto/tls.marshalCertificate$1":[],"crypto/tls.marshalCertificate$1$1":[],"crypto/tls.marshalCertificate$1$2":[],"crypto/tls.marshalCertificate$1$2$1":[],"crypto/tls.marshalCertificate$1$2$1$1":[],"crypto/tls.marshalCertificate$1$2$2":[],"crypto/tls.marshalCertificate$1$2$2$1":[],"crypto/tls.marshalCertificate$1$2$2$1$1":[],"crypto/tls.masterFromPreMasterSecret":[[]],"crypto/tls.md5SHA1Hash":[[]],"crypto/tls.mutualCipherSuite":[[]],"crypto/tls.mutualCipherSuiteTLS13":[[]],"crypto/tls.needFIPS":[[]],"crypto/tls.negotiateALPN":[[0],[1]],"crypto/tls.newConstantTimeHash":[[]],"crypto/tls.newConstantTimeHash$1":[[]],"crypto/tls.newFinishedHash":[[0]],"crypto/tls.noExportedKeyingMaterial":[[],[]],"crypto/tls.pHash":[],"crypto/tls.parsePrivateKey":[[],[]],"crypto/tls.prf10":[],"crypto/tls.prf12":[[]],"crypto/tls.prf12$1":[],"crypto/tls.prfAndHashForVersion":[[],[]],"crypto/tls.prfForVersion":[[]],"crypto/tls.readUint16LengthPrefixed":[[]],"crypto/tls.readUint24LengthPrefixed":[[]],"crypto/tls.readUint64":[[]],"crypto/tls.readUint8LengthPrefixed":[[]],"crypto/tls.requiresClientCert":[[]],"crypto/tls.roundUp":[[0,1]],"crypto/tls.rsaKA":[[]],"crypto/tls.selectCipherSuite":[[]],"crypto/tls.selectSignatureScheme":[[2],[1]],"crypto/tls.sha1Hash":[[]],"crypto/tls.signatureSchemesForCertificate":[[]],"crypto/tls.signedMessage":[[]],"crypto/tls.sliceForAppend":[[0],[0]],"crypto/tls.splitPreMasterSecret":[[0],[0]],"crypto/tls.supportedSignatureAlgorithms":[[]],"crypto/tls.supportedVersionsFromMax":[[]],"crypto/tls.supportsECDHE":[[]],"crypto/tls.tls10MAC":[[0,1]],"crypto/tls.typeAndHashFromSignatureScheme":[[],[],[0]],"crypto/tls.unexpectedMessageError":[[0,1]],"crypto/tls.unmarshalCertificate":[[]],"crypto/tls.unsupportedCertificateError":[[0]],"crypto/tls.verifyHandshakeSignature":[[1]],"crypto/x509.CreateCertificate":[[],[1,3]],"crypto/x509.CreateCertificateRequest":[[],[1]],"crypto/x509.CreateRevocationList":[[],[]],"crypto/x509.DecryptPEMBlock":[[],[0]],"crypto/x509.EncryptPEMBlock":[[1,2],[0]],"crypto/x509.IsEncryptedPEMBlock":[[]],"crypto/x509.MarshalECPrivateKey":[[],[]],"crypto/x509.MarshalPKCS1PrivateKey":[[]],"crypto/x509.MarshalPKCS1PublicKey":[[]],"crypto/x509.MarshalPKCS8PrivateKey":[[],[0]],"crypto/x509.MarshalPKIXPublicKey":[[],[0]],"crypto/x509.NewCertPool":[[]],"crypto/x509.ParseCRL":[[],[0]],"crypto/x509.ParseCertificate":[[0],[]],"crypto/x509.ParseCertificateRequest":[[],[0]],"crypto/x509.ParseCertificates":[[0],[]],"crypto/x509.ParseDERCRL":[[],[0]],"crypto/x509.ParseECPrivateKey":[[],[0]],"crypto/x509.ParsePKCS1PrivateKey":[[],[0]],"crypto/x509.ParsePKCS1PublicKey":[[],[0]],"crypto/x509.ParsePKCS8PrivateKey":[[],[0]],"crypto/x509.ParsePKIXPublicKey":[[],[0]],"crypto/x509.ParseRevocationList":[[0],[]],"crypto/x509.SystemCertPool":[[],[]],"crypto/x509.alreadyInChain":[[]],"crypto/x509.appendToFreshChain":[[0,1]],"crypto/x509.asn1BitLength":[[]],"crypto/x509.boringAllowCert":[[]],"crypto/x509.buildCSRExtensions":[[0],[0]],"crypto/x509.buildCertExtensions":[[0],[0]],"crypto/x509.buildCertExtensions$1":[[]],"crypto/x509.buildCertExtensions$2":[[],[0,2,3]],"crypto/x509.buildCertExtensions$2$1":[],"crypto/x509.buildCertExtensions$2$1$1":[],"crypto/x509.buildCertExtensions$2$2":[],"crypto/x509.buildCertExtensions$2$2$1":[],"crypto/x509.buildCertExtensions$2$3":[],"crypto/x509.buildCertExtensions$2$3$1":[],"crypto/x509.buildCertExtensions$2$4":[],"crypto/x509.buildCertExtensions$2$4$1":[],"crypto/x509.buildCertExtensions$3":[],"crypto/x509.buildCertExtensions$3$1":[],"crypto/x509.buildCertExtensions$3$2":[],"crypto/x509.checkChainForKeyUsage":[[]],"crypto/x509.checkSignature":[[0,3]],"crypto/x509.cipherByKey":[[]],"crypto/x509.cipherByName":[[]],"crypto/x509.domainToReverseLabels":[[0],[]],"crypto/x509.exportCertificate":[[],[]],"crypto/x509.extKeyUsageFromOID":[[],[]],"crypto/x509.forEachSAN":[[]],"crypto/x509.getPublicKeyAlgorithmFromOID":[[]],"crypto/x509.getSignatureAlgorithmFromAI":[[]],"crypto/x509.init":[],"crypto/x509.initSystemRoots":[],"crypto/x509.isIA5String":[[0]],"crypto/x509.isPrintable":[[0]],"crypto/x509.isValidIPMask":[[]],"crypto/x509.loadSystemRoots":[[],[]],"crypto/x509.marshalBasicConstraints":[[],[]],"crypto/x509.marshalCertificatePolicies":[[],[]],"crypto/x509.marshalECPrivateKeyWithOID":[[],[]],"crypto/x509.marshalExtKeyUsage":[[],[]],"crypto/x509.marshalKeyUsage":[[],[]],"crypto/x509.marshalPublicKey":[[0],[],[0]],"crypto/x509.marshalSANs":[[],[0,1,3]],"crypto/x509.matchDomainConstraint":[[],[0,1]],"crypto/x509.matchEmailConstraint":[[0,1],[0,1]],"crypto/x509.matchExactly":[[0,1]],"crypto/x509.matchHostnames":[[]],"crypto/x509.matchIPConstraint":[[],[]],"crypto/x509.matchURIConstraint":[[],[0,1]],"crypto/x509.namedCurveFromOID":[[]],"crypto/x509.newRawAttributes":[[],[]],"crypto/x509.oidFromExtKeyUsage":[[],[]],"crypto/x509.oidFromNamedCurve":[[],[]],"crypto/x509.oidInExtensions":[[]],"crypto/x509.parseAI":[[],[]],"crypto/x509.parseASN1String":[[1],[0]],"crypto/x509.parseBasicConstraintsExtension":[[],[],[]],"crypto/x509.parseCSRExtensions":[[],[]],"crypto/x509.parseCertificate":[[0],[]],"crypto/x509.parseCertificatePoliciesExtension":[[],[]],"crypto/x509.parseCertificateRequest":[[0],[0]],"crypto/x509.parseECPrivateKey":[[],[1]],"crypto/x509.parseExtKeyUsageExtension":[[],[],[]],"crypto/x509.parseExtension":[[],[]],"crypto/x509.parseKeyUsageExtension":[[],[]],"crypto/x509.parseName":[[],[]],"crypto/x509.parseNameConstraintsExtension":[[],[]],"crypto/x509.parseNameConstraintsExtension$1":[[],[],[],[],[]],"crypto/x509.parsePublicKey":[[1],[]],"crypto/x509.parseRFC2821Mailbox":[[0],[]],"crypto/x509.parseRawAttributes":[[]],"crypto/x509.parseSANExtension":[[],[],[],[],[]],"crypto/x509.parseSANExtension$1":[[1]],"crypto/x509.parseTime":[[],[]],"crypto/x509.parseValidity":[[],[],[]],"crypto/x509.processExtensions":[[]],"crypto/x509.reverseBitsInAByte":[[0]],"crypto/x509.signaturePublicKeyAlgoMismatchError":[[0,1]],"crypto/x509.signingParamsForPublicKey":[[],[],[]],"crypto/x509.subjectBytes":[[0],[]],"crypto/x509.systemRootsPool":[[]],"crypto/x509.toLowerCaseASCII":[[0]],"crypto/x509.validHostname":[[]],"crypto/x509.validHostnameInput":[[]],"crypto/x509.validHostnamePattern":[[]],"crypto/x509/internal/macos.BytesToCFData":[[]],"crypto/x509/internal/macos.CFArrayAppendValue":[],"crypto/x509/internal/macos.CFArrayCreateMutable":[[]],"crypto/x509/internal/macos.CFArrayGetCount":[[]],"crypto/x509/internal/macos.CFArrayGetValueAtIndex":[[]],"crypto/x509/internal/macos.CFDataGetBytePtr":[[]],"crypto/x509/internal/macos.CFDataGetLength":[[]],"crypto/x509/internal/macos.CFDataToSlice":[[]],"crypto/x509/internal/macos.CFDateCreate":[[]],"crypto/x509/internal/macos.CFDictionaryGetValueIfPresent":[[],[]],"crypto/x509/internal/macos.CFEqual":[[]],"crypto/x509/internal/macos.CFErrorCopyDescription":[[]],"crypto/x509/internal/macos.CFNumberGetValue":[[],[]],"crypto/x509/internal/macos.CFRelease":[],"crypto/x509/internal/macos.CFStringCreateExternalRepresentation":[[],[]],"crypto/x509/internal/macos.CFStringToString":[[]],"crypto/x509/internal/macos.ReleaseCFArray":[],"crypto/x509/internal/macos.SecCertificateCopyData":[[],[]],"crypto/x509/internal/macos.SecCertificateCreateWithData":[[],[]],"crypto/x509/internal/macos.SecPolicyCopyProperties":[[]],"crypto/x509/internal/macos.SecPolicyCreateSSL":[[]],"crypto/x509/internal/macos.SecTrustCreateWithCertificates":[[],[]],"crypto/x509/internal/macos.SecTrustEvaluate":[[],[]],"crypto/x509/internal/macos.SecTrustEvaluateWithError":[[]],"crypto/x509/internal/macos.SecTrustGetCertificateAtIndex":[[]],"crypto/x509/internal/macos.SecTrustGetCertificateCount":[[]],"crypto/x509/internal/macos.SecTrustGetResult":[[],[],[]],"crypto/x509/internal/macos.SecTrustSetVerifyDate":[[]],"crypto/x509/internal/macos.SecTrustSettingsCopyCertificates":[[],[]],"crypto/x509/internal/macos.SecTrustSettingsCopyTrustSettings":[[],[]],"crypto/x509/internal/macos.StringToCFString":[[]],"crypto/x509/internal/macos.TimeToCFDateRef":[[]],"crypto/x509/internal/macos.init":[],"crypto/x509/internal/macos.syscall":[[]],"crypto/x509/internal/macos.x509_CFArrayAppendValue_trampoline":[],"crypto/x509/internal/macos.x509_CFArrayCreateMutable_trampoline":[],"crypto/x509/internal/macos.x509_CFArrayGetCount_trampoline":[],"crypto/x509/internal/macos.x509_CFArrayGetValueAtIndex_trampoline":[],"crypto/x509/internal/macos.x509_CFDataCreate_trampoline":[],"crypto/x509/internal/macos.x509_CFDataGetBytePtr_trampoline":[],"crypto/x509/internal/macos.x509_CFDataGetLength_trampoline":[],"crypto/x509/internal/macos.x509_CFDateCreate_trampoline":[],"crypto/x509/internal/macos.x509_CFDictionaryGetValueIfPresent_trampoline":[],"crypto/x509/internal/macos.x509_CFEqual_trampoline":[],"crypto/x509/internal/macos.x509_CFErrorCopyDescription_trampoline":[],"crypto/x509/internal/macos.x509_CFNumberGetValue_trampoline":[],"crypto/x509/internal/macos.x509_CFRelease_trampoline":[],"crypto/x509/internal/macos.x509_CFStringCreateExternalRepresentation_trampoline":[],"crypto/x509/internal/macos.x509_CFStringCreateWithBytes_trampoline":[],"crypto/x509/internal/macos.x509_SecCertificateCopyData_trampoline":[],"crypto/x509/internal/macos.x509_SecCertificateCreateWithData_trampoline":[],"crypto/x509/internal/macos.x509_SecPolicyCopyProperties_trampoline":[],"crypto/x509/internal/macos.x509_SecPolicyCreateSSL_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustCreateWithCertificates_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustEvaluateWithError_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustEvaluate_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustGetCertificateAtIndex_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustGetCertificateCount_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustGetResult_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustSetVerifyDate_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustSettingsCopyCertificates_trampoline":[],"crypto/x509/internal/macos.x509_SecTrustSettingsCopyTrustSettings_trampoline":[],"crypto/x509/pkix.init":[],"crypto/x509/pkix.oidInAttributeTypeAndValue":[[]],"database/sql.Drivers":[[]],"database/sql.Named":[[0,1]],"database/sql.Open":[[0,1],[0]],"database/sql.OpenDB":[[0]],"database/sql.Register":[],"database/sql.asBytes":[[0,1],[]],"database/sql.asString":[[0]],"database/sql.callValuerValue":[[0],[]],"database/sql.cloneBytes":[[0]],"database/sql.convertAssign":[[]],"database/sql.convertAssignRows":[[0,1]],"database/sql.convertAssignRows$1":[],"database/sql.convertAssignRows$2":[],"database/sql.ctxDriverBegin":[[],[]],"database/sql.ctxDriverExec":[[],[]],"database/sql.ctxDriverPrepare":[[],[]],"database/sql.ctxDriverQuery":[[],[]],"database/sql.ctxDriverStmtExec":[[],[]],"database/sql.ctxDriverStmtQuery":[[],[]],"database/sql.defaultCheckNamedValue":[[0]],"database/sql.describeNamedValue":[[]],"database/sql.driverArgsConnLocked":[[],[2]],"database/sql.init":[],"database/sql.init$1":[[]],"database/sql.namedValueToValue":[[0],[]],"database/sql.resultFromStatement":[[2],[3]],"database/sql.rowsColumnInfoSetupConnLocked":[[]],"database/sql.rowsiFromStatement":[[],[3]],"database/sql.stack":[[]],"database/sql.strconvErr":[[0]],"database/sql.unregisterAllDrivers":[],"database/sql.validateNamedValueName":[[0]],"database/sql.withLock":[],"database/sql/driver.IsScanValue":[[]],"database/sql/driver.IsValue":[[]],"database/sql/driver.callValuerValue":[[0],[]],"database/sql/driver.init":[],"debug/buildinfo.Read":[[],[]],"debug/buildinfo.ReadFile":[[],[0]],"debug/buildinfo.ReadFile$1":[],"debug/buildinfo.decodeString":[[0],[0]],"debug/buildinfo.init":[],"debug/buildinfo.readRawBuildInfo":[[],[],[]],"debug/buildinfo.readRawBuildInfo$1":[[0]],"debug/buildinfo.readString":[[]],"debug/dwarf.New":[[0,1,2,3,4,5,6,7],[0,1,2,3,4,5,6,7]],"debug/dwarf.formToClass":[[1]],"debug/dwarf.init":[],"debug/dwarf.makeBuf":[[0,1,2,3,4]],"debug/dwarf.pathIsAbs":[[0]],"debug/dwarf.pathJoin":[[0,1]],"debug/dwarf.splitDrive":[[0],[0]],"debug/dwarf.zeroArray":[],"debug/elf.NewFile":[[],[0]],"debug/elf.Open":[[],[0]],"debug/elf.R_INFO":[[0,1]],"debug/elf.R_INFO32":[[0,1]],"debug/elf.R_SYM32":[[0]],"debug/elf.R_SYM64":[[0]],"debug/elf.R_TYPE32":[[0]],"debug/elf.R_TYPE64":[[0]],"debug/elf.ST_BIND":[[0]],"debug/elf.ST_INFO":[[0,1]],"debug/elf.ST_TYPE":[[0]],"debug/elf.ST_VISIBILITY":[[0]],"debug/elf.canApplyRelocation":[[0]],"debug/elf.flagName":[[0,1]],"debug/elf.getString":[[0],[]],"debug/elf.init":[],"debug/elf.stringName":[[0,1]],"debug/gosym.NewLineTable":[[0,1]],"debug/gosym.NewTable":[[1],[0]],"debug/gosym.NewTable$1":[[]],"debug/gosym.NewTable$2":[[0]],"debug/gosym.init":[],"debug/gosym.walksymtab":[[0]],"debug/macho.NewFatFile":[[],[0]],"debug/macho.NewFile":[[],[0]],"debug/macho.Open":[[],[0]],"debug/macho.OpenFat":[[],[0]],"debug/macho.cstring":[[0]],"debug/macho.init":[],"debug/macho.stringName":[[0,1]],"debug/pe.NewFile":[[],[0]],"debug/pe.Open":[[],[0]],"debug/pe.cstring":[[0]],"debug/pe.getString":[[0],[]],"debug/pe.init":[],"debug/pe.isSymNameOffset":[[],[0]],"debug/pe.readCOFFSymbols":[[],[1]],"debug/pe.readDataDirectories":[[],[0,1,2]],"debug/pe.readOptionalHeader":[[],[0,1]],"debug/pe.readOptionalHeader$1":[[]],"debug/pe.readRelocs":[[],[0,1]],"debug/pe.readStringTable":[[],[1]],"debug/pe.removeAuxSymbols":[[0,1],[0]],"debug/plan9obj.NewFile":[[],[0]],"debug/plan9obj.Open":[[],[0]],"debug/plan9obj.init":[],"debug/plan9obj.newTable":[[],[]],"debug/plan9obj.newTable$1":[[]],"debug/plan9obj.newTable$2":[[0]],"debug/plan9obj.parseMagic":[[0],[0]],"debug/plan9obj.walksymtab":[[]],"embed.init":[],"embed.sortSearch":[[0]],"embed.split":[[0],[0],[]],"embed.trimSlash":[[0]],"embed/internal/embedtest.init":[],"encoding.init":[],"encoding/ascii85.Decode":[[],[],[]],"encoding/ascii85.Encode":[[]],"encoding/ascii85.MaxEncodedLen":[[0]],"encoding/ascii85.NewDecoder":[[0]],"encoding/ascii85.NewEncoder":[[0]],"encoding/ascii85.init":[],"encoding/asn1.Marshal":[[],[]],"encoding/asn1.MarshalWithParams":[[],[]],"encoding/asn1.Unmarshal":[[0],[0,1]],"encoding/asn1.UnmarshalWithParams":[[0],[0,1]],"encoding/asn1.appendBase128Int":[[0,1]],"encoding/asn1.appendFourDigits":[[0,1]],"encoding/asn1.appendGeneralizedTime":[[0,1],[]],"encoding/asn1.appendLength":[[0,1]],"encoding/asn1.appendTagAndLength":[[0,1]],"encoding/asn1.appendTimeCommon":[[0,1]],"encoding/asn1.appendTwoDigits":[[0,1]],"encoding/asn1.appendUTCTime":[[0,1],[]],"encoding/asn1.base128IntLength":[[]],"encoding/asn1.canHaveDefaultValue":[[]],"encoding/asn1.checkInteger":[[]],"encoding/asn1.getUniversalType":[[],[],[],[]],"encoding/asn1.init":[],"encoding/asn1.invalidLength":[[0,1,2]],"encoding/asn1.isNumeric":[[0]],"encoding/asn1.isPrintable":[[0]],"encoding/asn1.lengthLength":[[]],"encoding/asn1.makeBigInt":[[],[]],"encoding/asn1.makeBody":[[0],[]],"encoding/asn1.makeField":[[0,1],[]],"encoding/asn1.makeGeneralizedTime":[[0],[]],"encoding/asn1.makeIA5String":[[0],[]],"encoding/asn1.makeNumericString":[[0],[]],"encoding/asn1.makeObjectIdentifier":[[0],[]],"encoding/asn1.makePrintableString":[[0],[]],"encoding/asn1.makeUTCTime":[[0],[]],"encoding/asn1.makeUTF8String":[[0]],"encoding/asn1.outsideUTCRange":[[0]],"encoding/asn1.parseBMPString":[[0],[]],"encoding/asn1.parseBase128Int":[[0],[1],[]],"encoding/asn1.parseBigInt":[[0],[]],"encoding/asn1.parseBitString":[[0],[]],"encoding/asn1.parseBool":[[],[]],"encoding/asn1.parseField":[[1,2],[1]],"encoding/asn1.parseFieldParameters":[[]],"encoding/asn1.parseGeneralizedTime":[[0],[0]],"encoding/asn1.parseIA5String":[[0],[]],"encoding/asn1.parseInt32":[[0],[]],"encoding/asn1.parseInt64":[[0],[]],"encoding/asn1.parseNumericString":[[0],[]],"encoding/asn1.parseObjectIdentifier":[[0],[]],"encoding/asn1.parsePrintableString":[[0],[]],"encoding/asn1.parseSequenceOf":[[1],[]],"encoding/asn1.parseT61String":[[0],[]],"encoding/asn1.parseTagAndLength":[[0],[1],[]],"encoding/asn1.parseUTCTime":[[0],[0]],"encoding/asn1.parseUTF8String":[[0],[]],"encoding/asn1.setDefaultValue":[[]],"encoding/asn1.stripTagAndLength":[[0]],"encoding/base32.NewDecoder":[[0,1]],"encoding/base32.NewEncoder":[[0,1]],"encoding/base32.NewEncoding":[[]],"encoding/base32.init":[],"encoding/base32.readEncodedData":[[],[0]],"encoding/base32.stripNewlines":[[]],"encoding/base64.NewDecoder":[[0,1]],"encoding/base64.NewEncoder":[[0,1]],"encoding/base64.NewEncoding":[[]],"encoding/base64.assemble32":[[0,1,2,3],[]],"encoding/base64.assemble64":[[0,1,2,3,4,5,6,7],[]],"encoding/base64.init":[],"encoding/binary.AppendUvarint":[[0,1]],"encoding/binary.AppendVarint":[[0,1]],"encoding/binary.PutUvarint":[[]],"encoding/binary.PutVarint":[[]],"encoding/binary.Read":[[0]],"encoding/binary.ReadUvarint":[[],[]],"encoding/binary.ReadVarint":[[],[]],"encoding/binary.Size":[[0]],"encoding/binary.Uvarint":[[0],[]],"encoding/binary.Varint":[[0],[]],"encoding/binary.Write":[[0]],"encoding/binary.dataSize":[[0]],"encoding/binary.init":[],"encoding/binary.intDataSize":[[]],"encoding/binary.sizeof":[[0]],"encoding/csv.NewReader":[[0]],"encoding/csv.NewWriter":[[0]],"encoding/csv.init":[],"encoding/csv.lengthNL":[[]],"encoding/csv.nextRune":[[0]],"encoding/csv.validDelim":[[0]],"encoding/gob.NewDecoder":[[0]],"encoding/gob.NewEncoder":[[0]],"encoding/gob.Register":[],"encoding/gob.RegisterName":[],"encoding/gob.allocValue":[[0]],"encoding/gob.bootstrapType":[[]],"encoding/gob.buildEncEngine":[[1]],"encoding/gob.buildTypeInfo":[[1],[]],"encoding/gob.catchError":[],"encoding/gob.checkId":[],"encoding/gob.compileEnc":[[0]],"encoding/gob.decAlloc":[[0]],"encoding/gob.decBool":[],"encoding/gob.decBoolArray":[[]],"encoding/gob.decBoolSlice":[[]],"encoding/gob.decComplex128":[],"encoding/gob.decComplex128Array":[[]],"encoding/gob.decComplex128Slice":[[]],"encoding/gob.decComplex64":[],"encoding/gob.decComplex64Array":[[]],"encoding/gob.decComplex64Slice":[[]],"encoding/gob.decFloat32":[],"encoding/gob.decFloat32Array":[[]],"encoding/gob.decFloat32Slice":[[]],"encoding/gob.decFloat64":[],"encoding/gob.decFloat64Array":[[]],"encoding/gob.decFloat64Slice":[[]],"encoding/gob.decInt16":[],"encoding/gob.decInt16Array":[[]],"encoding/gob.decInt16Slice":[[]],"encoding/gob.decInt32":[],"encoding/gob.decInt32Array":[[]],"encoding/gob.decInt32Slice":[[]],"encoding/gob.decInt64":[],"encoding/gob.decInt64Array":[[]],"encoding/gob.decInt64Slice":[[]],"encoding/gob.decInt8":[],"encoding/gob.decInt8Array":[[]],"encoding/gob.decInt8Slice":[[]],"encoding/gob.decIntArray":[[]],"encoding/gob.decIntSlice":[[]],"encoding/gob.decString":[],"encoding/gob.decStringArray":[[]],"encoding/gob.decStringSlice":[[]],"encoding/gob.decUint16":[],"encoding/gob.decUint16Array":[[]],"encoding/gob.decUint16Slice":[[]],"encoding/gob.decUint32":[],"encoding/gob.decUint32Array":[[]],"encoding/gob.decUint32Slice":[[]],"encoding/gob.decUint64":[],"encoding/gob.decUint64Array":[[]],"encoding/gob.decUint64Slice":[[]],"encoding/gob.decUint8":[],"encoding/gob.decUint8Slice":[],"encoding/gob.decUintArray":[[]],"encoding/gob.decUintSlice":[[]],"encoding/gob.decUintptrArray":[[]],"encoding/gob.decUintptrSlice":[[]],"encoding/gob.decodeIntoValue":[[3]],"encoding/gob.decodeUintReader":[[1],[],[0]],"encoding/gob.encBool":[],"encoding/gob.encBoolArray":[[]],"encoding/gob.encBoolSlice":[[]],"encoding/gob.encComplex":[],"encoding/gob.encComplex128Array":[[]],"encoding/gob.encComplex128Slice":[[]],"encoding/gob.encComplex64Array":[[]],"encoding/gob.encComplex64Slice":[[]],"encoding/gob.encFloat":[],"encoding/gob.encFloat32Array":[[]],"encoding/gob.encFloat32Slice":[[]],"encoding/gob.encFloat64Array":[[]],"encoding/gob.encFloat64Slice":[[]],"encoding/gob.encIndirect":[[0]],"encoding/gob.encInt":[],"encoding/gob.encInt16Array":[[]],"encoding/gob.encInt16Slice":[[]],"encoding/gob.encInt32Array":[[]],"encoding/gob.encInt32Slice":[[]],"encoding/gob.encInt64Array":[[]],"encoding/gob.encInt64Slice":[[]],"encoding/gob.encInt8Array":[[]],"encoding/gob.encInt8Slice":[[]],"encoding/gob.encIntArray":[[]],"encoding/gob.encIntSlice":[[]],"encoding/gob.encOpFor":[[0,1],[0]],"encoding/gob.encOpFor$1":[],"encoding/gob.encOpFor$2":[],"encoding/gob.encOpFor$3":[],"encoding/gob.encOpFor$4":[],"encoding/gob.encOpFor$5":[],"encoding/gob.encString":[],"encoding/gob.encStringArray":[[]],"encoding/gob.encStringSlice":[[]],"encoding/gob.encStructTerminator":[],"encoding/gob.encUint":[],"encoding/gob.encUint16Array":[[]],"encoding/gob.encUint16Slice":[[]],"encoding/gob.encUint32Array":[[]],"encoding/gob.encUint32Slice":[[]],"encoding/gob.encUint64Array":[[]],"encoding/gob.encUint64Slice":[[]],"encoding/gob.encUint8Array":[],"encoding/gob.encUintArray":[[]],"encoding/gob.encUintSlice":[[]],"encoding/gob.encUintptrArray":[[]],"encoding/gob.encUintptrSlice":[[]],"encoding/gob.encodeReflectValue":[],"encoding/gob.error_":[],"encoding/gob.errorf":[],"encoding/gob.float32FromBits":[[0]],"encoding/gob.float64FromBits":[[0]],"encoding/gob.floatBits":[[0]],"encoding/gob.getBaseType":[[0,1],[]],"encoding/gob.getEncEngine":[[0]],"encoding/gob.getType":[[0,2],[]],"encoding/gob.getTypeInfo":[[0],[]],"encoding/gob.gobEncodeOpFor":[[],[0]],"encoding/gob.gobEncodeOpFor$1":[],"encoding/gob.ignoreTwoUints":[],"encoding/gob.ignoreUint":[],"encoding/gob.ignoreUint8Array":[],"encoding/gob.implementsInterface":[[],[]],"encoding/gob.init":[],"encoding/gob.init#1":[],"encoding/gob.init#2":[],"encoding/gob.init$1":[[]],"encoding/gob.isExported":[[0]],"encoding/gob.isSent":[[]],"encoding/gob.isZero":[[0]],"encoding/gob.lookupTypeInfo":[[0]],"encoding/gob.mustGetTypeInfo":[[0]],"encoding/gob.newArrayType":[[0]],"encoding/gob.newGobEncoderType":[[0]],"encoding/gob.newMapType":[[0]],"encoding/gob.newSliceType":[[0]],"encoding/gob.newStructType":[[0]],"encoding/gob.newTypeObject":[[0,2],[]],"encoding/gob.newTypeObject$1":[],"encoding/gob.overflow":[[0]],"encoding/gob.registerBasics":[],"encoding/gob.setTypeId":[],"encoding/gob.toInt":[[0]],"encoding/gob.userType":[[0]],"encoding/gob.valid":[[0]],"encoding/gob.validUserType":[[0],[]],"encoding/hex.Decode":[[],[1]],"encoding/hex.DecodeString":[[0],[0]],"encoding/hex.DecodedLen":[[0]],"encoding/hex.Dump":[[]],"encoding/hex.Dumper":[[0]],"encoding/hex.Encode":[[]],"encoding/hex.EncodeToString":[[]],"encoding/hex.EncodedLen":[[0]],"encoding/hex.NewDecoder":[[0]],"encoding/hex.NewEncoder":[[0]],"encoding/hex.init":[],"encoding/hex.toChar":[[0]],"encoding/json.Compact":[[]],"encoding/json.HTMLEscape":[],"encoding/json.Indent":[[]],"encoding/json.Marshal":[[],[]],"encoding/json.MarshalIndent":[[],[]],"encoding/json.NewDecoder":[[0]],"encoding/json.NewEncoder":[[0]],"encoding/json.Unmarshal":[[0,1]],"encoding/json.Valid":[[]],"encoding/json.addrMarshalerEncoder":[],"encoding/json.addrTextMarshalerEncoder":[],"encoding/json.asciiEqualFold":[[]],"encoding/json.boolEncoder":[],"encoding/json.cachedTypeFields":[[]],"encoding/json.checkValid":[[1]],"encoding/json.compact":[[]],"encoding/json.dominantField":[[0],[]],"encoding/json.encodeByteSlice":[],"encoding/json.equalFoldRight":[[]],"encoding/json.foldFunc":[[]],"encoding/json.freeScanner":[],"encoding/json.getu4":[[0]],"encoding/json.indirect":[[0],[0],[0]],"encoding/json.init":[],"encoding/json.init$1":[[]],"encoding/json.intEncoder":[],"encoding/json.interfaceEncoder":[],"encoding/json.invalidValueEncoder":[],"encoding/json.isEmptyValue":[[0]],"encoding/json.isSpace":[[0]],"encoding/json.isValidNumber":[[0]],"encoding/json.isValidTag":[[]],"encoding/json.marshalerEncoder":[],"encoding/json.newArrayEncoder":[[]],"encoding/json.newCondAddrEncoder":[[]],"encoding/json.newEncodeState":[[]],"encoding/json.newMapEncoder":[[]],"encoding/json.newPtrEncoder":[[]],"encoding/json.newScanner":[[]],"encoding/json.newSliceEncoder":[[]],"encoding/json.newStructEncoder":[[]],"encoding/json.newTypeEncoder":[[]],"encoding/json.newline":[],"encoding/json.nonSpace":[[]],"encoding/json.parseTag":[[0],[0]],"encoding/json.quoteChar":[[0]],"encoding/json.simpleLetterEqualFold":[[]],"encoding/json.state0":[[]],"encoding/json.state1":[[]],"encoding/json.stateBeginString":[[]],"encoding/json.stateBeginStringOrEmpty":[[]],"encoding/json.stateBeginValue":[[]],"encoding/json.stateBeginValueOrEmpty":[[]],"encoding/json.stateDot":[[]],"encoding/json.stateDot0":[[]],"encoding/json.stateE":[[]],"encoding/json.stateE0":[[]],"encoding/json.stateESign":[[]],"encoding/json.stateEndTop":[[]],"encoding/json.stateEndValue":[[]],"encoding/json.stateError":[[]],"encoding/json.stateF":[[]],"encoding/json.stateFa":[[]],"encoding/json.stateFal":[[]],"encoding/json.stateFals":[[]],"encoding/json.stateInString":[[]],"encoding/json.stateInStringEsc":[[]],"encoding/json.stateInStringEscU":[[]],"encoding/json.stateInStringEscU1":[[]],"encoding/json.stateInStringEscU12":[[]],"encoding/json.stateInStringEscU123":[[]],"encoding/json.stateN":[[]],"encoding/json.stateNeg":[[]],"encoding/json.stateNu":[[]],"encoding/json.stateNul":[[]],"encoding/json.stateT":[[]],"encoding/json.stateTr":[[]],"encoding/json.stateTru":[[]],"encoding/json.stringEncoder":[],"encoding/json.textMarshalerEncoder":[],"encoding/json.typeByIndex":[[0,1]],"encoding/json.typeEncoder":[[]],"encoding/json.typeEncoder$1":[],"encoding/json.typeFields":[[]],"encoding/json.typeFields$1":[[]],"encoding/json.uintEncoder":[],"encoding/json.unquote":[[0],[]],"encoding/json.unquoteBytes":[[0],[]],"encoding/json.unsupportedTypeEncoder":[],"encoding/json.valueEncoder":[[]],"encoding/pem.Decode":[[0],[0]],"encoding/pem.Encode":[[0]],"encoding/pem.EncodeToMemory":[[]],"encoding/pem.getLine":[[0],[0]],"encoding/pem.init":[],"encoding/pem.removeSpacesAndTabs":[[0]],"encoding/pem.writeHeader":[[0]],"encoding/xml.CopyToken":[[0]],"encoding/xml.Escape":[],"encoding/xml.EscapeText":[[0]],"encoding/xml.Marshal":[[],[0]],"encoding/xml.MarshalIndent":[[],[0,1,2]],"encoding/xml.NewDecoder":[[0]],"encoding/xml.NewEncoder":[[0]],"encoding/xml.NewTokenDecoder":[[0]],"encoding/xml.Unmarshal":[[0,1]],"encoding/xml.addFieldInfo":[[0,1,2]],"encoding/xml.copyValue":[[0,1]],"encoding/xml.defaultStart":[[1,2]],"encoding/xml.emitCDATA":[[0]],"encoding/xml.escapeText":[[0]],"encoding/xml.getTypeInfo":[[0],[0]],"encoding/xml.indirect":[[0]],"encoding/xml.init":[],"encoding/xml.isEmptyValue":[[0]],"encoding/xml.isInCharacterRange":[[0]],"encoding/xml.isName":[[]],"encoding/xml.isNameByte":[[0]],"encoding/xml.isNameString":[[]],"encoding/xml.isValidDirective":[[]],"encoding/xml.lookupXMLName":[[]],"encoding/xml.makeCopy":[[0]],"encoding/xml.min":[[0,1]],"encoding/xml.procInst":[[1]],"encoding/xml.receiverType":[[]],"encoding/xml.structFieldInfo":[[1],[0,1]],"errors.As":[[]],"errors.Is":[[0,1]],"errors.New":[[0]],"errors.Unwrap":[[0]],"errors.init":[],"expvar.Do":[],"expvar.Get":[[]],"expvar.Handler":[[]],"expvar.NewFloat":[[]],"expvar.NewInt":[[]],"expvar.NewMap":[[]],"expvar.NewString":[[]],"expvar.Publish":[],"expvar.cmdline":[[]],"expvar.expvarHandler":[],"expvar.expvarHandler$1":[],"expvar.init":[],"expvar.init#1":[],"expvar.memstats":[[]],"flag.Arg":[[]],"flag.Args":[[]],"flag.Bool":[[]],"flag.BoolVar":[],"flag.Duration":[[]],"flag.DurationVar":[],"flag.Float64":[[]],"flag.Float64Var":[],"flag.Func":[],"flag.Int":[[]],"flag.Int64":[[]],"flag.Int64Var":[],"flag.IntVar":[],"flag.Lookup":[[0]],"flag.NArg":[[]],"flag.NFlag":[[]],"flag.NewFlagSet":[[0,1]],"flag.Parse":[],"flag.Parsed":[[]],"flag.PrintDefaults":[],"flag.Set":[[0]],"flag.String":[[]],"flag.StringVar":[],"flag.TextVar":[],"flag.Uint":[[]],"flag.Uint64":[[]],"flag.Uint64Var":[],"flag.UintVar":[],"flag.UnquoteUsage":[[0],[0]],"flag.Var":[],"flag.Visit":[],"flag.VisitAll":[],"flag.commandLineUsage":[],"flag.init":[],"flag.init#1":[],"flag.init$1":[],"flag.isZeroValue":[[1],[]],"flag.isZeroValue$1":[],"flag.newBoolValue":[[0,1]],"flag.newDurationValue":[[0,1]],"flag.newFloat64Value":[[0,1]],"flag.newInt64Value":[[0,1]],"flag.newIntValue":[[0,1]],"flag.newStringValue":[[0,1]],"flag.newTextValue":[[1]],"flag.newUint64Value":[[0,1]],"flag.newUintValue":[[0,1]],"flag.numError":[[0]],"flag.sortFlags":[[]],"flag.sortFlags$1":[[]],"fmt.Append":[[0]],"fmt.Appendf":[[0]],"fmt.Appendln":[[0]],"fmt.Errorf":[[0,1]],"fmt.Fprint":[[],[0]],"fmt.Fprintf":[[],[0]],"fmt.Fprintln":[[],[0]],"fmt.Fscan":[[],[]],"fmt.Fscanf":[[],[]],"fmt.Fscanln":[[],[]],"fmt.Print":[[],[]],"fmt.Printf":[[],[]],"fmt.Println":[[],[]],"fmt.Scan":[[],[]],"fmt.Scanf":[[],[]],"fmt.Scanln":[[],[]],"fmt.Sprint":[[]],"fmt.Sprintf":[[]],"fmt.Sprintln":[[0]],"fmt.Sscan":[[],[]],"fmt.Sscanf":[[],[]],"fmt.Sscanln":[[],[]],"fmt.errorHandler":[],"fmt.getField":[[0]],"fmt.hasX":[[]],"fmt.hexDigit":[[0],[]],"fmt.indexRune":[[0]],"fmt.init":[],"fmt.init$1":[[]],"fmt.init$2":[[]],"fmt.intFromArg":[[0],[],[1]],"fmt.isSpace":[[]],"fmt.newPrinter":[[]],"fmt.newScanState":[[0,1,2],[]],"fmt.notSpace":[[]],"fmt.parseArgNumber":[[0],[],[]],"fmt.parsenum":[[0,1],[],[1,2]],"fmt.tooLarge":[[0]],"func (*bufio.Reader).WriteTo(w io.Writer) (n int64, err error)":[[],[],[]],"func (*bufio.Writer).ReadFrom(r io.Reader) (n int64, err error)":[[],[],[]],"func (*context.cancelCtx).Value(key any) any":[[],[]],"func (*context.timerCtx).cancel(removeFromParent bool, err error)":[[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).Add(x1 *math/big.Int, y1 *math/big.Int, x2 *math/big.Int, y2 *math/big.Int) (*math/big.Int, *math/big.Int)":[[],[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).CombinedMult(Px *math/big.Int, Py *math/big.Int, s1 []byte, s2 []byte) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).IsOnCurve(x *math/big.Int, y *math/big.Int) bool":[[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).Params() *crypto/elliptic.CurveParams":[[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult(Bx *math/big.Int, By *math/big.Int, scalar []byte) (*math/big.Int, *math/big.Int)":[[],[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).Unmarshal(data []byte) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).UnmarshalCompressed(data []byte) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointFromAffine(x *math/big.Int, y *math/big.Int) (p *crypto/internal/nistec.P256Point, err error)":[[],[],[]],"func (*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine(p *crypto/internal/nistec.P256Point) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (*crypto/tls.Conn).SetWriteDeadline(t time.Time) error":[[],[]],"func (*crypto/tls.Conn).readRecordOrCCS(expectChangeCipherSpec bool) error":[[],[]],"func (*crypto/tls.Conn).sendAlertLocked(err crypto/tls.alert) error":[[],[]],"func (*crypto/tls.prefixNonceAEAD).Open(out []byte, nonce []byte, ciphertext []byte, additionalData []byte) ([]byte, error)":[[],[],[]],"func (*crypto/x509.Certificate).buildChains(currentChain []*crypto/x509.Certificate, sigChecks *int, opts *crypto/x509.VerifyOptions) (chains [][]*crypto/x509.Certificate, err error)":[[],[],[]],"func (*debug/dwarf.Data).readType(name string, r debug/dwarf.typeReader, off debug/dwarf.Offset, typeCache map[debug/dwarf.Offset]debug/dwarf.Type, fixups *debug/dwarf.typeFixer) (debug/dwarf.Type, error)":[[],[],[]],"func (*debug/dwarf.Reader).SkipChildren()":[[]],"func (*encoding/binary.decoder).value(v reflect.Value)":[[]],"func (*encoding/binary.encoder).value(v reflect.Value)":[[]],"func (*encoding/gob.Decoder).compatibleType(fr reflect.Type, fw encoding/gob.typeId, inProgress map[reflect.Type]encoding/gob.typeId) bool":[[],[]],"func (*encoding/gob.Decoder).compileDec(remoteId encoding/gob.typeId, ut *encoding/gob.userTypeInfo) (engine *encoding/gob.decEngine, err error)":[[],[],[]],"func (*encoding/gob.Decoder).decIgnoreOpFor(wireId encoding/gob.typeId, inProgress map[encoding/gob.typeId]*encoding/gob.decOp, depth int) *encoding/gob.decOp":[[],[]],"func (*encoding/gob.Decoder).decOpFor(wireId encoding/gob.typeId, rt reflect.Type, name string, inProgress map[reflect.Type]*encoding/gob.decOp) *encoding/gob.decOp":[[],[]],"func (*encoding/gob.Decoder).getIgnoreEnginePtr(wireId encoding/gob.typeId) (enginePtr **encoding/gob.decEngine, err error)":[[],[],[]],"func (*encoding/gob.Encoder).sendType(w io.Writer, state *encoding/gob.encoderState, origt reflect.Type) (sent bool)":[[],[]],"func (*encoding/gob.sliceType).safeString(seen map[encoding/gob.typeId]bool) string":[[],[]],"func (*encoding/json.decodeState).objectInterface() map[string]any":[[],[]],"func (*encoding/json.decodeState).value(v reflect.Value) error":[[],[]],"func (*encoding/json.decodeState).valueInterface() (val any)":[[],[]],"func (*encoding/json.encodeState).reflectValue(v reflect.Value, opts encoding/json.encOpts)":[[]],"func (*encoding/pem.lineBreaker).Write(b []byte) (n int, err error)":[[],[],[]],"func (*encoding/xml.Decoder).Token() (encoding/xml.Token, error)":[[],[],[]],"func (*encoding/xml.Decoder).unmarshal(val reflect.Value, start *encoding/xml.StartElement, depth int) error":[[],[]],"func (*encoding/xml.Decoder).unmarshalAttr(val reflect.Value, attr encoding/xml.Attr) error":[[],[]],"func (*encoding/xml.Decoder).unmarshalPath(tinfo *encoding/xml.typeInfo, sv reflect.Value, parents []string, start *encoding/xml.StartElement, depth int) (consumed bool, err error)":[[],[],[]],"func (*encoding/xml.printer).marshalAttr(start *encoding/xml.StartElement, name encoding/xml.Name, val reflect.Value) error":[[],[]],"func (*encoding/xml.printer).marshalValue(val reflect.Value, finfo *encoding/xml.fieldInfo, startTemplate *encoding/xml.StartElement) error":[[],[]],"func (*fmt.pp).badVerb(verb rune)":[[]],"func (*fmt.pp).doPrintf(format string, a []any)":[[]],"func (*fmt.pp).fmtString(v string, verb rune)":[[]],"func (*fmt.pp).handleMethods(verb rune) (handled bool)":[[],[]],"func (*fmt.pp).printArg(arg any, verb rune)":[[]],"func (*fmt.pp).printValue(value reflect.Value, verb rune, depth int)":[[]],"func (*go/ast.BlockStmt).End() go/token.Pos":[[],[]],"func (*go/ast.FieldList).End() go/token.Pos":[[],[]],"func (*go/ast.printer).print(x reflect.Value)":[[]],"func (*go/build/constraint.NotExpr).String() string":[[],[]],"func (*go/build/constraint.OrExpr).Eval(ok func(tag string) bool) bool":[[],[]],"func (*go/build/constraint.exprParser).or() go/build/constraint.Expr":[[],[]],"func (*go/constant.stringVal).appendReverse(list []string) []string":[[],[]],"func (*go/doc.reader).collectEmbeddedMethods(mset go/doc.methodSet, typ *go/doc.namedType, recvTypeName string, embeddedIsPtr bool, level int, visited go/doc.embeddedSet)":[[]],"func (*go/doc.reader).filterType(parent *go/doc.namedType, typ go/ast.Expr)":[[]],"func (*go/doc/comment.commentPrinter).text(out *bytes.Buffer, indent string, x []go/doc/comment.Text)":[[]],"func (*go/doc/comment.htmlPrinter).block(out *bytes.Buffer, x go/doc/comment.Block)":[[]],"func (*go/doc/comment.htmlPrinter).text(out *bytes.Buffer, x []go/doc/comment.Text)":[[]],"func (*go/doc/comment.mdPrinter).rawText(out *bytes.Buffer, x []go/doc/comment.Text)":[[]],"func (*go/doc/comment.textPrinter).oneLongLine(out *strings.Builder, x []go/doc/comment.Text)":[[]],"func (*go/internal/gccgoimporter.parser).parseConstValue(pkg *go/types.Package) (val go/constant.Value, typ go/types.Type)":[[],[],[]],"func (*go/internal/gccgoimporter.parser).parseTypeAfterAngle(pkg *go/types.Package, n ...any) (t go/types.Type, n1 int)":[[],[],[]],"func (*go/internal/gccgoimporter.parser).parseTypeExtended(pkg *go/types.Package, n ...any) (t go/types.Type, n1 int)":[[],[],[]],"func (*go/internal/gcimporter.iimporter).typAt(off uint64, base *go/types.Named) go/types.Type":[[],[]],"func (*go/internal/gcimporter.importReader).typ() go/types.Type":[[],[]],"func (*go/internal/gcimporter.importReader).value() (typ go/types.Type, val go/constant.Value)":[[],[],[]],"func (*go/internal/gcimporter.pkgReader).typIdx(info go/internal/gcimporter.typeInfo, dict *go/internal/gcimporter.readerDict) go/types.Type":[[],[]],"func (*go/internal/gcimporter.reader).pkg() *go/types.Package":[[],[]],"func (*go/internal/gcimporter.reader).pos() go/token.Pos":[[],[]],"func (*go/internal/gcimporter.reader).typ() go/types.Type":[[],[]],"func (*go/internal/gcimporter.reader).unionType() *go/types.Union":[[],[]],"func (*go/parser.parser).embeddedElem(x go/ast.Expr) go/ast.Expr":[[],[]],"func (*go/parser.parser).parseBinaryExpr(x go/ast.Expr, prec1 int, check bool) go/ast.Expr":[[],[]],"func (*go/parser.parser).parseDecl(sync map[go/token.Token]bool) go/ast.Decl":[[],[]],"func (*go/parser.parser).parseExpr() go/ast.Expr":[[],[]],"func (*go/parser.parser).parseIfStmt() *go/ast.IfStmt":[[],[]],"func (*go/parser.parser).parseLiteralValue(typ go/ast.Expr) go/ast.Expr":[[],[]],"func (*go/parser.parser).parseParameterList(name0 *go/ast.Ident, typ0 go/ast.Expr, closing go/token.Token) (params []*go/ast.Field)":[[],[]],"func (*go/parser.parser).parseParameters(acceptTParams bool) (tparams *go/ast.FieldList, params *go/ast.FieldList)":[[],[],[]],"func (*go/parser.parser).parseStmt() (s go/ast.Stmt)":[[],[]],"func (*go/parser.parser).parseStmtList() (list []go/ast.Stmt)":[[],[]],"func (*go/parser.parser).parseUnaryExpr() go/ast.Expr":[[],[]],"func (*go/parser.parser).tryIdentOrType() go/ast.Expr":[[],[]],"func (*go/printer.Config).fprint(output io.Writer, fset *go/token.FileSet, node any, nodeSizes map[go/ast.Node]int) (err error)":[[],[]],"func (*go/printer.printer).block(b *go/ast.BlockStmt, nindent int)":[[]],"func (*go/printer.printer).expr(x go/ast.Expr)":[[]],"func (*go/printer.printer).expr1(expr go/ast.Expr, prec1 int, depth int)":[[]],"func (*go/printer.printer).funcBody(headerSize int, sep go/printer.whiteSpace, b *go/ast.BlockStmt)":[[]],"func (*go/printer.printer).stmt(stmt go/ast.Stmt, nextIsRBrace bool)":[[]],"func (*go/printer.printer).stmtList(list []go/ast.Stmt, nindent int, nextIsRBrace bool)":[[]],"func (*go/types.Checker).blockBranches(all *go/types.Scope, parent *go/types.block, lstmt *go/ast.LabeledStmt, list []go/ast.Stmt) []*go/ast.BranchStmt":[[],[]],"func (*go/types.Checker).convertUntyped(x *go/types.operand, target go/types.Type)":[[]],"func (*go/types.Checker).funcType(sig *go/types.Signature, recvPar *go/ast.FieldList, ftyp *go/ast.FuncType)":[[]],"func (*go/types.Checker).genericType(e go/ast.Expr, reason *string) go/types.Type":[[],[]],"func (*go/types.Checker).isTerminating(s go/ast.Stmt, label string) bool":[[],[]],"func (*go/types.Checker).isTerminatingList(list []go/ast.Stmt, label string) bool":[[],[]],"func (*go/types.Checker).markImports(pkg *go/types.Package)":[[]],"func (*go/types.Checker).missingMethod(V go/types.Type, T *go/types.Interface, static bool) (method *go/types.Func, alt *go/types.Func)":[[],[],[]],"func (*go/types.Checker).objDecl(obj go/types.Object, def *go/types.Named)":[[]],"func (*go/types.Checker).rawExpr(x *go/types.operand, e go/ast.Expr, hint go/types.Type, allowGeneric bool) go/types.exprKind":[[],[]],"func (*go/types.Checker).stmt(ctxt go/types.stmtContext, s go/ast.Stmt)":[[]],"func (*go/types.Checker).subst(pos go/token.Pos, typ go/types.Type, smap go/types.substMap, expanding *go/types.Named, ctxt *go/types.Context) go/types.Type":[[],[]],"func (*go/types.Checker).trace(pos go/token.Pos, format string, args ...any)":[[]],"func (*go/types.Checker).typInternal(e0 go/ast.Expr, def *go/types.Named) (T go/types.Type)":[[],[]],"func (*go/types.Checker).updateExprType0(parent go/ast.Expr, x go/ast.Expr, typ go/types.Type, final bool)":[[]],"func (*go/types.Checker).usage(scope *go/types.Scope)":[[]],"func (*go/types.Checker).use(arg ...go/ast.Expr)":[[]],"func (*go/types.Checker).validType0(typ go/types.Type, nest []*go/types.Named, path []*go/types.Named) bool":[[],[]],"func (*go/types.Named).Method(i int) *go/types.Func":[[],[]],"func (*go/types.Named).TypeParams() *go/types.TypeParamList":[[],[]],"func (*go/types.Named).resolve() *go/types.Named":[[],[]],"func (*go/types.Scope).Innermost(pos go/token.Pos) *go/types.Scope":[[],[]],"func (*go/types.Scope).WriteTo(w io.Writer, n int, recurse bool)":[[]],"func (*go/types.StdSizes).Alignof(T go/types.Type) int64":[[],[]],"func (*go/types.StdSizes).Sizeof(T go/types.Type) int64":[[],[]],"func (*go/types._TypeSet).IsComparable(seen map[go/types.Type]bool) bool":[[],[]],"func (*go/types._TypeSet).is(f func(*go/types.term) bool) bool":[[],[]],"func (*go/types.cycleFinder).typ(typ go/types.Type)":[[]],"func (*go/types.operand).assignableTo(check *go/types.Checker, T go/types.Type, reason *string) (bool, go/types.errorCode)":[[],[],[]],"func (*go/types.operand).convertibleTo(check *go/types.Checker, T go/types.Type, cause *string) bool":[[],[]],"func (*go/types.subster).typ(typ go/types.Type) go/types.Type":[[],[]],"func (*go/types.tpWalker).isParameterized(typ go/types.Type) (res bool)":[[],[]],"func (*go/types.typeWriter).typ(typ go/types.Type)":[[]],"func (*go/types.unifier).nify(x go/types.Type, y go/types.Type, p *go/types.ifacePair) (result bool)":[[],[]],"func (*golang.org/x/mod/modfile.input).order(x golang.org/x/mod/modfile.Expr)":[[]],"func (*golang.org/x/mod/modfile.printer).expr(x golang.org/x/mod/modfile.Expr)":[[]],"func (*golang.org/x/tools/cmd/cover.File).endsBasicSourceBlock(s go/ast.Stmt) bool":[[],[]],"func (*golang.org/x/tools/cmd/cover.File).statementBoundary(s go/ast.Stmt) go/token.Pos":[[],[]],"func (*golang.org/x/tools/cmd/godex.printer).writeSignatureInternal(this *go/types.Package, sig *go/types.Signature, visited []go/types.Type)":[[]],"func (*golang.org/x/tools/cmd/godex.printer).writeTuple(this *go/types.Package, tup *go/types.Tuple, variadic bool, visited []go/types.Type)":[[]],"func (*golang.org/x/tools/cmd/godex.printer).writeTypeInternal(this *go/types.Package, typ go/types.Type, visited []go/types.Type)":[[]],"func (*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenMapKeyType(f *golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.funcdef, depth int, pidx int) golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.parm":[[],[]],"func (*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenParm(f *golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.funcdef, depth int, mkctl bool, pidx int) golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.parm":[[],[]],"func (*golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate).GenValue(f *golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.funcdef, p golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.parm, value int, caller bool) (string, int)":[[],[],[]],"func (*golang.org/x/tools/container/intsets.Sparse).Difference(x *golang.org/x/tools/container/intsets.Sparse, y *golang.org/x/tools/container/intsets.Sparse)":[[]],"func (*golang.org/x/tools/go/analysis/passes/buildtag.checker).comment(pos go/token.Pos, text string)":[[]],"func (*golang.org/x/tools/go/analysis/passes/ctrlflow.CFGs).callMayReturn(call *go/ast.CallExpr) (r bool)":[[],[]],"func (*golang.org/x/tools/go/analysis/passes/fieldalignment.gcSizes).Alignof(T go/types.Type) int64":[[],[]],"func (*golang.org/x/tools/go/analysis/passes/fieldalignment.gcSizes).Sizeof(T go/types.Type) int64":[[],[]],"func (*golang.org/x/tools/go/analysis/passes/fieldalignment.gcSizes).ptrdata(T go/types.Type) int64":[[],[]],"func (*golang.org/x/tools/go/analysis/passes/ifaceassert.tpWalker).isParameterized(typ go/types.Type) (res bool)":[[],[]],"func (*golang.org/x/tools/go/analysis/passes/printf.argMatcher).match(typ go/types.Type, topLevel bool) bool":[[],[]],"func (*golang.org/x/tools/go/analysis/passes/unreachable.deadState).findDead(stmt go/ast.Stmt)":[[]],"func (*golang.org/x/tools/go/analysis/passes/unreachable.deadState).findLabels(stmt go/ast.Stmt)":[[]],"func (*golang.org/x/tools/go/ast/astutil.application).apply(parent go/ast.Node, name string, iter *golang.org/x/tools/go/ast/astutil.iterator, n go/ast.Node)":[[]],"func (*golang.org/x/tools/go/callgraph/rta.rta).addRuntimeType(T go/types.Type, skip bool)":[[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).clone(n golang.org/x/tools/go/callgraph/vta/internal/trie.node) golang.org/x/tools/go/callgraph/vta/internal/trie.node":[[],[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).create(leaves []*golang.org/x/tools/go/callgraph/vta/internal/trie.leaf) golang.org/x/tools/go/callgraph/vta/internal/trie.node":[[],[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).insert(c golang.org/x/tools/go/callgraph/vta/internal/trie.Collision, m golang.org/x/tools/go/callgraph/vta/internal/trie.node, l *golang.org/x/tools/go/callgraph/vta/internal/trie.leaf, lhs bool) golang.org/x/tools/go/callgraph/vta/internal/trie.node":[[],[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).intersect(c golang.org/x/tools/go/callgraph/vta/internal/trie.Collision, l golang.org/x/tools/go/callgraph/vta/internal/trie.node, r golang.org/x/tools/go/callgraph/vta/internal/trie.node) golang.org/x/tools/go/callgraph/vta/internal/trie.node":[[],[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).merge(c golang.org/x/tools/go/callgraph/vta/internal/trie.Collision, lhs golang.org/x/tools/go/callgraph/vta/internal/trie.node, rhs golang.org/x/tools/go/callgraph/vta/internal/trie.node) golang.org/x/tools/go/callgraph/vta/internal/trie.node":[[],[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.Builder).remove(m golang.org/x/tools/go/callgraph/vta/internal/trie.node, k golang.org/x/tools/go/callgraph/vta/internal/trie.key) golang.org/x/tools/go/callgraph/vta/internal/trie.node":[[],[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.branch).find(k golang.org/x/tools/go/callgraph/vta/internal/trie.key) *golang.org/x/tools/go/callgraph/vta/internal/trie.leaf":[[],[]],"func (*golang.org/x/tools/go/callgraph/vta/internal/trie.branch).visit(cb func(uint64, interface{}) bool) bool":[[],[]],"func (*golang.org/x/tools/go/cfg.builder).stmt(_s go/ast.Stmt)":[[]],"func (*golang.org/x/tools/go/internal/gccgoimporter.parser).parseConstValue(pkg *go/types.Package) (val go/constant.Value, typ go/types.Type)":[[],[],[]],"func (*golang.org/x/tools/go/internal/gccgoimporter.parser).parseType(pkg *go/types.Package, n ...interface{}) go/types.Type":[[],[]],"func (*golang.org/x/tools/go/internal/gccgoimporter.parser).parseTypeAfterAngle(pkg *go/types.Package, n ...interface{}) (t go/types.Type, n1 int)":[[],[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.exportWriter).signature(sig *go/types.Signature)":[[]],"func (*golang.org/x/tools/go/internal/gcimporter.exportWriter).typ(t go/types.Type, pkg *go/types.Package)":[[]],"func (*golang.org/x/tools/go/internal/gcimporter.exporter).fieldList(t *go/types.Struct)":[[]],"func (*golang.org/x/tools/go/internal/gcimporter.exporter).typ(t go/types.Type)":[[]],"func (*golang.org/x/tools/go/internal/gcimporter.iimporter).doDecl(pkg *go/types.Package, name string)":[[]],"func (*golang.org/x/tools/go/internal/gcimporter.importReader).typ() go/types.Type":[[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.importer).methodList(parent *go/types.Package, baseType *go/types.Named) (methods []*go/types.Func)":[[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.importer).paramList() (*go/types.Tuple, bool)":[[],[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.importer).typ(parent *go/types.Package, tname *go/types.Named) go/types.Type":[[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.parser).parseField(parent *go/types.Package) (*go/types.Var, string)":[[],[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.parser).parseType(parent *go/types.Package) go/types.Type":[[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.pkgReader).objIdx(idx golang.org/x/tools/go/internal/pkgbits.Index) (*go/types.Package, string)":[[],[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.reader).pkg() *go/types.Package":[[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.reader).pos() go/token.Pos":[[],[]],"func (*golang.org/x/tools/go/internal/gcimporter.reader).typ() go/types.Type":[[],[]],"func (*golang.org/x/tools/go/packages.golistState).addNeededOverlayPackages(response *golang.org/x/tools/go/packages.responseDeduper, pkgs []string) error":[[],[]],"func (*golang.org/x/tools/go/packages/packagestest.Exported).getMarkers() error":[[],[]],"func (*golang.org/x/tools/go/pointer.analysis).flatten(t go/types.Type) []*golang.org/x/tools/go/pointer.fieldInfo":[[],[]],"func (*golang.org/x/tools/go/pointer.analysis).objectNode(cgn *golang.org/x/tools/go/pointer.cgnode, v golang.org/x/tools/go/ssa.Value) golang.org/x/tools/go/pointer.nodeid":[[],[]],"func (*golang.org/x/tools/go/pointer.analysis).shouldTrack(T go/types.Type) bool":[[],[]],"func (*golang.org/x/tools/go/pointer.analysis).valueNode(v golang.org/x/tools/go/ssa.Value) golang.org/x/tools/go/pointer.nodeid":[[],[]],"func (*golang.org/x/tools/go/pointer.hvn).find(x golang.org/x/tools/go/pointer.onodeid) golang.org/x/tools/go/pointer.onodeid":[[],[]],"func (*golang.org/x/tools/go/pointer.hvn).visit(x golang.org/x/tools/go/pointer.onodeid)":[[]],"func (*golang.org/x/tools/go/ssa.Function).RelString(from *go/types.Package) string":[[],[]],"func (*golang.org/x/tools/go/ssa.Function).declaredPackage() *golang.org/x/tools/go/ssa.Package":[[],[]],"func (*golang.org/x/tools/go/ssa.Function).lookup(obj go/types.Object, escaping bool) golang.org/x/tools/go/ssa.Value":[[],[]],"func (*golang.org/x/tools/go/ssa.Program).needMethods(T go/types.Type, skip bool, cr *golang.org/x/tools/go/ssa.creator)":[[]],"func (*golang.org/x/tools/go/ssa.builder).addr(fn *golang.org/x/tools/go/ssa.Function, e go/ast.Expr, escaping bool) golang.org/x/tools/go/ssa.lvalue":[[],[]],"func (*golang.org/x/tools/go/ssa.builder).buildFunctionBody(fn *golang.org/x/tools/go/ssa.Function)":[[]],"func (*golang.org/x/tools/go/ssa.builder).compLit(fn *golang.org/x/tools/go/ssa.Function, addr golang.org/x/tools/go/ssa.Value, e *go/ast.CompositeLit, isZero bool, sb *golang.org/x/tools/go/ssa.storebuf)":[[]],"func (*golang.org/x/tools/go/ssa.builder).cond(fn *golang.org/x/tools/go/ssa.Function, e go/ast.Expr, t *golang.org/x/tools/go/ssa.BasicBlock, f *golang.org/x/tools/go/ssa.BasicBlock)":[[]],"func (*golang.org/x/tools/go/ssa.builder).expr(fn *golang.org/x/tools/go/ssa.Function, e go/ast.Expr) golang.org/x/tools/go/ssa.Value":[[],[]],"func (*golang.org/x/tools/go/ssa.builder).exprN(fn *golang.org/x/tools/go/ssa.Function, e go/ast.Expr) golang.org/x/tools/go/ssa.Value":[[],[]],"func (*golang.org/x/tools/go/ssa.builder).stmt(fn *golang.org/x/tools/go/ssa.Function, _s go/ast.Stmt)":[[]],"func (*golang.org/x/tools/go/ssa.ltState).dfs(v *golang.org/x/tools/go/ssa.BasicBlock, i int32, preorder []*golang.org/x/tools/go/ssa.BasicBlock) int32":[[],[]],"func (*golang.org/x/tools/go/ssa.subster).signature(t *go/types.Signature) go/types.Type":[[],[]],"func (*golang.org/x/tools/go/ssa.subster).typ(t go/types.Type) (res go/types.Type)":[[],[]],"func (*golang.org/x/tools/go/ssa.subster).var_(v *go/types.Var) *go/types.Var":[[],[]],"func (*golang.org/x/tools/go/ssa.tpWalker).isParameterized(typ go/types.Type) (res bool)":[[],[]],"func (*golang.org/x/tools/go/ssa/interp.frame).runDefer(d *golang.org/x/tools/go/ssa/interp.deferred)":[[]],"func (*golang.org/x/tools/go/ssa/ssautil.visitor).function(fn *golang.org/x/tools/go/ssa.Function)":[[]],"func (*golang.org/x/tools/internal/apidiff.differ).checkCompatibleChan(otn *go/types.TypeName, old *go/types.Chan, new *go/types.Chan)":[[]],"func (*golang.org/x/tools/internal/apidiff.differ).checkCorrespondence(obj go/types.Object, part string, old go/types.Type, new go/types.Type)":[[]],"func (*golang.org/x/tools/internal/apidiff.differ).corr(old go/types.Type, new go/types.Type, p *golang.org/x/tools/internal/apidiff.ifacePair) bool":[[],[]],"func (*golang.org/x/tools/internal/event/label.filter).Label(index int) golang.org/x/tools/internal/event/label.Label":[[],[]],"func (*golang.org/x/tools/internal/lsp/command/commandmeta.fieldLoader).loadField(pkg *golang.org/x/tools/go/packages.Package, obj *go/types.Var, doc string, tag string) (*golang.org/x/tools/internal/lsp/command/commandmeta.Field, error)":[[],[],[]],"func (*golang.org/x/tools/internal/persistent.mapNode).decref()":[[]],"func (*golang.org/x/tools/internal/persistent.mapNode).forEach(f func(key interface{}, value interface{}))":[[]],"func (*golang.org/x/tools/refactor/eg.Transformer).apply(f func(reflect.Value) (reflect.Value, bool, map[string]go/ast.Expr), val reflect.Value) (reflect.Value, bool, map[string]go/ast.Expr)":[[],[],[],[]],"func (*golang.org/x/tools/refactor/eg.Transformer).matchExpr(x go/ast.Expr, y go/ast.Expr) bool":[[],[]],"func (*golang.org/x/tools/refactor/eg.Transformer).subst(env map[string]go/ast.Expr, pattern reflect.Value, pos reflect.Value) reflect.Value":[[],[]],"func (*golang.org/x/tools/refactor/rename.renamer).check(from go/types.Object)":[[]],"func (*golang.org/x/tools/refactor/rename.renamer).checkInLexicalScope(from go/types.Object, info *golang.org/x/tools/go/loader.PackageInfo)":[[]],"func (*golang.org/x/tools/refactor/rename.renamer).checkInPackageBlock(from go/types.Object)":[[]],"func (*golang.org/x/tools/refactor/satisfy.Finder).call(sig *go/types.Signature, args []go/ast.Expr)":[[]],"func (*golang.org/x/tools/refactor/satisfy.Finder).expr(e go/ast.Expr) go/types.Type":[[],[]],"func (*golang.org/x/tools/refactor/satisfy.Finder).exprN(e go/ast.Expr) go/types.Type":[[],[]],"func (*golang.org/x/tools/refactor/satisfy.Finder).stmt(s go/ast.Stmt)":[[]],"func (*html/template.escaper).escapeList(c html/template.context, n *text/template/parse.ListNode) html/template.context":[[],[]],"func (*html/template.escaper).escapeListConditionally(c html/template.context, n *text/template/parse.ListNode, filter func(*html/template.escaper, html/template.context) bool) (html/template.context, bool)":[[],[],[]],"func (*html/template.escaper).escapeTree(c html/template.context, node text/template/parse.Node, name string, line int) (html/template.context, string)":[[],[],[]],"func (*io.multiReader).writeToWithBuffer(w io.Writer, buf []byte) (sum int64, err error)":[[],[],[]],"func (*math/big.Float).SetPrec(prec uint) *math/big.Float":[[],[]],"func (*math/big.Float).round(sbit uint)":[[]],"func (*math/big.Float).validate()":[[]],"func (*math/rand.Rand).Int63() int64":[[],[]],"func (*math/rand.Rand).Seed(seed int64)":[[]],"func (*net/http.Client).CloseIdleConnections()":[[]],"func (*net/http.http2Framer).ReadFrame() (net/http.http2Frame, error)":[[],[],[]],"func (*net/http.http2pipe).Write(d []byte) (n int, err error)":[[],[],[]],"func (*net/http.http2priorityNode).walkReadyInOrder(openParent bool, tmp *[]*net/http.http2priorityNode, f func(*net/http.http2priorityNode, bool) bool) bool":[[],[]],"func (*net/http.http2serverConn).scheduleFrameWrite()":[[]],"func (*net/http.http2serverConn).sendWindowUpdate32(st *net/http.http2stream, n int32)":[[]],"func (*net/http.http2serverConn).writeFrame(wr net/http.http2FrameWriteRequest)":[[]],"func (*net/http.timeoutWriter).Push(target string, opts *net/http.PushOptions) error":[[],[]],"func (*net/mail.addrParser).parseAddress(handleGroup bool) ([]*net/mail.Address, error)":[[],[],[]],"func (*os/exec.Error).Error() string":[[],[]],"func (*reflect.abiSeq).regAssign(t *reflect.rtype, offset uintptr) bool":[[],[]],"func (*reflect.visibleFieldsWalker).walk(t reflect.Type)":[[]],"func (*regexp.machine).add(q *regexp.queue, pc uint32, pos int, cap []int, cond *regexp.lazyFlag, t *regexp.thread) *regexp.thread":[[],[]],"func (*regexp/syntax.Regexp).Equal(y *regexp/syntax.Regexp) bool":[[],[]],"func (*regexp/syntax.Regexp).MaxCap() int":[[],[]],"func (*regexp/syntax.Regexp).Simplify() *regexp/syntax.Regexp":[[],[]],"func (*regexp/syntax.Regexp).capNames(names []string)":[[]],"func (*regexp/syntax.compiler).compile(re *regexp/syntax.Regexp) regexp/syntax.frag":[[],[]],"func (*regexp/syntax.parser).calcHeight(re *regexp/syntax.Regexp, force bool) int":[[],[]],"func (*regexp/syntax.parser).checkHeight(re *regexp/syntax.Regexp)":[[]],"func (*regexp/syntax.parser).collapse(subs []*regexp/syntax.Regexp, op regexp/syntax.Op) *regexp/syntax.Regexp":[[],[]],"func (*regexp/syntax.parser).removeLeadingString(re *regexp/syntax.Regexp, n int) *regexp/syntax.Regexp":[[],[]],"func (*runtime.profBuf).write(tagPtr *unsafe.Pointer, now int64, hdr []uint64, stk []uintptr)":[[]],"func (*strings.trieNode).add(key string, val string, priority int, r *strings.genericReplacer)":[[]],"func (*sync.Once).Do(f func())":[[]],"func (*sync/atomic.Pointer[go/token.File]).Load() *go/token.File":[[],[]],"func (*sync/atomic.Pointer[go/token.File]).Store(val *go/token.File)":[[]],"func (*testing.common).Fail()":[[]],"func (*testing.common).setRan()":[[]],"func (*text/tabwriter.Writer).format(pos0 int, line0 int, line1 int) (pos int)":[[],[]],"func (*text/template.state).evalArg(dot reflect.Value, typ reflect.Type, n text/template/parse.Node) reflect.Value":[[],[]],"func (*text/template.state).evalCall(dot reflect.Value, fun reflect.Value, isBuiltin bool, node text/template/parse.Node, name string, args []text/template/parse.Node, final reflect.Value) reflect.Value":[[],[]],"func (*text/template.state).evalFieldChain(dot reflect.Value, receiver reflect.Value, node text/template/parse.Node, ident []string, args []text/template/parse.Node, final reflect.Value) reflect.Value":[[],[]],"func (*text/template.state).evalPipeline(dot reflect.Value, pipe *text/template/parse.PipeNode) (value reflect.Value)":[[],[]],"func (*text/template.state).evalVariableNode(dot reflect.Value, variable *text/template/parse.VariableNode, args []text/template/parse.Node, final reflect.Value) reflect.Value":[[],[]],"func (*text/template.state).walk(dot reflect.Value, node text/template/parse.Node)":[[]],"func (*text/template/parse.CommandNode).writeTo(sb *strings.Builder)":[[]],"func (*text/template/parse.PipeNode).writeTo(sb *strings.Builder)":[[]],"func (*text/template/parse.Tree).parseControl(allowElseIf bool, context string) (pos text/template/parse.Pos, line int, pipe *text/template/parse.PipeNode, list *text/template/parse.ListNode, elseList *text/template/parse.ListNode)":[[],[],[],[],[],[]],"func (*text/template/parse.Tree).pipeline(context string, end text/template/parse.itemType) (pipe *text/template/parse.PipeNode)":[[],[]],"func (*text/template/parse.Tree).textOrAction() text/template/parse.Node":[[],[]],"func (*vendor/golang.org/x/crypto/cryptobyte.Builder).addLengthPrefixed(lenLen int, isASN1 bool, f vendor/golang.org/x/crypto/cryptobyte.BuilderContinuation)":[[]],"func (*vendor/golang.org/x/crypto/cryptobyte.Builder).flushChild()":[[]],"func (archive/tar.sparseFileReader).physicalRemaining() int64":[[],[]],"func (context.Context).Done() \u003c-chan struct{}":[[],[]],"func (context.Context).Err() error":[[],[]],"func (crypto/cipher.cbcDecAble).NewCBCDecrypter(iv []byte) crypto/cipher.BlockMode":[[],[]],"func (crypto/cipher.cbcEncAble).NewCBCEncrypter(iv []byte) crypto/cipher.BlockMode":[[],[]],"func (crypto/cipher.ctrAble).NewCTR(iv []byte) crypto/cipher.Stream":[[],[]],"func (crypto/elliptic.Curve).Add(x1 *math/big.Int, y1 *math/big.Int, x2 *math/big.Int, y2 *math/big.Int) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (crypto/elliptic.Curve).Double(x1 *math/big.Int, y1 *math/big.Int) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (crypto/elliptic.Curve).ScalarBaseMult(k []byte) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (crypto/elliptic.Curve).ScalarMult(x1 *math/big.Int, y1 *math/big.Int, k []byte) (x *math/big.Int, y *math/big.Int)":[[],[],[]],"func (database/sql.decimalCompose).Compose(form byte, negative bool, coefficient []byte, exponent int32) error":[[],[]],"func (database/sql.decimalDecompose).Decompose(buf []byte) (form byte, negative bool, coefficient []byte, exponent int32)":[[],[],[],[],[]],"func (database/sql.driverResult).LastInsertId() (int64, error)":[[],[],[]],"func (database/sql/driver.ColumnConverter).ColumnConverter(idx int) database/sql/driver.ValueConverter":[[],[]],"func (database/sql/driver.Conn).Begin() (database/sql/driver.Tx, error)":[[],[],[]],"func (database/sql/driver.Conn).Close() error":[[],[]],"func (database/sql/driver.Conn).Prepare(query string) (database/sql/driver.Stmt, error)":[[],[],[]],"func (database/sql/driver.ConnBeginTx).BeginTx(ctx context.Context, opts database/sql/driver.TxOptions) (database/sql/driver.Tx, error)":[[],[],[]],"func (database/sql/driver.ConnPrepareContext).PrepareContext(ctx context.Context, query string) (database/sql/driver.Stmt, error)":[[],[],[]],"func (database/sql/driver.Driver).Open(name string) (database/sql/driver.Conn, error)":[[],[],[]],"func (database/sql/driver.DriverContext).OpenConnector(name string) (database/sql/driver.Connector, error)":[[],[],[]],"func (database/sql/driver.Execer).Exec(query string, args []database/sql/driver.Value) (database/sql/driver.Result, error)":[[],[],[]],"func (database/sql/driver.ExecerContext).ExecContext(ctx context.Context, query string, args []database/sql/driver.NamedValue) (database/sql/driver.Result, error)":[[],[],[]],"func (database/sql/driver.Queryer).Query(query string, args []database/sql/driver.Value) (database/sql/driver.Rows, error)":[[],[],[]],"func (database/sql/driver.QueryerContext).QueryContext(ctx context.Context, query string, args []database/sql/driver.NamedValue) (database/sql/driver.Rows, error)":[[],[],[]],"func (database/sql/driver.Rows).Close() error":[[],[]],"func (database/sql/driver.Rows).Columns() []string":[[],[]],"func (database/sql/driver.Rows).Next(dest []database/sql/driver.Value) error":[[],[]],"func (database/sql/driver.RowsColumnTypeDatabaseTypeName).ColumnTypeDatabaseTypeName(index int) string":[[],[]],"func (database/sql/driver.RowsColumnTypeLength).ColumnTypeLength(index int) (length int64, ok bool)":[[],[],[]],"func (database/sql/driver.RowsColumnTypeNullable).ColumnTypeNullable(index int) (nullable bool, ok bool)":[[],[],[]],"func (database/sql/driver.RowsColumnTypePrecisionScale).ColumnTypePrecisionScale(index int) (precision int64, scale int64, ok bool)":[[],[],[],[]],"func (database/sql/driver.RowsColumnTypeScanType).ColumnTypeScanType(index int) reflect.Type":[[],[]],"func (database/sql/driver.RowsNextResultSet).HasNextResultSet() bool":[[],[]],"func (database/sql/driver.RowsNextResultSet).NextResultSet() error":[[],[]],"func (database/sql/driver.SessionResetter).ResetSession(ctx context.Context) error":[[],[]],"func (database/sql/driver.Stmt).Close() error":[[],[]],"func (database/sql/driver.Stmt).Exec(args []database/sql/driver.Value) (database/sql/driver.Result, error)":[[],[],[]],"func (database/sql/driver.Stmt).NumInput() int":[[],[]],"func (database/sql/driver.Stmt).Query(args []database/sql/driver.Value) (database/sql/driver.Rows, error)":[[],[],[]],"func (database/sql/driver.StmtExecContext).ExecContext(ctx context.Context, args []database/sql/driver.NamedValue) (database/sql/driver.Result, error)":[[],[],[]],"func (database/sql/driver.StmtQueryContext).QueryContext(ctx context.Context, args []database/sql/driver.NamedValue) (database/sql/driver.Rows, error)":[[],[],[]],"func (database/sql/driver.defaultConverter).ConvertValue(v any) (database/sql/driver.Value, error)":[[],[],[]],"func (encoding/asn1.multiEncoder).Encode(dst []byte)":[[]],"func (encoding/xml.Marshaler).MarshalXML(e *encoding/xml.Encoder, start encoding/xml.StartElement) error":[[],[]],"func (encoding/xml.MarshalerAttr).MarshalXMLAttr(name encoding/xml.Name) (encoding/xml.Attr, error)":[[],[],[]],"func (encoding/xml.Unmarshaler).UnmarshalXML(d *encoding/xml.Decoder, start encoding/xml.StartElement) error":[[],[]],"func (encoding/xml.UnmarshalerAttr).UnmarshalXMLAttr(attr encoding/xml.Attr) error":[[],[]],"func (fmt.ScanState).Read(buf []byte) (n int, err error)":[[],[],[]],"func (fmt.ScanState).SkipSpace()":[[]],"func (fmt.ScanState).Token(skipSpace bool, f func(rune) bool) (token []byte, err error)":[[],[],[]],"func (fmt.ScanState).UnreadRune() error":[[],[]],"func (fmt.ScanState).Width() (wid int, ok bool)":[[],[],[]],"func (golang.org/x/mod/sumdb/tlog.TileReader).Height() int":[[],[]],"func (golang.org/x/mod/sumdb/tlog.TileReader).ReadTiles(tiles []golang.org/x/mod/sumdb/tlog.Tile) (data [][]byte, err error)":[[],[],[]],"func (golang.org/x/mod/sumdb/tlog.TileReader).SaveTiles(tiles []golang.org/x/mod/sumdb/tlog.Tile, data [][]byte)":[[]],"func (golang.org/x/mod/zip.collisionChecker).check(p string, isDir bool) error":[[],[]],"func (golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.arrayparm).NumElements() int":[[],[]],"func (golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.numparm).genRandNum(s *golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genstate, value int) (string, int)":[[],[],[]],"func (golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.structparm).HasPointer() bool":[[],[]],"func (golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).GenElemRef(elidx int, path string) (string, golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.parm)":[[],[],[]],"func (golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.typedefparm).String() string":[[],[]],"func (golang.org/x/tools/go/analysis/passes/bools.boolOp).split(e go/ast.Expr, seen map[*go/ast.BinaryExpr]bool) (exprs []go/ast.Expr)":[[],[]],"func (golang.org/x/tools/go/ssa.domFrontier).build(u *golang.org/x/tools/go/ssa.BasicBlock)":[[]],"func (golang.org/x/tools/go/ssa/interp.array).hash(t go/types.Type) int":[[],[]],"func (golang.org/x/tools/go/ssa/interp.iface).eq(t go/types.Type, _y interface{}) bool":[[],[]],"func (golang.org/x/tools/go/types/typeutil.Hasher).Hash(t go/types.Type) uint32":[[],[]],"func (golang.org/x/tools/godoc/analysis.Link).Start() int":[[],[]],"func (golang.org/x/tools/godoc/vfs/gatefs.gatefs).Open(p string) (golang.org/x/tools/godoc/vfs.ReadSeekCloser, error)":[[],[],[]],"func (golang.org/x/tools/godoc/vfs/gatefs.gatefs).ReadDir(p string) ([]io/fs.FileInfo, error)":[[],[],[]],"func (golang.org/x/tools/godoc/vfs/gatefs.gatefs).String() string":[[],[]],"func (golang.org/x/tools/internal/event/label.mapChain).Find(key golang.org/x/tools/internal/event/label.Key) golang.org/x/tools/internal/event/label.Label":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).AddDependency(context.Context, golang.org/x/tools/internal/lsp/command.DependencyArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).AddImport(context.Context, golang.org/x/tools/internal/lsp/command.AddImportArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).ApplyFix(context.Context, golang.org/x/tools/internal/lsp/command.ApplyFixArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).CheckUpgrades(context.Context, golang.org/x/tools/internal/lsp/command.CheckUpgradesArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).EditGoDirective(context.Context, golang.org/x/tools/internal/lsp/command.EditGoDirectiveArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).GCDetails(context.Context, golang.org/x/tools/internal/lsp/protocol.DocumentURI) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).Generate(context.Context, golang.org/x/tools/internal/lsp/command.GenerateArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).GenerateGoplsMod(context.Context, golang.org/x/tools/internal/lsp/command.URIArg) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).GoGetPackage(context.Context, golang.org/x/tools/internal/lsp/command.GoGetPackageArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).ListImports(context.Context, golang.org/x/tools/internal/lsp/command.URIArg) (golang.org/x/tools/internal/lsp/command.ListImportsResult, error)":[[],[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).ListKnownPackages(context.Context, golang.org/x/tools/internal/lsp/command.URIArg) (golang.org/x/tools/internal/lsp/command.ListKnownPackagesResult, error)":[[],[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).RegenerateCgo(context.Context, golang.org/x/tools/internal/lsp/command.URIArg) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).RemoveDependency(context.Context, golang.org/x/tools/internal/lsp/command.RemoveDependencyArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).RunTests(context.Context, golang.org/x/tools/internal/lsp/command.RunTestsArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).RunVulncheckExp(context.Context, golang.org/x/tools/internal/lsp/command.VulncheckArgs) (golang.org/x/tools/internal/lsp/command.VulncheckResult, error)":[[],[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).StartDebugging(context.Context, golang.org/x/tools/internal/lsp/command.DebuggingArgs) (golang.org/x/tools/internal/lsp/command.DebuggingResult, error)":[[],[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).Test(context.Context, golang.org/x/tools/internal/lsp/protocol.DocumentURI, []string, []string) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).Tidy(context.Context, golang.org/x/tools/internal/lsp/command.URIArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).ToggleGCDetails(context.Context, golang.org/x/tools/internal/lsp/command.URIArg) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).UpdateGoSum(context.Context, golang.org/x/tools/internal/lsp/command.URIArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).UpgradeDependency(context.Context, golang.org/x/tools/internal/lsp/command.DependencyArgs) error":[[],[]],"func (golang.org/x/tools/internal/lsp/command.Interface).Vendor(context.Context, golang.org/x/tools/internal/lsp/command.URIArg) error":[[],[]],"func (golang.org/x/tools/internal/memoize.RefCounted).Acquire() func()":[[],[]],"func (golang.org/x/tools/internal/tool.SubCommand).Parent() string":[[],[]],"func (image/draw.Quantizer).Quantize(p image/color.Palette, m image.Image) image/color.Palette":[[],[]],"func (image/png.EncoderBufferPool).Get() *image/png.EncoderBuffer":[[],[]],"func (interface).As(any) bool":[[],[]],"func (internal/testlog.Interface).Chdir(dir string)":[[]],"func (internal/testlog.Interface).Getenv(key string)":[[]],"func (internal/testlog.Interface).Open(file string)":[[]],"func (internal/testlog.Interface).Stat(file string)":[[]],"func (io.Seeker).Seek(offset int64, whence int) (int64, error)":[[],[],[]],"func (io.Writer).Write(p []byte) (n int, err error)":[[],[],[]],"func (math/big.nat).add(x math/big.nat, y math/big.nat) math/big.nat":[[],[]],"func (math/big.nat).convertWords(s []byte, b math/big.Word, ndigits int, bb math/big.Word, table []math/big.divisor)":[[]],"func (math/big.nat).divRecursiveStep(u math/big.nat, v math/big.nat, depth int, tmp *math/big.nat, temps []*math/big.nat)":[[]],"func (math/big.nat).mul(x math/big.nat, y math/big.nat) math/big.nat":[[],[]],"func (math/big.nat).mulRange(a uint64, b uint64) math/big.nat":[[],[]],"func (math/big.nat).sqr(x math/big.nat) math/big.nat":[[],[]],"func (net.Conn).Write(b []byte) (n int, err error)":[[],[],[]],"func (net.Listener).Close() error":[[],[]],"func (net/http/cookiejar.PublicSuffixList).PublicSuffix(domain string) string":[[],[]],"func (net/http/httputil.BufferPool).Get() []byte":[[],[]],"func (reflect.Value).IsZero() bool":[[],[]],"func (testing.alternationMatch).matches(name []string, matchString func(pat string, str string) (bool, error)) (ok bool, partial bool)":[[],[],[]],"func (testing.alternationMatch).verify(name string, matchString func(pat string, str string) (bool, error)) error":[[],[]],"func (testing.fuzzCrashError).CrashPath() string":[[],[]],"func compress/bzip2.buildHuffmanNode(t *compress/bzip2.huffmanTree, codes []compress/bzip2.huffmanCode, level uint32) (nodeIndex uint16, err error)":[[],[]],"func crypto/aes.encryptBlockAsm(nr int, xk *uint32, dst *byte, src *byte)":[],"func crypto/aes.expandKeyAsm(nr int, key *byte, enc *uint32, dec *uint32)":[],"func crypto/aes.gcmAesData(productTable *[256]byte, data []byte, T *[16]byte)":[],"func crypto/aes.gcmAesDec(productTable *[256]byte, dst []byte, src []byte, ctr *[16]byte, T *[16]byte, ks []uint32)":[],"func crypto/aes.gcmAesFinish(productTable *[256]byte, tagMask *[16]byte, T *[16]byte, pLen uint64, dLen uint64)":[],"func crypto/aes.gcmAesInit(productTable *[256]byte, ks []uint32)":[],"func crypto/cipher.xorBytesSSE2(dst *byte, a *byte, b *byte, n int)":[],"func crypto/internal/boring/sig.StandardCrypto()":[],"func crypto/internal/edwards25519/field.feMul(out *crypto/internal/edwards25519/field.Element, a *crypto/internal/edwards25519/field.Element, b *crypto/internal/edwards25519/field.Element)":[],"func crypto/internal/edwards25519/field.feSquare(out *crypto/internal/edwards25519/field.Element, a *crypto/internal/edwards25519/field.Element)":[],"func crypto/internal/nistec.p256BigToLittle(res *crypto/internal/nistec.p256Element, in *[32]byte)":[],"func crypto/internal/nistec.p256FromMont(res *crypto/internal/nistec.p256Element, in *crypto/internal/nistec.p256Element)":[],"func crypto/internal/nistec.p256MovCond(res *crypto/internal/nistec.P256Point, a *crypto/internal/nistec.P256Point, b *crypto/internal/nistec.P256Point, cond int)":[],"func crypto/internal/nistec.p256Mul(res *crypto/internal/nistec.p256Element, in1 *crypto/internal/nistec.p256Element, in2 *crypto/internal/nistec.p256Element)":[],"func crypto/internal/nistec.p256NegCond(val *crypto/internal/nistec.p256Element, cond int)":[],"func crypto/internal/nistec.p256OrdBigToLittle(res *crypto/internal/nistec.p256OrdElement, in *[32]byte)":[],"func crypto/internal/nistec.p256OrdMul(res *crypto/internal/nistec.p256OrdElement, in1 *crypto/internal/nistec.p256OrdElement, in2 *crypto/internal/nistec.p256OrdElement)":[],"func crypto/internal/nistec.p256OrdSqr(res *crypto/internal/nistec.p256OrdElement, in *crypto/internal/nistec.p256OrdElement, n int)":[],"func crypto/internal/nistec.p256PointAddAffineAsm(res *crypto/internal/nistec.P256Point, in1 *crypto/internal/nistec.P256Point, in2 *crypto/internal/nistec.p256AffinePoint, sign int, sel int, zero int)":[],"func crypto/internal/nistec.p256PointAddAsm(res *crypto/internal/nistec.P256Point, in1 *crypto/internal/nistec.P256Point, in2 *crypto/internal/nistec.P256Point) int":[[]],"func crypto/internal/nistec.p256PointDoubleAsm(res *crypto/internal/nistec.P256Point, in *crypto/internal/nistec.P256Point)":[],"func crypto/internal/nistec.p256Sqr(res *crypto/internal/nistec.p256Element, in *crypto/internal/nistec.p256Element, n int)":[],"func crypto/md5.block(dig *crypto/md5.digest, p []byte)":[],"func crypto/sha1.blockAMD64(dig *crypto/sha1.digest, p []byte)":[],"func crypto/sha256.block(dig *crypto/sha256.digest, p []byte)":[],"func crypto/sha512.blockAVX2(dig *crypto/sha512.digest, p []byte)":[],"func crypto/x509/internal/macos.syscall(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, f1 float64) uintptr":[[]],"func database/sql.convertAssignRows(dest any, src any, rows *database/sql.Rows) error":[[]],"func encoding/asn1.makeField(v reflect.Value, params encoding/asn1.fieldParameters) (e encoding/asn1.encoder, err error)":[[],[]],"func encoding/asn1.parseField(v reflect.Value, bytes []byte, initOffset int, params encoding/asn1.fieldParameters) (offset int, err error)":[[],[]],"func encoding/binary.sizeof(t reflect.Type) int":[[]],"func encoding/gob.encOpFor(rt reflect.Type, inProgress map[reflect.Type]*encoding/gob.encOp, building map[*encoding/gob.typeInfo]bool) (*encoding/gob.encOp, int)":[[],[]],"func encoding/gob.getBaseType(name string, rt reflect.Type) (encoding/gob.gobType, error)":[[],[]],"func encoding/gob.getEncEngine(ut *encoding/gob.userTypeInfo, building map[*encoding/gob.typeInfo]bool) *encoding/gob.encEngine":[[]],"func encoding/gob.isZero(val reflect.Value) bool":[[]],"func encoding/json.Unmarshal(data []byte, v any) error":[[]],"func encoding/json.cachedTypeFields(t reflect.Type) encoding/json.structFields":[[]],"func encoding/json.newTypeEncoder(t reflect.Type, allowAddr bool) encoding/json.encoderFunc":[[]],"func encoding/json.typeEncoder(t reflect.Type) encoding/json.encoderFunc":[[]],"func encoding/xml.getTypeInfo(typ reflect.Type) (*encoding/xml.typeInfo, error)":[[],[]],"func encoding/xml.structFieldInfo(typ reflect.Type, f *reflect.StructField) (*encoding/xml.fieldInfo, error)":[[],[]],"func go/ast.Walk(v go/ast.Visitor, node go/ast.Node)":[],"func go/ast.fieldName(x go/ast.Expr) *go/ast.Ident":[[]],"func go/ast.filterExprList(list []go/ast.Expr, filter go/ast.Filter, export bool) []go/ast.Expr":[[]],"func go/ast.filterType(typ go/ast.Expr, f go/ast.Filter, export bool) bool":[[]],"func go/build/constraint.appendSplitAnd(list []go/build/constraint.Expr, x go/build/constraint.Expr) []go/build/constraint.Expr":[[]],"func go/build/constraint.appendSplitOr(list []go/build/constraint.Expr, x go/build/constraint.Expr) []go/build/constraint.Expr":[[]],"func go/build/constraint.pushNot(x go/build/constraint.Expr, not bool) go/build/constraint.Expr":[[]],"func go/constant.BinaryOp(x_ go/constant.Value, op go/token.Token, y_ go/constant.Value) go/constant.Value":[[]],"func go/constant.Compare(x_ go/constant.Value, op go/token.Token, y_ go/constant.Value) bool":[[]],"func go/constant.Sign(x go/constant.Value) int":[[]],"func go/constant.ToFloat(x go/constant.Value) go/constant.Value":[[]],"func go/constant.ToInt(x go/constant.Value) go/constant.Value":[[]],"func go/constant.UnaryOp(op go/token.Token, y go/constant.Value, prec uint) go/constant.Value":[[]],"func go/doc.baseTypeName(x go/ast.Expr) (name string, imported bool)":[[],[]],"func go/doc.filterExprList(list []go/ast.Expr, filter go/doc.Filter, export bool) []go/ast.Expr":[[]],"func go/doc.recvString(recv go/ast.Expr) string":[[]],"func go/internal/srcimporter.setUsesCgo(conf *go/types.Config)":[],"func go/parser.ParseFile(fset *go/token.FileSet, filename string, src any, mode go/parser.Mode) (f *go/ast.File, err error)":[[],[]],"func go/parser.extractName(x go/ast.Expr, force bool) (*go/ast.Ident, go/ast.Expr)":[[],[]],"func go/parser.isTypeElem(x go/ast.Expr) bool":[[]],"func go/parser.unparen(x go/ast.Expr) go/ast.Expr":[[]],"func go/printer.combinesWithName(x go/ast.Expr) bool":[[]],"func go/printer.getLastComment(n go/ast.Node) *go/ast.CommentGroup":[[]],"func go/printer.isTypeElem(x go/ast.Expr) bool":[[]],"func go/printer.isTypeName(x go/ast.Expr) bool":[[]],"func go/printer.stripParens(x go/ast.Expr) go/ast.Expr":[[]],"func go/printer.stripParensAlways(x go/ast.Expr) go/ast.Expr":[[]],"func go/printer.walkBinary(e *go/ast.BinaryExpr) (has4 bool, has5 bool, maxProblem int)":[[],[],[]],"func go/types.Comparable(T go/types.Type) bool":[[]],"func go/types.Identical(x go/types.Type, y go/types.Type) bool":[[]],"func go/types.WriteExpr(buf *bytes.Buffer, x go/ast.Expr)":[],"func go/types.comparable(T go/types.Type, dynamic bool, seen map[go/types.Type]bool, reportf func(string, ...interface{})) bool":[[]],"func go/types.computeInterfaceTypeSet(check *go/types.Checker, pos go/token.Pos, ityp *go/types.Interface) *go/types._TypeSet":[[]],"func go/types.embeddedFieldIdent(e go/ast.Expr) *go/ast.Ident":[[]],"func go/types.findPath(objMap map[go/types.Object]*go/types.declInfo, from go/types.Object, to go/types.Object, seen map[go/types.Object]bool) []go/types.Object":[[]],"func go/types.flattenUnion(list []go/ast.Expr, x go/ast.Expr) (blist []go/ast.Expr, tlist []go/ast.Expr)":[[],[]],"func go/types.hasBreak(s go/ast.Stmt, label string, implicit bool) bool":[[]],"func go/types.hasVarSize(t go/types.Type, seen map[*go/types.Named]bool) (varSized bool)":[[]],"func go/types.identical(x go/types.Type, y go/types.Type, cmpTags bool, p *go/types.ifacePair) bool":[[]],"func go/types.lookupFieldOrMethod(T go/types.Type, addressable bool, pkg *go/types.Package, name string, foldCase bool) (obj go/types.Object, index []int, indirect bool)":[[],[],[]],"func go/types.sprintf(fset *go/token.FileSet, qf go/types.Qualifier, debug bool, format string, args ...any) string":[[]],"func go/types.typeString(typ go/types.Type, qf go/types.Qualifier, debug bool) string":[[]],"func go/types.writeExprList(buf *bytes.Buffer, list []go/ast.Expr)":[],"func go/types.writeFieldList(buf *bytes.Buffer, list []*go/ast.Field, sep string, iface bool)":[],"func golang.org/x/mod/sumdb/tlog.leafProof(lo int64, hi int64, n int64, hashes []golang.org/x/mod/sumdb/tlog.Hash) (golang.org/x/mod/sumdb/tlog.RecordProof, []golang.org/x/mod/sumdb/tlog.Hash)":[[],[]],"func golang.org/x/mod/sumdb/tlog.leafProofIndex(lo int64, hi int64, n int64, need []int64) []int64":[[]],"func golang.org/x/mod/sumdb/tlog.runRecordProof(p golang.org/x/mod/sumdb/tlog.RecordProof, lo int64, hi int64, n int64, leafHash golang.org/x/mod/sumdb/tlog.Hash) (golang.org/x/mod/sumdb/tlog.Hash, error)":[[],[]],"func golang.org/x/mod/sumdb/tlog.runTreeProof(p golang.org/x/mod/sumdb/tlog.TreeProof, lo int64, hi int64, n int64, old golang.org/x/mod/sumdb/tlog.Hash) (golang.org/x/mod/sumdb/tlog.Hash, golang.org/x/mod/sumdb/tlog.Hash, error)":[[],[],[]],"func golang.org/x/mod/sumdb/tlog.tileHash(data []byte) golang.org/x/mod/sumdb/tlog.Hash":[[]],"func golang.org/x/mod/sumdb/tlog.treeProof(lo int64, hi int64, n int64, hashes []golang.org/x/mod/sumdb/tlog.Hash) (golang.org/x/mod/sumdb/tlog.TreeProof, []golang.org/x/mod/sumdb/tlog.Hash)":[[],[]],"func golang.org/x/mod/sumdb/tlog.treeProofIndex(lo int64, hi int64, n int64, need []int64) []int64":[[]],"func golang.org/x/sys/cpu.cpuid(eaxArg uint32, ecxArg uint32) (eax uint32, ebx uint32, ecx uint32, edx uint32)":[[],[],[],[]],"func golang.org/x/sys/cpu.xgetbv() (eax uint32, edx uint32)":[[],[]],"func golang.org/x/sys/unix.syscall_rawSyscall(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func golang.org/x/sys/unix.syscall_rawSyscall6(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func golang.org/x/sys/unix.syscall_syscall(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func golang.org/x/sys/unix.syscall_syscall6(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func golang.org/x/sys/unix.syscall_syscallPtr(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func golang.org/x/tools/cmd/godex.walkDir(dirname string, prefix string, out chan string)":[],"func golang.org/x/tools/cmd/guru.appendNames(names []*go/types.Named, typ go/types.Type) []*go/types.Named":[[]],"func golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.checkableElements(p golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.parm) int":[[]],"func golang.org/x/tools/go/analysis/passes/asmdecl.appendComponentsRecursive(arch *golang.org/x/tools/go/analysis/passes/asmdecl.asmArch, t go/types.Type, cc []golang.org/x/tools/go/analysis/passes/asmdecl.component, suffix string, off int) []golang.org/x/tools/go/analysis/passes/asmdecl.component":[[]],"func golang.org/x/tools/go/analysis/passes/cgocall.cgoBaseType(info *go/types.Info, arg go/ast.Expr) go/types.Type":[[]],"func golang.org/x/tools/go/analysis/passes/cgocall.typeOKForCgoCall(t go/types.Type, m map[go/types.Type]bool) bool":[[]],"func golang.org/x/tools/go/analysis/passes/composite.isLocalType(pass *golang.org/x/tools/go/analysis.Pass, typ go/types.Type) bool":[[]],"func golang.org/x/tools/go/analysis/passes/copylock.lockPath(tpkg *go/types.Package, typ go/types.Type, seenTParams map[*go/types.TypeParam]bool) golang.org/x/tools/go/analysis/passes/copylock.typePath":[[]],"func golang.org/x/tools/go/analysis/passes/httpresponse.rootIdent(n go/ast.Node) *go/ast.Ident":[[]],"func golang.org/x/tools/go/analysis/passes/nilness.nilnessOf(stack []golang.org/x/tools/go/analysis/passes/nilness.fact, v golang.org/x/tools/go/ssa.Value) golang.org/x/tools/go/analysis/passes/nilness.nilness":[[]],"func golang.org/x/tools/go/analysis/passes/printf.checkPrintfFwd(pass *golang.org/x/tools/go/analysis.Pass, w *golang.org/x/tools/go/analysis/passes/printf.printfWrapper, call *go/ast.CallExpr, kind golang.org/x/tools/go/analysis/passes/printf.Kind, res *golang.org/x/tools/go/analysis/passes/printf.Result)":[],"func golang.org/x/tools/go/analysis/passes/structtag.checkTagDuplicates(pass *golang.org/x/tools/go/analysis.Pass, tag string, key string, nearest *go/types.Var, field *go/types.Var, seen *golang.org/x/tools/go/analysis/passes/structtag.namesSeen, level int)":[],"func golang.org/x/tools/go/analysis/passes/unsafeptr.isSafeArith(info *go/types.Info, x go/ast.Expr) bool":[[]],"func golang.org/x/tools/go/ast/astutil.NodeDescription(n go/ast.Node) string":[[]],"func golang.org/x/tools/go/pointer.CanHaveDynamicTypes(T go/types.Type) bool":[[]],"func golang.org/x/tools/go/pointer.CanPoint(T go/types.Type) bool":[[]],"func golang.org/x/tools/go/pointer.destructuringOps(typ go/types.Type, expr go/ast.Expr) ([]interface{}, go/types.Type, error)":[[],[],[]],"func golang.org/x/tools/go/pointer.typeHeight(T go/types.Type) int":[[]],"func golang.org/x/tools/go/ssa.emitConv(f *golang.org/x/tools/go/ssa.Function, val golang.org/x/tools/go/ssa.Value, typ go/types.Type) golang.org/x/tools/go/ssa.Value":[[]],"func golang.org/x/tools/go/ssa.markLivePhi(livePhis map[*golang.org/x/tools/go/ssa.Phi]bool, phi *golang.org/x/tools/go/ssa.Phi)":[],"func golang.org/x/tools/go/ssa.markReachable(b *golang.org/x/tools/go/ssa.BasicBlock)":[],"func golang.org/x/tools/go/ssa.numberDomTree(v *golang.org/x/tools/go/ssa.BasicBlock, pre int32, post int32) (int32, int32)":[[],[]],"func golang.org/x/tools/go/ssa.printDomTreeText(buf *bytes.Buffer, v *golang.org/x/tools/go/ssa.BasicBlock, indent int)":[],"func golang.org/x/tools/go/ssa.reaches(t go/types.Type, c map[go/types.Type]bool) (res bool)":[[]],"func golang.org/x/tools/go/ssa.rename(u *golang.org/x/tools/go/ssa.BasicBlock, renaming []golang.org/x/tools/go/ssa.Value, newPhis golang.org/x/tools/go/ssa.newPhiMap)":[],"func golang.org/x/tools/go/ssa.zeroConst(t go/types.Type) *golang.org/x/tools/go/ssa.Const":[[]],"func golang.org/x/tools/go/ssa/interp.call(i *golang.org/x/tools/go/ssa/interp.interpreter, caller *golang.org/x/tools/go/ssa/interp.frame, callpos go/token.Pos, fn golang.org/x/tools/go/ssa/interp.value, args []golang.org/x/tools/go/ssa/interp.value) golang.org/x/tools/go/ssa/interp.value":[[]],"func golang.org/x/tools/go/ssa/interp.equals(t go/types.Type, x golang.org/x/tools/go/ssa/interp.value, y golang.org/x/tools/go/ssa/interp.value) bool":[[]],"func golang.org/x/tools/go/ssa/interp.hash(t go/types.Type, x golang.org/x/tools/go/ssa/interp.value) int":[[]],"func golang.org/x/tools/go/ssa/interp.load(T go/types.Type, addr *golang.org/x/tools/go/ssa/interp.value) golang.org/x/tools/go/ssa/interp.value":[[]],"func golang.org/x/tools/go/ssa/interp.reflectKind(t go/types.Type) reflect.Kind":[[]],"func golang.org/x/tools/go/ssa/interp.store(T go/types.Type, addr *golang.org/x/tools/go/ssa/interp.value, v golang.org/x/tools/go/ssa/interp.value)":[],"func golang.org/x/tools/go/ssa/interp.usesBuiltinMap(t go/types.Type) bool":[[]],"func golang.org/x/tools/go/ssa/interp.writeValue(buf *bytes.Buffer, v golang.org/x/tools/go/ssa/interp.value)":[],"func golang.org/x/tools/go/ssa/interp.zero(t go/types.Type) golang.org/x/tools/go/ssa/interp.value":[[]],"func golang.org/x/tools/go/types/objectpath.find(obj go/types.Object, T go/types.Type, path []byte, seen map[*go/types.TypeName]bool) []byte":[[]],"func golang.org/x/tools/internal/analysisinternal.TypeExpr(f *go/ast.File, pkg *go/types.Package, typ go/types.Type) go/ast.Expr":[[]],"func golang.org/x/tools/internal/lsp/analysis/fillstruct.populateValue(f *go/ast.File, pkg *go/types.Package, typ go/types.Type) go/ast.Expr":[[]],"func golang.org/x/tools/internal/lsp/analysis/simplifycompositelit.match(pattern reflect.Value, val reflect.Value) bool":[[]],"func golang.org/x/tools/internal/lsp/analysis/undeclaredname.typeToArgName(ty go/types.Type) string":[[]],"func golang.org/x/tools/internal/lsp/helper.whatis(x go/ast.Expr) string":[[]],"func golang.org/x/tools/internal/persistent.merge(left *golang.org/x/tools/internal/persistent.mapNode, right *golang.org/x/tools/internal/persistent.mapNode) *golang.org/x/tools/internal/persistent.mapNode":[[]],"func golang.org/x/tools/internal/persistent.split(n *golang.org/x/tools/internal/persistent.mapNode, key interface{}, less func(a interface{}, b interface{}) bool, requireMid bool) (left *golang.org/x/tools/internal/persistent.mapNode, mid *golang.org/x/tools/internal/persistent.mapNode, right *golang.org/x/tools/internal/persistent.mapNode)":[[],[],[]],"func golang.org/x/tools/internal/persistent.union(first *golang.org/x/tools/internal/persistent.mapNode, second *golang.org/x/tools/internal/persistent.mapNode, less func(a interface{}, b interface{}) bool, overwrite bool) *golang.org/x/tools/internal/persistent.mapNode":[[]],"func golang.org/x/tools/internal/tool.addFlags(f *flag.FlagSet, field reflect.StructField, value reflect.Value) *golang.org/x/tools/internal/tool.Profile":[[]],"func golang.org/x/tools/internal/typeparams.computeTermSetInternal(t go/types.Type, seen map[go/types.Type]*golang.org/x/tools/internal/typeparams.termSet, depth int) (res *golang.org/x/tools/internal/typeparams.termSet, err error)":[[],[]],"func golang.org/x/tools/refactor/rename.deeper(x *go/types.Scope, y *go/types.Scope) bool":[[]],"func hash/crc32.castagnoliSSE42(crc uint32, p []byte) uint32":[[]],"func hash/crc32.castagnoliSSE42Triple(crcA uint32, crcB uint32, crcC uint32, a []byte, b []byte, c []byte, rounds uint32) (retA uint32, retB uint32, retC uint32)":[[],[],[]],"func hash/maphash.runtime_memhash(p unsafe.Pointer, seed uintptr, s uintptr) uintptr":[[]],"func html/template.join(a html/template.context, b html/template.context, node text/template/parse.Node, nodeName string) html/template.context":[[]],"func index/suffixarray.recurse_32(sa []int32, oldTmp []int32, numLMS int, maxID int)":[],"func index/suffixarray.recurse_64(sa []int64, oldTmp []int64, numLMS int, maxID int)":[],"func internal/abi.FuncPCABI0(f any) uintptr":[[]],"func internal/abi.FuncPCABIInternal(f any) uintptr":[[]],"func internal/bytealg.Compare(a []byte, b []byte) int":[[]],"func internal/bytealg.Count(b []byte, c byte) int":[[]],"func internal/bytealg.CountString(s string, c byte) int":[[]],"func internal/bytealg.Index(a []byte, b []byte) int":[[]],"func internal/bytealg.IndexByte(b []byte, c byte) int":[[]],"func internal/bytealg.IndexByteString(s string, c byte) int":[[]],"func internal/bytealg.IndexString(a string, b string) int":[[]],"func internal/cpu.cpuid(eaxArg uint32, ecxArg uint32) (eax uint32, ebx uint32, ecx uint32, edx uint32)":[[],[],[],[]],"func internal/cpu.getGOAMD64level() int32":[[]],"func internal/cpu.xgetbv() (eax uint32, edx uint32)":[[],[]],"func internal/fmtsort.compare(aVal reflect.Value, bVal reflect.Value) int":[[]],"func internal/poll.fcntl(fd int, cmd int, arg int) (int, error)":[[],[]],"func internal/poll.fdopendir(fd int) (dir uintptr, err error)":[[],[]],"func internal/poll.runtime_Semacquire(sema *uint32)":[],"func internal/poll.runtime_Semrelease(sema *uint32)":[],"func internal/poll.runtime_isPollServerDescriptor(fd uintptr) bool":[[]],"func internal/poll.runtime_pollClose(ctx uintptr)":[],"func internal/poll.runtime_pollOpen(fd uintptr) (uintptr, int)":[[],[]],"func internal/poll.runtime_pollReset(ctx uintptr, mode int) int":[[]],"func internal/poll.runtime_pollSetDeadline(ctx uintptr, d int64, mode int)":[],"func internal/poll.runtime_pollUnblock(ctx uintptr)":[],"func internal/poll.runtime_pollWait(ctx uintptr, mode int) int":[[]],"func internal/poll.runtime_pollWaitCanceled(ctx uintptr, mode int) int":[[]],"func internal/poll.writev(fd int, iovecs []syscall.Iovec) (uintptr, error)":[[],[]],"func internal/profile.Merge(srcs []*internal/profile.Profile) (*internal/profile.Profile, error)":[[],[]],"func internal/reflectlite.chanlen(unsafe.Pointer) int":[[]],"func internal/reflectlite.haveIdenticalUnderlyingType(T *internal/reflectlite.rtype, V *internal/reflectlite.rtype, cmpTags bool) bool":[[]],"func internal/reflectlite.ifaceE2I(t *internal/reflectlite.rtype, src any, dst unsafe.Pointer)":[],"func internal/reflectlite.maplen(unsafe.Pointer) int":[[]],"func internal/reflectlite.resolveNameOff(ptrInModule unsafe.Pointer, off int32) unsafe.Pointer":[[]],"func internal/reflectlite.resolveTypeOff(rtype unsafe.Pointer, off int32) unsafe.Pointer":[[]],"func internal/reflectlite.typedmemmove(t *internal/reflectlite.rtype, dst unsafe.Pointer, src unsafe.Pointer)":[],"func internal/reflectlite.unsafe_New(*internal/reflectlite.rtype) unsafe.Pointer":[[]],"func internal/syscall/unix.RecvfromInet4(fd int, p []byte, flags int, from *syscall.SockaddrInet4) (int, error)":[[],[]],"func internal/syscall/unix.RecvfromInet6(fd int, p []byte, flags int, from *syscall.SockaddrInet6) (n int, err error)":[[],[]],"func internal/syscall/unix.RecvmsgInet4(fd int, p []byte, oob []byte, flags int, from *syscall.SockaddrInet4) (n int, oobn int, recvflags int, err error)":[[],[],[],[]],"func internal/syscall/unix.RecvmsgInet6(fd int, p []byte, oob []byte, flags int, from *syscall.SockaddrInet6) (n int, oobn int, recvflags int, err error)":[[],[],[],[]],"func internal/syscall/unix.SendmsgNInet4(fd int, p []byte, oob []byte, to *syscall.SockaddrInet4, flags int) (n int, err error)":[[],[]],"func internal/syscall/unix.SendtoInet4(fd int, p []byte, flags int, to *syscall.SockaddrInet4) (err error)":[[]],"func internal/syscall/unix.SendtoInet6(fd int, p []byte, flags int, to *syscall.SockaddrInet6) (err error)":[[]],"func internal/syscall/unix.fcntl(fd int, cmd int, arg int) (int, error)":[[],[]],"func internal/syscall/unix.fstatat(dirfd int, path string, stat *syscall.Stat_t, flags int) error":[[]],"func internal/syscall/unix.openat(dirfd int, path string, flags int, perm uint32) (int, error)":[[],[]],"func internal/syscall/unix.syscall_syscall(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func internal/syscall/unix.unlinkat(dirfd int, path string, flags int) error":[[]],"func io/fs.Glob(fsys io/fs.FS, pattern string) (matches []string, err error)":[[],[]],"func io/fs.ReadFile(fsys io/fs.FS, name string) ([]byte, error)":[[],[]],"func io/fs.globWithLimit(fsys io/fs.FS, pattern string, depth int) (matches []string, err error)":[[],[]],"func io/fs.walkDir(fsys io/fs.FS, name string, d io/fs.DirEntry, walkDirFn io/fs.WalkDirFunc) error":[[]],"func math.Modf(f float64) (int float64, frac float64)":[[],[]],"func math.Pow(x float64, y float64) float64":[[]],"func math.archExp(x float64) float64":[[]],"func math.archHypot(p float64, q float64) float64":[[]],"func math.archLog(x float64) float64":[[]],"func math.archMax(x float64, y float64) float64":[[]],"func math.archMin(x float64, y float64) float64":[[]],"func math.archSqrt(x float64) float64":[[]],"func math/big.addMulVVW(z []math/big.Word, x []math/big.Word, y math/big.Word) (c math/big.Word)":[[]],"func math/big.addVV(z []math/big.Word, x []math/big.Word, y []math/big.Word) (c math/big.Word)":[[]],"func math/big.addVW(z []math/big.Word, x []math/big.Word, y math/big.Word) (c math/big.Word)":[[]],"func math/big.karatsuba(z math/big.nat, x math/big.nat, y math/big.nat)":[],"func math/big.karatsubaSqr(z math/big.nat, x math/big.nat)":[],"func math/big.mulAddVWW(z []math/big.Word, x []math/big.Word, y math/big.Word, r math/big.Word) (c math/big.Word)":[[]],"func math/big.shlVU(z []math/big.Word, x []math/big.Word, s uint) (c math/big.Word)":[[]],"func math/big.shrVU(z []math/big.Word, x []math/big.Word, s uint) (c math/big.Word)":[[]],"func math/big.subVV(z []math/big.Word, x []math/big.Word, y []math/big.Word) (c math/big.Word)":[[]],"func math/big.subVW(z []math/big.Word, x []math/big.Word, y math/big.Word) (c math/big.Word)":[[]],"func net._Cgo_use(interface{})":[],"func net._cgoCheckPointer(interface{}, interface{})":[],"func net._cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32":[[]],"func net._cgo_runtime_gostring(*net._Ctype_char) string":[[]],"func net.fastrandu() uint":[[]],"func net/http.isKnownInMemoryReader(r io.Reader) bool":[[]],"func net/http.knownRoundTripperImpl(rt net/http.RoundTripper, req *net/http.Request) bool":[[]],"func net/http.registerOnHitEOF(rc io.ReadCloser, fn func())":[],"func net/http.requestBodyRemains(rc io.ReadCloser) bool":[[]],"func os.MkdirAll(path string, perm io/fs.FileMode) error":[[]],"func os.closedir(dir uintptr) (err error)":[[]],"func os.fastrand() uint32":[[]],"func os.newFile(fd uintptr, name string, kind os.newFileKind) *os.File":[[]],"func os.readdir_r(dir uintptr, entry *syscall.Dirent, result **syscall.Dirent) (res syscall.Errno)":[[]],"func os.removeAllFrom(parent *os.File, base string) error":[[]],"func os.runtime_args() []string":[[]],"func os.runtime_beforeExit()":[],"func os.sigpipe()":[],"func os/signal.signalWaitUntilIdle()":[],"func os/signal.signal_disable(uint32)":[],"func os/signal.signal_enable(uint32)":[],"func os/signal.signal_ignore(uint32)":[],"func os/signal/internal/pty._Cgo_use(interface{})":[],"func os/signal/internal/pty._cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32":[[]],"func os/signal/internal/pty._cgo_runtime_gostring(*os/signal/internal/pty._Ctype_char) string":[[]],"func os/user._Cgo_use(interface{})":[],"func os/user._cgoCheckPointer(interface{}, interface{})":[],"func os/user._cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32":[[]],"func os/user._cgo_runtime_gostring(*os/user._Ctype_char) string":[[]],"func os/user.runtime_throw(string)":[],"func path/filepath.globWithLimit(pattern string, depth int) (matches []string, err error)":[[],[]],"func path/filepath.walk(path string, info io/fs.FileInfo, walkFn path/filepath.WalkFunc) error":[[]],"func path/filepath.walkDir(path string, d io/fs.DirEntry, walkDirFn io/fs.WalkDirFunc) error":[[]],"func plugin._Cgo_use(interface{})":[],"func plugin._cgoCheckPointer(interface{}, interface{})":[],"func plugin._cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32":[[]],"func reflect.StructOf(fields []reflect.StructField) reflect.Type":[[]],"func reflect.addReflectOff(ptr unsafe.Pointer) int32":[[]],"func reflect.addTypeBits(bv *reflect.bitVector, offset uintptr, t *reflect.rtype)":[],"func reflect.call(stackArgsType *reflect.rtype, f unsafe.Pointer, stackArgs unsafe.Pointer, stackArgsSize uint32, stackRetOffset uint32, frameSize uint32, regArgs *internal/abi.RegArgs)":[],"func reflect.chancap(ch unsafe.Pointer) int":[[]],"func reflect.chanclose(ch unsafe.Pointer)":[],"func reflect.chanlen(ch unsafe.Pointer) int":[[]],"func reflect.chanrecv(ch unsafe.Pointer, nb bool, val unsafe.Pointer) (selected bool, received bool)":[[],[]],"func reflect.chansend(ch unsafe.Pointer, val unsafe.Pointer, nb bool) bool":[[]],"func reflect.deepValueEqual(v1 reflect.Value, v2 reflect.Value, visited map[reflect.visit]bool) bool":[[]],"func reflect.hashMightPanic(t *reflect.rtype) bool":[[]],"func reflect.haveIdenticalType(T reflect.Type, V reflect.Type, cmpTags bool) bool":[[]],"func reflect.ifaceE2I(t *reflect.rtype, src any, dst unsafe.Pointer)":[],"func reflect.isReflexive(t *reflect.rtype) bool":[[]],"func reflect.makemap(t *reflect.rtype, cap int) (m unsafe.Pointer)":[[]],"func reflect.mapaccess(t *reflect.rtype, m unsafe.Pointer, key unsafe.Pointer) (val unsafe.Pointer)":[[]],"func reflect.mapaccess_faststr(t *reflect.rtype, m unsafe.Pointer, key string) (val unsafe.Pointer)":[[]],"func reflect.mapassign(t *reflect.rtype, m unsafe.Pointer, key unsafe.Pointer, val unsafe.Pointer)":[],"func reflect.mapassign_faststr(t *reflect.rtype, m unsafe.Pointer, key string, val unsafe.Pointer)":[],"func reflect.mapdelete(t *reflect.rtype, m unsafe.Pointer, key unsafe.Pointer)":[],"func reflect.mapdelete_faststr(t *reflect.rtype, m unsafe.Pointer, key string)":[],"func reflect.mapiterelem(it *reflect.hiter) (elem unsafe.Pointer)":[[]],"func reflect.mapiterinit(t *reflect.rtype, m unsafe.Pointer, it *reflect.hiter)":[],"func reflect.mapiterkey(it *reflect.hiter) (key unsafe.Pointer)":[[]],"func reflect.mapiternext(it *reflect.hiter)":[],"func reflect.maplen(m unsafe.Pointer) int":[[]],"func reflect.memmove(dst unsafe.Pointer, src unsafe.Pointer, size uintptr)":[],"func reflect.needKeyUpdate(t *reflect.rtype) bool":[[]],"func reflect.resolveNameOff(ptrInModule unsafe.Pointer, off int32) unsafe.Pointer":[[]],"func reflect.resolveTextOff(rtype unsafe.Pointer, off int32) unsafe.Pointer":[[]],"func reflect.resolveTypeOff(rtype unsafe.Pointer, off int32) unsafe.Pointer":[[]],"func reflect.rselect([]reflect.runtimeSelect) (chosen int, recvOK bool)":[[],[]],"func reflect.typedmemclr(t *reflect.rtype, ptr unsafe.Pointer)":[],"func reflect.typedmemclrpartial(t *reflect.rtype, ptr unsafe.Pointer, off uintptr, size uintptr)":[],"func reflect.typedmemmove(t *reflect.rtype, dst unsafe.Pointer, src unsafe.Pointer)":[],"func reflect.typedslicecopy(elemType *reflect.rtype, dst internal/unsafeheader.Slice, src internal/unsafeheader.Slice) int":[[]],"func reflect.typehash(t *reflect.rtype, p unsafe.Pointer, h uintptr) uintptr":[[]],"func reflect.typelinks() (sections []unsafe.Pointer, offset [][]int32)":[[],[]],"func reflect.unsafe_New(*reflect.rtype) unsafe.Pointer":[[]],"func reflect.unsafe_NewArray(*reflect.rtype, int) unsafe.Pointer":[[]],"func reflect.verifyNotInHeapPtr(p uintptr) bool":[[]],"func regexp.minInputLen(re *regexp/syntax.Regexp) int":[[]],"func regexp/syntax.repeatIsValid(re *regexp/syntax.Regexp, n int) bool":[[]],"func regexp/syntax.writeRegexp(b *strings.Builder, re *regexp/syntax.Regexp)":[],"func runtime._ExternalCode()":[],"func runtime._GC()":[],"func runtime._LostExternalCode()":[],"func runtime._LostSIGPROFDuringAtomic64()":[],"func runtime._System()":[],"func runtime._VDSO()":[],"func runtime.asmcgocall(fn unsafe.Pointer, arg unsafe.Pointer) int32":[[]],"func runtime.asmcgocall_no_g(fn unsafe.Pointer, arg unsafe.Pointer)":[],"func runtime.asminit()":[],"func runtime.binarySearchTree(x *runtime.stackObjectBuf, idx int, n int) (root *runtime.stackObject, restBuf *runtime.stackObjectBuf, restIdx int)":[[],[],[]],"func runtime.breakpoint()":[],"func runtime.cgoCheckArg(t *runtime._type, p unsafe.Pointer, indir bool, top bool, msg string)":[],"func runtime.cgoCheckUsingType(typ *runtime._type, src unsafe.Pointer, off uintptr, size uintptr)":[],"func runtime.checkASM() bool":[[]],"func runtime.cputicks() int64":[[]],"func runtime.debugCallPanicked(val any)":[],"func runtime.doInit(t *runtime.initTask)":[],"func runtime.getcallerpc() uintptr":[[]],"func runtime.getcallersp() uintptr":[[]],"func runtime.getg() *runtime.g":[[]],"func runtime.gogo(buf *runtime.gobuf)":[],"func runtime.interhash(p unsafe.Pointer, h uintptr) uintptr":[[]],"func runtime.itabAdd(m *runtime.itab)":[],"func runtime.mcall(fn func(*runtime.g))":[],"func runtime.memclrNoHeapPointers(ptr unsafe.Pointer, n uintptr)":[],"func runtime.memequal(a unsafe.Pointer, b unsafe.Pointer, size uintptr) bool":[[]],"func runtime.memhash(p unsafe.Pointer, h uintptr, s uintptr) uintptr":[[]],"func runtime.memhash32(p unsafe.Pointer, h uintptr) uintptr":[[]],"func runtime.memhash64(p unsafe.Pointer, h uintptr) uintptr":[[]],"func runtime.memmove(to unsafe.Pointer, from unsafe.Pointer, n uintptr)":[],"func runtime.printpanics(p *runtime._panic)":[],"func runtime.procyield(cycles uint32)":[],"func runtime.publicationBarrier()":[],"func runtime.reflectcall(stackArgsType *runtime._type, fn unsafe.Pointer, stackArgs unsafe.Pointer, stackArgsSize uint32, stackRetOffset uint32, frameSize uint32, regArgs *internal/abi.RegArgs)":[],"func runtime.setg(gg *runtime.g)":[],"func runtime.sigfwd(fn uintptr, sig uint32, info *runtime.siginfo, ctx unsafe.Pointer)":[],"func runtime.strhash(p unsafe.Pointer, h uintptr) uintptr":[[]],"func runtime.sync_atomic_CompareAndSwapUintptr(ptr *uintptr, old uintptr, new uintptr) bool":[[]],"func runtime.sync_atomic_StoreUintptr(ptr *uintptr, new uintptr)":[],"func runtime.sync_atomic_SwapUintptr(ptr *uintptr, new uintptr) uintptr":[[]],"func runtime.systemstack(fn func())":[],"func runtime.typehash(t *runtime._type, p unsafe.Pointer, h uintptr) uintptr":[[]],"func runtime.typesEqual(t *runtime._type, v *runtime._type, seen map[runtime._typePair]struct{}) bool":[[]],"func runtime.write(fd uintptr, p unsafe.Pointer, n int32) int32":[[]],"func runtime/cgo._cgoCheckPointer(interface{}, interface{})":[],"func runtime/debug.SetTraceback(level string)":[],"func runtime/debug.freeOSMemory()":[],"func runtime/debug.modinfo() string":[[]],"func runtime/debug.setGCPercent(int32) int32":[[]],"func runtime/debug.setMaxStack(int) int":[[]],"func runtime/debug.setMaxThreads(int) int":[[]],"func runtime/internal/atomic.And(ptr *uint32, val uint32)":[],"func runtime/internal/atomic.And8(ptr *uint8, val uint8)":[],"func runtime/internal/atomic.Cas(ptr *uint32, old uint32, new uint32) bool":[[]],"func runtime/internal/atomic.Cas64(ptr *uint64, old uint64, new uint64) bool":[[]],"func runtime/internal/atomic.CasRel(ptr *uint32, old uint32, new uint32) bool":[[]],"func runtime/internal/atomic.Casint32(ptr *int32, old int32, new int32) bool":[[]],"func runtime/internal/atomic.Casint64(ptr *int64, old int64, new int64) bool":[[]],"func runtime/internal/atomic.Casp1(ptr *unsafe.Pointer, old unsafe.Pointer, new unsafe.Pointer) bool":[[]],"func runtime/internal/atomic.Casuintptr(ptr *uintptr, old uintptr, new uintptr) bool":[[]],"func runtime/internal/atomic.Loadint32(ptr *int32) int32":[[]],"func runtime/internal/atomic.Loadint64(ptr *int64) int64":[[]],"func runtime/internal/atomic.Loaduint(ptr *uint) uint":[[]],"func runtime/internal/atomic.Loaduintptr(ptr *uintptr) uintptr":[[]],"func runtime/internal/atomic.Or(ptr *uint32, val uint32)":[],"func runtime/internal/atomic.Or8(ptr *uint8, val uint8)":[],"func runtime/internal/atomic.Store(ptr *uint32, val uint32)":[],"func runtime/internal/atomic.Store64(ptr *uint64, val uint64)":[],"func runtime/internal/atomic.Store8(ptr *uint8, val uint8)":[],"func runtime/internal/atomic.StoreRel(ptr *uint32, val uint32)":[],"func runtime/internal/atomic.StoreReluintptr(ptr *uintptr, val uintptr)":[],"func runtime/internal/atomic.Storeint32(ptr *int32, new int32)":[],"func runtime/internal/atomic.Storeint64(ptr *int64, new int64)":[],"func runtime/internal/atomic.StorepNoWB(ptr unsafe.Pointer, val unsafe.Pointer)":[],"func runtime/internal/atomic.Storeuintptr(ptr *uintptr, new uintptr)":[],"func runtime/internal/atomic.Xadd(ptr *uint32, delta int32) uint32":[[]],"func runtime/internal/atomic.Xadd64(ptr *uint64, delta int64) uint64":[[]],"func runtime/internal/atomic.Xaddint64(ptr *int64, delta int64) int64":[[]],"func runtime/internal/atomic.Xadduintptr(ptr *uintptr, delta uintptr) uintptr":[[]],"func runtime/internal/atomic.Xchg(ptr *uint32, new uint32) uint32":[[]],"func runtime/internal/atomic.Xchg64(ptr *uint64, new uint64) uint64":[[]],"func runtime/internal/atomic.Xchgint64(ptr *int64, new int64) int64":[[]],"func runtime/internal/atomic.Xchguintptr(ptr *uintptr, new uintptr) uintptr":[[]],"func runtime/metrics.runtime_readMetrics(unsafe.Pointer, int, int)":[],"func runtime/pprof.lostProfileEvent()":[],"func runtime/pprof.printStackRecord(w io.Writer, stk []uintptr, allFrames bool)":[],"func runtime/pprof.runtime_cyclesPerSecond() int64":[[]],"func runtime/pprof.runtime_expandFinalInlineFrame(stk []uintptr) []uintptr":[[]],"func runtime/trace.userRegion(id uint64, mode uint64, regionType string)":[],"func runtime/trace.userTaskCreate(id uint64, parentID uint64, taskType string)":[],"func runtime/trace.userTaskEnd(id uint64)":[],"func sort.pdqsort(data sort.Interface, a int, b int, limit int)":[],"func sort.pdqsort_func(data sort.lessSwap, a int, b int, limit int)":[],"func sort.symMerge(data sort.Interface, a int, m int, b int)":[],"func sort.symMerge_func(data sort.lessSwap, a int, m int, b int)":[],"func sync.fastrandn(n uint32) uint32":[[]],"func sync.fatal(string)":[],"func sync.runtime_LoadAcquintptr(ptr *uintptr) uintptr":[[]],"func sync.runtime_Semacquire(s *uint32)":[],"func sync.runtime_SemacquireMutex(s *uint32, lifo bool, skipframes int)":[],"func sync.runtime_Semrelease(s *uint32, handoff bool, skipframes int)":[],"func sync.runtime_StoreReluintptr(ptr *uintptr, val uintptr) uintptr":[[]],"func sync.runtime_canSpin(i int) bool":[[]],"func sync.runtime_doSpin()":[],"func sync.runtime_nanotime() int64":[[]],"func sync.runtime_notifyListAdd(l *sync.notifyList) uint32":[[]],"func sync.runtime_notifyListCheck(size uintptr)":[],"func sync.runtime_notifyListNotifyAll(l *sync.notifyList)":[],"func sync.runtime_notifyListNotifyOne(l *sync.notifyList)":[],"func sync.runtime_notifyListWait(l *sync.notifyList, t uint32)":[],"func sync.runtime_procPin() int":[[]],"func sync.runtime_procUnpin()":[],"func sync.runtime_registerPoolCleanup(cleanup func())":[],"func sync.throw(string)":[],"func sync/atomic.AddInt32(addr *int32, delta int32) (new int32)":[[]],"func sync/atomic.AddInt64(addr *int64, delta int64) (new int64)":[[]],"func sync/atomic.AddUint32(addr *uint32, delta uint32) (new uint32)":[[]],"func sync/atomic.AddUint64(addr *uint64, delta uint64) (new uint64)":[[]],"func sync/atomic.AddUintptr(addr *uintptr, delta uintptr) (new uintptr)":[[]],"func sync/atomic.CompareAndSwapInt32(addr *int32, old int32, new int32) (swapped bool)":[[]],"func sync/atomic.CompareAndSwapInt64(addr *int64, old int64, new int64) (swapped bool)":[[]],"func sync/atomic.CompareAndSwapPointer(addr *unsafe.Pointer, old unsafe.Pointer, new unsafe.Pointer) (swapped bool)":[[]],"func sync/atomic.CompareAndSwapUint64(addr *uint64, old uint64, new uint64) (swapped bool)":[[]],"func sync/atomic.CompareAndSwapUintptr(addr *uintptr, old uintptr, new uintptr) (swapped bool)":[[]],"func sync/atomic.LoadInt32(addr *int32) (val int32)":[[]],"func sync/atomic.LoadInt64(addr *int64) (val int64)":[[]],"func sync/atomic.LoadPointer(addr *unsafe.Pointer) (val unsafe.Pointer)":[[]],"func sync/atomic.LoadUint32(addr *uint32) (val uint32)":[[]],"func sync/atomic.LoadUint64(addr *uint64) (val uint64)":[[]],"func sync/atomic.LoadUintptr(addr *uintptr) (val uintptr)":[[]],"func sync/atomic.StoreInt32(addr *int32, val int32)":[],"func sync/atomic.StoreInt64(addr *int64, val int64)":[],"func sync/atomic.StorePointer(addr *unsafe.Pointer, val unsafe.Pointer)":[],"func sync/atomic.StoreUint32(addr *uint32, val uint32)":[],"func sync/atomic.StoreUint64(addr *uint64, val uint64)":[],"func sync/atomic.StoreUintptr(addr *uintptr, val uintptr)":[],"func sync/atomic.SwapUint64(addr *uint64, new uint64) (old uint64)":[[]],"func sync/atomic.SwapUintptr(addr *uintptr, new uintptr) (old uintptr)":[[]],"func sync/atomic.runtime_procPin()":[],"func sync/atomic.runtime_procUnpin()":[],"func syscall.Exit(code int)":[],"func syscall.rawSyscall(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func syscall.rawSyscall6(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func syscall.runtime_AfterFork()":[],"func syscall.runtime_AfterForkInChild()":[],"func syscall.runtime_BeforeFork()":[],"func syscall.runtime_envs() []string":[[]],"func syscall.setenv_c(k string, v string)":[],"func syscall.syscall(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func syscall.syscall6(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func syscall.syscall6X(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func syscall.syscallPtr(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func syscall.syscallX(fn uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)":[[],[],[]],"func syscall.unsetenv_c(k string)":[],"func text/template/parse.IsEmptyTree(n text/template/parse.Node) bool":[[]],"func time.Sleep(d time.Duration)":[],"func time.loadTzinfo(name string, source string) ([]byte, error)":[[],[]],"func time.modTimer(t *time.runtimeTimer, when int64, period int64, f func(any, uintptr), arg any, seq uintptr)":[],"func time.now() (sec int64, nsec int32, mono int64)":[[],[],[]],"func time.resetTimer(*time.runtimeTimer, int64) bool":[[]],"func time.runtimeNano() int64":[[]],"func time.startTimer(*time.runtimeTimer)":[],"func time.stopTimer(*time.runtimeTimer) bool":[[]],"func time/tzdata.registerLoadFromEmbeddedTZData(func(string) (string, error))":[],"func vendor/golang.org/x/crypto/chacha20poly1305.chacha20Poly1305Open(dst []byte, key []uint32, src []byte, ad []byte) bool":[[]],"func vendor/golang.org/x/crypto/chacha20poly1305.chacha20Poly1305Seal(dst []byte, key []uint32, src []byte, ad []byte)":[],"func vendor/golang.org/x/crypto/curve25519/internal/field.feMul(out *vendor/golang.org/x/crypto/curve25519/internal/field.Element, a *vendor/golang.org/x/crypto/curve25519/internal/field.Element, b *vendor/golang.org/x/crypto/curve25519/internal/field.Element)":[],"func vendor/golang.org/x/crypto/curve25519/internal/field.feSquare(out *vendor/golang.org/x/crypto/curve25519/internal/field.Element, a *vendor/golang.org/x/crypto/curve25519/internal/field.Element)":[],"func vendor/golang.org/x/crypto/internal/poly1305.update(state *vendor/golang.org/x/crypto/internal/poly1305.macState, msg []byte)":[],"func vendor/golang.org/x/net/route.sysctl(mib []int32, old *byte, oldlen *uintptr, new *byte, newlen uintptr) error":[[]],"func vendor/golang.org/x/sys/cpu.cpuid(eaxArg uint32, ecxArg uint32) (eax uint32, ebx uint32, ecx uint32, edx uint32)":[[],[],[],[]],"func vendor/golang.org/x/sys/cpu.xgetbv() (eax uint32, edx uint32)":[[],[]],"github.com/cokeBeer/goot/pkg/bench.A":[],"github.com/cokeBeer/goot/pkg/bench.B":[[0,1]],"github.com/cokeBeer/goot/pkg/bench.init":[],"github.com/cokeBeer/goot/pkg/bench/compose.init":[],"github.com/cokeBeer/goot/pkg/bench/interfac.Sink":[],"github.com/cokeBeer/goot/pkg/bench/interfac.init":[],"github.com/cokeBeer/goot/pkg/bench/pointer.A":[],"github.com/cokeBeer/goot/pkg/bench/pointer.init":[],"github.com/cokeBeer/goot/pkg/bench/pta.init":[],"github.com/cokeBeer/goot/pkg/bench/pta.main":[],"github.com/cokeBeer/goot/pkg/bench/workhorse.A":[],"github.com/cokeBeer/goot/pkg/bench/workhorse.init":[],"go/ast.FileExports":[[]],"go/ast.FilterDecl":[[]],"go/ast.FilterFile":[[]],"go/ast.FilterPackage":[[]],"go/ast.Fprint":[[]],"go/ast.Inspect":[],"go/ast.IsExported":[[0]],"go/ast.MergePackageFiles":[[0]],"go/ast.NewCommentMap":[[]],"go/ast.NewIdent":[[0]],"go/ast.NewObj":[[0,1]],"go/ast.NewPackage":[[1,3],[0,1]],"go/ast.NewScope":[[0]],"go/ast.NotNilFilter":[[1]],"go/ast.PackageExports":[[]],"go/ast.Print":[[]],"go/ast.SortImports":[],"go/ast.Walk":[],"go/ast.collapse":[[0]],"go/ast.exportFilter":[[0]],"go/ast.fieldName":[[0]],"go/ast.filterCompositeLit":[],"go/ast.filterDecl":[[]],"go/ast.filterExprList":[[0]],"go/ast.filterFieldList":[[]],"go/ast.filterFile":[[]],"go/ast.filterIdentList":[[0]],"go/ast.filterPackage":[[]],"go/ast.filterParamList":[[]],"go/ast.filterSpec":[[]],"go/ast.filterSpecList":[[0]],"go/ast.filterType":[[]],"go/ast.fprint":[[]],"go/ast.fprint$1":[],"go/ast.importComment":[[0]],"go/ast.importName":[[0]],"go/ast.importPath":[[0]],"go/ast.init":[],"go/ast.isDirective":[[]],"go/ast.isWhitespace":[[0]],"go/ast.lineAt":[[0,1]],"go/ast.nameOf":[[0]],"go/ast.nodeList":[[]],"go/ast.nodeList$1":[[]],"go/ast.resolve":[[]],"go/ast.sortComments":[],"go/ast.sortSpecs":[[2]],"go/ast.sortSpecs$1":[[]],"go/ast.sortSpecs$2":[[]],"go/ast.stripTrailingWhitespace":[[0]],"go/ast.summary":[[]],"go/ast.walkDeclList":[],"go/ast.walkExprList":[],"go/ast.walkIdentList":[],"go/ast.walkStmtList":[],"go/build.ArchChar":[[],[]],"go/build.Import":[[0],[0,1]],"go/build.ImportDir":[[],[0]],"go/build.IsLocalImport":[[0]],"go/build.cleanDecls":[[0],[0]],"go/build.defaultContext":[[]],"go/build.defaultGOPATH":[[]],"go/build.envOr":[[1]],"go/build.equal":[[]],"go/build.expandSrcDir":[[0,1],[0,1]],"go/build.fileListForExt":[[0]],"go/build.findImportComment":[[0],[]],"go/build.getToolDir":[[]],"go/build.hasGoFiles":[[]],"go/build.hasSubdir":[[1],[]],"go/build.init":[],"go/build.isGoBuildComment":[[]],"go/build.isIdent":[[0]],"go/build.nameExt":[[0]],"go/build.newImportReader":[[0,1]],"go/build.parseFileHeader":[[0],[0],[],[]],"go/build.parseGoEmbed":[[0,1],[0]],"go/build.parseGoEmbed$1":[],"go/build.parseGoEmbed$2":[],"go/build.parseWord":[[0],[0]],"go/build.readComments":[[0],[0]],"go/build.readGoInfo":[[0,1]],"go/build.safeCgoName":[[]],"go/build.skipSpaceOrComment":[[0]],"go/build.splitQuoted":[[0],[]],"go/build.uniq":[[0]],"go/build/constraint.IsGoBuild":[[]],"go/build/constraint.IsPlusBuild":[[]],"go/build/constraint.Parse":[[0],[]],"go/build/constraint.PlusBuildLines":[[],[]],"go/build/constraint.and":[[0,1]],"go/build/constraint.andArg":[[]],"go/build/constraint.appendSplitAnd":[[0,1]],"go/build/constraint.appendSplitOr":[[0,1]],"go/build/constraint.init":[],"go/build/constraint.isValidTag":[[]],"go/build/constraint.not":[[0]],"go/build/constraint.or":[[0,1]],"go/build/constraint.orArg":[[]],"go/build/constraint.parseExpr":[[0],[]],"go/build/constraint.parseExpr$1":[],"go/build/constraint.parsePlusBuildExpr":[[0]],"go/build/constraint.pushNot":[[0]],"go/build/constraint.splitGoBuild":[[0],[]],"go/build/constraint.splitPlusBuild":[[0],[]],"go/build/constraint.tag":[[0]],"go/constant.BinaryOp":[[0,2]],"go/constant.BitLen":[[0]],"go/constant.BoolVal":[[0]],"go/constant.Bytes":[[0]],"go/constant.Compare":[[0,2]],"go/constant.Denom":[[0]],"go/constant.Float32Val":[[0],[0]],"go/constant.Float64Val":[[0],[0]],"go/constant.Imag":[[0]],"go/constant.Int64Val":[[0],[]],"go/constant.Make":[[0]],"go/constant.MakeBool":[[0]],"go/constant.MakeFloat64":[[0]],"go/constant.MakeFromBytes":[[0]],"go/constant.MakeFromLiteral":[[0]],"go/constant.MakeImag":[[0]],"go/constant.MakeInt64":[[0]],"go/constant.MakeString":[[0]],"go/constant.MakeUint64":[[0]],"go/constant.MakeUnknown":[[]],"go/constant.Num":[[0]],"go/constant.Real":[[0]],"go/constant.Shift":[[0,2]],"go/constant.Sign":[[]],"go/constant.StringVal":[[0]],"go/constant.ToComplex":[[0]],"go/constant.ToFloat":[[0]],"go/constant.ToInt":[[0]],"go/constant.Uint64Val":[[0],[0]],"go/constant.UnaryOp":[[1]],"go/constant.Val":[[0]],"go/constant.add":[[]],"go/constant.cmpZero":[[0]],"go/constant.i64tof":[[0]],"go/constant.i64toi":[[0]],"go/constant.i64tor":[[0]],"go/constant.init":[],"go/constant.is32bit":[[0]],"go/constant.is63bit":[[0]],"go/constant.itof":[[0]],"go/constant.itor":[[0]],"go/constant.makeComplex":[[0,1]],"go/constant.makeFloat":[[0]],"go/constant.makeFloatFromLiteral":[[0]],"go/constant.makeInt":[[0]],"go/constant.makeRat":[[0]],"go/constant.match":[[0,1],[0,1]],"go/constant.match0":[[0],[0,1]],"go/constant.mul":[[]],"go/constant.newFloat":[[]],"go/constant.newInt":[[]],"go/constant.newRat":[[]],"go/constant.ord":[[]],"go/constant.quo":[[]],"go/constant.reverse":[[0]],"go/constant.rtof":[[0]],"go/constant.smallFloat":[[0]],"go/constant.smallFloat64":[[0]],"go/constant.smallInt":[[0]],"go/constant.sub":[[]],"go/constant.vtoc":[[0]],"go/doc.Examples":[[0]],"go/doc.Examples$1":[[]],"go/doc.IsPredeclared":[[0]],"go/doc.New":[[0,1,2]],"go/doc.NewFromFiles":[[0,1,2,3],[0]],"go/doc.Synopsis":[[]],"go/doc.ToHTML":[],"go/doc.ToText":[],"go/doc.assumedPackageName":[[0]],"go/doc.assumedPackageName$1":[[0]],"go/doc.baseTypeName":[[0],[]],"go/doc.classifyExamples":[],"go/doc.classifyExamples$1":[[]],"go/doc.clean":[[0]],"go/doc.copyConstType":[[0,1]],"go/doc.customizeRecv":[[0,1,3]],"go/doc.exampleOutput":[[1],[],[]],"go/doc.fields":[[0],[]],"go/doc.filterCompositeLit":[],"go/doc.filterExprList":[[0]],"go/doc.filterFuncs":[[0]],"go/doc.filterIdentList":[[0]],"go/doc.filterTypes":[[0]],"go/doc.filterValues":[[0]],"go/doc.findDeclsAndUnresolved":[[],[]],"go/doc.findDeclsAndUnresolved$1":[[]],"go/doc.findDeclsAndUnresolved$2":[],"go/doc.findImportGroupStarts":[[]],"go/doc.findImportGroupStarts1":[[]],"go/doc.findImportGroupStarts1$1":[[]],"go/doc.firstSentence":[[0]],"go/doc.hasExportedName":[[]],"go/doc.hasIota":[[]],"go/doc.hasIota$1":[[]],"go/doc.init":[],"go/doc.isExampleSuffix":[[0]],"go/doc.isTest":[[0]],"go/doc.lastComment":[[],[1]],"go/doc.lookupTypeParam":[[1]],"go/doc.matchDecl":[[]],"go/doc.matchFields":[[]],"go/doc.nameWithoutInst":[[0]],"go/doc.noteBodies":[[0]],"go/doc.playExample":[[0,1]],"go/doc.playExample$1":[[]],"go/doc.playExample$2":[[]],"go/doc.playExample$3":[[]],"go/doc.playExampleFile":[[0]],"go/doc.recvParam":[[0]],"go/doc.recvString":[[0]],"go/doc.removeAnonymousField":[],"go/doc.removeStar":[[0]],"go/doc.simpleImporter":[[0,1],[]],"go/doc.sortBy":[],"go/doc.sortedFuncs":[[]],"go/doc.sortedFuncs$1":[[]],"go/doc.sortedFuncs$2":[],"go/doc.sortedKeys":[[0]],"go/doc.sortedTypes":[[]],"go/doc.sortedTypes$1":[[]],"go/doc.sortedTypes$2":[],"go/doc.sortedValues":[[]],"go/doc.sortedValues$1":[[]],"go/doc.sortedValues$2":[],"go/doc.sortingName":[[0]],"go/doc.specNames":[[0]],"go/doc.splitExampleName":[[0],[0],[0]],"go/doc.stripOutputComment":[[0,1],[1]],"go/doc.updateIdentList":[[]],"go/doc/comment.DefaultLookupPackage":[[0],[]],"go/doc/comment.autoURL":[[0],[]],"go/doc/comment.blankBefore":[[]],"go/doc/comment.commonPrefix":[[0]],"go/doc/comment.ident":[[0],[]],"go/doc/comment.importPathOK":[[0]],"go/doc/comment.inc":[[0]],"go/doc/comment.indented":[[0]],"go/doc/comment.init":[],"go/doc/comment.isBlank":[[0]],"go/doc/comment.isHeading":[[0]],"go/doc/comment.isHost":[[0]],"go/doc/comment.isIdentASCII":[[0]],"go/doc/comment.isList":[[]],"go/doc/comment.isName":[[0]],"go/doc/comment.isOldHeading":[[]],"go/doc/comment.isPath":[[0]],"go/doc/comment.isPunct":[[0]],"go/doc/comment.isScheme":[[]],"go/doc/comment.isStdPkg":[[0]],"go/doc/comment.isStdPkg$1":[[]],"go/doc/comment.leadingSpace":[[0]],"go/doc/comment.listMarker":[[0],[0],[]],"go/doc/comment.parseLink":[[0],[]],"go/doc/comment.parseSpans":[[]],"go/doc/comment.splitDocName":[[0],[0],[]],"go/doc/comment.unindent":[[0]],"go/doc/comment.validImportPath":[[]],"go/doc/comment.validImportPathElem":[[]],"go/doc/comment.wrap":[[]],"go/doc/comment.wrap$1":[[0,1]],"go/doc/comment.wrap$2":[[]],"go/doc/comment.wrap$3":[[]],"go/doc/comment.wrap$4":[[]],"go/doc/comment.wrap$5":[[]],"go/doc/comment.wrap$5$1":[[]],"go/doc/comment.wrapPenalty":[[]],"go/doc/comment.writeNL":[],"go/format.Node":[[0,2]],"go/format.Source":[[0],[0]],"go/format.format":[[4],[1]],"go/format.hasUnsortedImports":[[]],"go/format.init":[],"go/format.isSpace":[[0]],"go/format.parse":[[],[],[],[1,2]],"go/format.parse$1":[[0]],"go/format.parse$2":[[0]],"go/importer.Default":[[]],"go/importer.For":[[1]],"go/importer.ForCompiler":[[0,2]],"go/importer.init":[],"go/internal/gccgoimporter.GetImporter":[[]],"go/internal/gccgoimporter.GetImporter$1":[[0,1],[1]],"go/internal/gccgoimporter.aixBigArExportData":[[],[0]],"go/internal/gccgoimporter.arExportData":[[],[0]],"go/internal/gccgoimporter.deref":[[0]],"go/internal/gccgoimporter.elfFromAr":[[],[0]],"go/internal/gccgoimporter.findExportFile":[[0,1],[0,1]],"go/internal/gccgoimporter.init":[],"go/internal/gccgoimporter.lookupBuiltinType":[[]],"go/internal/gccgoimporter.openExportFile":[[],[],[0]],"go/internal/gccgoimporter.openExportFile$1":[],"go/internal/gccgoimporter.readMagic":[[],[]],"go/internal/gccgoimporter.readerAtFromSeeker":[[0]],"go/internal/gccgoimporter.standardArExportData":[[],[0]],"go/internal/gcimporter.FindExportData":[[0],[],[0]],"go/internal/gcimporter.FindPkg":[[0,1],[0,1]],"go/internal/gcimporter.Import":[[0,1,2,3],[2,3]],"go/internal/gcimporter.Import$1":[],"go/internal/gcimporter.assert":[],"go/internal/gcimporter.baseType":[[0]],"go/internal/gcimporter.canReuse":[[]],"go/internal/gcimporter.chanDir":[[]],"go/internal/gcimporter.errorf":[],"go/internal/gcimporter.iImportData":[[0,1,3],[]],"go/internal/gcimporter.iImportData$1":[],"go/internal/gcimporter.init":[],"go/internal/gcimporter.intSize":[[0],[]],"go/internal/gcimporter.isInterface":[[]],"go/internal/gcimporter.pkgScope":[[0]],"go/internal/gcimporter.readGopackHeader":[[],[],[0]],"go/internal/gcimporter.readUnifiedPackage":[[0,1,2,3]],"go/internal/gcimporter.tparamName":[[0]],"go/internal/srcimporter.New":[[0,1,2]],"go/internal/srcimporter.init":[],"go/internal/srcimporter.setUsesCgo":[],"go/internal/typeparams.PackIndexExpr":[[0,1,2,3]],"go/internal/typeparams.UnpackIndexExpr":[[0]],"go/internal/typeparams.init":[],"go/parser.ParseDir":[[],[1]],"go/parser.ParseExpr":[[],[0]],"go/parser.ParseExprFrom":[[],[1,2]],"go/parser.ParseExprFrom$1":[],"go/parser.ParseFile":[[],[1,2]],"go/parser.ParseFile$1":[],"go/parser.assert":[],"go/parser.decNestLev":[],"go/parser.extractName":[[0],[0]],"go/parser.incNestLev":[[0]],"go/parser.init":[],"go/parser.isTypeElem":[[0]],"go/parser.isTypeSwitchAssert":[[0]],"go/parser.isValidImport":[[0]],"go/parser.readSource":[[1],[0,1]],"go/parser.resolveFile":[],"go/parser.trace":[[0]],"go/parser.un":[],"go/parser.unparen":[[0]],"go/printer.Fprint":[[0,2]],"go/printer.allStars":[[]],"go/printer.appendLines":[[0,1]],"go/printer.combinesWithName":[[0]],"go/printer.commonPrefix":[[0]],"go/printer.cutoff":[[]],"go/printer.declToken":[[0]],"go/printer.diffPrec":[[]],"go/printer.formatDocComment":[[0]],"go/printer.getDoc":[[0]],"go/printer.getLastComment":[[0]],"go/printer.identListSize":[[]],"go/printer.init":[],"go/printer.isBinary":[[]],"go/printer.isBlank":[[]],"go/printer.isDirective":[[]],"go/printer.isNL":[[0]],"go/printer.isTypeElem":[[0]],"go/printer.isTypeName":[[]],"go/printer.keepTypeColumn":[[]],"go/printer.keepTypeColumn$1":[],"go/printer.mayCombine":[[1]],"go/printer.nlimit":[[0]],"go/printer.normalizedNumber":[[0]],"go/printer.reduceDepth":[[0]],"go/printer.sanitizeImportPath":[[0]],"go/printer.stripCommonPrefix":[],"go/printer.stripParens":[[0]],"go/printer.stripParens$1":[[]],"go/printer.stripParensAlways":[[0]],"go/printer.trimRight":[[0]],"go/printer.walkBinary":[[],[],[]],"go/scanner.PrintError":[],"go/scanner.digitVal":[[0]],"go/scanner.init":[],"go/scanner.invalidSep":[[]],"go/scanner.isDecimal":[[0]],"go/scanner.isDigit":[[0]],"go/scanner.isHex":[[0]],"go/scanner.isLetter":[[0]],"go/scanner.litname":[[]],"go/scanner.lower":[[0]],"go/scanner.stripCR":[[0]],"go/scanner.trailingDigits":[[],[0],[0]],"go/token.IsExported":[[0]],"go/token.IsIdentifier":[[]],"go/token.IsKeyword":[[]],"go/token.Lookup":[[0]],"go/token.NewFileSet":[[]],"go/token.init":[],"go/token.init#1":[],"go/token.searchFiles":[[]],"go/token.searchFiles$1":[[]],"go/token.searchInts":[[]],"go/token.searchLineInfos":[[]],"go/token.searchLineInfos$1":[[]],"go/types.AssertableTo":[[]],"go/types.AssignableTo":[[0,1]],"go/types.CheckExpr":[[0,1,2]],"go/types.Comparable":[[0]],"go/types.ConvertibleTo":[[]],"go/types.DefPredeclaredTestFuncs":[],"go/types.Default":[[0]],"go/types.Eval":[[],[0,1,2,3]],"go/types.ExprString":[[]],"go/types.Id":[[0,1]],"go/types.Identical":[[0,1]],"go/types.IdenticalIgnoreTags":[[0,1]],"go/types.Implements":[[]],"go/types.Instantiate":[[0,1,2],[1]],"go/types.IsInterface":[[]],"go/types.LookupFieldOrMethod":[[],[],[]],"go/types.MissingMethod":[[],[]],"go/types.NewArray":[[0,1]],"go/types.NewChan":[[0,1]],"go/types.NewChecker":[[0,1,2,3]],"go/types.NewConst":[[0,1,2,3,4]],"go/types.NewContext":[[]],"go/types.NewField":[[0,1,2,3,4]],"go/types.NewFunc":[[0,1,2,3]],"go/types.NewInterface":[[0,1]],"go/types.NewInterfaceType":[[0,1]],"go/types.NewLabel":[[0,1,2]],"go/types.NewMap":[[0,1]],"go/types.NewMethodSet":[[0]],"go/types.NewMethodSet$1":[[]],"go/types.NewNamed":[[0,1,2]],"go/types.NewPackage":[[0,1]],"go/types.NewParam":[[0,1,2,3]],"go/types.NewPkgName":[[0,1,2,3]],"go/types.NewPointer":[[0]],"go/types.NewScope":[[0,1,2,3]],"go/types.NewSignature":[[0,1,2,3]],"go/types.NewSignatureType":[[0,1,2,3,4,5]],"go/types.NewSlice":[[0]],"go/types.NewStruct":[[0,1]],"go/types.NewTerm":[[0,1]],"go/types.NewTuple":[[0]],"go/types.NewTypeName":[[0,1,2,3]],"go/types.NewTypeParam":[[0,1]],"go/types.NewUnion":[[0]],"go/types.NewVar":[[0,1,2,3]],"go/types.ObjectString":[[]],"go/types.RelativeTo":[[]],"go/types.RelativeTo$1":[[0]],"go/types.SelectionString":[[]],"go/types.SizesFor":[[1]],"go/types.TypeString":[[]],"go/types.WriteExpr":[],"go/types.WriteSignature":[],"go/types.WriteType":[],"go/types._NewTypeNameLazy":[[0,1,2]],"go/types.align":[[0,1]],"go/types.allBasic":[[0,1]],"go/types.allBasic$1":[[0]],"go/types.allBoolean":[[0]],"go/types.allInteger":[[0]],"go/types.allNumeric":[[0]],"go/types.allNumericOrString":[[0]],"go/types.allOrdered":[[0]],"go/types.allString":[[0]],"go/types.allUnsigned":[[0]],"go/types.arrayPtrDeref":[[0]],"go/types.assert":[],"go/types.assertSortedMethods":[],"go/types.assignOp":[[0]],"go/types.bindTParams":[[0]],"go/types.colorFor":[[]],"go/types.comparable":[[0]],"go/types.computeInterfaceTypeSet":[[2]],"go/types.computeInterfaceTypeSet$1":[],"go/types.computeInterfaceTypeSet$2":[],"go/types.computeInterfaceTypeSet$2$1":[],"go/types.computeUnionTypeSet":[[1,3]],"go/types.concat":[[1]],"go/types.consolidateMultiples":[[0]],"go/types.coreString":[[0]],"go/types.coreString$1":[[]],"go/types.coreTerm":[[0],[]],"go/types.coreTerm$1":[[]],"go/types.coreType":[[0]],"go/types.coreType$1":[[]],"go/types.def":[],"go/types.defPredeclaredConsts":[],"go/types.defPredeclaredFuncs":[],"go/types.defPredeclaredNil":[],"go/types.defPredeclaredTypes":[],"go/types.dependencyGraph":[[0]],"go/types.dependencyGraph$1":[[]],"go/types.deref":[[0],[]],"go/types.derefStructPtr":[[0]],"go/types.dir":[[0]],"go/types.embeddedFieldIdent":[[0]],"go/types.fieldIndex":[[]],"go/types.findPath":[[0,1]],"go/types.firstInSrc":[[]],"go/types.fitsFloat32":[[0]],"go/types.fitsFloat64":[[0]],"go/types.flattenUnion":[[1],[1]],"go/types.goTypeName":[[]],"go/types.goVal":[[0]],"go/types.hasBreak":[[2]],"go/types.hasBreakList":[[]],"go/types.hasName":[[]],"go/types.hasNil":[[0]],"go/types.hasNil$1":[[0]],"go/types.hasVarSize":[[0,1]],"go/types.hasVarSize$1":[],"go/types.identical":[[0,1]],"go/types.identicalInstance":[[]],"go/types.inNode":[[0,1]],"go/types.init":[],"go/types.init#1":[],"go/types.init#2":[],"go/types.init#3":[],"go/types.instantiatedIdent":[[0]],"go/types.intersectTermLists":[[0,2],[3]],"go/types.isBasic":[[0,1]],"go/types.isBoolean":[[0]],"go/types.isBytesOrRunes":[[0]],"go/types.isComparison":[[]],"go/types.isComplex":[[0]],"go/types.isConstType":[[0]],"go/types.isFloat":[[0]],"go/types.isGeneric":[[]],"go/types.isInteger":[[0]],"go/types.isIntegerOrFloat":[[0]],"go/types.isInterfacePtr":[[]],"go/types.isNonTypeParamInterface":[[]],"go/types.isNumeric":[[0]],"go/types.isParameterized":[[0,1]],"go/types.isPointer":[[]],"go/types.isShift":[[0]],"go/types.isString":[[0]],"go/types.isSyncAtomicAlign64":[[0]],"go/types.isTypeParam":[[]],"go/types.isTyped":[[0]],"go/types.isUintptr":[[0]],"go/types.isUnsafePointer":[[0]],"go/types.isUnsigned":[[0]],"go/types.isUntyped":[[0]],"go/types.keyVal":[[0]],"go/types.lookupFieldOrMethod":[[],[],[]],"go/types.lookupMethod":[[],[0]],"go/types.lookupType":[[0,1],[]],"go/types.makeObjList":[[0]],"go/types.makeRenameMap":[[0,1]],"go/types.makeSig":[[0,1]],"go/types.makeSubstMap":[[0,1]],"go/types.match":[[0,1]],"go/types.measure":[[]],"go/types.newBuiltin":[[0]],"go/types.newErrorf":[[1]],"go/types.newTypeHasher":[[0,1]],"go/types.newTypeList":[[0]],"go/types.newTypeWriter":[[0,1]],"go/types.newUnifier":[[0]],"go/types.nextID":[[]],"go/types.opName":[[]],"go/types.operandString":[[]],"go/types.operandTypes":[[0]],"go/types.overlappingTerm":[[]],"go/types.parseGoVersion":[[0],[0]],"go/types.parseTilde":[[]],"go/types.parseUnion":[[]],"go/types.parseUnion$1":[],"go/types.pathString":[[0]],"go/types.rangeKeyVal":[[0],[0]],"go/types.replaceRecvType":[[0,2],[]],"go/types.representableConst":[[0,1,2]],"go/types.resolve":[[1]],"go/types.resolve$1":[],"go/types.roundFloat32":[[0]],"go/types.roundFloat64":[[0]],"go/types.safeUnderlying":[[0]],"go/types.sortMethods":[],"go/types.spanOf":[[0]],"go/types.sprintf":[[]],"go/types.srcimporter_setUsesCgo":[],"go/types.stripAnnotations":[[0]],"go/types.subscript":[[]],"go/types.substFunc":[[0,1]],"go/types.substVar":[[0,1]],"go/types.tparamIndex":[[1]],"go/types.trimTrailingEmptyStmts":[[0]],"go/types.typeParamsString":[[0]],"go/types.typeString":[[]],"go/types.under":[[0]],"go/types.underIs":[[]],"go/types.unparen":[[0]],"go/types.unreachable":[],"go/types.validatedImportPath":[[0],[0]],"go/types.varTypes":[[0]],"go/types.writeExprList":[],"go/types.writeFieldList":[],"go/types.writeFuncName":[],"go/types.writeIdentList":[],"go/types.writeObject":[],"go/types.writePackage":[],"go/types.writeSigExpr":[],"golang.org/x/mod/internal/lazyregexp.New":[[0]],"golang.org/x/mod/internal/lazyregexp.init":[],"golang.org/x/mod/modfile.AutoQuote":[[0]],"golang.org/x/mod/modfile.Format":[[0]],"golang.org/x/mod/modfile.IsDirectoryPath":[[0]],"golang.org/x/mod/modfile.ModulePath":[[0]],"golang.org/x/mod/modfile.MustQuote":[[]],"golang.org/x/mod/modfile.Parse":[[0,1],[0,1]],"golang.org/x/mod/modfile.ParseLax":[[0,1],[0,1]],"golang.org/x/mod/modfile.ParseWork":[[0,1],[0,1]],"golang.org/x/mod/modfile.addReplace":[[]],"golang.org/x/mod/modfile.checkCanonicalVersion":[[0,1]],"golang.org/x/mod/modfile.commentsAdd":[[0,1]],"golang.org/x/mod/modfile.init":[],"golang.org/x/mod/modfile.init$1":[[1],[]],"golang.org/x/mod/modfile.isIdent":[[]],"golang.org/x/mod/modfile.isIndirect":[[0]],"golang.org/x/mod/modfile.lineLess":[[0,1]],"golang.org/x/mod/modfile.lineRetractLess":[[]],"golang.org/x/mod/modfile.lineRetractLess$1":[[0]],"golang.org/x/mod/modfile.modulePathMajor":[[0],[]],"golang.org/x/mod/modfile.newInput":[[0,1]],"golang.org/x/mod/modfile.parse":[[0,1],[0,1]],"golang.org/x/mod/modfile.parse$1":[],"golang.org/x/mod/modfile.parseDeprecation":[[0,1]],"golang.org/x/mod/modfile.parseDirectiveComment":[[0,1]],"golang.org/x/mod/modfile.parseReplace":[[1,3],[2,3]],"golang.org/x/mod/modfile.parseReplace$1":[[0,1]],"golang.org/x/mod/modfile.parseReplace$2":[[0]],"golang.org/x/mod/modfile.parseReplace$3":[[0,1]],"golang.org/x/mod/modfile.parseString":[[0],[]],"golang.org/x/mod/modfile.parseToFile":[[0,1],[0,1]],"golang.org/x/mod/modfile.parseToFile$1":[],"golang.org/x/mod/modfile.parseVersion":[[2],[0,1,2]],"golang.org/x/mod/modfile.parseVersionInterval":[[2],[0,1,2]],"golang.org/x/mod/modfile.removeDups":[],"golang.org/x/mod/modfile.reverseComments":[],"golang.org/x/mod/modfile.stringsAdd":[[0,1]],"golang.org/x/mod/module.CanonicalVersion":[[0]],"golang.org/x/mod/module.Check":[[0,1]],"golang.org/x/mod/module.CheckFilePath":[[0]],"golang.org/x/mod/module.CheckImportPath":[[0]],"golang.org/x/mod/module.CheckPath":[[0]],"golang.org/x/mod/module.CheckPath$1":[],"golang.org/x/mod/module.CheckPathMajor":[[0,1]],"golang.org/x/mod/module.EscapePath":[[0],[0]],"golang.org/x/mod/module.EscapeVersion":[[0],[0]],"golang.org/x/mod/module.IsPseudoVersion":[[0]],"golang.org/x/mod/module.IsZeroPseudoVersion":[[0]],"golang.org/x/mod/module.MatchPathMajor":[[0,1]],"golang.org/x/mod/module.MatchPrefixPatterns":[[]],"golang.org/x/mod/module.PathMajorPrefix":[[0]],"golang.org/x/mod/module.PseudoVersion":[[0,1]],"golang.org/x/mod/module.PseudoVersionBase":[[0],[0]],"golang.org/x/mod/module.PseudoVersionRev":[[0],[0]],"golang.org/x/mod/module.PseudoVersionTime":[[0],[0]],"golang.org/x/mod/module.Sort":[],"golang.org/x/mod/module.Sort$1":[[]],"golang.org/x/mod/module.SplitPathVersion":[[0],[0],[]],"golang.org/x/mod/module.UnescapePath":[[0],[0]],"golang.org/x/mod/module.UnescapeVersion":[[0],[0]],"golang.org/x/mod/module.VersionError":[[0,1]],"golang.org/x/mod/module.ZeroPseudoVersion":[[0]],"golang.org/x/mod/module.checkElem":[[0]],"golang.org/x/mod/module.checkPath":[[0]],"golang.org/x/mod/module.decDecimal":[[0]],"golang.org/x/mod/module.escapeString":[[0],[]],"golang.org/x/mod/module.fileNameOK":[[0]],"golang.org/x/mod/module.firstPathOK":[[0]],"golang.org/x/mod/module.importPathOK":[[0]],"golang.org/x/mod/module.incDecimal":[[0]],"golang.org/x/mod/module.init":[],"golang.org/x/mod/module.modPathOK":[[0]],"golang.org/x/mod/module.parsePseudoVersion":[[0],[0],[0],[0],[0]],"golang.org/x/mod/module.splitGopkgIn":[[0],[0],[]],"golang.org/x/mod/module.unescapeString":[[0],[]],"golang.org/x/mod/semver.Build":[[0]],"golang.org/x/mod/semver.Canonical":[[0]],"golang.org/x/mod/semver.Compare":[[]],"golang.org/x/mod/semver.IsValid":[[]],"golang.org/x/mod/semver.Major":[[0]],"golang.org/x/mod/semver.MajorMinor":[[0]],"golang.org/x/mod/semver.Max":[[0,1]],"golang.org/x/mod/semver.Prerelease":[[0]],"golang.org/x/mod/semver.Sort":[],"golang.org/x/mod/semver.compareInt":[[]],"golang.org/x/mod/semver.comparePrerelease":[[]],"golang.org/x/mod/semver.init":[],"golang.org/x/mod/semver.isBadNum":[[0]],"golang.org/x/mod/semver.isIdentChar":[[0]],"golang.org/x/mod/semver.isNum":[[]],"golang.org/x/mod/semver.nextIdent":[[0],[0]],"golang.org/x/mod/semver.parse":[[0],[]],"golang.org/x/mod/semver.parseBuild":[[0],[0],[]],"golang.org/x/mod/semver.parseInt":[[0],[0],[]],"golang.org/x/mod/semver.parsePrerelease":[[0],[0],[]],"golang.org/x/mod/sumdb/dirhash.DirFiles":[[],[0]],"golang.org/x/mod/sumdb/dirhash.DirFiles$1":[[2]],"golang.org/x/mod/sumdb/dirhash.Hash1":[[],[0]],"golang.org/x/mod/sumdb/dirhash.HashDir":[[],[0]],"golang.org/x/mod/sumdb/dirhash.HashDir$1":[[],[0]],"golang.org/x/mod/sumdb/dirhash.HashZip":[[],[0]],"golang.org/x/mod/sumdb/dirhash.HashZip$1":[[0],[0]],"golang.org/x/mod/sumdb/dirhash.init":[],"golang.org/x/mod/sumdb/storage.TestStorage":[],"golang.org/x/mod/sumdb/storage.TestStorage$1":[[]],"golang.org/x/mod/sumdb/storage.TestStorage$2":[],"golang.org/x/mod/sumdb/storage.TestStorage$2$1":[[]],"golang.org/x/mod/sumdb/storage.TestStorage$3":[[]],"golang.org/x/mod/sumdb/storage.init":[],"golang.org/x/mod/sumdb/tlog.CheckRecord":[[]],"golang.org/x/mod/sumdb/tlog.CheckTree":[[]],"golang.org/x/mod/sumdb/tlog.FormatRecord":[[],[]],"golang.org/x/mod/sumdb/tlog.FormatTree":[[]],"golang.org/x/mod/sumdb/tlog.HashFromTile":[[],[2]],"golang.org/x/mod/sumdb/tlog.NewTiles":[[0,1,2]],"golang.org/x/mod/sumdb/tlog.NodeHash":[[]],"golang.org/x/mod/sumdb/tlog.ParseHash":[[],[]],"golang.org/x/mod/sumdb/tlog.ParseRecord":[[0],[0],[0],[]],"golang.org/x/mod/sumdb/tlog.ParseTilePath":[[0],[0]],"golang.org/x/mod/sumdb/tlog.ParseTree":[[0],[]],"golang.org/x/mod/sumdb/tlog.ProveRecord":[[],[]],"golang.org/x/mod/sumdb/tlog.ProveTree":[[],[]],"golang.org/x/mod/sumdb/tlog.ReadTileData":[[],[]],"golang.org/x/mod/sumdb/tlog.RecordHash":[[]],"golang.org/x/mod/sumdb/tlog.SplitStoredHashIndex":[[0],[0]],"golang.org/x/mod/sumdb/tlog.StoredHashCount":[[0]],"golang.org/x/mod/sumdb/tlog.StoredHashIndex":[[0,1]],"golang.org/x/mod/sumdb/tlog.StoredHashes":[[],[]],"golang.org/x/mod/sumdb/tlog.StoredHashesForRecordHash":[[1],[]],"golang.org/x/mod/sumdb/tlog.TileForIndex":[[0,1]],"golang.org/x/mod/sumdb/tlog.TileHashReader":[[0,1]],"golang.org/x/mod/sumdb/tlog.TreeHash":[[],[]],"golang.org/x/mod/sumdb/tlog.init":[],"golang.org/x/mod/sumdb/tlog.isValidRecordText":[[]],"golang.org/x/mod/sumdb/tlog.leafProof":[[3],[3]],"golang.org/x/mod/sumdb/tlog.leafProofIndex":[[0,3]],"golang.org/x/mod/sumdb/tlog.maxpow2":[[],[]],"golang.org/x/mod/sumdb/tlog.runRecordProof":[[4],[]],"golang.org/x/mod/sumdb/tlog.runTreeProof":[[0,4],[0,4],[]],"golang.org/x/mod/sumdb/tlog.subTreeHash":[[2],[2]],"golang.org/x/mod/sumdb/tlog.subTreeIndex":[[0,2]],"golang.org/x/mod/sumdb/tlog.tileForIndex":[[0,1],[0,1],[0,1]],"golang.org/x/mod/sumdb/tlog.tileHash":[[]],"golang.org/x/mod/sumdb/tlog.tileParent":[[0,1,2]],"golang.org/x/mod/sumdb/tlog.treeProof":[[3],[3]],"golang.org/x/mod/sumdb/tlog.treeProofIndex":[[0,3]],"golang.org/x/mod/zip.CheckDir":[[],[0]],"golang.org/x/mod/zip.CheckFiles":[[0],[0]],"golang.org/x/mod/zip.CheckZip":[[],[0,1]],"golang.org/x/mod/zip.Create":[[0,1,2]],"golang.org/x/mod/zip.Create$1":[],"golang.org/x/mod/zip.Create$2":[[0,1,2]],"golang.org/x/mod/zip.CreateFromDir":[[0,1,2]],"golang.org/x/mod/zip.CreateFromDir$1":[],"golang.org/x/mod/zip.CreateFromVCS":[[0,1,2,3,4]],"golang.org/x/mod/zip.CreateFromVCS$1":[],"golang.org/x/mod/zip.Unzip":[[0,1,2]],"golang.org/x/mod/zip.Unzip$1":[],"golang.org/x/mod/zip.checkFiles":[[0],[0],[]],"golang.org/x/mod/zip.checkFiles$1":[],"golang.org/x/mod/zip.checkFiles$2":[[]],"golang.org/x/mod/zip.checkZip":[[1],[1],[0,1]],"golang.org/x/mod/zip.checkZip$1":[],"golang.org/x/mod/zip.filesInGitRepo":[[],[0,1,2]],"golang.org/x/mod/zip.init":[],"golang.org/x/mod/zip.isGitRepo":[[0]],"golang.org/x/mod/zip.isVendoredPackage":[[]],"golang.org/x/mod/zip.listFilesInDir":[[],[],[0]],"golang.org/x/mod/zip.listFilesInDir$1":[[0,2]],"golang.org/x/mod/zip.strToFold":[[0]],"golang.org/x/sys/cpu.archInit":[],"golang.org/x/sys/cpu.cpuid":[[],[],[],[]],"golang.org/x/sys/cpu.hostByteOrder":[[]],"golang.org/x/sys/cpu.init":[],"golang.org/x/sys/cpu.init#1":[],"golang.org/x/sys/cpu.initOptions":[],"golang.org/x/sys/cpu.isSet":[[0,1]],"golang.org/x/sys/cpu.processOptions":[],"golang.org/x/sys/cpu.xgetbv":[[],[]],"golang.org/x/sys/execabs.Command":[[0,1]],"golang.org/x/sys/execabs.CommandContext":[[0,1,2]],"golang.org/x/sys/execabs.LookPath":[[0],[0]],"golang.org/x/sys/execabs.fixCmd":[],"golang.org/x/sys/execabs.init":[],"golang.org/x/sys/execabs.isGo119ErrDot":[[]],"golang.org/x/sys/execabs.relError":[[0,1]],"golang.org/x/sys/internal/unsafeheader.init":[],"golang.org/x/sys/unix.Accept":[[],[],[]],"golang.org/x/sys/unix.Access":[[]],"golang.org/x/sys/unix.Adjtime":[[]],"golang.org/x/sys/unix.Bind":[[]],"golang.org/x/sys/unix.BytePtrFromString":[[0],[]],"golang.org/x/sys/unix.BytePtrToString":[[]],"golang.org/x/sys/unix.ByteSliceFromString":[[0],[]],"golang.org/x/sys/unix.ByteSliceToString":[[0]],"golang.org/x/sys/unix.Chdir":[[]],"golang.org/x/sys/unix.Chflags":[[]],"golang.org/x/sys/unix.Chmod":[[]],"golang.org/x/sys/unix.Chown":[[]],"golang.org/x/sys/unix.Chroot":[[]],"golang.org/x/sys/unix.Clearenv":[],"golang.org/x/sys/unix.ClockGettime":[[]],"golang.org/x/sys/unix.Clonefile":[[]],"golang.org/x/sys/unix.Clonefileat":[[]],"golang.org/x/sys/unix.Close":[[]],"golang.org/x/sys/unix.CloseOnExec":[],"golang.org/x/sys/unix.CmsgLen":[[0]],"golang.org/x/sys/unix.CmsgSpace":[[0]],"golang.org/x/sys/unix.Connect":[[]],"golang.org/x/sys/unix.Dup":[[],[]],"golang.org/x/sys/unix.Dup2":[[]],"golang.org/x/sys/unix.Environ":[[]],"golang.org/x/sys/unix.ErrnoName":[[]],"golang.org/x/sys/unix.ErrnoName$1":[[]],"golang.org/x/sys/unix.Exchangedata":[[]],"golang.org/x/sys/unix.Exec":[[]],"golang.org/x/sys/unix.Exit":[],"golang.org/x/sys/unix.Faccessat":[[]],"golang.org/x/sys/unix.Fchdir":[[]],"golang.org/x/sys/unix.Fchflags":[[]],"golang.org/x/sys/unix.Fchmod":[[]],"golang.org/x/sys/unix.Fchmodat":[[]],"golang.org/x/sys/unix.Fchown":[[]],"golang.org/x/sys/unix.Fchownat":[[]],"golang.org/x/sys/unix.Fclonefileat":[[]],"golang.org/x/sys/unix.FcntlFlock":[[]],"golang.org/x/sys/unix.FcntlFstore":[[]],"golang.org/x/sys/unix.FcntlInt":[[],[]],"golang.org/x/sys/unix.Fgetxattr":[[],[]],"golang.org/x/sys/unix.Flistxattr":[[],[]],"golang.org/x/sys/unix.Flock":[[]],"golang.org/x/sys/unix.Fpathconf":[[],[]],"golang.org/x/sys/unix.Fremovexattr":[[]],"golang.org/x/sys/unix.Fsetxattr":[[]],"golang.org/x/sys/unix.Fstat":[[]],"golang.org/x/sys/unix.Fstatat":[[]],"golang.org/x/sys/unix.Fstatfs":[[]],"golang.org/x/sys/unix.Fsync":[[]],"golang.org/x/sys/unix.Ftruncate":[[]],"golang.org/x/sys/unix.Futimes":[[]],"golang.org/x/sys/unix.Getcwd":[[],[]],"golang.org/x/sys/unix.Getdirentries":[[],[]],"golang.org/x/sys/unix.Getdtablesize":[[]],"golang.org/x/sys/unix.Getegid":[[]],"golang.org/x/sys/unix.Getenv":[[],[]],"golang.org/x/sys/unix.Geteuid":[[]],"golang.org/x/sys/unix.Getfsstat":[[],[]],"golang.org/x/sys/unix.Getgid":[[]],"golang.org/x/sys/unix.Getgroups":[[],[]],"golang.org/x/sys/unix.Getpagesize":[[]],"golang.org/x/sys/unix.Getpeername":[[],[]],"golang.org/x/sys/unix.Getpgid":[[],[]],"golang.org/x/sys/unix.Getpgrp":[[]],"golang.org/x/sys/unix.Getpid":[[]],"golang.org/x/sys/unix.Getppid":[[]],"golang.org/x/sys/unix.Getpriority":[[],[]],"golang.org/x/sys/unix.Getrlimit":[[]],"golang.org/x/sys/unix.Getrusage":[[]],"golang.org/x/sys/unix.Getsid":[[],[]],"golang.org/x/sys/unix.Getsockname":[[],[]],"golang.org/x/sys/unix.GetsockoptByte":[[],[]],"golang.org/x/sys/unix.GetsockoptICMPv6Filter":[[],[]],"golang.org/x/sys/unix.GetsockoptIPMreq":[[],[]],"golang.org/x/sys/unix.GetsockoptIPMreqn":[[],[]],"golang.org/x/sys/unix.GetsockoptIPv6MTUInfo":[[],[]],"golang.org/x/sys/unix.GetsockoptIPv6Mreq":[[],[]],"golang.org/x/sys/unix.GetsockoptInet4Addr":[[],[]],"golang.org/x/sys/unix.GetsockoptInt":[[],[]],"golang.org/x/sys/unix.GetsockoptLinger":[[],[]],"golang.org/x/sys/unix.GetsockoptString":[[],[]],"golang.org/x/sys/unix.GetsockoptTCPConnectionInfo":[[],[]],"golang.org/x/sys/unix.GetsockoptTimeval":[[],[]],"golang.org/x/sys/unix.GetsockoptUint64":[[],[]],"golang.org/x/sys/unix.GetsockoptXucred":[[],[]],"golang.org/x/sys/unix.Gettimeofday":[[]],"golang.org/x/sys/unix.Getuid":[[]],"golang.org/x/sys/unix.Getwd":[[],[]],"golang.org/x/sys/unix.Getxattr":[[],[]],"golang.org/x/sys/unix.IoctlCtlInfo":[[]],"golang.org/x/sys/unix.IoctlGetIfreqMTU":[[],[]],"golang.org/x/sys/unix.IoctlGetInt":[[],[]],"golang.org/x/sys/unix.IoctlGetTermios":[[],[]],"golang.org/x/sys/unix.IoctlGetWinsize":[[],[]],"golang.org/x/sys/unix.IoctlSetIfreqMTU":[[]],"golang.org/x/sys/unix.IoctlSetInt":[[]],"golang.org/x/sys/unix.IoctlSetPointerInt":[[]],"golang.org/x/sys/unix.IoctlSetTermios":[[]],"golang.org/x/sys/unix.IoctlSetWinsize":[[]],"golang.org/x/sys/unix.Issetugid":[[]],"golang.org/x/sys/unix.Kevent":[[],[]],"golang.org/x/sys/unix.Kill":[[]],"golang.org/x/sys/unix.Kqueue":[[],[]],"golang.org/x/sys/unix.Lchown":[[]],"golang.org/x/sys/unix.Lgetxattr":[[],[]],"golang.org/x/sys/unix.Link":[[]],"golang.org/x/sys/unix.Linkat":[[]],"golang.org/x/sys/unix.Listen":[[]],"golang.org/x/sys/unix.Listxattr":[[],[]],"golang.org/x/sys/unix.Llistxattr":[[],[]],"golang.org/x/sys/unix.Lremovexattr":[[]],"golang.org/x/sys/unix.Lsetxattr":[[]],"golang.org/x/sys/unix.Lstat":[[]],"golang.org/x/sys/unix.Lutimes":[[]],"golang.org/x/sys/unix.Madvise":[[]],"golang.org/x/sys/unix.Major":[[0]],"golang.org/x/sys/unix.Minor":[[0]],"golang.org/x/sys/unix.Mkdev":[[0,1]],"golang.org/x/sys/unix.Mkdir":[[]],"golang.org/x/sys/unix.Mkdirat":[[]],"golang.org/x/sys/unix.Mkfifo":[[]],"golang.org/x/sys/unix.Mknod":[[]],"golang.org/x/sys/unix.Mlock":[[]],"golang.org/x/sys/unix.Mlockall":[[]],"golang.org/x/sys/unix.Mmap":[[],[]],"golang.org/x/sys/unix.Mount":[[]],"golang.org/x/sys/unix.Mprotect":[[]],"golang.org/x/sys/unix.Msync":[[]],"golang.org/x/sys/unix.Munlock":[[]],"golang.org/x/sys/unix.Munlockall":[[]],"golang.org/x/sys/unix.Munmap":[[]],"golang.org/x/sys/unix.NsecToTimespec":[[0]],"golang.org/x/sys/unix.NsecToTimeval":[[0]],"golang.org/x/sys/unix.Open":[[],[]],"golang.org/x/sys/unix.Openat":[[],[]],"golang.org/x/sys/unix.ParseDirent":[[],[],[0,2]],"golang.org/x/sys/unix.ParseSocketControlMessage":[[0],[]],"golang.org/x/sys/unix.ParseUnixRights":[[0],[]],"golang.org/x/sys/unix.Pathconf":[[],[]],"golang.org/x/sys/unix.Pipe":[[]],"golang.org/x/sys/unix.Poll":[[],[]],"golang.org/x/sys/unix.Pread":[[],[]],"golang.org/x/sys/unix.PtraceAttach":[[]],"golang.org/x/sys/unix.PtraceDetach":[[]],"golang.org/x/sys/unix.Pwrite":[[],[]],"golang.org/x/sys/unix.RawSyscall":[[],[],[]],"golang.org/x/sys/unix.RawSyscall6":[[],[],[]],"golang.org/x/sys/unix.Read":[[],[]],"golang.org/x/sys/unix.ReadDirent":[[],[]],"golang.org/x/sys/unix.Readlink":[[],[]],"golang.org/x/sys/unix.Readlinkat":[[],[]],"golang.org/x/sys/unix.Recvfrom":[[],[],[]],"golang.org/x/sys/unix.Recvmsg":[[],[2],[2],[],[]],"golang.org/x/sys/unix.RecvmsgBuffers":[[],[2],[2],[],[]],"golang.org/x/sys/unix.Removexattr":[[]],"golang.org/x/sys/unix.Rename":[[]],"golang.org/x/sys/unix.Renameat":[[]],"golang.org/x/sys/unix.Revoke":[[]],"golang.org/x/sys/unix.Rmdir":[[]],"golang.org/x/sys/unix.Seek":[[],[]],"golang.org/x/sys/unix.Select":[[],[]],"golang.org/x/sys/unix.Send":[[]],"golang.org/x/sys/unix.Sendfile":[[3],[]],"golang.org/x/sys/unix.Sendmsg":[[]],"golang.org/x/sys/unix.SendmsgBuffers":[[],[]],"golang.org/x/sys/unix.SendmsgN":[[],[]],"golang.org/x/sys/unix.Sendto":[[]],"golang.org/x/sys/unix.SetKevent":[],"golang.org/x/sys/unix.SetNonblock":[[]],"golang.org/x/sys/unix.Setegid":[[]],"golang.org/x/sys/unix.Setenv":[[]],"golang.org/x/sys/unix.Seteuid":[[]],"golang.org/x/sys/unix.Setgid":[[]],"golang.org/x/sys/unix.Setgroups":[[]],"golang.org/x/sys/unix.Setlogin":[[]],"golang.org/x/sys/unix.Setpgid":[[]],"golang.org/x/sys/unix.Setpriority":[[]],"golang.org/x/sys/unix.Setprivexec":[[]],"golang.org/x/sys/unix.Setregid":[[]],"golang.org/x/sys/unix.Setreuid":[[]],"golang.org/x/sys/unix.Setrlimit":[[]],"golang.org/x/sys/unix.Setsid":[[],[]],"golang.org/x/sys/unix.SetsockoptByte":[[]],"golang.org/x/sys/unix.SetsockoptICMPv6Filter":[[]],"golang.org/x/sys/unix.SetsockoptIPMreq":[[]],"golang.org/x/sys/unix.SetsockoptIPMreqn":[[]],"golang.org/x/sys/unix.SetsockoptIPv6Mreq":[[]],"golang.org/x/sys/unix.SetsockoptInet4Addr":[[]],"golang.org/x/sys/unix.SetsockoptInt":[[]],"golang.org/x/sys/unix.SetsockoptLinger":[[]],"golang.org/x/sys/unix.SetsockoptString":[[]],"golang.org/x/sys/unix.SetsockoptTimeval":[[]],"golang.org/x/sys/unix.SetsockoptUint64":[[]],"golang.org/x/sys/unix.Settimeofday":[[]],"golang.org/x/sys/unix.Setuid":[[]],"golang.org/x/sys/unix.Setxattr":[[]],"golang.org/x/sys/unix.Shutdown":[[]],"golang.org/x/sys/unix.SignalName":[[]],"golang.org/x/sys/unix.SignalName$1":[[]],"golang.org/x/sys/unix.SignalNum":[[0]],"golang.org/x/sys/unix.SignalNum$1":[],"golang.org/x/sys/unix.Socket":[[],[]],"golang.org/x/sys/unix.Socketpair":[[],[]],"golang.org/x/sys/unix.Stat":[[]],"golang.org/x/sys/unix.Statfs":[[]],"golang.org/x/sys/unix.Symlink":[[]],"golang.org/x/sys/unix.Symlinkat":[[]],"golang.org/x/sys/unix.Sync":[[]],"golang.org/x/sys/unix.Syscall":[[],[],[]],"golang.org/x/sys/unix.Syscall6":[[],[],[]],"golang.org/x/sys/unix.Syscall9":[[],[],[]],"golang.org/x/sys/unix.Sysctl":[[],[]],"golang.org/x/sys/unix.SysctlArgs":[[],[]],"golang.org/x/sys/unix.SysctlClockinfo":[[],[]],"golang.org/x/sys/unix.SysctlKinfoProc":[[],[]],"golang.org/x/sys/unix.SysctlKinfoProcSlice":[[],[]],"golang.org/x/sys/unix.SysctlRaw":[[],[]],"golang.org/x/sys/unix.SysctlTimeval":[[],[]],"golang.org/x/sys/unix.SysctlUint32":[[],[]],"golang.org/x/sys/unix.SysctlUint32Args":[[],[]],"golang.org/x/sys/unix.SysctlUint64":[[],[]],"golang.org/x/sys/unix.SysvShmAttach":[[],[]],"golang.org/x/sys/unix.SysvShmCtl":[[],[]],"golang.org/x/sys/unix.SysvShmDetach":[[]],"golang.org/x/sys/unix.SysvShmGet":[[],[]],"golang.org/x/sys/unix.TimeToTimespec":[[0],[]],"golang.org/x/sys/unix.TimespecToNsec":[[0]],"golang.org/x/sys/unix.TimevalToNsec":[[0]],"golang.org/x/sys/unix.Truncate":[[]],"golang.org/x/sys/unix.Umask":[[]],"golang.org/x/sys/unix.Uname":[[]],"golang.org/x/sys/unix.Undelete":[[]],"golang.org/x/sys/unix.UnixRights":[[]],"golang.org/x/sys/unix.Unlink":[[]],"golang.org/x/sys/unix.Unlinkat":[[]],"golang.org/x/sys/unix.Unmount":[[]],"golang.org/x/sys/unix.Unsetenv":[[]],"golang.org/x/sys/unix.Utimes":[[]],"golang.org/x/sys/unix.UtimesNano":[[]],"golang.org/x/sys/unix.UtimesNanoAt":[[]],"golang.org/x/sys/unix.Wait4":[[],[]],"golang.org/x/sys/unix.Write":[[],[]],"golang.org/x/sys/unix.accept":[[],[]],"golang.org/x/sys/unix.anyToSockaddr":[[1],[]],"golang.org/x/sys/unix.anyToSockaddrGOOS":[[1],[]],"golang.org/x/sys/unix.bind":[[]],"golang.org/x/sys/unix.clen":[[]],"golang.org/x/sys/unix.closedir":[[]],"golang.org/x/sys/unix.cmsgAlignOf":[[0]],"golang.org/x/sys/unix.connect":[[]],"golang.org/x/sys/unix.direntIno":[[0],[]],"golang.org/x/sys/unix.direntNamlen":[[0],[]],"golang.org/x/sys/unix.direntReclen":[[0],[]],"golang.org/x/sys/unix.emptyIovecs":[[]],"golang.org/x/sys/unix.errnoErr":[[0]],"golang.org/x/sys/unix.fcntl":[[],[]],"golang.org/x/sys/unix.fdopendir":[[],[]],"golang.org/x/sys/unix.fgetxattr":[[],[]],"golang.org/x/sys/unix.flistxattr":[[],[]],"golang.org/x/sys/unix.fremovexattr":[[]],"golang.org/x/sys/unix.fsetxattr":[[]],"golang.org/x/sys/unix.futimes":[[]],"golang.org/x/sys/unix.getfsstat":[[],[]],"golang.org/x/sys/unix.getgroups":[[],[]],"golang.org/x/sys/unix.getpeername":[[]],"golang.org/x/sys/unix.getsockname":[[]],"golang.org/x/sys/unix.getsockopt":[[]],"golang.org/x/sys/unix.getxattr":[[],[]],"golang.org/x/sys/unix.init":[],"golang.org/x/sys/unix.ioctl":[[]],"golang.org/x/sys/unix.kevent":[[],[]],"golang.org/x/sys/unix.kill":[[]],"golang.org/x/sys/unix.listxattr":[[],[]],"golang.org/x/sys/unix.mmap":[[],[]],"golang.org/x/sys/unix.munmap":[[]],"golang.org/x/sys/unix.nametomib":[[],[]],"golang.org/x/sys/unix.pipe":[[]],"golang.org/x/sys/unix.poll":[[],[]],"golang.org/x/sys/unix.pread":[[],[]],"golang.org/x/sys/unix.ptrace":[[]],"golang.org/x/sys/unix.ptrace1":[[]],"golang.org/x/sys/unix.pwrite":[[],[]],"golang.org/x/sys/unix.raceAcquire":[],"golang.org/x/sys/unix.raceReadRange":[],"golang.org/x/sys/unix.raceReleaseMerge":[],"golang.org/x/sys/unix.raceWriteRange":[],"golang.org/x/sys/unix.read":[[],[]],"golang.org/x/sys/unix.readInt":[[0],[]],"golang.org/x/sys/unix.readIntBE":[[0]],"golang.org/x/sys/unix.readIntLE":[[0]],"golang.org/x/sys/unix.readdir_r":[[]],"golang.org/x/sys/unix.readlen":[[],[]],"golang.org/x/sys/unix.recvfrom":[[],[]],"golang.org/x/sys/unix.recvmsg":[[],[]],"golang.org/x/sys/unix.recvmsgRaw":[[],[1,2,4],[1,2,4],[]],"golang.org/x/sys/unix.removexattr":[[]],"golang.org/x/sys/unix.sendfile":[[]],"golang.org/x/sys/unix.sendmsg":[[],[]],"golang.org/x/sys/unix.sendmsgN":[[],[]],"golang.org/x/sys/unix.sendto":[[]],"golang.org/x/sys/unix.setTimespec":[[0,1]],"golang.org/x/sys/unix.setTimeval":[[0,1]],"golang.org/x/sys/unix.setgroups":[[]],"golang.org/x/sys/unix.setsockopt":[[]],"golang.org/x/sys/unix.setxattr":[[]],"golang.org/x/sys/unix.shmat":[[],[]],"golang.org/x/sys/unix.shmctl":[[],[]],"golang.org/x/sys/unix.shmdt":[[]],"golang.org/x/sys/unix.shmget":[[],[]],"golang.org/x/sys/unix.socket":[[],[]],"golang.org/x/sys/unix.socketControlMessageHeaderAndData":[[0],[0],[]],"golang.org/x/sys/unix.socketpair":[[]],"golang.org/x/sys/unix.syscall_rawSyscall":[[],[],[]],"golang.org/x/sys/unix.syscall_rawSyscall6":[[],[],[]],"golang.org/x/sys/unix.syscall_syscall":[[],[],[]],"golang.org/x/sys/unix.syscall_syscall6":[[],[],[]],"golang.org/x/sys/unix.syscall_syscall6X":[[],[],[]],"golang.org/x/sys/unix.syscall_syscall9":[[],[],[]],"golang.org/x/sys/unix.syscall_syscallPtr":[[],[],[]],"golang.org/x/sys/unix.sysctl":[[]],"golang.org/x/sys/unix.sysctlmib":[[1],[]],"golang.org/x/sys/unix.utimensat":[[]],"golang.org/x/sys/unix.utimes":[[]],"golang.org/x/sys/unix.wait4":[[],[]],"golang.org/x/sys/unix.write":[[],[]],"golang.org/x/sys/unix.writelen":[[],[]],"golang.org/x/sys/unix.xattrPointer":[[0]],"golang.org/x/sys/unix/internal/mkmerge.filter":[[],[0]],"golang.org/x/sys/unix/internal/mkmerge.filterImports":[[],[0]],"golang.org/x/sys/unix/internal/mkmerge.getCodeSet":[[],[0]],"golang.org/x/sys/unix/internal/mkmerge.getCommonSet":[[],[0]],"golang.org/x/sys/unix/internal/mkmerge.getValidGOOS":[[0],[]],"golang.org/x/sys/unix/internal/mkmerge.importName":[[0],[]],"golang.org/x/sys/unix/internal/mkmerge.init":[],"golang.org/x/sys/unix/internal/mkmerge.main":[],"golang.org/x/sys/unix/internal/mkmerge.merge":[[0,1]],"golang.org/x/sys/unix/internal/mkmerge.newCodeElem":[[0],[1]],"golang.org/x/sys/unix/internal/mkmerge.newCodeSet":[[]],"golang.org/x/sys/windows/mkwinsyscall.ParseFiles":[[],[0]],"golang.org/x/sys/windows/mkwinsyscall.extractParams":[[0,1],[0]],"golang.org/x/sys/windows/mkwinsyscall.extractSection":[[0],[0],[0],[]],"golang.org/x/sys/windows/mkwinsyscall.init":[],"golang.org/x/sys/windows/mkwinsyscall.join":[[2]],"golang.org/x/sys/windows/mkwinsyscall.main":[],"golang.org/x/sys/windows/mkwinsyscall.newFn":[[0],[0]],"golang.org/x/sys/windows/mkwinsyscall.packagename":[[]],"golang.org/x/sys/windows/mkwinsyscall.syscalldot":[[]],"golang.org/x/sys/windows/mkwinsyscall.trim":[[0]],"golang.org/x/sys/windows/mkwinsyscall.usage":[],"golang.org/x/sys/windows/mkwinsyscall.windowsdot":[[]],"golang.org/x/tools/benchmark/parse.ParseLine":[[0],[0]],"golang.org/x/tools/benchmark/parse.ParseSet":[[0],[0]],"golang.org/x/tools/benchmark/parse.init":[],"golang.org/x/tools/blog/atom.Time":[[0]],"golang.org/x/tools/blog/atom.init":[],"golang.org/x/tools/cmd/auth/authtest.formatHead":[],"golang.org/x/tools/cmd/auth/authtest.getCreds":[[],[0,1]],"golang.org/x/tools/cmd/auth/authtest.init":[],"golang.org/x/tools/cmd/auth/authtest.main":[],"golang.org/x/tools/cmd/auth/authtest.try":[[]],"golang.org/x/tools/cmd/auth/cookieauth.init":[],"golang.org/x/tools/cmd/auth/cookieauth.main":[],"golang.org/x/tools/cmd/auth/cookieauth.parseCookieFile":[[1],[1]],"golang.org/x/tools/cmd/auth/cookieauth.parseCookieLine":[[0],[0]],"golang.org/x/tools/cmd/auth/gitauth.init":[],"golang.org/x/tools/cmd/auth/gitauth.main":[],"golang.org/x/tools/cmd/auth/netrcauth.init":[],"golang.org/x/tools/cmd/auth/netrcauth.main":[],"golang.org/x/tools/cmd/auth/netrcauth.parseNetrc":[[0]],"golang.org/x/tools/cmd/benchcmp.Correlate":[[0,1],[]],"golang.org/x/tools/cmd/benchcmp.fatal":[],"golang.org/x/tools/cmd/benchcmp.formatNs":[[0]],"golang.org/x/tools/cmd/benchcmp.init":[],"golang.org/x/tools/cmd/benchcmp.lessByDelta":[[0,1]],"golang.org/x/tools/cmd/benchcmp.main":[],"golang.org/x/tools/cmd/benchcmp.main$1":[],"golang.org/x/tools/cmd/benchcmp.parseFile":[[]],"golang.org/x/tools/cmd/benchcmp.selectBest":[],"golang.org/x/tools/cmd/bundle.addImportMap":[],"golang.org/x/tools/cmd/bundle.bundle":[[],[0]],"golang.org/x/tools/cmd/bundle.bundle$1":[],"golang.org/x/tools/cmd/bundle.bundle$2":[[]],"golang.org/x/tools/cmd/bundle.init":[],"golang.org/x/tools/cmd/bundle.init#1":[],"golang.org/x/tools/cmd/bundle.isStandardImportPath":[[]],"golang.org/x/tools/cmd/bundle.main":[],"golang.org/x/tools/cmd/bundle.printComments":[],"golang.org/x/tools/cmd/bundle.printLastComments":[],"golang.org/x/tools/cmd/bundle.printSameLineComment":[[1,3]],"golang.org/x/tools/cmd/bundle.sourceRange":[[0],[0]],"golang.org/x/tools/cmd/bundle.usage":[],"golang.org/x/tools/cmd/callgraph.doCallgraph":[[0,1,2,4,5]],"golang.org/x/tools/cmd/callgraph.doCallgraph$1":[],"golang.org/x/tools/cmd/callgraph.doCallgraph$2":[[]],"golang.org/x/tools/cmd/callgraph.init":[],"golang.org/x/tools/cmd/callgraph.init#1":[],"golang.org/x/tools/cmd/callgraph.init#2":[],"golang.org/x/tools/cmd/callgraph.main":[],"golang.org/x/tools/cmd/callgraph.mainPackages":[[0],[]],"golang.org/x/tools/cmd/compilebench.genSymAbisFile":[[0,1,2]],"golang.org/x/tools/cmd/compilebench.goList":[[],[0]],"golang.org/x/tools/cmd/compilebench.init":[],"golang.org/x/tools/cmd/compilebench.main":[],"golang.org/x/tools/cmd/compilebench.runBuildCmd":[[2,3,4]],"golang.org/x/tools/cmd/compilebench.runCmd":[[1]],"golang.org/x/tools/cmd/compilebench.toolPath":[[0],[]],"golang.org/x/tools/cmd/compilebench.usage":[],"golang.org/x/tools/cmd/cover.annotate":[],"golang.org/x/tools/cmd/cover.atomicCounterStmt":[[0,1]],"golang.org/x/tools/cmd/cover.colors":[[]],"golang.org/x/tools/cmd/cover.findFile":[[0],[0]],"golang.org/x/tools/cmd/cover.findFuncs":[[0],[0]],"golang.org/x/tools/cmd/cover.funcOutput":[[0,1]],"golang.org/x/tools/cmd/cover.hasFuncLiteral":[[],[]],"golang.org/x/tools/cmd/cover.htmlGen":[[0]],"golang.org/x/tools/cmd/cover.htmlOutput":[[0,1]],"golang.org/x/tools/cmd/cover.incCounterStmt":[[1]],"golang.org/x/tools/cmd/cover.init":[],"golang.org/x/tools/cmd/cover.initialComments":[[0]],"golang.org/x/tools/cmd/cover.main":[],"golang.org/x/tools/cmd/cover.parseFlags":[[]],"golang.org/x/tools/cmd/cover.percentCovered":[[0]],"golang.org/x/tools/cmd/cover.rgb":[[]],"golang.org/x/tools/cmd/cover.setCounterStmt":[[1]],"golang.org/x/tools/cmd/cover.startBrowser":[[0]],"golang.org/x/tools/cmd/cover.trimComments":[[0]],"golang.org/x/tools/cmd/cover.unquote":[[0]],"golang.org/x/tools/cmd/cover.usage":[],"golang.org/x/tools/cmd/digraph.digraph":[[0,1]],"golang.org/x/tools/cmd/digraph.init":[],"golang.org/x/tools/cmd/digraph.main":[],"golang.org/x/tools/cmd/digraph.parse":[[],[0]],"golang.org/x/tools/cmd/digraph.quotedLength":[[],[]],"golang.org/x/tools/cmd/digraph.quotedLength$1":[[]],"golang.org/x/tools/cmd/digraph.split":[[],[]],"golang.org/x/tools/cmd/digraph.usage":[],"golang.org/x/tools/cmd/eg.doMain":[[]],"golang.org/x/tools/cmd/eg.doMain$1":[],"golang.org/x/tools/cmd/eg.init":[],"golang.org/x/tools/cmd/eg.main":[],"golang.org/x/tools/cmd/file2fuzz.convert":[[0,1]],"golang.org/x/tools/cmd/file2fuzz.convert$1":[[]],"golang.org/x/tools/cmd/file2fuzz.convert$2":[[]],"golang.org/x/tools/cmd/file2fuzz.dirWriter":[[]],"golang.org/x/tools/cmd/file2fuzz.dirWriter$1":[[]],"golang.org/x/tools/cmd/file2fuzz.encodeByteSlice":[[]],"golang.org/x/tools/cmd/file2fuzz.init":[],"golang.org/x/tools/cmd/file2fuzz.main":[],"golang.org/x/tools/cmd/file2fuzz.usage":[],"golang.org/x/tools/cmd/fiximports.fiximports":[[]],"golang.org/x/tools/cmd/fiximports.fiximports$1":[],"golang.org/x/tools/cmd/fiximports.fiximports$2":[],"golang.org/x/tools/cmd/fiximports.init":[],"golang.org/x/tools/cmd/fiximports.init$1":[[]],"golang.org/x/tools/cmd/fiximports.list":[[],[0]],"golang.org/x/tools/cmd/fiximports.main":[],"golang.org/x/tools/cmd/fiximports.rewriteFile":[[0]],"golang.org/x/tools/cmd/fiximports.rewritePackage":[[]],"golang.org/x/tools/cmd/fiximports.shortPath":[[0]],"golang.org/x/tools/cmd/getgo.appendToFile":[[0]],"golang.org/x/tools/cmd/getgo.appendToPATH":[[]],"golang.org/x/tools/cmd/getgo.checkOthers":[[]],"golang.org/x/tools/cmd/getgo.checkStringExistsFile":[[],[0]],"golang.org/x/tools/cmd/getgo.chooseVersion":[[]],"golang.org/x/tools/cmd/getgo.currentShell":[[]],"golang.org/x/tools/cmd/getgo.downloadGo":[[]],"golang.org/x/tools/cmd/getgo.downloadGoVersion":[[3]],"golang.org/x/tools/cmd/getgo.findGo":[[],[0,1]],"golang.org/x/tools/cmd/getgo.getHomeDir":[[],[]],"golang.org/x/tools/cmd/getgo.getLatestGoVersion":[[],[]],"golang.org/x/tools/cmd/getgo.init":[],"golang.org/x/tools/cmd/getgo.init$1":[[]],"golang.org/x/tools/cmd/getgo.init$2":[[]],"golang.org/x/tools/cmd/getgo.isInPATH":[[]],"golang.org/x/tools/cmd/getgo.isShell":[[]],"golang.org/x/tools/cmd/getgo.isWindowsXP":[[]],"golang.org/x/tools/cmd/getgo.main":[],"golang.org/x/tools/cmd/getgo.main$1":[],"golang.org/x/tools/cmd/getgo.persistEnvChangesForSession":[[]],"golang.org/x/tools/cmd/getgo.persistEnvVar":[[]],"golang.org/x/tools/cmd/getgo.persistEnvVarWindows":[[]],"golang.org/x/tools/cmd/getgo.prompt":[[2],[]],"golang.org/x/tools/cmd/getgo.prompt$1":[],"golang.org/x/tools/cmd/getgo.runCommand":[[],[0,1,2]],"golang.org/x/tools/cmd/getgo.setupGOPATH":[[]],"golang.org/x/tools/cmd/getgo.shellConfigFile":[[],[]],"golang.org/x/tools/cmd/getgo.unpack":[[0,1,3]],"golang.org/x/tools/cmd/getgo.unpackTar":[[0,1]],"golang.org/x/tools/cmd/getgo.unpackZip":[[0,1]],"golang.org/x/tools/cmd/getgo.verbosef":[],"golang.org/x/tools/cmd/getgo.welcome":[[]],"golang.org/x/tools/cmd/getgo.whichGo":[[],[0]],"golang.org/x/tools/cmd/getgo/server.cacheBust":[[]],"golang.org/x/tools/cmd/getgo/server.containsIgnoreCase":[[]],"golang.org/x/tools/cmd/getgo/server.handler":[],"golang.org/x/tools/cmd/getgo/server.init":[],"golang.org/x/tools/cmd/getgo/server.main":[],"golang.org/x/tools/cmd/go-contrib-init.checkCLA":[],"golang.org/x/tools/cmd/go-contrib-init.checkGitCodeReview":[],"golang.org/x/tools/cmd/go-contrib-init.checkGitOrigin":[],"golang.org/x/tools/cmd/go-contrib-init.checkGoroot":[],"golang.org/x/tools/cmd/go-contrib-init.checkWorkingDir":[],"golang.org/x/tools/cmd/go-contrib-init.cmdErr":[[]],"golang.org/x/tools/cmd/go-contrib-init.cookiesFile":[[]],"golang.org/x/tools/cmd/go-contrib-init.detectrepo":[[]],"golang.org/x/tools/cmd/go-contrib-init.exists":[[],[0]],"golang.org/x/tools/cmd/go-contrib-init.expandUser":[[0]],"golang.org/x/tools/cmd/go-contrib-init.expandUser$1":[[]],"golang.org/x/tools/cmd/go-contrib-init.firstGoPath":[[]],"golang.org/x/tools/cmd/go-contrib-init.inGoPath":[[]],"golang.org/x/tools/cmd/go-contrib-init.init":[],"golang.org/x/tools/cmd/go-contrib-init.main":[],"golang.org/x/tools/cmd/godex.absInt":[[0]],"golang.org/x/tools/cmd/godex.combinedMethodSet":[[0]],"golang.org/x/tools/cmd/godex.floatString":[[]],"golang.org/x/tools/cmd/godex.genPrefixes":[],"golang.org/x/tools/cmd/godex.init":[],"golang.org/x/tools/cmd/godex.init#1":[],"golang.org/x/tools/cmd/godex.init#2":[],"golang.org/x/tools/cmd/godex.init#3":[],"golang.org/x/tools/cmd/godex.isAlias":[[0]],"golang.org/x/tools/cmd/godex.logf":[],"golang.org/x/tools/cmd/godex.lookup":[[]],"golang.org/x/tools/cmd/godex.main":[],"golang.org/x/tools/cmd/godex.main$1":[[0]],"golang.org/x/tools/cmd/godex.methodsFor":[[0],[0]],"golang.org/x/tools/cmd/godex.print":[],"golang.org/x/tools/cmd/godex.protect":[[0]],"golang.org/x/tools/cmd/godex.register":[],"golang.org/x/tools/cmd/godex.report":[],"golang.org/x/tools/cmd/godex.splitPathIdent":[[0],[0]],"golang.org/x/tools/cmd/godex.tryPrefixes":[[0,1],[]],"golang.org/x/tools/cmd/godex.usage":[],"golang.org/x/tools/cmd/godex.valString":[[0]],"golang.org/x/tools/cmd/godex.walkDir":[],"golang.org/x/tools/cmd/goimports.bufferedFileWriter":[[],[]],"golang.org/x/tools/cmd/goimports.bufferedFileWriter$1":[],"golang.org/x/tools/cmd/goimports.diff":[[],[2]],"golang.org/x/tools/cmd/goimports.doTrace":[[]],"golang.org/x/tools/cmd/goimports.doTrace$1":[],"golang.org/x/tools/cmd/goimports.doTrace$2":[],"golang.org/x/tools/cmd/goimports.gofmtMain":[],"golang.org/x/tools/cmd/goimports.gofmtMain$1":[],"golang.org/x/tools/cmd/goimports.init":[],"golang.org/x/tools/cmd/goimports.init#1":[],"golang.org/x/tools/cmd/goimports.init$1":[[]],"golang.org/x/tools/cmd/goimports.isDir":[[]],"golang.org/x/tools/cmd/goimports.isFile":[[]],"golang.org/x/tools/cmd/goimports.isGoFile":[[0]],"golang.org/x/tools/cmd/goimports.main":[],"golang.org/x/tools/cmd/goimports.processFile":[[0,1,2]],"golang.org/x/tools/cmd/goimports.replaceTempFilename":[[0],[1]],"golang.org/x/tools/cmd/goimports.report":[],"golang.org/x/tools/cmd/goimports.usage":[],"golang.org/x/tools/cmd/goimports.visitFile":[[]],"golang.org/x/tools/cmd/goimports.walkDir":[],"golang.org/x/tools/cmd/goimports.writeTempFile":[[],[0,1]],"golang.org/x/tools/cmd/gomvpkg.init":[],"golang.org/x/tools/cmd/gomvpkg.init#1":[],"golang.org/x/tools/cmd/gomvpkg.main":[],"golang.org/x/tools/cmd/gorename.init":[],"golang.org/x/tools/cmd/gorename.init#1":[],"golang.org/x/tools/cmd/gorename.main":[],"golang.org/x/tools/cmd/gotype.SizesFor":[[1]],"golang.org/x/tools/cmd/gotype.checkPkgFiles":[],"golang.org/x/tools/cmd/gotype.checkPkgFiles$1":[],"golang.org/x/tools/cmd/gotype.checkPkgFiles$2":[],"golang.org/x/tools/cmd/gotype.getPkgFiles":[[],[0]],"golang.org/x/tools/cmd/gotype.init":[],"golang.org/x/tools/cmd/gotype.initParserMode":[],"golang.org/x/tools/cmd/gotype.main":[],"golang.org/x/tools/cmd/gotype.parse":[[],[0,1]],"golang.org/x/tools/cmd/gotype.parseDir":[[],[0]],"golang.org/x/tools/cmd/gotype.parseFiles":[[],[]],"golang.org/x/tools/cmd/gotype.parseFiles$1":[],"golang.org/x/tools/cmd/gotype.parseStdin":[[],[]],"golang.org/x/tools/cmd/gotype.printStats":[],"golang.org/x/tools/cmd/gotype.printStats$1":[[]],"golang.org/x/tools/cmd/gotype.report":[],"golang.org/x/tools/cmd/gotype.usage":[],"golang.org/x/tools/cmd/goyacc.ASSOC":[[0]],"golang.org/x/tools/cmd/goyacc.PLEVEL":[[0]],"golang.org/x/tools/cmd/goyacc.SETASC":[[0,1]],"golang.org/x/tools/cmd/goyacc.SETPLEV":[[0,1]],"golang.org/x/tools/cmd/goyacc.SETTYPE":[[0,1]],"golang.org/x/tools/cmd/goyacc.TYPE":[[0]],"golang.org/x/tools/cmd/goyacc.addActions":[[0,1]],"golang.org/x/tools/cmd/goyacc.aoutput":[],"golang.org/x/tools/cmd/goyacc.apack":[[]],"golang.org/x/tools/cmd/goyacc.arout":[],"golang.org/x/tools/cmd/goyacc.arrayOutColumns":[],"golang.org/x/tools/cmd/goyacc.aryeq":[[]],"golang.org/x/tools/cmd/goyacc.aryfil":[],"golang.org/x/tools/cmd/goyacc.bitset":[[0,1]],"golang.org/x/tools/cmd/goyacc.callopt":[],"golang.org/x/tools/cmd/goyacc.cempty":[],"golang.org/x/tools/cmd/goyacc.chcopy":[[0]],"golang.org/x/tools/cmd/goyacc.chfind":[[]],"golang.org/x/tools/cmd/goyacc.closure":[],"golang.org/x/tools/cmd/goyacc.cpfir":[],"golang.org/x/tools/cmd/goyacc.cpres":[],"golang.org/x/tools/cmd/goyacc.cpyact":[],"golang.org/x/tools/cmd/goyacc.cpycode":[],"golang.org/x/tools/cmd/goyacc.cpyunion":[],"golang.org/x/tools/cmd/goyacc.create":[[]],"golang.org/x/tools/cmd/goyacc.defin":[[]],"golang.org/x/tools/cmd/goyacc.emitcode":[],"golang.org/x/tools/cmd/goyacc.errorf":[],"golang.org/x/tools/cmd/goyacc.exit":[],"golang.org/x/tools/cmd/goyacc.fdtype":[[]],"golang.org/x/tools/cmd/goyacc.getrune":[[0]],"golang.org/x/tools/cmd/goyacc.gettok":[[]],"golang.org/x/tools/cmd/goyacc.getword":[],"golang.org/x/tools/cmd/goyacc.gin":[],"golang.org/x/tools/cmd/goyacc.go2gen":[],"golang.org/x/tools/cmd/goyacc.go2out":[],"golang.org/x/tools/cmd/goyacc.gofmt":[],"golang.org/x/tools/cmd/goyacc.hideprod":[],"golang.org/x/tools/cmd/goyacc.init":[],"golang.org/x/tools/cmd/goyacc.init#1":[],"golang.org/x/tools/cmd/goyacc.isPackageClause":[[0]],"golang.org/x/tools/cmd/goyacc.isdigit":[[0]],"golang.org/x/tools/cmd/goyacc.isword":[[0]],"golang.org/x/tools/cmd/goyacc.lerrorf":[],"golang.org/x/tools/cmd/goyacc.lines":[[0]],"golang.org/x/tools/cmd/goyacc.main":[],"golang.org/x/tools/cmd/goyacc.minMax":[[0],[0]],"golang.org/x/tools/cmd/goyacc.minType":[[]],"golang.org/x/tools/cmd/goyacc.minType$1":[],"golang.org/x/tools/cmd/goyacc.mkset":[[]],"golang.org/x/tools/cmd/goyacc.moreprod":[],"golang.org/x/tools/cmd/goyacc.nxti":[[]],"golang.org/x/tools/cmd/goyacc.open":[[]],"golang.org/x/tools/cmd/goyacc.openup":[],"golang.org/x/tools/cmd/goyacc.osummary":[],"golang.org/x/tools/cmd/goyacc.others":[],"golang.org/x/tools/cmd/goyacc.output":[],"golang.org/x/tools/cmd/goyacc.precftn":[],"golang.org/x/tools/cmd/goyacc.prlook":[],"golang.org/x/tools/cmd/goyacc.putitem":[],"golang.org/x/tools/cmd/goyacc.runMachine":[[],[]],"golang.org/x/tools/cmd/goyacc.setbit":[],"golang.org/x/tools/cmd/goyacc.setunion":[[]],"golang.org/x/tools/cmd/goyacc.setup":[],"golang.org/x/tools/cmd/goyacc.skipcom":[[]],"golang.org/x/tools/cmd/goyacc.skipspace":[[0]],"golang.org/x/tools/cmd/goyacc.stagen":[],"golang.org/x/tools/cmd/goyacc.state":[[]],"golang.org/x/tools/cmd/goyacc.stin":[],"golang.org/x/tools/cmd/goyacc.summary":[],"golang.org/x/tools/cmd/goyacc.symnam":[[]],"golang.org/x/tools/cmd/goyacc.ungetrune":[],"golang.org/x/tools/cmd/goyacc.usage":[],"golang.org/x/tools/cmd/goyacc.writecode":[],"golang.org/x/tools/cmd/goyacc.writem":[[]],"golang.org/x/tools/cmd/goyacc.wrstate":[],"golang.org/x/tools/cmd/guru.Run":[[0,1]],"golang.org/x/tools/cmd/guru.accessibleFields":[[]],"golang.org/x/tools/cmd/guru.accessibleFields$1":[[0]],"golang.org/x/tools/cmd/guru.accessibleFields$2":[],"golang.org/x/tools/cmd/guru.accessibleMethods":[[0]],"golang.org/x/tools/cmd/guru.allowErrors":[],"golang.org/x/tools/cmd/guru.allowErrors$1":[],"golang.org/x/tools/cmd/guru.appendNames":[[0,1]],"golang.org/x/tools/cmd/guru.callees":[[0]],"golang.org/x/tools/cmd/guru.callers":[[0]],"golang.org/x/tools/cmd/guru.callstack":[[0]],"golang.org/x/tools/cmd/guru.callstack$1":[[0]],"golang.org/x/tools/cmd/guru.chanOps":[[0]],"golang.org/x/tools/cmd/guru.classify":[[],[]],"golang.org/x/tools/cmd/guru.clearInfoFields":[],"golang.org/x/tools/cmd/guru.containsHardErrors":[[]],"golang.org/x/tools/cmd/guru.definition":[[0]],"golang.org/x/tools/cmd/guru.deref":[[0]],"golang.org/x/tools/cmd/guru.describe":[[0]],"golang.org/x/tools/cmd/guru.describePackage":[[0,1],[1]],"golang.org/x/tools/cmd/guru.describeStmt":[[0,1],[]],"golang.org/x/tools/cmd/guru.describeType":[[0,1],[1]],"golang.org/x/tools/cmd/guru.describeValue":[[0,1],[1]],"golang.org/x/tools/cmd/guru.directCallsTo":[[]],"golang.org/x/tools/cmd/guru.entryPoints":[[0]],"golang.org/x/tools/cmd/guru.fastQueryPos":[[1],[1]],"golang.org/x/tools/cmd/guru.fileOffsetToPos":[[0,1],[0,2],[]],"golang.org/x/tools/cmd/guru.findCallSite":[[0],[]],"golang.org/x/tools/cmd/guru.findCallees":[[0,1],[]],"golang.org/x/tools/cmd/guru.findInterestingNode":[[1],[]],"golang.org/x/tools/cmd/guru.findObject":[[1]],"golang.org/x/tools/cmd/guru.findObject$1":[[0]],"golang.org/x/tools/cmd/guru.findOp":[[0]],"golang.org/x/tools/cmd/guru.findPackageMember":[[],[],[0,2,3,4]],"golang.org/x/tools/cmd/guru.findVisibleConsts":[[0]],"golang.org/x/tools/cmd/guru.findVisibleErrs":[[0]],"golang.org/x/tools/cmd/guru.formatMember":[[]],"golang.org/x/tools/cmd/guru.fprintf":[],"golang.org/x/tools/cmd/guru.freevars":[[0]],"golang.org/x/tools/cmd/guru.freevars$1":[[0]],"golang.org/x/tools/cmd/guru.freevars$2":[[0]],"golang.org/x/tools/cmd/guru.freevars$3":[[]],"golang.org/x/tools/cmd/guru.globalReferrers":[[]],"golang.org/x/tools/cmd/guru.globalReferrers$1":[[0]],"golang.org/x/tools/cmd/guru.globalReferrers$2":[],"golang.org/x/tools/cmd/guru.globalReferrersPkgLevel":[[]],"golang.org/x/tools/cmd/guru.globalReferrersPkgLevel$1":[],"golang.org/x/tools/cmd/guru.globalReferrersPkgLevel$1$1":[[]],"golang.org/x/tools/cmd/guru.globalReferrersPkgLevel$1$2":[[]],"golang.org/x/tools/cmd/guru.guessImportPath":[[1],[0],[0,1]],"golang.org/x/tools/cmd/guru.implements":[[0]],"golang.org/x/tools/cmd/guru.importQueryPackage":[[0],[0,1]],"golang.org/x/tools/cmd/guru.importQueryPackage$1":[[0]],"golang.org/x/tools/cmd/guru.init":[],"golang.org/x/tools/cmd/guru.init#1":[],"golang.org/x/tools/cmd/guru.isAccessibleFrom":[[0,1]],"golang.org/x/tools/cmd/guru.isAlias":[[0]],"golang.org/x/tools/cmd/guru.isInterface":[[]],"golang.org/x/tools/cmd/guru.lessPos":[[0,1,2]],"golang.org/x/tools/cmd/guru.loadWithSoftErrors":[[0],[0]],"golang.org/x/tools/cmd/guru.main":[],"golang.org/x/tools/cmd/guru.main$1":[],"golang.org/x/tools/cmd/guru.main$2":[],"golang.org/x/tools/cmd/guru.main$3":[],"golang.org/x/tools/cmd/guru.main$3$1":[],"golang.org/x/tools/cmd/guru.makeImplementsType":[[0,1]],"golang.org/x/tools/cmd/guru.makeImplementsTypes":[[0,1]],"golang.org/x/tools/cmd/guru.methodsToSerial":[[1,2]],"golang.org/x/tools/cmd/guru.outputUses":[],"golang.org/x/tools/cmd/guru.packageForQualIdent":[[0]],"golang.org/x/tools/cmd/guru.packageReferrers":[[]],"golang.org/x/tools/cmd/guru.packageReferrers$1":[[0]],"golang.org/x/tools/cmd/guru.packageReferrers$2":[],"golang.org/x/tools/cmd/guru.parseOctothorpDecimal":[[0]],"golang.org/x/tools/cmd/guru.parsePos":[[0],[0],[0],[0]],"golang.org/x/tools/cmd/guru.parseQueryPos":[[0,1],[1]],"golang.org/x/tools/cmd/guru.parseQueryPos$1":[[]],"golang.org/x/tools/cmd/guru.pathToString":[[]],"golang.org/x/tools/cmd/guru.peers":[[0]],"golang.org/x/tools/cmd/guru.pkgContainsFile":[[]],"golang.org/x/tools/cmd/guru.pointsto":[[0]],"golang.org/x/tools/cmd/guru.prefixLen":[[]],"golang.org/x/tools/cmd/guru.printFields":[],"golang.org/x/tools/cmd/guru.printHelp":[],"golang.org/x/tools/cmd/guru.printLabels":[],"golang.org/x/tools/cmd/guru.printMethods":[],"golang.org/x/tools/cmd/guru.printNamedTypes":[],"golang.org/x/tools/cmd/guru.printNode":[[]],"golang.org/x/tools/cmd/guru.ptrAnalysis":[[0]],"golang.org/x/tools/cmd/guru.readFile":[[2],[1,2]],"golang.org/x/tools/cmd/guru.referrers":[[0]],"golang.org/x/tools/cmd/guru.runPTA":[[0,1],[]],"golang.org/x/tools/cmd/guru.runPTA$1":[],"golang.org/x/tools/cmd/guru.sameFile":[[]],"golang.org/x/tools/cmd/guru.sameObj":[[0,1]],"golang.org/x/tools/cmd/guru.segments":[[0]],"golang.org/x/tools/cmd/guru.setPTAScope":[[]],"golang.org/x/tools/cmd/guru.setupPTA":[[0,1,2,3],[]],"golang.org/x/tools/cmd/guru.ssaValueForExpr":[[0,1],[0,1],[0,1]],"golang.org/x/tools/cmd/guru.ssaValueForIdent":[[0,1,2],[0,1],[2]],"golang.org/x/tools/cmd/guru.toJSON":[[]],"golang.org/x/tools/cmd/guru.tokenOf":[[]],"golang.org/x/tools/cmd/guru.typeKind":[[]],"golang.org/x/tools/cmd/guru.unparen":[[0]],"golang.org/x/tools/cmd/guru.usesOf":[[1]],"golang.org/x/tools/cmd/guru.what":[[0]],"golang.org/x/tools/cmd/guru.what$1":[[0,1],[]],"golang.org/x/tools/cmd/guru.what$2":[[]],"golang.org/x/tools/cmd/guru.whicherrs":[[0]],"golang.org/x/tools/cmd/guru.whicherrs$1":[],"golang.org/x/tools/cmd/guru/serial.init":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-driver.init":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-driver.main":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-driver.setupTunables":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-driver.usage":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-driver.verb":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.binaryName":[[]],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.docmd":[[]],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.docmdout":[[]],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.fatal":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.init":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.main":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.usage":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.verb":[],"golang.org/x/tools/cmd/signature-fuzzer/fuzz-runner.warn":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.DefaultTunables":[[]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.Generate":[[0]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.NewWrapRand":[[0,1]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.ParseMaskString":[[0],[0,1]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.SetTunables":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.checkTunables":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.checkableElements":[[0]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.containedParms":[[]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.containedParms$1":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.containedParms$2":[[]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.genDeref":[[0],[]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.init":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.makeDir":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.mkPointerParm":[[0]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.runImports":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.shouldEmitFP":[[]],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.verb":[],"golang.org/x/tools/cmd/signature-fuzzer/internal/fuzz-generator.writeCom":[],"golang.org/x/tools/cmd/splitdwarf.CreateMmapFile":[[],[]],"golang.org/x/tools/cmd/splitdwarf.contentuuid":[[]],"golang.org/x/tools/cmd/splitdwarf.describe":[],"golang.org/x/tools/cmd/splitdwarf.fail":[],"golang.org/x/tools/cmd/splitdwarf.init":[],"golang.org/x/tools/cmd/splitdwarf.main":[],"golang.org/x/tools/cmd/splitdwarf.main$1":[],"golang.org/x/tools/cmd/splitdwarf.main$2":[[]],"golang.org/x/tools/cmd/splitdwarf.main$3":[],"golang.org/x/tools/cmd/splitdwarf.note":[],"golang.org/x/tools/cmd/splitdwarf/internal/macho.NewFatFile":[[],[0]],"golang.org/x/tools/cmd/splitdwarf/internal/macho.NewFile":[[],[0]],"golang.org/x/tools/cmd/splitdwarf/internal/macho.Open":[[],[0]],"golang.org/x/tools/cmd/splitdwarf/internal/macho.OpenFat":[[],[0]],"golang.org/x/tools/cmd/splitdwarf/internal/macho.RoundUp":[[0,1]],"golang.org/x/tools/cmd/splitdwarf/internal/macho.cstring":[[0]],"golang.org/x/tools/cmd/splitdwarf/internal/macho.formatError":[[0]],"golang.org/x/tools/cmd/splitdwarf/internal/macho.init":[],"golang.org/x/tools/cmd/splitdwarf/internal/macho.putAtMost16Bytes":[],"golang.org/x/tools/cmd/splitdwarf/internal/macho.stringName":[[0,1]],"golang.org/x/tools/cmd/ssadump.doMain":[[]],"golang.org/x/tools/cmd/ssadump.init":[],"golang.org/x/tools/cmd/ssadump.init#1":[],"golang.org/x/tools/cmd/ssadump.main":[],"golang.org/x/tools/cmd/ssadump.newStringListValue":[[0,1]],"golang.org/x/tools/cmd/stress.defaultPrefix":[[]],"golang.org/x/tools/cmd/stress.init":[],"golang.org/x/tools/cmd/stress.init#1":[],"golang.org/x/tools/cmd/stress.init#1$1":[],"golang.org/x/tools/cmd/stress.main":[],"golang.org/x/tools/cmd/stress.main$1":[],"golang.org/x/tools/cmd/stress.main$1$1":[],"golang.org/x/tools/cmd/stringer.Usage":[],"golang.org/x/tools/cmd/stringer.init":[],"golang.org/x/tools/cmd/stringer.isDirectory":[[]],"golang.org/x/tools/cmd/stringer.main":[],"golang.org/x/tools/cmd/stringer.splitIntoRuns":[[0]],"golang.org/x/tools/cmd/stringer.usize":[[]],"golang.org/x/tools/cmd/toolstash.canCmp":[[0]],"golang.org/x/tools/cmd/toolstash.checkShouldSave":[],"golang.org/x/tools/cmd/toolstash.cmpRun":[[1],[]],"golang.org/x/tools/cmd/toolstash.compareLogs":[[]],"golang.org/x/tools/cmd/toolstash.compareTool":[],"golang.org/x/tools/cmd/toolstash.cp":[],"golang.org/x/tools/cmd/toolstash.init":[],"golang.org/x/tools/cmd/toolstash.injectflags":[[0]],"golang.org/x/tools/cmd/toolstash.isBinTool":[[0]],"golang.org/x/tools/cmd/toolstash.main":[],"golang.org/x/tools/cmd/toolstash.restore":[],"golang.org/x/tools/cmd/toolstash.runCmd":[[],[0,2]],"golang.org/x/tools/cmd/toolstash.runCmd$1":[],"golang.org/x/tools/cmd/toolstash.sameObject":[[]],"golang.org/x/tools/cmd/toolstash.save":[],"golang.org/x/tools/cmd/toolstash.shouldSave":[[]],"golang.org/x/tools/cmd/toolstash.skipVersion":[[]],"golang.org/x/tools/cmd/toolstash.usage":[],"golang.org/x/tools/container/intsets.init":[],"golang.org/x/tools/container/intsets.nlz":[[0]],"golang.org/x/tools/container/intsets.ntz":[[]],"golang.org/x/tools/container/intsets.offsetAndBitIndex":[[0],[0]],"golang.org/x/tools/container/intsets.popcount":[[0]],"golang.org/x/tools/container/intsets.wordMask":[[0],[0]],"golang.org/x/tools/copyright.checkCopyright":[[],[0]],"golang.org/x/tools/copyright.checkCopyright$1":[[0,2]],"golang.org/x/tools/copyright.checkFile":[[],[1]],"golang.org/x/tools/copyright.init":[],"golang.org/x/tools/copyright.isGenerated":[[]],"golang.org/x/tools/cover.ParseProfiles":[[],[0]],"golang.org/x/tools/cover.ParseProfilesFromReader":[[0],[0]],"golang.org/x/tools/cover.init":[],"golang.org/x/tools/cover.parseLine":[[0],[0],[0]],"golang.org/x/tools/cover.seekBack":[[0],[2],[0,1,3]],"golang.org/x/tools/go/analysis.Validate":[[0]],"golang.org/x/tools/go/analysis.Validate$1":[[0]],"golang.org/x/tools/go/analysis.init":[],"golang.org/x/tools/go/analysis.init#1":[],"golang.org/x/tools/go/analysis.init#1$1":[],"golang.org/x/tools/go/analysis.init#1$2":[[0]],"golang.org/x/tools/go/analysis.validIdent":[[0]],"golang.org/x/tools/go/analysis/analysistest.Run":[[1,2]],"golang.org/x/tools/go/analysis/analysistest.RunWithSuggestedFixes":[[1,2]],"golang.org/x/tools/go/analysis/analysistest.WriteFiles":[[],[],[0]],"golang.org/x/tools/go/analysis/analysistest.WriteFiles$1":[],"golang.org/x/tools/go/analysis/analysistest.check":[],"golang.org/x/tools/go/analysis/analysistest.check$1":[],"golang.org/x/tools/go/analysis/analysistest.check$2":[],"golang.org/x/tools/go/analysis/analysistest.check$3":[[]],"golang.org/x/tools/go/analysis/analysistest.init":[],"golang.org/x/tools/go/analysis/analysistest.init$1":[[]],"golang.org/x/tools/go/analysis/analysistest.loadPackages":[[1],[1,2]],"golang.org/x/tools/go/analysis/analysistest.parseExpectations":[[0],[0],[0]],"golang.org/x/tools/go/analysis/analysistest.parseExpectations$1":[],"golang.org/x/tools/go/analysis/analysistest.parseExpectations$2":[[],[0]],"golang.org/x/tools/go/analysis/analysistest.sanitize":[[1]],"golang.org/x/tools/go/analysis/internal/analysisflags.Help":[],"golang.org/x/tools/go/analysis/internal/analysisflags.Help$1":[[]],"golang.org/x/tools/go/analysis/internal/analysisflags.Help$2":[],"golang.org/x/tools/go/analysis/internal/analysisflags.Help$3":[],"golang.org/x/tools/go/analysis/internal/analysisflags.Parse":[[0]],"golang.org/x/tools/go/analysis/internal/analysisflags.Parse$1":[],"golang.org/x/tools/go/analysis/internal/analysisflags.PrintPlain":[],"golang.org/x/tools/go/analysis/internal/analysisflags.addVersionFlag":[],"golang.org/x/tools/go/analysis/internal/analysisflags.expand":[[]],"golang.org/x/tools/go/analysis/internal/analysisflags.expand$1":[],"golang.org/x/tools/go/analysis/internal/analysisflags.init":[],"golang.org/x/tools/go/analysis/internal/analysisflags.printFlags":[],"golang.org/x/tools/go/analysis/internal/analysisflags.printFlags$1":[],"golang.org/x/tools/go/analysis/internal/analysisflags.triStateFlag":[[1]],"golang.org/x/tools/go/analysis/internal/checker.RegisterFlags":[],"golang.org/x/tools/go/analysis/internal/checker.Run":[[]],"golang.org/x/tools/go/analysis/internal/checker.Run$1":[],"golang.org/x/tools/go/analysis/internal/checker.Run$2":[],"golang.org/x/tools/go/analysis/internal/checker.TestAnalyzer":[[0,1]],"golang.org/x/tools/go/analysis/internal/checker.analyze":[[0,1]],"golang.org/x/tools/go/analysis/internal/checker.analyze$1":[[0,1]],"golang.org/x/tools/go/analysis/internal/checker.applyFixes":[],"golang.org/x/tools/go/analysis/internal/checker.applyFixes$1":[[0]],"golang.org/x/tools/go/analysis/internal/checker.applyFixes$2":[[0,1]],"golang.org/x/tools/go/analysis/internal/checker.applyFixes$3":[[0]],"golang.org/x/tools/go/analysis/internal/checker.applyFixes$4":[],"golang.org/x/tools/go/analysis/internal/checker.codeFact":[[0],[0]],"golang.org/x/tools/go/analysis/internal/checker.dbg":[[]],"golang.org/x/tools/go/analysis/internal/checker.execAll":[],"golang.org/x/tools/go/analysis/internal/checker.execAll$1":[],"golang.org/x/tools/go/analysis/internal/checker.exportedFrom":[[0,1]],"golang.org/x/tools/go/analysis/internal/checker.factType":[[0]],"golang.org/x/tools/go/analysis/internal/checker.inheritFacts":[],"golang.org/x/tools/go/analysis/internal/checker.init":[],"golang.org/x/tools/go/analysis/internal/checker.load":[[],[0]],"golang.org/x/tools/go/analysis/internal/checker.loadingError":[[]],"golang.org/x/tools/go/analysis/internal/checker.loadingError$1":[],"golang.org/x/tools/go/analysis/internal/checker.needFacts":[[]],"golang.org/x/tools/go/analysis/internal/checker.printDiagnostics":[[]],"golang.org/x/tools/go/analysis/internal/checker.printDiagnostics$1":[],"golang.org/x/tools/go/analysis/internal/checker.printDiagnostics$2":[],"golang.org/x/tools/go/analysis/internal/checker.printDiagnostics$3":[],"golang.org/x/tools/go/analysis/internal/checker.printDiagnostics$4":[[]],"golang.org/x/tools/go/analysis/internal/facts.Decode":[[0],[0]],"golang.org/x/tools/go/analysis/internal/facts.Decode$1":[],"golang.org/x/tools/go/analysis/internal/facts.importMap":[[]],"golang.org/x/tools/go/analysis/internal/facts.importMap$1":[[]],"golang.org/x/tools/go/analysis/internal/facts.importMap$2":[],"golang.org/x/tools/go/analysis/internal/facts.init":[],"golang.org/x/tools/go/analysis/multichecker.Main":[],"golang.org/x/tools/go/analysis/multichecker.init":[],"golang.org/x/tools/go/analysis/passes/asmdecl.additionalArches":[[]],"golang.org/x/tools/go/analysis/passes/asmdecl.appendComponentsRecursive":[[0,1,2,3,4]],"golang.org/x/tools/go/analysis/passes/asmdecl.asmCheckVar":[],"golang.org/x/tools/go/analysis/passes/asmdecl.asmKindForType":[[1]],"golang.org/x/tools/go/analysis/passes/asmdecl.asmParseDecl":[[]],"golang.org/x/tools/go/analysis/passes/asmdecl.asmParseDecl$1":[],"golang.org/x/tools/go/analysis/passes/asmdecl.componentsOfType":[[0,1]],"golang.org/x/tools/go/analysis/passes/asmdecl.init":[],"golang.org/x/tools/go/analysis/passes/asmdecl.init#1":[],"golang.org/x/tools/go/analysis/passes/asmdecl.newComponent":[[0,1,2,3,4,5]],"golang.org/x/tools/go/analysis/passes/asmdecl.run":[[],[0]],"golang.org/x/tools/go/analysis/passes/asmdecl.run$1":[],"golang.org/x/tools/go/analysis/passes/asmdecl.run$2":[[0],[0]],"golang.org/x/tools/go/analysis/passes/asmdecl.run$3":[],"golang.org/x/tools/go/analysis/passes/assign.init":[],"golang.org/x/tools/go/analysis/passes/assign.run":[[],[]],"golang.org/x/tools/go/analysis/passes/assign.run$1":[],"golang.org/x/tools/go/analysis/passes/atomic.checkAtomicAddAssignment":[],"golang.org/x/tools/go/analysis/passes/atomic.checkAtomicAddAssignment$1":[[]],"golang.org/x/tools/go/analysis/passes/atomic.init":[],"golang.org/x/tools/go/analysis/passes/atomic.run":[[],[]],"golang.org/x/tools/go/analysis/passes/atomic.run$1":[],"golang.org/x/tools/go/analysis/passes/atomicalign.check64BitAlignment":[],"golang.org/x/tools/go/analysis/passes/atomicalign.init":[],"golang.org/x/tools/go/analysis/passes/atomicalign.run":[[],[]],"golang.org/x/tools/go/analysis/passes/atomicalign.run$1":[],"golang.org/x/tools/go/analysis/passes/bools.hasSideEffects":[[]],"golang.org/x/tools/go/analysis/passes/bools.hasSideEffects$1":[[]],"golang.org/x/tools/go/analysis/passes/bools.init":[],"golang.org/x/tools/go/analysis/passes/bools.run":[[],[]],"golang.org/x/tools/go/analysis/passes/bools.run$1":[],"golang.org/x/tools/go/analysis/passes/bools.unparen":[[0]],"golang.org/x/tools/go/analysis/passes/buildssa.init":[],"golang.org/x/tools/go/analysis/passes/buildssa.run":[[0],[]],"golang.org/x/tools/go/analysis/passes/buildssa.run$1":[],"golang.org/x/tools/go/analysis/passes/buildssa.run$2":[],"golang.org/x/tools/go/analysis/passes/buildtag.checkGoFile":[],"golang.org/x/tools/go/analysis/passes/buildtag.checkOtherFile":[[1]],"golang.org/x/tools/go/analysis/passes/buildtag.init":[],"golang.org/x/tools/go/analysis/passes/buildtag.runBuildTag":[[],[0]],"golang.org/x/tools/go/analysis/passes/cgocall.cgoBaseType":[[0,1]],"golang.org/x/tools/go/analysis/passes/cgocall.checkCgo":[],"golang.org/x/tools/go/analysis/passes/cgocall.checkCgo$1":[[]],"golang.org/x/tools/go/analysis/passes/cgocall.imported":[[0,1]],"golang.org/x/tools/go/analysis/passes/cgocall.init":[],"golang.org/x/tools/go/analysis/passes/cgocall.isUnsafePointer":[[0,1]],"golang.org/x/tools/go/analysis/passes/cgocall.run":[[],[0]],"golang.org/x/tools/go/analysis/passes/cgocall.typeCheckCgoSourceFiles":[[],[],[0,2]],"golang.org/x/tools/go/analysis/passes/cgocall.typeCheckCgoSourceFiles$1":[[0],[]],"golang.org/x/tools/go/analysis/passes/cgocall.typeCheckCgoSourceFiles$2":[],"golang.org/x/tools/go/analysis/passes/cgocall.typeOKForCgoCall":[[]],"golang.org/x/tools/go/analysis/passes/composite.deref":[[0]],"golang.org/x/tools/go/analysis/passes/composite.init":[],"golang.org/x/tools/go/analysis/passes/composite.init#1":[],"golang.org/x/tools/go/analysis/passes/composite.isLocalType":[[0,1]],"golang.org/x/tools/go/analysis/passes/composite.run":[[],[]],"golang.org/x/tools/go/analysis/passes/composite.run$1":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksAssign":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksCallExpr":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksCompositeLit":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksFunc":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksGenDecl":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksRange":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksRangeVar":[],"golang.org/x/tools/go/analysis/passes/copylock.checkCopyLocksReturnStmt":[],"golang.org/x/tools/go/analysis/passes/copylock.init":[],"golang.org/x/tools/go/analysis/passes/copylock.init#1":[],"golang.org/x/tools/go/analysis/passes/copylock.lockPath":[[]],"golang.org/x/tools/go/analysis/passes/copylock.lockPathRhs":[[]],"golang.org/x/tools/go/analysis/passes/copylock.run":[[],[]],"golang.org/x/tools/go/analysis/passes/copylock.run$1":[],"golang.org/x/tools/go/analysis/passes/ctrlflow.hasReachableReturn":[[]],"golang.org/x/tools/go/analysis/passes/ctrlflow.init":[],"golang.org/x/tools/go/analysis/passes/ctrlflow.isIntrinsicNoReturn":[[0]],"golang.org/x/tools/go/analysis/passes/ctrlflow.run":[[0],[]],"golang.org/x/tools/go/analysis/passes/ctrlflow.run$1":[],"golang.org/x/tools/go/analysis/passes/deepequalerrors.containsError":[[]],"golang.org/x/tools/go/analysis/passes/deepequalerrors.containsError$1":[[]],"golang.org/x/tools/go/analysis/passes/deepequalerrors.hasError":[[]],"golang.org/x/tools/go/analysis/passes/deepequalerrors.init":[],"golang.org/x/tools/go/analysis/passes/deepequalerrors.run":[[],[]],"golang.org/x/tools/go/analysis/passes/deepequalerrors.run$1":[],"golang.org/x/tools/go/analysis/passes/errorsas.checkAsTarget":[[]],"golang.org/x/tools/go/analysis/passes/errorsas.init":[],"golang.org/x/tools/go/analysis/passes/errorsas.run":[[],[]],"golang.org/x/tools/go/analysis/passes/errorsas.run$1":[],"golang.org/x/tools/go/analysis/passes/fieldalignment.align":[[0,1]],"golang.org/x/tools/go/analysis/passes/fieldalignment.fieldalignment":[],"golang.org/x/tools/go/analysis/passes/fieldalignment.init":[],"golang.org/x/tools/go/analysis/passes/fieldalignment.optimalOrder":[[0],[]],"golang.org/x/tools/go/analysis/passes/fieldalignment.optimalOrder$1":[[]],"golang.org/x/tools/go/analysis/passes/fieldalignment.run":[[],[]],"golang.org/x/tools/go/analysis/passes/fieldalignment.run$1":[],"golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment.init":[],"golang.org/x/tools/go/analysis/passes/fieldalignment/cmd/fieldalignment.main":[],"golang.org/x/tools/go/analysis/passes/findcall.init":[],"golang.org/x/tools/go/analysis/passes/findcall.init#1":[],"golang.org/x/tools/go/analysis/passes/findcall.run":[[],[]],"golang.org/x/tools/go/analysis/passes/findcall.run$1":[[]],"golang.org/x/tools/go/analysis/passes/findcall/cmd/findcall.init":[],"golang.org/x/tools/go/analysis/passes/findcall/cmd/findcall.main":[],"golang.org/x/tools/go/analysis/passes/framepointer.init":[],"golang.org/x/tools/go/analysis/passes/framepointer.run":[[],[0]],"golang.org/x/tools/go/analysis/passes/httpresponse.init":[],"golang.org/x/tools/go/analysis/passes/httpresponse.isHTTPFuncOrMethodOnClient":[[0,1]],"golang.org/x/tools/go/analysis/passes/httpresponse.isNamedType":[[0,1]],"golang.org/x/tools/go/analysis/passes/httpresponse.restOfBlock":[[0],[]],"golang.org/x/tools/go/analysis/passes/httpresponse.rootIdent":[[0]],"golang.org/x/tools/go/analysis/passes/httpresponse.run":[[],[]],"golang.org/x/tools/go/analysis/passes/httpresponse.run$1":[[]],"golang.org/x/tools/go/analysis/passes/ifaceassert.assertableTo":[[]],"golang.org/x/tools/go/analysis/passes/ifaceassert.init":[],"golang.org/x/tools/go/analysis/passes/ifaceassert.isParameterized":[[0]],"golang.org/x/tools/go/analysis/passes/ifaceassert.run":[[],[]],"golang.org/x/tools/go/analysis/passes/ifaceassert.run$1":[],"golang.org/x/tools/go/analysis/passes/ifaceassert/cmd/ifaceassert.init":[],"golang.org/x/tools/go/analysis/passes/ifaceassert/cmd/ifaceassert.main":[],"golang.org/x/tools/go/analysis/passes/inspect.init":[],"golang.org/x/tools/go/analysis/passes/inspect.run":[[],[]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.Format":[[]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.HasSideEffects":[[]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.HasSideEffects$1":[[]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.Imports":[[]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.LineStart":[[0]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.ReadFile":[[],[0,1],[1]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.Unparen":[[0]],"golang.org/x/tools/go/analysis/passes/internal/analysisutil.init":[],"golang.org/x/tools/go/analysis/passes/loopclosure.goInvokes":[[1]],"golang.org/x/tools/go/analysis/passes/loopclosure.init":[],"golang.org/x/tools/go/analysis/passes/loopclosure.run":[[],[]],"golang.org/x/tools/go/analysis/passes/loopclosure.run$1":[],"golang.org/x/tools/go/analysis/passes/loopclosure.run$1$1":[],"golang.org/x/tools/go/analysis/passes/loopclosure.run$1$2":[[]],"golang.org/x/tools/go/analysis/passes/lostcancel.hasImport":[[]],"golang.org/x/tools/go/analysis/passes/lostcancel.init":[],"golang.org/x/tools/go/analysis/passes/lostcancel.isCall":[[]],"golang.org/x/tools/go/analysis/passes/lostcancel.isContextWithCancel":[[0,1]],"golang.org/x/tools/go/analysis/passes/lostcancel.lostCancelPath":[[1]],"golang.org/x/tools/go/analysis/passes/lostcancel.lostCancelPath$1":[[]],"golang.org/x/tools/go/analysis/passes/lostcancel.lostCancelPath$1$1":[[]],"golang.org/x/tools/go/analysis/passes/lostcancel.lostCancelPath$2":[[2]],"golang.org/x/tools/go/analysis/passes/lostcancel.lostCancelPath$3":[[0]],"golang.org/x/tools/go/analysis/passes/lostcancel.run":[[],[]],"golang.org/x/tools/go/analysis/passes/lostcancel.run$1":[],"golang.org/x/tools/go/analysis/passes/lostcancel.runFunc":[],"golang.org/x/tools/go/analysis/passes/lostcancel.runFunc$1":[[]],"golang.org/x/tools/go/analysis/passes/lostcancel.tupleContains":[[]],"golang.org/x/tools/go/analysis/passes/lostcancel/cmd/lostcancel.init":[],"golang.org/x/tools/go/analysis/passes/lostcancel/cmd/lostcancel.main":[],"golang.org/x/tools/go/analysis/passes/nilfunc.init":[],"golang.org/x/tools/go/analysis/passes/nilfunc.run":[[],[]],"golang.org/x/tools/go/analysis/passes/nilfunc.run$1":[],"golang.org/x/tools/go/analysis/passes/nilness.eq":[[0],[0],[0]],"golang.org/x/tools/go/analysis/passes/nilness.expandFacts":[[0]],"golang.org/x/tools/go/analysis/passes/nilness.init":[],"golang.org/x/tools/go/analysis/passes/nilness.nilnessOf":[[0]],"golang.org/x/tools/go/analysis/passes/nilness.run":[[],[]],"golang.org/x/tools/go/analysis/passes/nilness.runFunc":[],"golang.org/x/tools/go/analysis/passes/nilness.runFunc$1":[],"golang.org/x/tools/go/analysis/passes/nilness.runFunc$2":[],"golang.org/x/tools/go/analysis/passes/nilness.runFunc$3":[],"golang.org/x/tools/go/analysis/passes/nilness.slice2ArrayPtrLen":[[0]],"golang.org/x/tools/go/analysis/passes/nilness/cmd/nilness.init":[],"golang.org/x/tools/go/analysis/passes/nilness/cmd/nilness.main":[],"golang.org/x/tools/go/analysis/passes/pkgfact.imported":[[0,1]],"golang.org/x/tools/go/analysis/passes/pkgfact.init":[],"golang.org/x/tools/go/analysis/passes/pkgfact.run":[[],[]],"golang.org/x/tools/go/analysis/passes/pkgfact.run$1":[],"golang.org/x/tools/go/analysis/passes/pkgfact.run$2":[],"golang.org/x/tools/go/analysis/passes/printf.argCanBeChecked":[[]],"golang.org/x/tools/go/analysis/passes/printf.checkCall":[],"golang.org/x/tools/go/analysis/passes/printf.checkCall$1":[],"golang.org/x/tools/go/analysis/passes/printf.checkPrint":[],"golang.org/x/tools/go/analysis/passes/printf.checkPrintf":[],"golang.org/x/tools/go/analysis/passes/printf.checkPrintfFwd":[],"golang.org/x/tools/go/analysis/passes/printf.count":[[1]],"golang.org/x/tools/go/analysis/passes/printf.findPrintfLike":[[],[]],"golang.org/x/tools/go/analysis/passes/printf.findPrintfLike$1":[[]],"golang.org/x/tools/go/analysis/passes/printf.formatString":[[0,1],[]],"golang.org/x/tools/go/analysis/passes/printf.hasBasicType":[[0,1,2]],"golang.org/x/tools/go/analysis/passes/printf.init":[],"golang.org/x/tools/go/analysis/passes/printf.init#1":[],"golang.org/x/tools/go/analysis/passes/printf.isConvertibleToString":[[]],"golang.org/x/tools/go/analysis/passes/printf.isFormatter":[[]],"golang.org/x/tools/go/analysis/passes/printf.isFunctionValue":[[]],"golang.org/x/tools/go/analysis/passes/printf.isNamed":[[0,2]],"golang.org/x/tools/go/analysis/passes/printf.isStringer":[[0]],"golang.org/x/tools/go/analysis/passes/printf.match":[[0,1,2]],"golang.org/x/tools/go/analysis/passes/printf.matchArgType":[[1],[1]],"golang.org/x/tools/go/analysis/passes/printf.maybePrintfWrapper":[[0,1]],"golang.org/x/tools/go/analysis/passes/printf.okPrintfArg":[[]],"golang.org/x/tools/go/analysis/passes/printf.parsePrintfVerb":[[0,1,2,3,4,5]],"golang.org/x/tools/go/analysis/passes/printf.printfNameAndKind":[[0,1],[]],"golang.org/x/tools/go/analysis/passes/printf.recursiveStringer":[[],[]],"golang.org/x/tools/go/analysis/passes/printf.run":[[],[]],"golang.org/x/tools/go/analysis/passes/printf.stringConstantArg":[[0,1],[]],"golang.org/x/tools/go/analysis/passes/printf.stringConstantExpr":[[0,1],[]],"golang.org/x/tools/go/analysis/passes/reflectvaluecompare.init":[],"golang.org/x/tools/go/analysis/passes/reflectvaluecompare.isReflectValue":[[]],"golang.org/x/tools/go/analysis/passes/reflectvaluecompare.run":[[],[]],"golang.org/x/tools/go/analysis/passes/reflectvaluecompare.run$1":[],"golang.org/x/tools/go/analysis/passes/shadow.checkShadowAssignment":[],"golang.org/x/tools/go/analysis/passes/shadow.checkShadowDecl":[],"golang.org/x/tools/go/analysis/passes/shadow.checkShadowing":[],"golang.org/x/tools/go/analysis/passes/shadow.growSpan":[],"golang.org/x/tools/go/analysis/passes/shadow.idiomaticRedecl":[[]],"golang.org/x/tools/go/analysis/passes/shadow.idiomaticShortRedecl":[[]],"golang.org/x/tools/go/analysis/passes/shadow.init":[],"golang.org/x/tools/go/analysis/passes/shadow.init#1":[],"golang.org/x/tools/go/analysis/passes/shadow.run":[[],[]],"golang.org/x/tools/go/analysis/passes/shadow.run$1":[],"golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow.init":[],"golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow.main":[],"golang.org/x/tools/go/analysis/passes/shift.checkLongShift":[],"golang.org/x/tools/go/analysis/passes/shift.init":[],"golang.org/x/tools/go/analysis/passes/shift.run":[[],[]],"golang.org/x/tools/go/analysis/passes/shift.run$1":[],"golang.org/x/tools/go/analysis/passes/shift.run$2":[],"golang.org/x/tools/go/analysis/passes/shift.updateDead":[],"golang.org/x/tools/go/analysis/passes/shift.updateDead$1":[],"golang.org/x/tools/go/analysis/passes/shift.updateDead$1$1":[[]],"golang.org/x/tools/go/analysis/passes/sigchanyzer.findDecl":[[0]],"golang.org/x/tools/go/analysis/passes/sigchanyzer.init":[],"golang.org/x/tools/go/analysis/passes/sigchanyzer.isBuiltinMake":[[0,1]],"golang.org/x/tools/go/analysis/passes/sigchanyzer.isSignalNotify":[[1]],"golang.org/x/tools/go/analysis/passes/sigchanyzer.isSignalNotify$1":[[0]],"golang.org/x/tools/go/analysis/passes/sigchanyzer.run":[[],[]],"golang.org/x/tools/go/analysis/passes/sigchanyzer.run$1":[],"golang.org/x/tools/go/analysis/passes/sortslice.init":[],"golang.org/x/tools/go/analysis/passes/sortslice.run":[[],[]],"golang.org/x/tools/go/analysis/passes/sortslice.run$1":[],"golang.org/x/tools/go/analysis/passes/stdmethods.argjoin":[[0]],"golang.org/x/tools/go/analysis/passes/stdmethods.canonicalMethod":[],"golang.org/x/tools/go/analysis/passes/stdmethods.implementsError":[[]],"golang.org/x/tools/go/analysis/passes/stdmethods.init":[],"golang.org/x/tools/go/analysis/passes/stdmethods.matchParamType":[[0]],"golang.org/x/tools/go/analysis/passes/stdmethods.matchParams":[[]],"golang.org/x/tools/go/analysis/passes/stdmethods.run":[[],[]],"golang.org/x/tools/go/analysis/passes/stdmethods.run$1":[],"golang.org/x/tools/go/analysis/passes/stdmethods.typeString":[[]],"golang.org/x/tools/go/analysis/passes/stringintconv.describe":[[0,2]],"golang.org/x/tools/go/analysis/passes/stringintconv.init":[],"golang.org/x/tools/go/analysis/passes/stringintconv.run":[[],[]],"golang.org/x/tools/go/analysis/passes/stringintconv.run$1":[],"golang.org/x/tools/go/analysis/passes/stringintconv.structuralTypes":[[0],[0]],"golang.org/x/tools/go/analysis/passes/stringintconv.typeName":[[0]],"golang.org/x/tools/go/analysis/passes/stringintconv/cmd/stringintconv.init":[],"golang.org/x/tools/go/analysis/passes/stringintconv/cmd/stringintconv.main":[],"golang.org/x/tools/go/analysis/passes/structtag.checkCanonicalFieldTag":[],"golang.org/x/tools/go/analysis/passes/structtag.checkTagDuplicates":[],"golang.org/x/tools/go/analysis/passes/structtag.init":[],"golang.org/x/tools/go/analysis/passes/structtag.run":[[],[]],"golang.org/x/tools/go/analysis/passes/structtag.run$1":[],"golang.org/x/tools/go/analysis/passes/structtag.validateStructTag":[[]],"golang.org/x/tools/go/analysis/passes/testinggoroutine.checkGoStmt":[],"golang.org/x/tools/go/analysis/passes/testinggoroutine.checkGoStmt$1":[[]],"golang.org/x/tools/go/analysis/passes/testinggoroutine.goStmtFun":[[0]],"golang.org/x/tools/go/analysis/passes/testinggoroutine.hasBenchmarkOrTestParams":[[]],"golang.org/x/tools/go/analysis/passes/testinggoroutine.init":[],"golang.org/x/tools/go/analysis/passes/testinggoroutine.run":[[],[]],"golang.org/x/tools/go/analysis/passes/testinggoroutine.run$1":[[]],"golang.org/x/tools/go/analysis/passes/testinggoroutine.run$1$1":[[]],"golang.org/x/tools/go/analysis/passes/testinggoroutine.typeIsTestingDotTOrB":[[0],[0]],"golang.org/x/tools/go/analysis/passes/tests.checkAddCalls":[],"golang.org/x/tools/go/analysis/passes/tests.checkAddCalls$1":[[]],"golang.org/x/tools/go/analysis/passes/tests.checkExampleName":[],"golang.org/x/tools/go/analysis/passes/tests.checkExampleOutput":[],"golang.org/x/tools/go/analysis/passes/tests.checkFuzz":[],"golang.org/x/tools/go/analysis/passes/tests.checkFuzzCall":[[]],"golang.org/x/tools/go/analysis/passes/tests.checkFuzzCall$1":[[]],"golang.org/x/tools/go/analysis/passes/tests.checkFuzzCall$1$1":[[]],"golang.org/x/tools/go/analysis/passes/tests.checkTest":[],"golang.org/x/tools/go/analysis/passes/tests.formatAcceptedFuzzType":[[]],"golang.org/x/tools/go/analysis/passes/tests.init":[],"golang.org/x/tools/go/analysis/passes/tests.isAcceptedFuzzType":[[]],"golang.org/x/tools/go/analysis/passes/tests.isExampleSuffix":[[0]],"golang.org/x/tools/go/analysis/passes/tests.isFuzzTargetDot":[[]],"golang.org/x/tools/go/analysis/passes/tests.isFuzzTargetDotAdd":[[]],"golang.org/x/tools/go/analysis/passes/tests.isFuzzTargetDotFuzz":[[]],"golang.org/x/tools/go/analysis/passes/tests.isTestParam":[[0,1]],"golang.org/x/tools/go/analysis/passes/tests.isTestSuffix":[[0]],"golang.org/x/tools/go/analysis/passes/tests.isTestingType":[[0,1]],"golang.org/x/tools/go/analysis/passes/tests.lookup":[[0,1]],"golang.org/x/tools/go/analysis/passes/tests.run":[[],[]],"golang.org/x/tools/go/analysis/passes/tests.validateFuzzArgs":[[]],"golang.org/x/tools/go/analysis/passes/unmarshal.init":[],"golang.org/x/tools/go/analysis/passes/unmarshal.run":[[],[]],"golang.org/x/tools/go/analysis/passes/unmarshal.run$1":[],"golang.org/x/tools/go/analysis/passes/unmarshal/cmd/unmarshal.init":[],"golang.org/x/tools/go/analysis/passes/unmarshal/cmd/unmarshal.main":[],"golang.org/x/tools/go/analysis/passes/unreachable.init":[],"golang.org/x/tools/go/analysis/passes/unreachable.run":[[],[]],"golang.org/x/tools/go/analysis/passes/unreachable.run$1":[],"golang.org/x/tools/go/analysis/passes/unsafeptr.hasBasicType":[[0,1,2]],"golang.org/x/tools/go/analysis/passes/unsafeptr.init":[],"golang.org/x/tools/go/analysis/passes/unsafeptr.isReflectHeader":[[]],"golang.org/x/tools/go/analysis/passes/unsafeptr.isSafeArith":[[0,1]],"golang.org/x/tools/go/analysis/passes/unsafeptr.isSafeUintptr":[[0,1]],"golang.org/x/tools/go/analysis/passes/unsafeptr.run":[[],[]],"golang.org/x/tools/go/analysis/passes/unsafeptr.run$1":[],"golang.org/x/tools/go/analysis/passes/unusedresult.init":[],"golang.org/x/tools/go/analysis/passes/unusedresult.init#1":[],"golang.org/x/tools/go/analysis/passes/unusedresult.run":[[],[]],"golang.org/x/tools/go/analysis/passes/unusedresult.run$1":[],"golang.org/x/tools/go/analysis/passes/unusedwrite.checkStores":[[0]],"golang.org/x/tools/go/analysis/passes/unusedwrite.getFieldName":[[0]],"golang.org/x/tools/go/analysis/passes/unusedwrite.hasStructOrArrayType":[[]],"golang.org/x/tools/go/analysis/passes/unusedwrite.init":[],"golang.org/x/tools/go/analysis/passes/unusedwrite.isDeadStore":[[]],"golang.org/x/tools/go/analysis/passes/unusedwrite.isStructOrArray":[[]],"golang.org/x/tools/go/analysis/passes/unusedwrite.run":[[],[]],"golang.org/x/tools/go/analysis/passes/usesgenerics.importedTransitiveFeatures":[[]],"golang.org/x/tools/go/analysis/passes/usesgenerics.init":[],"golang.org/x/tools/go/analysis/passes/usesgenerics.run":[[],[]],"golang.org/x/tools/go/analysis/singlechecker.Main":[],"golang.org/x/tools/go/analysis/singlechecker.Main$1":[],"golang.org/x/tools/go/analysis/singlechecker.init":[],"golang.org/x/tools/go/analysis/unitchecker.Main":[],"golang.org/x/tools/go/analysis/unitchecker.Main$1":[],"golang.org/x/tools/go/analysis/unitchecker.Run":[],"golang.org/x/tools/go/analysis/unitchecker.init":[],"golang.org/x/tools/go/analysis/unitchecker.init#1":[],"golang.org/x/tools/go/analysis/unitchecker.init$1":[[2]],"golang.org/x/tools/go/analysis/unitchecker.readConfig":[[],[0]],"golang.org/x/tools/go/analysis/unitchecker.run":[[],[1]],"golang.org/x/tools/go/analysis/unitchecker.run$1":[[],[0]],"golang.org/x/tools/go/analysis/unitchecker.run$2":[[0],[0]],"golang.org/x/tools/go/analysis/unitchecker.run$3":[[0]],"golang.org/x/tools/go/analysis/unitchecker.run$4":[[],[0]],"golang.org/x/tools/go/analysis/unitchecker.run$5":[[0]],"golang.org/x/tools/go/analysis/unitchecker.run$5$1":[],"golang.org/x/tools/go/analysis/unitchecker.run$5$1$1":[],"golang.org/x/tools/go/analysis/unitchecker.run$5$1$2":[[]],"golang.org/x/tools/go/analysis/unitchecker.run$5$1$3":[[]],"golang.org/x/tools/go/analysis/unitchecker.run$6":[],"golang.org/x/tools/go/analysis/unitchecker.run$6$1":[],"golang.org/x/tools/go/ast/astutil.AddImport":[[]],"golang.org/x/tools/go/ast/astutil.AddNamedImport":[[]],"golang.org/x/tools/go/ast/astutil.Apply":[[]],"golang.org/x/tools/go/ast/astutil.Apply$1":[],"golang.org/x/tools/go/ast/astutil.DeleteImport":[[]],"golang.org/x/tools/go/ast/astutil.DeleteNamedImport":[[]],"golang.org/x/tools/go/ast/astutil.Imports":[[1]],"golang.org/x/tools/go/ast/astutil.NodeDescription":[[]],"golang.org/x/tools/go/ast/astutil.PathEnclosingInterval":[[0],[]],"golang.org/x/tools/go/ast/astutil.PathEnclosingInterval$1":[[]],"golang.org/x/tools/go/ast/astutil.RewriteImport":[[]],"golang.org/x/tools/go/ast/astutil.Unparen":[[0]],"golang.org/x/tools/go/ast/astutil.UsesImport":[[]],"golang.org/x/tools/go/ast/astutil.UsesImport$1":[],"golang.org/x/tools/go/ast/astutil.childrenOf":[[0]],"golang.org/x/tools/go/ast/astutil.childrenOf$1":[[]],"golang.org/x/tools/go/ast/astutil.declImports":[[]],"golang.org/x/tools/go/ast/astutil.importName":[[0]],"golang.org/x/tools/go/ast/astutil.importPath":[[0]],"golang.org/x/tools/go/ast/astutil.importSpec":[[0]],"golang.org/x/tools/go/ast/astutil.imports":[[]],"golang.org/x/tools/go/ast/astutil.init":[],"golang.org/x/tools/go/ast/astutil.isThirdParty":[[]],"golang.org/x/tools/go/ast/astutil.isTopName":[[0]],"golang.org/x/tools/go/ast/astutil.matchLen":[[]],"golang.org/x/tools/go/ast/astutil.tok":[[0,1]],"golang.org/x/tools/go/ast/inspector.New":[[]],"golang.org/x/tools/go/ast/inspector.init":[],"golang.org/x/tools/go/ast/inspector.maskOf":[[]],"golang.org/x/tools/go/ast/inspector.traverse":[[]],"golang.org/x/tools/go/ast/inspector.traverse$1":[[]],"golang.org/x/tools/go/ast/inspector.typeOf":[[]],"golang.org/x/tools/go/buildutil.AllPackages":[[]],"golang.org/x/tools/go/buildutil.AllPackages$1":[],"golang.org/x/tools/go/buildutil.ContainingPackage":[[1,2],[0,1,2]],"golang.org/x/tools/go/buildutil.ExpandPatterns":[[]],"golang.org/x/tools/go/buildutil.ExpandPatterns$1":[],"golang.org/x/tools/go/buildutil.FakeContext":[[]],"golang.org/x/tools/go/buildutil.FakeContext$1":[[0]],"golang.org/x/tools/go/buildutil.FakeContext$2":[[0]],"golang.org/x/tools/go/buildutil.FakeContext$3":[[0],[]],"golang.org/x/tools/go/buildutil.FakeContext$4":[[0],[0]],"golang.org/x/tools/go/buildutil.FakeContext$5":[[0]],"golang.org/x/tools/go/buildutil.FileExists":[[1]],"golang.org/x/tools/go/buildutil.ForEachPackage":[],"golang.org/x/tools/go/buildutil.ForEachPackage$1":[],"golang.org/x/tools/go/buildutil.ForEachPackage$2":[],"golang.org/x/tools/go/buildutil.HasSubdir":[[2],[]],"golang.org/x/tools/go/buildutil.IsAbsPath":[[1]],"golang.org/x/tools/go/buildutil.IsDir":[[]],"golang.org/x/tools/go/buildutil.JoinPath":[[1]],"golang.org/x/tools/go/buildutil.OpenFile":[[],[1]],"golang.org/x/tools/go/buildutil.OverlayContext":[[0]],"golang.org/x/tools/go/buildutil.OverlayContext$1":[[0],[]],"golang.org/x/tools/go/buildutil.OverlayContext$2":[[0],[0]],"golang.org/x/tools/go/buildutil.ParseFile":[[],[3,4]],"golang.org/x/tools/go/buildutil.ParseOverlayArchive":[[0],[0]],"golang.org/x/tools/go/buildutil.ReadDir":[[1],[1]],"golang.org/x/tools/go/buildutil.SplitPathList":[[1]],"golang.org/x/tools/go/buildutil.allPackages":[],"golang.org/x/tools/go/buildutil.allPackages$1":[],"golang.org/x/tools/go/buildutil.allPackages$1$1":[],"golang.org/x/tools/go/buildutil.hasSubdir":[[1],[]],"golang.org/x/tools/go/buildutil.init":[],"golang.org/x/tools/go/buildutil.isSpaceByte":[[0]],"golang.org/x/tools/go/buildutil.sameFile":[[]],"golang.org/x/tools/go/buildutil.splitQuotedFields":[[0],[0]],"golang.org/x/tools/go/callgraph.AddEdge":[],"golang.org/x/tools/go/callgraph.CalleesOf":[[0]],"golang.org/x/tools/go/callgraph.GraphVisitEdges":[[]],"golang.org/x/tools/go/callgraph.GraphVisitEdges$1":[[]],"golang.org/x/tools/go/callgraph.New":[[0]],"golang.org/x/tools/go/callgraph.PathSearch":[[]],"golang.org/x/tools/go/callgraph.PathSearch$1":[[]],"golang.org/x/tools/go/callgraph.init":[],"golang.org/x/tools/go/callgraph.isInit":[[0]],"golang.org/x/tools/go/callgraph.removeInEdge":[],"golang.org/x/tools/go/callgraph.removeOutEdge":[],"golang.org/x/tools/go/callgraph/cha.CallGraph":[[]],"golang.org/x/tools/go/callgraph/cha.CallGraph$1":[[0,1]],"golang.org/x/tools/go/callgraph/cha.CallGraph$2":[],"golang.org/x/tools/go/callgraph/cha.CallGraph$3":[],"golang.org/x/tools/go/callgraph/cha.init":[],"golang.org/x/tools/go/callgraph/rta.Analyze":[[0]],"golang.org/x/tools/go/callgraph/rta.init":[],"golang.org/x/tools/go/callgraph/static.CallGraph":[[]],"golang.org/x/tools/go/callgraph/static.init":[],"golang.org/x/tools/go/callgraph/vta.CallGraph":[[]],"golang.org/x/tools/go/callgraph/vta.addArgumentFlows":[],"golang.org/x/tools/go/callgraph/vta.addReturnFlows":[],"golang.org/x/tools/go/callgraph/vta.calls":[[0]],"golang.org/x/tools/go/callgraph/vta.canAlias":[[]],"golang.org/x/tools/go/callgraph/vta.canHaveMethods":[[]],"golang.org/x/tools/go/callgraph/vta.canonicalize":[[0,1]],"golang.org/x/tools/go/callgraph/vta.functionUnderPtr":[[0]],"golang.org/x/tools/go/callgraph/vta.functionUnderPtr$1":[[0]],"golang.org/x/tools/go/callgraph/vta.getPropType":[[0,1]],"golang.org/x/tools/go/callgraph/vta.hasInFlow":[[]],"golang.org/x/tools/go/callgraph/vta.hasInitialTypes":[[]],"golang.org/x/tools/go/callgraph/vta.init":[],"golang.org/x/tools/go/callgraph/vta.interfaceUnderPtr":[[0]],"golang.org/x/tools/go/callgraph/vta.interfaceUnderPtr$1":[[0]],"golang.org/x/tools/go/callgraph/vta.intersect":[[1]],"golang.org/x/tools/go/callgraph/vta.isFunction":[[]],"golang.org/x/tools/go/callgraph/vta.isReferenceNode":[[]],"golang.org/x/tools/go/callgraph/vta.min":[[0,1]],"golang.org/x/tools/go/callgraph/vta.nodeTypes":[[0,1,3]],"golang.org/x/tools/go/callgraph/vta.propFunc":[[0,1,2]],"golang.org/x/tools/go/callgraph/vta.propagate":[[1]],"golang.org/x/tools/go/callgraph/vta.propagate$1":[[0]],"golang.org/x/tools/go/callgraph/vta.resolve":[[]],"golang.org/x/tools/go/callgraph/vta.scc":[[],[]],"golang.org/x/tools/go/callgraph/vta.scc$1":[],"golang.org/x/tools/go/callgraph/vta.siteCallees":[[0,1]],"golang.org/x/tools/go/callgraph/vta.sliceArrayElem":[[0]],"golang.org/x/tools/go/callgraph/vta.typePropGraph":[[1],[1]],"golang.org/x/tools/go/callgraph/vta/internal/trie.Elems":[[]],"golang.org/x/tools/go/callgraph/vta/internal/trie.Elems$1":[[]],"golang.org/x/tools/go/callgraph/vta/internal/trie.NewBuilder":[[]],"golang.org/x/tools/go/callgraph/vta/internal/trie.TakeLhs":[[0]],"golang.org/x/tools/go/callgraph/vta/internal/trie.TakeRhs":[[1]],"golang.org/x/tools/go/callgraph/vta/internal/trie.branchingBit":[[0,1]],"golang.org/x/tools/go/callgraph/vta/internal/trie.init":[],"golang.org/x/tools/go/callgraph/vta/internal/trie.mask":[[0,1]],"golang.org/x/tools/go/callgraph/vta/internal/trie.matchPrefix":[[0,1,2]],"golang.org/x/tools/go/callgraph/vta/internal/trie.newScope":[[]],"golang.org/x/tools/go/callgraph/vta/internal/trie.ord":[[0,1]],"golang.org/x/tools/go/callgraph/vta/internal/trie.prefixesOverlap":[[0,1,2,3]],"golang.org/x/tools/go/callgraph/vta/internal/trie.zeroBit":[[0,1]],"golang.org/x/tools/go/cfg.New":[[0,1]],"golang.org/x/tools/go/cfg.formatNode":[[]],"golang.org/x/tools/go/cfg.init":[],"golang.org/x/tools/go/expect.ExtractGo":[[],[0]],"golang.org/x/tools/go/expect.MatchBefore":[[0,3],[0,3],[0]],"golang.org/x/tools/go/expect.Parse":[[],[0,1,2]],"golang.org/x/tools/go/expect.extractMod":[[],[0]],"golang.org/x/tools/go/expect.getAdjustedNote":[[0],[]],"golang.org/x/tools/go/expect.init":[],"golang.org/x/tools/go/expect.lineEnd":[[0]],"golang.org/x/tools/go/expect.parse":[[],[0]],"golang.org/x/tools/go/expect.parseArgument":[[0]],"golang.org/x/tools/go/expect.parseArgumentList":[[0]],"golang.org/x/tools/go/expect.parseComment":[[0]],"golang.org/x/tools/go/expect.parseNote":[[0]],"golang.org/x/tools/go/gccgoexportdata.CompilerInfo":[[],[],[],[0,1]],"golang.org/x/tools/go/gccgoexportdata.NewReader":[[],[0]],"golang.org/x/tools/go/gccgoexportdata.Read":[[2],[]],"golang.org/x/tools/go/gccgoexportdata.firstSection":[[0],[0]],"golang.org/x/tools/go/gccgoexportdata.init":[],"golang.org/x/tools/go/gcexportdata.Find":[[],[]],"golang.org/x/tools/go/gcexportdata.NewImporter":[[0,1]],"golang.org/x/tools/go/gcexportdata.NewReader":[[0],[0]],"golang.org/x/tools/go/gcexportdata.Read":[[1,2,3],[0,3]],"golang.org/x/tools/go/gcexportdata.ReadBundle":[[1,2],[0]],"golang.org/x/tools/go/gcexportdata.Write":[[0]],"golang.org/x/tools/go/gcexportdata.WriteBundle":[[]],"golang.org/x/tools/go/gcexportdata.init":[],"golang.org/x/tools/go/internal/cgo.ProcessFiles":[[],[0]],"golang.org/x/tools/go/internal/cgo.Run":[[0,2],[0],[0,1,2]],"golang.org/x/tools/go/internal/cgo.cflags":[[0],[0],[0],[0]],"golang.org/x/tools/go/internal/cgo.envList":[[1]],"golang.org/x/tools/go/internal/cgo.init":[],"golang.org/x/tools/go/internal/cgo.pkgConfig":[[],[0,1]],"golang.org/x/tools/go/internal/cgo.pkgConfigFlags":[[],[0]],"golang.org/x/tools/go/internal/cgo.stringList":[[0]],"golang.org/x/tools/go/internal/gccgoimporter.GetImporter":[[]],"golang.org/x/tools/go/internal/gccgoimporter.GetImporter$1":[[0,1],[1]],"golang.org/x/tools/go/internal/gccgoimporter.Parse":[[1],[]],"golang.org/x/tools/go/internal/gccgoimporter.Parse$1":[],"golang.org/x/tools/go/internal/gccgoimporter.arExportData":[[],[0]],"golang.org/x/tools/go/internal/gccgoimporter.deref":[[0]],"golang.org/x/tools/go/internal/gccgoimporter.elfFromAr":[[],[0]],"golang.org/x/tools/go/internal/gccgoimporter.findExportFile":[[0,1],[0,1]],"golang.org/x/tools/go/internal/gccgoimporter.init":[],"golang.org/x/tools/go/internal/gccgoimporter.lookupBuiltinType":[[]],"golang.org/x/tools/go/internal/gccgoimporter.newInterface":[[0,1]],"golang.org/x/tools/go/internal/gccgoimporter.openExportFile":[[],[],[0]],"golang.org/x/tools/go/internal/gccgoimporter.openExportFile$1":[],"golang.org/x/tools/go/internal/gccgoimporter.readMagic":[[],[]],"golang.org/x/tools/go/internal/gccgoimporter.readerAtFromSeeker":[[0]],"golang.org/x/tools/go/internal/gccgoimporter.standardArExportData":[[],[0]],"golang.org/x/tools/go/internal/gcimporter.BExportData":[[0],[]],"golang.org/x/tools/go/internal/gcimporter.BExportData$1":[],"golang.org/x/tools/go/internal/gcimporter.BImportData":[[0,1,2,3],[0,1,2,3],[]],"golang.org/x/tools/go/internal/gcimporter.BImportData$1":[],"golang.org/x/tools/go/internal/gcimporter.FindExportData":[[0],[],[0]],"golang.org/x/tools/go/internal/gcimporter.FindPkg":[[0,1],[0,1]],"golang.org/x/tools/go/internal/gcimporter.IExportBundle":[[]],"golang.org/x/tools/go/internal/gcimporter.IExportData":[[]],"golang.org/x/tools/go/internal/gcimporter.IImportBundle":[[0,1,2],[]],"golang.org/x/tools/go/internal/gcimporter.IImportData":[[],[0,1,2,3],[]],"golang.org/x/tools/go/internal/gcimporter.Import":[[0,1,2],[1,2]],"golang.org/x/tools/go/internal/gcimporter.Import$1":[],"golang.org/x/tools/go/internal/gcimporter.ImportData":[[],[]],"golang.org/x/tools/go/internal/gcimporter.ImportData$1":[],"golang.org/x/tools/go/internal/gcimporter.UImportData":[[],[0,1,2,3],[]],"golang.org/x/tools/go/internal/gcimporter.additionalPredeclared":[[]],"golang.org/x/tools/go/internal/gcimporter.assert":[],"golang.org/x/tools/go/internal/gcimporter.baseType":[[0]],"golang.org/x/tools/go/internal/gcimporter.basetypeName":[[0]],"golang.org/x/tools/go/internal/gcimporter.canReuse":[[]],"golang.org/x/tools/go/internal/gcimporter.chanDir":[[]],"golang.org/x/tools/go/internal/gcimporter.commonPrefixLen":[[]],"golang.org/x/tools/go/internal/gcimporter.constantToFloat":[[0]],"golang.org/x/tools/go/internal/gcimporter.declTypeName":[[0,1]],"golang.org/x/tools/go/internal/gcimporter.deref":[[0]],"golang.org/x/tools/go/internal/gcimporter.errorf":[],"golang.org/x/tools/go/internal/gcimporter.exported":[[0]],"golang.org/x/tools/go/internal/gcimporter.iexportCommon":[[]],"golang.org/x/tools/go/internal/gcimporter.iexportCommon$1":[],"golang.org/x/tools/go/internal/gcimporter.iimportCommon":[[0,1,2,4],[]],"golang.org/x/tools/go/internal/gcimporter.iimportCommon$1":[],"golang.org/x/tools/go/internal/gcimporter.init":[],"golang.org/x/tools/go/internal/gcimporter.intSize":[[0],[]],"golang.org/x/tools/go/internal/gcimporter.internalErrorf":[[]],"golang.org/x/tools/go/internal/gcimporter.isInterface":[[]],"golang.org/x/tools/go/internal/gcimporter.newInterface":[[0,1]],"golang.org/x/tools/go/internal/gcimporter.objTag":[[]],"golang.org/x/tools/go/internal/gcimporter.pkgScope":[[0]],"golang.org/x/tools/go/internal/gcimporter.predeclared":[[]],"golang.org/x/tools/go/internal/gcimporter.predeclared$1":[],"golang.org/x/tools/go/internal/gcimporter.readGopackHeader":[[],[],[0]],"golang.org/x/tools/go/internal/gcimporter.readUnifiedPackage":[[0,1,2,3]],"golang.org/x/tools/go/internal/gcimporter.sameObj":[[0,1]],"golang.org/x/tools/go/internal/gcimporter.tparamExportName":[[0,1]],"golang.org/x/tools/go/internal/gcimporter.tparamName":[[0]],"golang.org/x/tools/go/internal/gcimporter.valueToRat":[[0]],"golang.org/x/tools/go/internal/packagesdriver.GetSizesGolist":[[],[1]],"golang.org/x/tools/go/internal/packagesdriver.init":[],"golang.org/x/tools/go/internal/pkgbits.NewPkgDecoder":[[0,1]],"golang.org/x/tools/go/internal/pkgbits.NewPkgEncoder":[[0]],"golang.org/x/tools/go/internal/pkgbits.assert":[],"golang.org/x/tools/go/internal/pkgbits.errorf":[],"golang.org/x/tools/go/internal/pkgbits.fmtFrames":[[]],"golang.org/x/tools/go/internal/pkgbits.fmtFrames$1":[],"golang.org/x/tools/go/internal/pkgbits.init":[],"golang.org/x/tools/go/internal/pkgbits.walkFrames":[],"golang.org/x/tools/go/loader.init":[],"golang.org/x/tools/go/loader.markErrorFreePackages":[],"golang.org/x/tools/go/loader.markErrorFreePackages$1":[],"golang.org/x/tools/go/loader.parseFiles":[[],[]],"golang.org/x/tools/go/loader.parseFiles$1":[[0]],"golang.org/x/tools/go/loader.parseFiles$2":[],"golang.org/x/tools/go/loader.parseFiles$2$1":[],"golang.org/x/tools/go/loader.scanImports":[[0]],"golang.org/x/tools/go/loader.tokenFileContainsPos":[[0,1]],"golang.org/x/tools/go/packages.Load":[[0],[0,1]],"golang.org/x/tools/go/packages.PrintErrors":[[]],"golang.org/x/tools/go/packages.PrintErrors$1":[],"golang.org/x/tools/go/packages.Visit":[],"golang.org/x/tools/go/packages.Visit$1":[],"golang.org/x/tools/go/packages.absJoin":[[0,1]],"golang.org/x/tools/go/packages.cmdDebugStr":[[]],"golang.org/x/tools/go/packages.commonDir":[[0],[0]],"golang.org/x/tools/go/packages.containsGoFile":[[]],"golang.org/x/tools/go/packages.defaultDriver":[[],[0,1]],"golang.org/x/tools/go/packages.extractImports":[[],[0,1]],"golang.org/x/tools/go/packages.extractPackageName":[[],[]],"golang.org/x/tools/go/packages.findExternalDriver":[[]],"golang.org/x/tools/go/packages.findExternalDriver$1":[[],[0,1]],"golang.org/x/tools/go/packages.goListDriver":[[],[0,1]],"golang.org/x/tools/go/packages.goListDriver$1":[],"golang.org/x/tools/go/packages.golistargs":[[1]],"golang.org/x/tools/go/packages.hasTestFiles":[[]],"golang.org/x/tools/go/packages.impliedLoadMode":[[0]],"golang.org/x/tools/go/packages.init":[],"golang.org/x/tools/go/packages.init#1":[],"golang.org/x/tools/go/packages.init#1$1":[[0]],"golang.org/x/tools/go/packages.init#1$2":[[0]],"golang.org/x/tools/go/packages.init#1$3":[[0]],"golang.org/x/tools/go/packages.init#1$4":[],"golang.org/x/tools/go/packages.init#1$5":[],"golang.org/x/tools/go/packages.init#1$6":[],"golang.org/x/tools/go/packages.jsonFlag":[[]],"golang.org/x/tools/go/packages.jsonFlag$1":[],"golang.org/x/tools/go/packages.matchPattern":[[]],"golang.org/x/tools/go/packages.matchPattern$1":[[]],"golang.org/x/tools/go/packages.matchPattern$2":[[0]],"golang.org/x/tools/go/packages.maybeFixPackageName":[],"golang.org/x/tools/go/packages.newDeduper":[[]],"golang.org/x/tools/go/packages.newLoader":[[0]],"golang.org/x/tools/go/packages.newLoader$1":[],"golang.org/x/tools/go/packages.newLoader$2":[[],[1,2]],"golang.org/x/tools/go/packages.otherFiles":[[0]],"golang.org/x/tools/go/packages.reclaimPackage":[[]],"golang.org/x/tools/go/packages.replaceVendor":[[0,1]],"golang.org/x/tools/go/packages.sameFile":[[]],"golang.org/x/tools/go/packages.usesExportData":[[0]],"golang.org/x/tools/go/packages/gopackages.init":[],"golang.org/x/tools/go/packages/gopackages.main":[],"golang.org/x/tools/go/packages/gopackages.newStringListValue":[[0,1]],"golang.org/x/tools/go/packages/packagestest.BenchmarkAll":[],"golang.org/x/tools/go/packages/packagestest.BenchmarkAll$1":[],"golang.org/x/tools/go/packages/packagestest.Copy":[[]],"golang.org/x/tools/go/packages/packagestest.Copy$1":[[0]],"golang.org/x/tools/go/packages/packagestest.Export":[[0,1,2]],"golang.org/x/tools/go/packages/packagestest.Export$1":[],"golang.org/x/tools/go/packages/packagestest.GroupFilesByModules":[[0],[0]],"golang.org/x/tools/go/packages/packagestest.GroupFilesByModules$1":[[0,2]],"golang.org/x/tools/go/packages/packagestest.GroupFilesByModules$2":[],"golang.org/x/tools/go/packages/packagestest.GroupFilesByModules$3":[[0,2]],"golang.org/x/tools/go/packages/packagestest.Link":[[]],"golang.org/x/tools/go/packages/packagestest.Link$1":[[0]],"golang.org/x/tools/go/packages/packagestest.MustCopyFileTree":[[]],"golang.org/x/tools/go/packages/packagestest.MustCopyFileTree$1":[[0,2]],"golang.org/x/tools/go/packages/packagestest.Script":[[]],"golang.org/x/tools/go/packages/packagestest.Script$1":[[0]],"golang.org/x/tools/go/packages/packagestest.Symlink":[[]],"golang.org/x/tools/go/packages/packagestest.Symlink$1":[[0]],"golang.org/x/tools/go/packages/packagestest.TestAll":[],"golang.org/x/tools/go/packages/packagestest.TestAll$1":[],"golang.org/x/tools/go/packages/packagestest.builderMustSupportLinks":[[]],"golang.org/x/tools/go/packages/packagestest.copyFile":[[0,1]],"golang.org/x/tools/go/packages/packagestest.createEmpty":[[0]],"golang.org/x/tools/go/packages/packagestest.goModMarkers":[[],[0,1]],"golang.org/x/tools/go/packages/packagestest.gopathDir":[[0,1]],"golang.org/x/tools/go/packages/packagestest.init":[],"golang.org/x/tools/go/packages/packagestest.init#1":[],"golang.org/x/tools/go/packages/packagestest.init#2":[],"golang.org/x/tools/go/packages/packagestest.modCache":[[0]],"golang.org/x/tools/go/packages/packagestest.moduleDir":[[0,1]],"golang.org/x/tools/go/packages/packagestest.moduleVersion":[[0]],"golang.org/x/tools/go/packages/packagestest.openAndStat":[[],[0]],"golang.org/x/tools/go/packages/packagestest.primaryDir":[[0]],"golang.org/x/tools/go/packages/packagestest.writeModuleFiles":[[0,1,2,3]],"golang.org/x/tools/go/pointer.Analyze":[[0],[0]],"golang.org/x/tools/go/pointer.Analyze$1":[],"golang.org/x/tools/go/pointer.CanHaveDynamicTypes":[[]],"golang.org/x/tools/go/pointer.CanPoint":[[]],"golang.org/x/tools/go/pointer.assert":[],"golang.org/x/tools/go/pointer.changeRecv":[[0]],"golang.org/x/tools/go/pointer.deref":[[0]],"golang.org/x/tools/go/pointer.destructuringOps":[[1],[0],[1]],"golang.org/x/tools/go/pointer.diff":[[0,1]],"golang.org/x/tools/go/pointer.ext۰NoEffect":[],"golang.org/x/tools/go/pointer.ext۰NotYetImplemented":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Append":[],"golang.org/x/tools/go/pointer.ext۰reflect۰AppendSlice":[],"golang.org/x/tools/go/pointer.ext۰reflect۰ChanOf":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Copy":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Indirect":[],"golang.org/x/tools/go/pointer.ext۰reflect۰MakeChan":[],"golang.org/x/tools/go/pointer.ext۰reflect۰MakeFunc":[],"golang.org/x/tools/go/pointer.ext۰reflect۰MakeMap":[],"golang.org/x/tools/go/pointer.ext۰reflect۰MakeSlice":[],"golang.org/x/tools/go/pointer.ext۰reflect۰MapOf":[],"golang.org/x/tools/go/pointer.ext۰reflect۰New":[],"golang.org/x/tools/go/pointer.ext۰reflect۰NewAt":[],"golang.org/x/tools/go/pointer.ext۰reflect۰PtrTo":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Select":[],"golang.org/x/tools/go/pointer.ext۰reflect۰SliceOf":[],"golang.org/x/tools/go/pointer.ext۰reflect۰TypeOf":[],"golang.org/x/tools/go/pointer.ext۰reflect۰ValueOf":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Addr":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Bytes":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Call":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰CallSlice":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Convert":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Elem":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Field":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰FieldByIndex":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰FieldByName":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰FieldByNameFunc":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Index":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Interface":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰MapIndex":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰MapKeys":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Method":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰MethodByName":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Recv":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Send":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Set":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰SetBytes":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰SetMapIndex":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰SetPointer":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Value۰Slice":[],"golang.org/x/tools/go/pointer.ext۰reflect۰Zero":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰Elem":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰Field":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰FieldByIndex":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰FieldByName":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰FieldByNameFunc":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰In":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰InOut":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰Key":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰Method":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰MethodByName":[],"golang.org/x/tools/go/pointer.ext۰reflect۰rtype۰Out":[],"golang.org/x/tools/go/pointer.ext۰runtime۰SetFinalizer":[],"golang.org/x/tools/go/pointer.ext۰time۰startTimer":[],"golang.org/x/tools/go/pointer.indexValue":[[0],[0]],"golang.org/x/tools/go/pointer.init":[],"golang.org/x/tools/go/pointer.init#1":[],"golang.org/x/tools/go/pointer.init#2":[],"golang.org/x/tools/go/pointer.isInterface":[[]],"golang.org/x/tools/go/pointer.mustDeref":[[0]],"golang.org/x/tools/go/pointer.parseExtendedQuery":[[],[0],[0,1]],"golang.org/x/tools/go/pointer.reflectCall":[],"golang.org/x/tools/go/pointer.reflectCallImpl":[[]],"golang.org/x/tools/go/pointer.sliceToArray":[[0]],"golang.org/x/tools/go/pointer.start":[],"golang.org/x/tools/go/pointer.stop":[],"golang.org/x/tools/go/pointer.typeHeight":[[]],"golang.org/x/tools/go/pointer.typeTooHigh":[[]],"golang.org/x/tools/go/ssa.EnclosingFunction":[[0]],"golang.org/x/tools/go/ssa.HasEnclosingFunction":[[0]],"golang.org/x/tools/go/ssa.NewConst":[[0,1]],"golang.org/x/tools/go/ssa.NewProgram":[[0,1]],"golang.org/x/tools/go/ssa.WriteFunction":[],"golang.org/x/tools/go/ssa.WritePackage":[],"golang.org/x/tools/go/ssa.addEdge":[],"golang.org/x/tools/go/ssa.anonVar":[[0]],"golang.org/x/tools/go/ssa.assert":[],"golang.org/x/tools/go/ssa.buildDomFrontier":[[]],"golang.org/x/tools/go/ssa.buildDomTree":[],"golang.org/x/tools/go/ssa.buildReferrers":[],"golang.org/x/tools/go/ssa.changeRecv":[[0,1]],"golang.org/x/tools/go/ssa.commaOk":[[]],"golang.org/x/tools/go/ssa.createInstance":[[0,1,2,3]],"golang.org/x/tools/go/ssa.createParams":[],"golang.org/x/tools/go/ssa.createRecoverBlock":[],"golang.org/x/tools/go/ssa.deleteUnreachableBlocks":[],"golang.org/x/tools/go/ssa.deref":[[0]],"golang.org/x/tools/go/ssa.emitArith":[[1,2,3,4,5]],"golang.org/x/tools/go/ssa.emitCompare":[[1,2,3,4]],"golang.org/x/tools/go/ssa.emitConv":[[1,2]],"golang.org/x/tools/go/ssa.emitDebugRef":[],"golang.org/x/tools/go/ssa.emitExtract":[[1,2]],"golang.org/x/tools/go/ssa.emitFieldSelection":[[1,2,4]],"golang.org/x/tools/go/ssa.emitIf":[],"golang.org/x/tools/go/ssa.emitImplicitSelections":[[1,2,3]],"golang.org/x/tools/go/ssa.emitJump":[],"golang.org/x/tools/go/ssa.emitLoad":[[1]],"golang.org/x/tools/go/ssa.emitNew":[[1,2]],"golang.org/x/tools/go/ssa.emitStore":[[1,2,3]],"golang.org/x/tools/go/ssa.emitTailCall":[],"golang.org/x/tools/go/ssa.emitTypeAssert":[[1,2,3]],"golang.org/x/tools/go/ssa.emitTypeTest":[[1,2,3]],"golang.org/x/tools/go/ssa.findDuplicate":[[0]],"golang.org/x/tools/go/ssa.findEnclosingPackageLevelFunction":[[0]],"golang.org/x/tools/go/ssa.findNamedFunc":[[0]],"golang.org/x/tools/go/ssa.fuseBlocks":[[]],"golang.org/x/tools/go/ssa.init":[],"golang.org/x/tools/go/ssa.instance":[[]],"golang.org/x/tools/go/ssa.instanceArgs":[[0,1]],"golang.org/x/tools/go/ssa.intConst":[[0]],"golang.org/x/tools/go/ssa.isBlankIdent":[[0]],"golang.org/x/tools/go/ssa.isGeneric":[[0]],"golang.org/x/tools/go/ssa.isInterface":[[]],"golang.org/x/tools/go/ssa.isPointer":[[]],"golang.org/x/tools/go/ssa.isUntyped":[[0]],"golang.org/x/tools/go/ssa.isValuePreserving":[[]],"golang.org/x/tools/go/ssa.jumpThreading":[[]],"golang.org/x/tools/go/ssa.lift":[],"golang.org/x/tools/go/ssa.liftAlloc":[[]],"golang.org/x/tools/go/ssa.logStack":[[]],"golang.org/x/tools/go/ssa.logStack$1":[],"golang.org/x/tools/go/ssa.makeBound":[[0,1]],"golang.org/x/tools/go/ssa.makeLen":[[0]],"golang.org/x/tools/go/ssa.makeSubster":[[0,3]],"golang.org/x/tools/go/ssa.makeThunk":[[0,1]],"golang.org/x/tools/go/ssa.makeWrapper":[[0,1]],"golang.org/x/tools/go/ssa.markLivePhi":[],"golang.org/x/tools/go/ssa.markReachable":[],"golang.org/x/tools/go/ssa.mayNeedRuntimeTypes":[[0]],"golang.org/x/tools/go/ssa.memberFromObject":[],"golang.org/x/tools/go/ssa.membersFromDecl":[],"golang.org/x/tools/go/ssa.mustSanityCheck":[],"golang.org/x/tools/go/ssa.newCanonizer":[[]],"golang.org/x/tools/go/ssa.newVar":[[0,1]],"golang.org/x/tools/go/ssa.nilConst":[[0]],"golang.org/x/tools/go/ssa.nonbasicTypes":[[0]],"golang.org/x/tools/go/ssa.numberDomTree":[[1],[2]],"golang.org/x/tools/go/ssa.numberRegisters":[],"golang.org/x/tools/go/ssa.optimizeBlocks":[],"golang.org/x/tools/go/ssa.phiHasDirectReferrer":[[]],"golang.org/x/tools/go/ssa.printCall":[[]],"golang.org/x/tools/go/ssa.printConv":[[]],"golang.org/x/tools/go/ssa.printDomTreeDot":[],"golang.org/x/tools/go/ssa.printDomTreeText":[],"golang.org/x/tools/go/ssa.reaches":[[0,1]],"golang.org/x/tools/go/ssa.reaches$1":[],"golang.org/x/tools/go/ssa.receiverTypeArgs":[[0]],"golang.org/x/tools/go/ssa.recvAsFirstArg":[[0]],"golang.org/x/tools/go/ssa.recvType":[[0]],"golang.org/x/tools/go/ssa.relName":[[0]],"golang.org/x/tools/go/ssa.relString":[[0]],"golang.org/x/tools/go/ssa.relType":[[]],"golang.org/x/tools/go/ssa.removeDeadPhis":[],"golang.org/x/tools/go/ssa.removeInstr":[[0]],"golang.org/x/tools/go/ssa.rename":[],"golang.org/x/tools/go/ssa.renamed":[[0,1]],"golang.org/x/tools/go/ssa.replaceAll":[],"golang.org/x/tools/go/ssa.sanityCheck":[[0,1]],"golang.org/x/tools/go/ssa.sanityCheckDomTree":[],"golang.org/x/tools/go/ssa.sanityCheckPackage":[],"golang.org/x/tools/go/ssa.stringConst":[[0]],"golang.org/x/tools/go/ssa.toSelection":[[0]],"golang.org/x/tools/go/ssa.unparen":[[0]],"golang.org/x/tools/go/ssa.writeSignature":[],"golang.org/x/tools/go/ssa.zeroConst":[[0]],"golang.org/x/tools/go/ssa.zeroValue":[[0,1]],"golang.org/x/tools/go/ssa/interp.Interpret":[[]],"golang.org/x/tools/go/ssa/interp.Interpret$1":[],"golang.org/x/tools/go/ssa/interp.asInt64":[[0]],"golang.org/x/tools/go/ssa/interp.asUint64":[[0]],"golang.org/x/tools/go/ssa/interp.asUnsigned":[[0],[0]],"golang.org/x/tools/go/ssa/interp.binop":[[2,3]],"golang.org/x/tools/go/ssa/interp.call":[[0,1,3,4]],"golang.org/x/tools/go/ssa/interp.callBuiltin":[[0,3]],"golang.org/x/tools/go/ssa/interp.callSSA":[[0,1,3]],"golang.org/x/tools/go/ssa/interp.checkInterface":[[]],"golang.org/x/tools/go/ssa/interp.constValue":[[0]],"golang.org/x/tools/go/ssa/interp.conv":[[2]],"golang.org/x/tools/go/ssa/interp.deref":[[0]],"golang.org/x/tools/go/ssa/interp.doRecover":[[0]],"golang.org/x/tools/go/ssa/interp.eqnil":[[1,2]],"golang.org/x/tools/go/ssa/interp.equals":[[1,2]],"golang.org/x/tools/go/ssa/interp.ext۰bytes۰Equal":[[]],"golang.org/x/tools/go/ssa/interp.ext۰bytes۰IndexByte":[[]],"golang.org/x/tools/go/ssa/interp.ext۰fmt۰Sprint":[[]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Abs":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Exp":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Float32bits":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Float32frombits":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Float64bits":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Float64frombits":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Inf":[[]],"golang.org/x/tools/go/ssa/interp.ext۰math۰IsNaN":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Ldexp":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Log":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Min":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰math۰NaN":[[]],"golang.org/x/tools/go/ssa/interp.ext۰math۰Sqrt":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰os۰Exit":[[]],"golang.org/x/tools/go/ssa/interp.ext۰os۰Getenv":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰New":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰SliceOf":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰TypeOf":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰ValueOf":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Bool":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰CanAddr":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰CanInterface":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Elem":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Field":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Float":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Index":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Int":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Interface":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰IsNil":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰IsValid":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Kind":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Len":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰MapIndex":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰MapKeys":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰NumField":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰NumMethod":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Pointer":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Set":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰String":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Type":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Value۰Uint":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰Zero":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰error۰Error":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰Bits":[[0,1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰Elem":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰Field":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰In":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰Kind":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰NumField":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰NumIn":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰NumMethod":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰NumOut":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰Out":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰Size":[[0,1]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰rtype۰String":[[]],"golang.org/x/tools/go/ssa/interp.ext۰reflect۰valueInterface":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰runtime۰Breakpoint":[[]],"golang.org/x/tools/go/ssa/interp.ext۰runtime۰GC":[[]],"golang.org/x/tools/go/ssa/interp.ext۰runtime۰GOMAXPROCS":[[]],"golang.org/x/tools/go/ssa/interp.ext۰runtime۰GOROOT":[[]],"golang.org/x/tools/go/ssa/interp.ext۰runtime۰Goexit":[[]],"golang.org/x/tools/go/ssa/interp.ext۰runtime۰Gosched":[[]],"golang.org/x/tools/go/ssa/interp.ext۰runtime۰NumCPU":[[]],"golang.org/x/tools/go/ssa/interp.ext۰sort۰Float64s":[[]],"golang.org/x/tools/go/ssa/interp.ext۰sort۰Float64s$1":[[]],"golang.org/x/tools/go/ssa/interp.ext۰sort۰Ints":[[]],"golang.org/x/tools/go/ssa/interp.ext۰sort۰Ints$1":[[]],"golang.org/x/tools/go/ssa/interp.ext۰sort۰Strings":[[]],"golang.org/x/tools/go/ssa/interp.ext۰sort۰Strings$1":[[]],"golang.org/x/tools/go/ssa/interp.ext۰strconv۰Atoi":[[0,1]],"golang.org/x/tools/go/ssa/interp.ext۰strconv۰FormatFloat":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰strconv۰Itoa":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰strings۰Count":[[]],"golang.org/x/tools/go/ssa/interp.ext۰strings۰EqualFold":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰strings۰Index":[[]],"golang.org/x/tools/go/ssa/interp.ext۰strings۰IndexByte":[[]],"golang.org/x/tools/go/ssa/interp.ext۰strings۰Replace":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰strings۰ToLower":[[1]],"golang.org/x/tools/go/ssa/interp.ext۰time۰Sleep":[[]],"golang.org/x/tools/go/ssa/interp.ext۰unicode۰utf8۰DecodeRuneInString":[[1]],"golang.org/x/tools/go/ssa/interp.fitsInt":[[0,1]],"golang.org/x/tools/go/ssa/interp.hash":[[1]],"golang.org/x/tools/go/ssa/interp.hashString":[[0]],"golang.org/x/tools/go/ssa/interp.hashType":[[0]],"golang.org/x/tools/go/ssa/interp.init":[],"golang.org/x/tools/go/ssa/interp.init#1":[],"golang.org/x/tools/go/ssa/interp.initReflect":[],"golang.org/x/tools/go/ssa/interp.load":[[1]],"golang.org/x/tools/go/ssa/interp.loc":[[0,1]],"golang.org/x/tools/go/ssa/interp.lookup":[[1,2]],"golang.org/x/tools/go/ssa/interp.lookupMethod":[[0,1,2]],"golang.org/x/tools/go/ssa/interp.makeMap":[[0]],"golang.org/x/tools/go/ssa/interp.makeNamedType":[[0,1]],"golang.org/x/tools/go/ssa/interp.makeReflectType":[[0]],"golang.org/x/tools/go/ssa/interp.makeReflectValue":[[0,1]],"golang.org/x/tools/go/ssa/interp.newMethod":[[0,1,2]],"golang.org/x/tools/go/ssa/interp.prepareCall":[[0,1],[0,1]],"golang.org/x/tools/go/ssa/interp.print":[[],[]],"golang.org/x/tools/go/ssa/interp.rV2T":[[0]],"golang.org/x/tools/go/ssa/interp.rV2V":[[0]],"golang.org/x/tools/go/ssa/interp.rangeIter":[[0]],"golang.org/x/tools/go/ssa/interp.reflectKind":[[]],"golang.org/x/tools/go/ssa/interp.runFrame":[],"golang.org/x/tools/go/ssa/interp.runFrame$1":[],"golang.org/x/tools/go/ssa/interp.sameType":[[0,1]],"golang.org/x/tools/go/ssa/interp.setGlobal":[],"golang.org/x/tools/go/ssa/interp.slice":[[0]],"golang.org/x/tools/go/ssa/interp.sliceToArrayPointer":[[2]],"golang.org/x/tools/go/ssa/interp.store":[],"golang.org/x/tools/go/ssa/interp.toString":[[]],"golang.org/x/tools/go/ssa/interp.typeAssert":[[2]],"golang.org/x/tools/go/ssa/interp.unop":[[1]],"golang.org/x/tools/go/ssa/interp.usesBuiltinMap":[[]],"golang.org/x/tools/go/ssa/interp.valueToBytes":[[0]],"golang.org/x/tools/go/ssa/interp.visitInstr":[[]],"golang.org/x/tools/go/ssa/interp.visitInstr$1":[],"golang.org/x/tools/go/ssa/interp.widen":[[0]],"golang.org/x/tools/go/ssa/interp.writeValue":[],"golang.org/x/tools/go/ssa/interp.zero":[[]],"golang.org/x/tools/go/ssa/ssautil.AllFunctions":[[0]],"golang.org/x/tools/go/ssa/ssautil.AllPackages":[[0,1],[0]],"golang.org/x/tools/go/ssa/ssautil.BuildPackage":[[1,2,3,4],[],[]],"golang.org/x/tools/go/ssa/ssautil.BuildPackage$1":[],"golang.org/x/tools/go/ssa/ssautil.CreateProgram":[[0,1]],"golang.org/x/tools/go/ssa/ssautil.MainPackages":[[0]],"golang.org/x/tools/go/ssa/ssautil.Packages":[[0,1],[0]],"golang.org/x/tools/go/ssa/ssautil.Switches":[[0]],"golang.org/x/tools/go/ssa/ssautil.doPackages":[[0,1],[0]],"golang.org/x/tools/go/ssa/ssautil.doPackages$1":[],"golang.org/x/tools/go/ssa/ssautil.init":[],"golang.org/x/tools/go/ssa/ssautil.isComparisonBlock":[[0],[0]],"golang.org/x/tools/go/ssa/ssautil.isTypeAssertBlock":[[0],[0],[0]],"golang.org/x/tools/go/ssa/ssautil.typeSwitch":[],"golang.org/x/tools/go/ssa/ssautil.valueSwitch":[],"golang.org/x/tools/go/types/objectpath.For":[[0],[0]],"golang.org/x/tools/go/types/objectpath.Object":[[0,1],[0,1]],"golang.org/x/tools/go/types/objectpath.appendOpArg":[[0,1,2]],"golang.org/x/tools/go/types/objectpath.canonicalize":[[]],"golang.org/x/tools/go/types/objectpath.canonicalize$1":[[]],"golang.org/x/tools/go/types/objectpath.concreteMethod":[[],[]],"golang.org/x/tools/go/types/objectpath.find":[[2]],"golang.org/x/tools/go/types/objectpath.findTypeParam":[[]],"golang.org/x/tools/go/types/objectpath.init":[],"golang.org/x/tools/go/types/typeutil.Callee":[[0,1]],"golang.org/x/tools/go/types/typeutil.Dependencies":[[]],"golang.org/x/tools/go/types/typeutil.Dependencies$1":[],"golang.org/x/tools/go/types/typeutil.IntuitiveMethodSet":[[0,1]],"golang.org/x/tools/go/types/typeutil.IntuitiveMethodSet$1":[[]],"golang.org/x/tools/go/types/typeutil.MakeHasher":[[]],"golang.org/x/tools/go/types/typeutil.StaticCallee":[[0,1]],"golang.org/x/tools/go/types/typeutil.hashString":[[0]],"golang.org/x/tools/go/types/typeutil.init":[],"golang.org/x/tools/go/types/typeutil.interfaceMethod":[[]],"golang.org/x/tools/go/vcs.ByCmd":[[]],"golang.org/x/tools/go/vcs.FromDir":[[],[0],[0,1]],"golang.org/x/tools/go/vcs.RepoRootForImportDynamic":[[],[0]],"golang.org/x/tools/go/vcs.RepoRootForImportPath":[[0],[0]],"golang.org/x/tools/go/vcs.RepoRootForImportPathStatic":[[0,1],[0]],"golang.org/x/tools/go/vcs.attrValue":[[0]],"golang.org/x/tools/go/vcs.bitbucketVCS":[[0]],"golang.org/x/tools/go/vcs.charsetReader":[[1],[0]],"golang.org/x/tools/go/vcs.envForDir":[[0]],"golang.org/x/tools/go/vcs.expand":[[0,1]],"golang.org/x/tools/go/vcs.httpGET":[[],[0]],"golang.org/x/tools/go/vcs.httpsOrHTTP":[[],[],[]],"golang.org/x/tools/go/vcs.httpsOrHTTP$1":[[0],[],[0]],"golang.org/x/tools/go/vcs.httpsOrHTTP$2":[],"golang.org/x/tools/go/vcs.init":[],"golang.org/x/tools/go/vcs.init#1":[],"golang.org/x/tools/go/vcs.launchpadVCS":[[]],"golang.org/x/tools/go/vcs.matchGoImport":[[0],[1]],"golang.org/x/tools/go/vcs.mergeEnvLists":[[0,1]],"golang.org/x/tools/go/vcs.noVCSSuffix":[[0]],"golang.org/x/tools/go/vcs.parseMetaGoImports":[[0],[0]],"golang.org/x/tools/go/vcs.pathPrefix":[[0]],"golang.org/x/tools/go/vcs.validateRepoRoot":[[0]],"golang.org/x/tools/godoc/analysis.init":[],"golang.org/x/tools/godoc/static.Generate":[[],[]],"golang.org/x/tools/godoc/static.appendQuote":[],"golang.org/x/tools/godoc/static.init":[],"golang.org/x/tools/godoc/util.IsText":[[]],"golang.org/x/tools/godoc/util.IsTextFile":[[1]],"golang.org/x/tools/godoc/util.NewThrottle":[[0,1]],"golang.org/x/tools/godoc/util.init":[],"golang.org/x/tools/godoc/vfs.FromFS":[[0]],"golang.org/x/tools/godoc/vfs.NewNameSpace":[[]],"golang.org/x/tools/godoc/vfs.OS":[[0]],"golang.org/x/tools/godoc/vfs.ReadFile":[[],[0]],"golang.org/x/tools/godoc/vfs.hasPathPrefix":[[0]],"golang.org/x/tools/godoc/vfs.init":[],"golang.org/x/tools/godoc/vfs.isGoPath":[[]],"golang.org/x/tools/godoc/vfs/gatefs.New":[[0,1]],"golang.org/x/tools/godoc/vfs/gatefs.init":[],"golang.org/x/tools/godoc/vfs/httpfs.New":[[0]],"golang.org/x/tools/godoc/vfs/httpfs.init":[],"golang.org/x/tools/godoc/vfs/mapfs.New":[[0]],"golang.org/x/tools/godoc/vfs/mapfs.dirInfo":[[0]],"golang.org/x/tools/godoc/vfs/mapfs.fileInfo":[[0]],"golang.org/x/tools/godoc/vfs/mapfs.filename":[[0]],"golang.org/x/tools/godoc/vfs/mapfs.init":[],"golang.org/x/tools/godoc/vfs/mapfs.slashdir":[[0]],"golang.org/x/tools/godoc/vfs/zipfs.New":[[0,1]],"golang.org/x/tools/godoc/vfs/zipfs.exists":[[0]],"golang.org/x/tools/godoc/vfs/zipfs.init":[],"golang.org/x/tools/godoc/vfs/zipfs.isGoPath":[[]],"golang.org/x/tools/godoc/vfs/zipfs.isRoot":[[0]],"golang.org/x/tools/godoc/vfs/zipfs.zipPath":[[0],[0]],"golang.org/x/tools/imports.Process":[[1],[0,1,2]],"golang.org/x/tools/imports.VendorlessPath":[[0]],"golang.org/x/tools/imports.init":[],"golang.org/x/tools/internal/analysisinternal.FindMatchingIdents":[[]],"golang.org/x/tools/internal/analysisinternal.FindMatchingIdents$1":[[0]],"golang.org/x/tools/internal/analysisinternal.IsZeroValue":[[0]],"golang.org/x/tools/internal/analysisinternal.StmtToInsertVarBefore":[[0]],"golang.org/x/tools/internal/analysisinternal.TypeErrorEndPos":[[2]],"golang.org/x/tools/internal/analysisinternal.TypeExpr":[[0,2]],"golang.org/x/tools/internal/analysisinternal.WalkASTWithParent":[],"golang.org/x/tools/internal/analysisinternal.WalkASTWithParent$1":[[]],"golang.org/x/tools/internal/analysisinternal.ZeroValue":[[0,2]],"golang.org/x/tools/internal/analysisinternal.baseIfStmt":[[0]],"golang.org/x/tools/internal/analysisinternal.equivalentTypes":[[0,1]],"golang.org/x/tools/internal/analysisinternal.init":[],"golang.org/x/tools/internal/apidiff.Changes":[[0,1]],"golang.org/x/tools/internal/apidiff.addMessage":[],"golang.org/x/tools/internal/apidiff.contains":[[]],"golang.org/x/tools/internal/apidiff.dotjoin":[[0,1]],"golang.org/x/tools/internal/apidiff.exportedFields":[[0]],"golang.org/x/tools/internal/apidiff.exportedMethods":[[0]],"golang.org/x/tools/internal/apidiff.exportedSelectableFields":[[0]],"golang.org/x/tools/internal/apidiff.hasPointerReceiver":[[]],"golang.org/x/tools/internal/apidiff.init":[],"golang.org/x/tools/internal/apidiff.newDiffer":[[0,1]],"golang.org/x/tools/internal/apidiff.objectKindString":[[]],"golang.org/x/tools/internal/apidiff.objectString":[[0]],"golang.org/x/tools/internal/apidiff.receiverNamedType":[[0]],"golang.org/x/tools/internal/apidiff.receiverType":[[0]],"golang.org/x/tools/internal/apidiff.removeNamesFromSignature":[[0]],"golang.org/x/tools/internal/apidiff.removeNamesFromSignature$1":[[0]],"golang.org/x/tools/internal/apidiff.unambiguousFields":[[0]],"golang.org/x/tools/internal/apidiff.unexportedMethod":[[]],"golang.org/x/tools/internal/event.Detach":[[0]],"golang.org/x/tools/internal/event.Error":[],"golang.org/x/tools/internal/event.IsDetach":[[0]],"golang.org/x/tools/internal/event.IsEnd":[[0]],"golang.org/x/tools/internal/event.IsError":[[0]],"golang.org/x/tools/internal/event.IsLabel":[[0]],"golang.org/x/tools/internal/event.IsLog":[[0]],"golang.org/x/tools/internal/event.IsMetric":[[0]],"golang.org/x/tools/internal/event.IsStart":[[0]],"golang.org/x/tools/internal/event.Label":[[0]],"golang.org/x/tools/internal/event.Log":[],"golang.org/x/tools/internal/event.Metric":[],"golang.org/x/tools/internal/event.SetExporter":[],"golang.org/x/tools/internal/event.Start":[[0],[]],"golang.org/x/tools/internal/event.init":[],"golang.org/x/tools/internal/event/core.CloneEvent":[[0,1]],"golang.org/x/tools/internal/event/core.Export":[[0]],"golang.org/x/tools/internal/event/core.ExportPair":[[0],[]],"golang.org/x/tools/internal/event/core.ExportPair$1":[],"golang.org/x/tools/internal/event/core.ExportPair$2":[],"golang.org/x/tools/internal/event/core.Log1":[],"golang.org/x/tools/internal/event/core.Log2":[],"golang.org/x/tools/internal/event/core.MakeEvent":[[0,1]],"golang.org/x/tools/internal/event/core.Metric1":[[0]],"golang.org/x/tools/internal/event/core.Metric2":[[0]],"golang.org/x/tools/internal/event/core.SetExporter":[],"golang.org/x/tools/internal/event/core.Start1":[[0],[]],"golang.org/x/tools/internal/event/core.Start2":[[0],[]],"golang.org/x/tools/internal/event/core.deliver":[[0]],"golang.org/x/tools/internal/event/core.init":[],"golang.org/x/tools/internal/event/export.GetSpan":[[0]],"golang.org/x/tools/internal/event/export.Labels":[[]],"golang.org/x/tools/internal/event/export.Labels$1":[[0,1]],"golang.org/x/tools/internal/event/export.LogWriter":[[]],"golang.org/x/tools/internal/event/export.Spans":[[]],"golang.org/x/tools/internal/event/export.Spans$1":[[0,1]],"golang.org/x/tools/internal/event/export.init":[],"golang.org/x/tools/internal/event/export.initGenerator":[],"golang.org/x/tools/internal/event/export.newSpanID":[[]],"golang.org/x/tools/internal/event/export.newTraceID":[[]],"golang.org/x/tools/internal/event/export/eventtest.NewContext":[[0,1]],"golang.org/x/tools/internal/event/export/eventtest.init":[],"golang.org/x/tools/internal/event/export/eventtest.init#1":[],"golang.org/x/tools/internal/event/export/metric.getGroup":[[],[]],"golang.org/x/tools/internal/event/export/metric.getGroup$1":[[]],"golang.org/x/tools/internal/event/export/metric.init":[],"golang.org/x/tools/internal/event/export/metric.labelListEqual":[[]],"golang.org/x/tools/internal/event/export/metric.labelListLess":[[]],"golang.org/x/tools/internal/event/export/ocagent.Connect":[[0]],"golang.org/x/tools/internal/event/export/ocagent.Connect$1":[],"golang.org/x/tools/internal/event/export/ocagent.Discover":[[]],"golang.org/x/tools/internal/event/export/ocagent.convertAnnotation":[[0]],"golang.org/x/tools/internal/event/export/ocagent.convertAttribute":[[0]],"golang.org/x/tools/internal/event/export/ocagent.convertAttributes":[[]],"golang.org/x/tools/internal/event/export/ocagent.convertEvent":[[0]],"golang.org/x/tools/internal/event/export/ocagent.convertEvents":[[0]],"golang.org/x/tools/internal/event/export/ocagent.convertMetric":[[0,1]],"golang.org/x/tools/internal/event/export/ocagent.convertSpan":[[0]],"golang.org/x/tools/internal/event/export/ocagent.convertTimestamp":[[0]],"golang.org/x/tools/internal/event/export/ocagent.dataToMetricDescriptor":[[0]],"golang.org/x/tools/internal/event/export/ocagent.dataToMetricDescriptorType":[[]],"golang.org/x/tools/internal/event/export/ocagent.dataToPoints":[[0]],"golang.org/x/tools/internal/event/export/ocagent.dataToTimeseries":[[0,1]],"golang.org/x/tools/internal/event/export/ocagent.distributionToPoints":[[0,1,2,3,4]],"golang.org/x/tools/internal/event/export/ocagent.errorInExport":[],"golang.org/x/tools/internal/event/export/ocagent.getAnnotationDescription":[[0],[]],"golang.org/x/tools/internal/event/export/ocagent.getDescription":[[0]],"golang.org/x/tools/internal/event/export/ocagent.getLabelKeys":[[0]],"golang.org/x/tools/internal/event/export/ocagent.infoKeysToLabelKeys":[[0]],"golang.org/x/tools/internal/event/export/ocagent.init":[],"golang.org/x/tools/internal/event/export/ocagent.numRows":[[]],"golang.org/x/tools/internal/event/export/ocagent.skipToValidLabel":[[1],[]],"golang.org/x/tools/internal/event/export/ocagent.toTruncatableString":[[0]],"golang.org/x/tools/internal/event/export/ocagent/wire.init":[],"golang.org/x/tools/internal/event/export/prometheus.New":[[]],"golang.org/x/tools/internal/event/export/prometheus.init":[],"golang.org/x/tools/internal/event/keys.New":[[0,1]],"golang.org/x/tools/internal/event/keys.NewBoolean":[[0,1]],"golang.org/x/tools/internal/event/keys.NewError":[[0,1]],"golang.org/x/tools/internal/event/keys.NewFloat32":[[0,1]],"golang.org/x/tools/internal/event/keys.NewFloat64":[[0,1]],"golang.org/x/tools/internal/event/keys.NewInt":[[0,1]],"golang.org/x/tools/internal/event/keys.NewInt16":[[0,1]],"golang.org/x/tools/internal/event/keys.NewInt32":[[0,1]],"golang.org/x/tools/internal/event/keys.NewInt64":[[0,1]],"golang.org/x/tools/internal/event/keys.NewInt8":[[0,1]],"golang.org/x/tools/internal/event/keys.NewString":[[0,1]],"golang.org/x/tools/internal/event/keys.NewTag":[[0,1]],"golang.org/x/tools/internal/event/keys.NewUInt":[[0,1]],"golang.org/x/tools/internal/event/keys.NewUInt16":[[0,1]],"golang.org/x/tools/internal/event/keys.NewUInt32":[[0,1]],"golang.org/x/tools/internal/event/keys.NewUInt64":[[0,1]],"golang.org/x/tools/internal/event/keys.NewUInt8":[[0,1]],"golang.org/x/tools/internal/event/keys.init":[],"golang.org/x/tools/internal/event/label.Filter":[[0,1]],"golang.org/x/tools/internal/event/label.MergeMaps":[[0]],"golang.org/x/tools/internal/event/label.NewList":[[0]],"golang.org/x/tools/internal/event/label.NewMap":[[0]],"golang.org/x/tools/internal/event/label.Of64":[[0,1]],"golang.org/x/tools/internal/event/label.OfString":[[0,1]],"golang.org/x/tools/internal/event/label.OfValue":[[0,1]],"golang.org/x/tools/internal/event/label.init":[],"golang.org/x/tools/internal/fakenet.NewConn":[[0,1,2]],"golang.org/x/tools/internal/fakenet.init":[],"golang.org/x/tools/internal/fakenet.newFeeder":[[0]],"golang.org/x/tools/internal/fastwalk.Walk":[[]],"golang.org/x/tools/internal/fastwalk.direntInode":[[0]],"golang.org/x/tools/internal/fastwalk.direntNamlen":[[0]],"golang.org/x/tools/internal/fastwalk.init":[],"golang.org/x/tools/internal/fastwalk.open":[[],[]],"golang.org/x/tools/internal/fastwalk.parseDirEnt":[[],[],[]],"golang.org/x/tools/internal/fastwalk.readDir":[[0]],"golang.org/x/tools/internal/fastwalk.readDirent":[[],[]],"golang.org/x/tools/internal/gocommand.GoVersion":[[],[1]],"golang.org/x/tools/internal/gocommand.VendorEnabled":[[],[],[1]],"golang.org/x/tools/internal/gocommand.cmdDebugStr":[[]],"golang.org/x/tools/internal/gocommand.getMainModuleAnd114":[[],[],[1]],"golang.org/x/tools/internal/gocommand.init":[],"golang.org/x/tools/internal/gocommand.runCmdContext":[[1]],"golang.org/x/tools/internal/gocommand.runCmdContext$1":[],"golang.org/x/tools/internal/gopathwalk.Walk":[],"golang.org/x/tools/internal/gopathwalk.Walk$1":[[]],"golang.org/x/tools/internal/gopathwalk.WalkSkip":[],"golang.org/x/tools/internal/gopathwalk.init":[],"golang.org/x/tools/internal/gopathwalk.walkDir":[],"golang.org/x/tools/internal/imports.ApplyFixes":[[2],[1,2]],"golang.org/x/tools/internal/imports.FixImports":[[0,2],[0,1,2]],"golang.org/x/tools/internal/imports.GetAllCandidates":[[5]],"golang.org/x/tools/internal/imports.GetAllCandidates$1":[[]],"golang.org/x/tools/internal/imports.GetAllCandidates$2":[[0]],"golang.org/x/tools/internal/imports.GetAllCandidates$3":[[]],"golang.org/x/tools/internal/imports.GetImportPaths":[[5]],"golang.org/x/tools/internal/imports.GetImportPaths$1":[[]],"golang.org/x/tools/internal/imports.GetImportPaths$2":[[0]],"golang.org/x/tools/internal/imports.GetImportPaths$3":[[]],"golang.org/x/tools/internal/imports.GetPackageExports":[[5]],"golang.org/x/tools/internal/imports.GetPackageExports$1":[[]],"golang.org/x/tools/internal/imports.GetPackageExports$2":[[]],"golang.org/x/tools/internal/imports.GetPackageExports$3":[[0]],"golang.org/x/tools/internal/imports.GetPackageExports$4":[],"golang.org/x/tools/internal/imports.ImportPathToAssumedName":[[0]],"golang.org/x/tools/internal/imports.PrimeCache":[[1]],"golang.org/x/tools/internal/imports.PrimeCache$1":[[]],"golang.org/x/tools/internal/imports.PrimeCache$2":[[]],"golang.org/x/tools/internal/imports.PrimeCache$3":[[]],"golang.org/x/tools/internal/imports.Process":[[1],[0,1,2]],"golang.org/x/tools/internal/imports.ScoreImportPaths":[[1,2],[1]],"golang.org/x/tools/internal/imports.VendorlessPath":[[0]],"golang.org/x/tools/internal/imports.addExternalCandidates":[[0]],"golang.org/x/tools/internal/imports.addExternalCandidates$1":[[]],"golang.org/x/tools/internal/imports.addExternalCandidates$2":[[]],"golang.org/x/tools/internal/imports.addExternalCandidates$3":[[]],"golang.org/x/tools/internal/imports.addExternalCandidates$4":[],"golang.org/x/tools/internal/imports.addExternalCandidates$5":[],"golang.org/x/tools/internal/imports.addExternalCandidates$5$1":[],"golang.org/x/tools/internal/imports.addExternalCandidates$6":[],"golang.org/x/tools/internal/imports.addGlobals":[],"golang.org/x/tools/internal/imports.addImportSpaces":[[],[0]],"golang.org/x/tools/internal/imports.addStdlibCandidates":[[0]],"golang.org/x/tools/internal/imports.addStdlibCandidates$1":[],"golang.org/x/tools/internal/imports.apply":[],"golang.org/x/tools/internal/imports.canUse":[[1]],"golang.org/x/tools/internal/imports.candidateImportName":[[0]],"golang.org/x/tools/internal/imports.collapse":[[0]],"golang.org/x/tools/internal/imports.collectImports":[[0]],"golang.org/x/tools/internal/imports.collectReferences":[[]],"golang.org/x/tools/internal/imports.collectReferences$1":[[]],"golang.org/x/tools/internal/imports.containsMainFunc":[[]],"golang.org/x/tools/internal/imports.copyExports":[[0]],"golang.org/x/tools/internal/imports.cutSpace":[[0],[0],[0]],"golang.org/x/tools/internal/imports.declImports":[[]],"golang.org/x/tools/internal/imports.distance":[[]],"golang.org/x/tools/internal/imports.filterRoots":[[0]],"golang.org/x/tools/internal/imports.findImport":[[],[1]],"golang.org/x/tools/internal/imports.findImport$1":[],"golang.org/x/tools/internal/imports.findImport$2":[],"golang.org/x/tools/internal/imports.findImport$2$1":[],"golang.org/x/tools/internal/imports.findImport$2$1$1":[],"golang.org/x/tools/internal/imports.fixImportsDefault":[[0,1,2,3]],"golang.org/x/tools/internal/imports.formatFile":[[2],[1,2]],"golang.org/x/tools/internal/imports.getCandidatePkgs":[[4]],"golang.org/x/tools/internal/imports.getCandidatePkgs$1":[[0]],"golang.org/x/tools/internal/imports.getCandidatePkgs$2":[[]],"golang.org/x/tools/internal/imports.getCandidatePkgs$3":[[]],"golang.org/x/tools/internal/imports.getCandidatePkgs$4":[],"golang.org/x/tools/internal/imports.getFixes":[[0,1,2,3],[0,1,2,3]],"golang.org/x/tools/internal/imports.hasHyphenOrUpperASCII":[[]],"golang.org/x/tools/internal/imports.importComment":[[0]],"golang.org/x/tools/internal/imports.importGroup":[[]],"golang.org/x/tools/internal/imports.importName":[[0]],"golang.org/x/tools/internal/imports.importPath":[[0]],"golang.org/x/tools/internal/imports.importPathToName":[[1]],"golang.org/x/tools/internal/imports.init":[],"golang.org/x/tools/internal/imports.init$1":[[],[]],"golang.org/x/tools/internal/imports.init$2":[[],[]],"golang.org/x/tools/internal/imports.init$3":[[],[]],"golang.org/x/tools/internal/imports.lastTwoComponents":[[0]],"golang.org/x/tools/internal/imports.loadExportsFromFiles":[[],[],[2]],"golang.org/x/tools/internal/imports.lowerASCIIAndRemoveHyphen":[[0]],"golang.org/x/tools/internal/imports.matchSpace":[[]],"golang.org/x/tools/internal/imports.mergeImports":[],"golang.org/x/tools/internal/imports.modRelevance":[[0]],"golang.org/x/tools/internal/imports.modulePath":[[0]],"golang.org/x/tools/internal/imports.newGopathResolver":[[0]],"golang.org/x/tools/internal/imports.newModuleResolver":[[0]],"golang.org/x/tools/internal/imports.notIdentifier":[[0]],"golang.org/x/tools/internal/imports.packageDirToName":[[],[0]],"golang.org/x/tools/internal/imports.parse":[[],[],[1,2]],"golang.org/x/tools/internal/imports.parse$1":[[]],"golang.org/x/tools/internal/imports.parse$2":[[]],"golang.org/x/tools/internal/imports.parseOtherFiles":[[]],"golang.org/x/tools/internal/imports.pkgIsCandidate":[[]],"golang.org/x/tools/internal/imports.sortImports":[],"golang.org/x/tools/internal/imports.sortSpecs":[[3]],"golang.org/x/tools/internal/jsonrpc2.AsyncHandler":[[]],"golang.org/x/tools/internal/jsonrpc2.AsyncHandler$1":[[]],"golang.org/x/tools/internal/jsonrpc2.AsyncHandler$1$1":[[]],"golang.org/x/tools/internal/jsonrpc2.AsyncHandler$1$2":[],"golang.org/x/tools/internal/jsonrpc2.CancelHandler":[[],[]],"golang.org/x/tools/internal/jsonrpc2.CancelHandler$1":[[]],"golang.org/x/tools/internal/jsonrpc2.CancelHandler$1$1":[[]],"golang.org/x/tools/internal/jsonrpc2.CancelHandler$2":[],"golang.org/x/tools/internal/jsonrpc2.DecodeMessage":[[],[0]],"golang.org/x/tools/internal/jsonrpc2.HandlerServer":[[]],"golang.org/x/tools/internal/jsonrpc2.HandlerServer$1":[[]],"golang.org/x/tools/internal/jsonrpc2.ListenAndServe":[[1,2]],"golang.org/x/tools/internal/jsonrpc2.MethodNotFound":[[]],"golang.org/x/tools/internal/jsonrpc2.MustReplyHandler":[[]],"golang.org/x/tools/internal/jsonrpc2.MustReplyHandler$1":[[]],"golang.org/x/tools/internal/jsonrpc2.MustReplyHandler$1$1":[[]],"golang.org/x/tools/internal/jsonrpc2.NewCall":[[0,1],[]],"golang.org/x/tools/internal/jsonrpc2.NewConn":[[0]],"golang.org/x/tools/internal/jsonrpc2.NewError":[[0,1]],"golang.org/x/tools/internal/jsonrpc2.NewHeaderStream":[[0]],"golang.org/x/tools/internal/jsonrpc2.NewIntID":[[0]],"golang.org/x/tools/internal/jsonrpc2.NewNotification":[[0],[]],"golang.org/x/tools/internal/jsonrpc2.NewRawStream":[[0]],"golang.org/x/tools/internal/jsonrpc2.NewResponse":[[0,2],[]],"golang.org/x/tools/internal/jsonrpc2.NewStringID":[[0]],"golang.org/x/tools/internal/jsonrpc2.Serve":[[]],"golang.org/x/tools/internal/jsonrpc2.Serve$1":[],"golang.org/x/tools/internal/jsonrpc2.Serve$2":[],"golang.org/x/tools/internal/jsonrpc2.Serve$3":[],"golang.org/x/tools/internal/jsonrpc2.init":[],"golang.org/x/tools/internal/jsonrpc2.isClosingError":[[]],"golang.org/x/tools/internal/jsonrpc2.marshalToRaw":[[],[]],"golang.org/x/tools/internal/jsonrpc2.recordStatus":[],"golang.org/x/tools/internal/jsonrpc2.toWireError":[[0]],"golang.org/x/tools/internal/jsonrpc2/servertest.NewPipeServer":[[0,1]],"golang.org/x/tools/internal/jsonrpc2/servertest.NewTCPServer":[[2]],"golang.org/x/tools/internal/jsonrpc2/servertest.init":[],"golang.org/x/tools/internal/jsonrpc2_v2.DecodeMessage":[[],[0]],"golang.org/x/tools/internal/jsonrpc2_v2.Dial":[[],[]],"golang.org/x/tools/internal/jsonrpc2_v2.EncodeMessage":[[],[]],"golang.org/x/tools/internal/jsonrpc2_v2.HeaderFramer":[[]],"golang.org/x/tools/internal/jsonrpc2_v2.Int64ID":[[0]],"golang.org/x/tools/internal/jsonrpc2_v2.NetDialer":[[0,1,2]],"golang.org/x/tools/internal/jsonrpc2_v2.NetListener":[[1,2,3],[1,2,3]],"golang.org/x/tools/internal/jsonrpc2_v2.NetPipeListener":[[],[]],"golang.org/x/tools/internal/jsonrpc2_v2.NewCall":[[0,1],[]],"golang.org/x/tools/internal/jsonrpc2_v2.NewError":[[0,1]],"golang.org/x/tools/internal/jsonrpc2_v2.NewIdleListener":[[0,1]],"golang.org/x/tools/internal/jsonrpc2_v2.NewNotification":[[0],[]],"golang.org/x/tools/internal/jsonrpc2_v2.NewResponse":[[0,2],[]],"golang.org/x/tools/internal/jsonrpc2_v2.RawFramer":[[]],"golang.org/x/tools/internal/jsonrpc2_v2.Serve":[[1,2],[]],"golang.org/x/tools/internal/jsonrpc2_v2.StringID":[[0]],"golang.org/x/tools/internal/jsonrpc2_v2.init":[],"golang.org/x/tools/internal/jsonrpc2_v2.isClosingError":[[]],"golang.org/x/tools/internal/jsonrpc2_v2.marshalToRaw":[[],[]],"golang.org/x/tools/internal/jsonrpc2_v2.newAsync":[[]],"golang.org/x/tools/internal/jsonrpc2_v2.newConnection":[[1],[]],"golang.org/x/tools/internal/jsonrpc2_v2.onlyActive":[[0]],"golang.org/x/tools/internal/jsonrpc2_v2.toWireError":[[0]],"golang.org/x/tools/internal/lsp/analysis/embeddirective.assertEmbedImport":[],"golang.org/x/tools/internal/lsp/analysis/embeddirective.hasEmbedDirectiveComment":[[0]],"golang.org/x/tools/internal/lsp/analysis/embeddirective.init":[],"golang.org/x/tools/internal/lsp/analysis/embeddirective.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/fillreturns.FixesError":[[]],"golang.org/x/tools/internal/lsp/analysis/fillreturns.init":[],"golang.org/x/tools/internal/lsp/analysis/fillreturns.matchingTypes":[[0,1]],"golang.org/x/tools/internal/lsp/analysis/fillreturns.run":[[],[0]],"golang.org/x/tools/internal/lsp/analysis/fillstruct.SuggestedFix":[[],[3,5]],"golang.org/x/tools/internal/lsp/analysis/fillstruct.indent":[[]],"golang.org/x/tools/internal/lsp/analysis/fillstruct.init":[],"golang.org/x/tools/internal/lsp/analysis/fillstruct.populateValue":[[0,2]],"golang.org/x/tools/internal/lsp/analysis/fillstruct.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/fillstruct.run$1":[],"golang.org/x/tools/internal/lsp/analysis/infertypeargs.calledIdent":[[0]],"golang.org/x/tools/internal/lsp/analysis/infertypeargs.init":[],"golang.org/x/tools/internal/lsp/analysis/infertypeargs.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/infertypeargs.run$1":[],"golang.org/x/tools/internal/lsp/analysis/nonewvars.FixesError":[[0]],"golang.org/x/tools/internal/lsp/analysis/nonewvars.init":[],"golang.org/x/tools/internal/lsp/analysis/nonewvars.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/nonewvars.run$1":[],"golang.org/x/tools/internal/lsp/analysis/noresultvalues.FixesError":[[]],"golang.org/x/tools/internal/lsp/analysis/noresultvalues.init":[],"golang.org/x/tools/internal/lsp/analysis/noresultvalues.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/noresultvalues.run$1":[],"golang.org/x/tools/internal/lsp/analysis/simplifycompositelit.createDiagnostic":[],"golang.org/x/tools/internal/lsp/analysis/simplifycompositelit.init":[],"golang.org/x/tools/internal/lsp/analysis/simplifycompositelit.match":[[0,1]],"golang.org/x/tools/internal/lsp/analysis/simplifycompositelit.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/simplifycompositelit.run$1":[],"golang.org/x/tools/internal/lsp/analysis/simplifycompositelit.simplifyLiteral":[],"golang.org/x/tools/internal/lsp/analysis/simplifyrange.init":[],"golang.org/x/tools/internal/lsp/analysis/simplifyrange.isBlank":[[0]],"golang.org/x/tools/internal/lsp/analysis/simplifyrange.newlineIndex":[[1]],"golang.org/x/tools/internal/lsp/analysis/simplifyrange.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/simplifyrange.run$1":[],"golang.org/x/tools/internal/lsp/analysis/simplifyrange.suggestedFixes":[[]],"golang.org/x/tools/internal/lsp/analysis/simplifyslice.init":[],"golang.org/x/tools/internal/lsp/analysis/simplifyslice.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/simplifyslice.run$1":[],"golang.org/x/tools/internal/lsp/analysis/stubmethods.GetStubInfo":[[0,1]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.RelativeToFiles":[[]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.RelativeToFiles$1":[[0]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.concreteType":[[0,1],[]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.enclosingFunction":[[0]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.fromAssignStmt":[[0,1]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.fromCallExpr":[[0,2]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.fromReturnStmt":[[0,2,3],[1,3]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.fromValueSpec":[[0,1]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.ifaceObjFromType":[[0]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.ifaceType":[[0,1]],"golang.org/x/tools/internal/lsp/analysis/stubmethods.init":[],"golang.org/x/tools/internal/lsp/analysis/stubmethods.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/undeclaredname.SuggestedFix":[[],[3,5]],"golang.org/x/tools/internal/lsp/analysis/undeclaredname.init":[],"golang.org/x/tools/internal/lsp/analysis/undeclaredname.newFunctionDeclaration":[[],[0,1,3]],"golang.org/x/tools/internal/lsp/analysis/undeclaredname.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/undeclaredname.runForError":[],"golang.org/x/tools/internal/lsp/analysis/undeclaredname.typeToArgName":[[]],"golang.org/x/tools/internal/lsp/analysis/undeclaredname.typeToArgName$1":[[0]],"golang.org/x/tools/internal/lsp/analysis/unusedparams.init":[],"golang.org/x/tools/internal/lsp/analysis/unusedparams.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/unusedparams.run$1":[],"golang.org/x/tools/internal/lsp/analysis/unusedparams.run$1$1":[[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.deleteStmtFromBlock":[[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.exprMayHaveSideEffects":[[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.exprMayHaveSideEffects$1":[[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.init":[],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.removeVariableFromAssignment":[[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.removeVariableFromSpec":[[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.runForError":[[]],"golang.org/x/tools/internal/lsp/analysis/unusedvariable.suggestedFixMessage":[[]],"golang.org/x/tools/internal/lsp/analysis/useany.init":[],"golang.org/x/tools/internal/lsp/analysis/useany.run":[[],[]],"golang.org/x/tools/internal/lsp/analysis/useany.run$1":[],"golang.org/x/tools/internal/lsp/browser.Commands":[[]],"golang.org/x/tools/internal/lsp/browser.Open":[[]],"golang.org/x/tools/internal/lsp/browser.appearsSuccessful":[[]],"golang.org/x/tools/internal/lsp/browser.appearsSuccessful$1":[],"golang.org/x/tools/internal/lsp/browser.init":[],"golang.org/x/tools/internal/lsp/bug.Errorf":[[0,1]],"golang.org/x/tools/internal/lsp/bug.List":[[]],"golang.org/x/tools/internal/lsp/bug.List$1":[[]],"golang.org/x/tools/internal/lsp/bug.Notify":[[]],"golang.org/x/tools/internal/lsp/bug.Report":[],"golang.org/x/tools/internal/lsp/bug.Reportf":[],"golang.org/x/tools/internal/lsp/bug.init":[],"golang.org/x/tools/internal/lsp/command.Dispatch":[[],[1]],"golang.org/x/tools/internal/lsp/command.ID":[[0]],"golang.org/x/tools/internal/lsp/command.MarshalArgs":[[],[]],"golang.org/x/tools/internal/lsp/command.NewAddDependencyCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewAddImportCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewApplyFixCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewCheckUpgradesCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewEditGoDirectiveCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewGCDetailsCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewGenerateCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewGenerateGoplsModCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewGoGetPackageCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewListImportsCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewListKnownPackagesCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewRegenerateCgoCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewRemoveDependencyCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewRunTestsCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewRunVulncheckExpCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewStartDebuggingCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewTestCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewTidyCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewToggleGCDetailsCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewUpdateGoSumCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewUpgradeDependencyCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.NewVendorCommand":[[0],[]],"golang.org/x/tools/internal/lsp/command.UnmarshalArgs":[[0,1]],"golang.org/x/tools/internal/lsp/command.init":[],"golang.org/x/tools/internal/lsp/command/commandmeta.Load":[[],[],[]],"golang.org/x/tools/internal/lsp/command/commandmeta.findField":[[0],[1]],"golang.org/x/tools/internal/lsp/command/commandmeta.init":[],"golang.org/x/tools/internal/lsp/command/commandmeta.lspName":[[0]],"golang.org/x/tools/internal/lsp/command/commandmeta.splitCamel":[[0]],"golang.org/x/tools/internal/lsp/command/commandmeta.splitCamel$1":[[0]],"golang.org/x/tools/internal/lsp/command/commandmeta.splitDoc":[[0],[0]],"golang.org/x/tools/internal/lsp/command/gen.Generate":[[],[]],"golang.org/x/tools/internal/lsp/command/gen.Generate$1":[[0]],"golang.org/x/tools/internal/lsp/command/gen.Generate$2":[[]],"golang.org/x/tools/internal/lsp/command/gen.init":[],"golang.org/x/tools/internal/lsp/command/gen.pkgPath":[[0]],"golang.org/x/tools/internal/lsp/debug/log.LabeledLevel":[[]],"golang.org/x/tools/internal/lsp/debug/log.init":[],"golang.org/x/tools/internal/lsp/debug/tag.init":[],"golang.org/x/tools/internal/lsp/diff.ApplyEdits":[[0,1]],"golang.org/x/tools/internal/lsp/diff.LineEdits":[[0,1]],"golang.org/x/tools/internal/lsp/diff.NComputeEdits":[[],[0,1,2]],"golang.org/x/tools/internal/lsp/diff.NComputeLineEdits":[[],[0,1,2]],"golang.org/x/tools/internal/lsp/diff.SortTextEdits":[],"golang.org/x/tools/internal/lsp/diff.SortTextEdits$1":[[]],"golang.org/x/tools/internal/lsp/diff.ToUnified":[[0,1,2,3]],"golang.org/x/tools/internal/lsp/diff.addEdit":[[0,1,2]],"golang.org/x/tools/internal/lsp/diff.addEqualLines":[[]],"golang.org/x/tools/internal/lsp/diff.convertDiffs":[[],[0,1]],"golang.org/x/tools/internal/lsp/diff.init":[],"golang.org/x/tools/internal/lsp/diff.lineEdits":[[0,1]],"golang.org/x/tools/internal/lsp/diff.lineOffsets":[[0]],"golang.org/x/tools/internal/lsp/diff.needrunes":[[]],"golang.org/x/tools/internal/lsp/diff.newSpan":[[0,1,2]],"golang.org/x/tools/internal/lsp/diff.prepareEdits":[[1],[1]],"golang.org/x/tools/internal/lsp/diff.runeOffsets":[[0]],"golang.org/x/tools/internal/lsp/diff.splitLines":[[0]],"golang.org/x/tools/internal/lsp/diff.strJoin":[[0]],"golang.org/x/tools/internal/lsp/diff/difftest.DiffTest":[],"golang.org/x/tools/internal/lsp/diff/difftest.DiffTest$1":[],"golang.org/x/tools/internal/lsp/diff/difftest.init":[],"golang.org/x/tools/internal/lsp/diff/difftest.init#1":[],"golang.org/x/tools/internal/lsp/diff/difftest.newSpan":[[0,1]],"golang.org/x/tools/internal/lsp/diff/lcs.Compute":[[0,1,2],[0,1,2]],"golang.org/x/tools/internal/lsp/diff/lcs.appendlcs":[[0,1,2]],"golang.org/x/tools/internal/lsp/diff/lcs.checkDK":[],"golang.org/x/tools/internal/lsp/diff/lcs.init":[],"golang.org/x/tools/internal/lsp/diff/lcs.newegraph":[[0,1,2]],"golang.org/x/tools/internal/lsp/diff/lcs.neweq":[[0,1]],"golang.org/x/tools/internal/lsp/diff/lcs.newtriang":[[]],"golang.org/x/tools/internal/lsp/diff/lcs.ok":[[0,1]],"golang.org/x/tools/internal/lsp/diff/lcs.overlap":[[],[0,1]],"golang.org/x/tools/internal/lsp/diff/lcs.prependlcs":[[0,1,2]],"golang.org/x/tools/internal/lsp/diff/myers.ComputeEdits":[[0],[]],"golang.org/x/tools/internal/lsp/diff/myers.backtrack":[[0,1,2]],"golang.org/x/tools/internal/lsp/diff/myers.init":[],"golang.org/x/tools/internal/lsp/diff/myers.operations":[[]],"golang.org/x/tools/internal/lsp/diff/myers.operations$1":[],"golang.org/x/tools/internal/lsp/diff/myers.shortestEditSequence":[[],[]],"golang.org/x/tools/internal/lsp/diff/myers.splitLines":[[0]],"golang.org/x/tools/internal/lsp/fake.NewEdit":[[0,1,2,3,4]],"golang.org/x/tools/internal/lsp/fake.NewEditor":[[0,1]],"golang.org/x/tools/internal/lsp/fake.NewSandbox":[[],[0]],"golang.org/x/tools/internal/lsp/fake.NewSandbox$1":[],"golang.org/x/tools/internal/lsp/fake.NewWorkdir":[[0]],"golang.org/x/tools/internal/lsp/fake.Tempdir":[[],[0]],"golang.org/x/tools/internal/lsp/fake.UnpackTxt":[[0]],"golang.org/x/tools/internal/lsp/fake.WriteFileData":[[0,2]],"golang.org/x/tools/internal/lsp/fake.WriteProxy":[[0],[0,1]],"golang.org/x/tools/internal/lsp/fake.contentPosition":[[1],[0,1]],"golang.org/x/tools/internal/lsp/fake.convertEdits":[[0]],"golang.org/x/tools/internal/lsp/fake.editContent":[[],[]],"golang.org/x/tools/internal/lsp/fake.editContent$1":[[]],"golang.org/x/tools/internal/lsp/fake.editContent$2":[],"golang.org/x/tools/internal/lsp/fake.fromProtocolPosition":[[0]],"golang.org/x/tools/internal/lsp/fake.fromProtocolTextEdit":[[0]],"golang.org/x/tools/internal/lsp/fake.hashFile":[[]],"golang.org/x/tools/internal/lsp/fake.inText":[[]],"golang.org/x/tools/internal/lsp/fake.init":[],"golang.org/x/tools/internal/lsp/fake.init$1":[[]],"golang.org/x/tools/internal/lsp/fake.init$2":[[]],"golang.org/x/tools/internal/lsp/fake.languageID":[[1]],"golang.org/x/tools/internal/lsp/fake.lines":[[0]],"golang.org/x/tools/internal/lsp/fake.normalizeEOL":[[0]],"golang.org/x/tools/internal/lsp/fake.regexpRange":[[0,1],[0,1],[0,1]],"golang.org/x/tools/internal/lsp/fake.removeAll":[[0]],"golang.org/x/tools/internal/lsp/fake.splitModuleVersionPath":[[0],[0],[0]],"golang.org/x/tools/internal/lsp/fake.toURI":[[0]],"golang.org/x/tools/internal/lsp/fake.validateConfig":[[]],"golang.org/x/tools/internal/lsp/fuzzy.FindBestMatch":[[1]],"golang.org/x/tools/internal/lsp/fuzzy.LastSegment":[[0]],"golang.org/x/tools/internal/lsp/fuzzy.NewMatcher":[[0]],"golang.org/x/tools/internal/lsp/fuzzy.NewSymbolMatcher":[[]],"golang.org/x/tools/internal/lsp/fuzzy.RuneRoles":[[1]],"golang.org/x/tools/internal/lsp/fuzzy.Words":[],"golang.org/x/tools/internal/lsp/fuzzy.dir":[[]],"golang.org/x/tools/internal/lsp/fuzzy.fromChunks":[[0,1]],"golang.org/x/tools/internal/lsp/fuzzy.init":[],"golang.org/x/tools/internal/lsp/fuzzy.score":[[0,1]],"golang.org/x/tools/internal/lsp/fuzzy.toLower":[[0,1]],"golang.org/x/tools/internal/lsp/helper.doTypes":[],"golang.org/x/tools/internal/lsp/helper.doTypes$1":[[]],"golang.org/x/tools/internal/lsp/helper.doUses":[],"golang.org/x/tools/internal/lsp/helper.init":[],"golang.org/x/tools/internal/lsp/helper.inter":[[]],"golang.org/x/tools/internal/lsp/helper.main":[],"golang.org/x/tools/internal/lsp/helper.output":[],"golang.org/x/tools/internal/lsp/helper.whatis":[[0]],"golang.org/x/tools/internal/lsp/lsppos.NewMapper":[[0]],"golang.org/x/tools/internal/lsp/lsppos.NewTokenMapper":[[0,1]],"golang.org/x/tools/internal/lsp/lsppos.UTF16len":[[]],"golang.org/x/tools/internal/lsp/lsppos.init":[],"golang.org/x/tools/internal/lsp/progress.NewEventWriter":[[0,1]],"golang.org/x/tools/internal/lsp/progress.NewTracker":[[0]],"golang.org/x/tools/internal/lsp/progress.NewWorkDoneWriter":[[0,1]],"golang.org/x/tools/internal/lsp/progress.init":[],"golang.org/x/tools/internal/lsp/protocol.Call":[[1,4]],"golang.org/x/tools/internal/lsp/protocol.CancelHandler":[[]],"golang.org/x/tools/internal/lsp/protocol.CancelHandler$1":[[]],"golang.org/x/tools/internal/lsp/protocol.CancelHandler$1$1":[[]],"golang.org/x/tools/internal/lsp/protocol.ClientDispatcher":[[0]],"golang.org/x/tools/internal/lsp/protocol.ClientDispatcherV2":[[0]],"golang.org/x/tools/internal/lsp/protocol.ClientHandler":[[]],"golang.org/x/tools/internal/lsp/protocol.ClientHandler$1":[[]],"golang.org/x/tools/internal/lsp/protocol.ClientHandlerV2":[[]],"golang.org/x/tools/internal/lsp/protocol.ClientHandlerV2$1":[[],[]],"golang.org/x/tools/internal/lsp/protocol.ClientHandlerV2$1$1":[[]],"golang.org/x/tools/internal/lsp/protocol.ComparePosition":[[]],"golang.org/x/tools/internal/lsp/protocol.CompareRange":[[]],"golang.org/x/tools/internal/lsp/protocol.Handlers":[[]],"golang.org/x/tools/internal/lsp/protocol.Intersect":[[0,1]],"golang.org/x/tools/internal/lsp/protocol.IsPoint":[[0]],"golang.org/x/tools/internal/lsp/protocol.LogEvent":[[0]],"golang.org/x/tools/internal/lsp/protocol.LoggingStream":[[0,1]],"golang.org/x/tools/internal/lsp/protocol.NewColumnMapper":[[0,1]],"golang.org/x/tools/internal/lsp/protocol.ParseCompletionItemKind":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseCompletionTriggerKind":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseDiagnosticSeverity":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseDiagnosticTag":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseDocumentHighlightKind":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseFileChangeType":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseInitializeError":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseInsertTextFormat":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseMessageType":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseSymbolKind":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseTextDocumentSaveReason":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseTextDocumentSyncKind":[[]],"golang.org/x/tools/internal/lsp/protocol.ParseWatchKind":[[]],"golang.org/x/tools/internal/lsp/protocol.ServerDispatcher":[[0]],"golang.org/x/tools/internal/lsp/protocol.ServerDispatcherV2":[[0]],"golang.org/x/tools/internal/lsp/protocol.ServerHandler":[[]],"golang.org/x/tools/internal/lsp/protocol.ServerHandler$1":[[]],"golang.org/x/tools/internal/lsp/protocol.ServerHandlerV2":[[]],"golang.org/x/tools/internal/lsp/protocol.ServerHandlerV2$1":[[],[]],"golang.org/x/tools/internal/lsp/protocol.ServerHandlerV2$1$1":[[]],"golang.org/x/tools/internal/lsp/protocol.URIFromPath":[[0]],"golang.org/x/tools/internal/lsp/protocol.URIFromSpanURI":[[0]],"golang.org/x/tools/internal/lsp/protocol.WithClient":[[0,1]],"golang.org/x/tools/internal/lsp/protocol.cancelCall":[],"golang.org/x/tools/internal/lsp/protocol.clientDispatch":[[],[]],"golang.org/x/tools/internal/lsp/protocol.formatEnum":[],"golang.org/x/tools/internal/lsp/protocol.init":[],"golang.org/x/tools/internal/lsp/protocol.init#1":[],"golang.org/x/tools/internal/lsp/protocol.parseEnum":[[]],"golang.org/x/tools/internal/lsp/protocol.req2to1":[[0]],"golang.org/x/tools/internal/lsp/protocol.sendParseError":[[]],"golang.org/x/tools/internal/lsp/protocol.serverDispatch":[[],[]],"golang.org/x/tools/internal/lsp/safetoken.InRange":[[0,1]],"golang.org/x/tools/internal/lsp/safetoken.Offset":[[0,1],[0,1]],"golang.org/x/tools/internal/lsp/safetoken.Pos":[[0,1],[0,1]],"golang.org/x/tools/internal/lsp/safetoken.init":[],"golang.org/x/tools/internal/lsp/snippet.init":[],"golang.org/x/tools/internal/memoize.NewPromise":[[0,1]],"golang.org/x/tools/internal/memoize.NewStore":[[0]],"golang.org/x/tools/internal/memoize.init":[],"golang.org/x/tools/internal/packagesinternal.init":[],"golang.org/x/tools/internal/packagesinternal.init$1":[[]],"golang.org/x/tools/internal/packagesinternal.init$2":[[]],"golang.org/x/tools/internal/packagesinternal.init$3":[[]],"golang.org/x/tools/internal/packagesinternal.init$4":[],"golang.org/x/tools/internal/packagesinternal.init$5":[],"golang.org/x/tools/internal/packagesinternal.init$6":[],"golang.org/x/tools/internal/persistent.NewMap":[[0]],"golang.org/x/tools/internal/persistent.init":[],"golang.org/x/tools/internal/persistent.merge":[[0,1]],"golang.org/x/tools/internal/persistent.newNodeWithRef":[[0,1,2]],"golang.org/x/tools/internal/persistent.split":[[0],[0],[0]],"golang.org/x/tools/internal/persistent.union":[[0,1]],"golang.org/x/tools/internal/proxydir.ToURL":[[0]],"golang.org/x/tools/internal/proxydir.WriteModuleVersion":[[0,1,2,3]],"golang.org/x/tools/internal/proxydir.checkClose":[],"golang.org/x/tools/internal/proxydir.init":[],"golang.org/x/tools/internal/span.Compare":[[]],"golang.org/x/tools/internal/span.ComparePoint":[[]],"golang.org/x/tools/internal/span.CompareURI":[[]],"golang.org/x/tools/internal/span.FileSpan":[[0,2],[0,1,2,3]],"golang.org/x/tools/internal/span.FromUTF16Column":[[0],[0]],"golang.org/x/tools/internal/span.New":[[0,1,2]],"golang.org/x/tools/internal/span.NewPoint":[[0,1,2]],"golang.org/x/tools/internal/span.NewRange":[[0,1,2]],"golang.org/x/tools/internal/span.NewTokenFile":[[0]],"golang.org/x/tools/internal/span.Parse":[[0]],"golang.org/x/tools/internal/span.ParseInDir":[[0]],"golang.org/x/tools/internal/span.ParseInDir$1":[[0]],"golang.org/x/tools/internal/span.ToOffset":[[0,2],[0,1,2]],"golang.org/x/tools/internal/span.ToPosition":[[0,1],[0,1],[0,1]],"golang.org/x/tools/internal/span.ToUTF16Column":[[],[0]],"golang.org/x/tools/internal/span.URIFromPath":[[0]],"golang.org/x/tools/internal/span.URIFromURI":[[0]],"golang.org/x/tools/internal/span.comparePoint":[[]],"golang.org/x/tools/internal/span.equalURI":[[]],"golang.org/x/tools/internal/span.filename":[[0],[0]],"golang.org/x/tools/internal/span.init":[],"golang.org/x/tools/internal/span.isWindowsDrivePath":[[0]],"golang.org/x/tools/internal/span.isWindowsDriveURIPath":[[0]],"golang.org/x/tools/internal/span.offset":[[0,1],[0,1]],"golang.org/x/tools/internal/span.position":[[0,1],[0,1],[0,1],[0,1]],"golang.org/x/tools/internal/span.positionFromOffset":[[0,1],[0,1],[0,1],[0,1]],"golang.org/x/tools/internal/span.rstripSuffix":[[0]],"golang.org/x/tools/internal/span.rstripSuffix$1":[[0]],"golang.org/x/tools/internal/stack.Capture":[[]],"golang.org/x/tools/internal/stack.Diff":[[0,1]],"golang.org/x/tools/internal/stack.NewScanner":[[0]],"golang.org/x/tools/internal/stack.Parse":[[0],[]],"golang.org/x/tools/internal/stack.Process":[[1]],"golang.org/x/tools/internal/stack.Summarize":[[]],"golang.org/x/tools/internal/stack.init":[],"golang.org/x/tools/internal/stack.parseFrame":[[0],[]],"golang.org/x/tools/internal/stack.parseFunction":[[0],[]],"golang.org/x/tools/internal/stack.parseGoroutine":[[0],[]],"golang.org/x/tools/internal/stack.parsePosition":[[0],[]],"golang.org/x/tools/internal/stack/gostacks.init":[],"golang.org/x/tools/internal/stack/gostacks.main":[],"golang.org/x/tools/internal/stack/stacktest.NoLeak":[],"golang.org/x/tools/internal/stack/stacktest.NoLeak$1":[],"golang.org/x/tools/internal/stack/stacktest.init":[],"golang.org/x/tools/internal/testenv.Deadline":[[0],[]],"golang.org/x/tools/internal/testenv.ExitIfSmallMachine":[],"golang.org/x/tools/internal/testenv.Go1Point":[[]],"golang.org/x/tools/internal/testenv.NeedsGo1Point":[],"golang.org/x/tools/internal/testenv.NeedsGoBuild":[],"golang.org/x/tools/internal/testenv.NeedsGoPackages":[],"golang.org/x/tools/internal/testenv.NeedsGoPackagesEnv":[],"golang.org/x/tools/internal/testenv.NeedsTool":[],"golang.org/x/tools/internal/testenv.SkipAfterGo1Point":[],"golang.org/x/tools/internal/testenv.allowMissingTool":[[]],"golang.org/x/tools/internal/testenv.cgoEnabled":[[],[]],"golang.org/x/tools/internal/testenv.hasTool":[[0]],"golang.org/x/tools/internal/testenv.hasTool$1":[],"golang.org/x/tools/internal/testenv.init":[],"golang.org/x/tools/internal/testenv.packageMainIsDevel":[[]],"golang.org/x/tools/internal/tool.CommandLineErrorf":[[]],"golang.org/x/tools/internal/tool.Main":[],"golang.org/x/tools/internal/tool.Run":[[1,2]],"golang.org/x/tools/internal/tool.Run$1":[],"golang.org/x/tools/internal/tool.Run$2":[],"golang.org/x/tools/internal/tool.Run$3":[],"golang.org/x/tools/internal/tool.addFlag":[],"golang.org/x/tools/internal/tool.addFlags":[[2]],"golang.org/x/tools/internal/tool.init":[],"golang.org/x/tools/internal/tool.resolve":[[0]],"golang.org/x/tools/internal/typeparams.CoreType":[[0]],"golang.org/x/tools/internal/typeparams.ForFuncType":[[0]],"golang.org/x/tools/internal/typeparams.ForNamed":[[0]],"golang.org/x/tools/internal/typeparams.ForSignature":[[0]],"golang.org/x/tools/internal/typeparams.ForTypeSpec":[[0]],"golang.org/x/tools/internal/typeparams.GenericAssignableTo":[[0,1,2]],"golang.org/x/tools/internal/typeparams.GetInstances":[[0]],"golang.org/x/tools/internal/typeparams.InitInstanceInfo":[],"golang.org/x/tools/internal/typeparams.Instantiate":[[0,1,2],[1]],"golang.org/x/tools/internal/typeparams.InterfaceTermSet":[[0],[0]],"golang.org/x/tools/internal/typeparams.IsComparable":[[]],"golang.org/x/tools/internal/typeparams.IsImplicit":[[0]],"golang.org/x/tools/internal/typeparams.IsMethodSet":[[]],"golang.org/x/tools/internal/typeparams.IsTypeParam":[[]],"golang.org/x/tools/internal/typeparams.MarkImplicit":[],"golang.org/x/tools/internal/typeparams.NamedTypeArgs":[[0]],"golang.org/x/tools/internal/typeparams.NamedTypeOrigin":[[0]],"golang.org/x/tools/internal/typeparams.NewContext":[[]],"golang.org/x/tools/internal/typeparams.NewSignatureType":[[0,1,2,3,4,5]],"golang.org/x/tools/internal/typeparams.NewTerm":[[0,1]],"golang.org/x/tools/internal/typeparams.NewTypeParam":[[0,1]],"golang.org/x/tools/internal/typeparams.NewUnion":[[0]],"golang.org/x/tools/internal/typeparams.OriginMethod":[[0]],"golang.org/x/tools/internal/typeparams.PackIndexExpr":[[0,1,2,3]],"golang.org/x/tools/internal/typeparams.RecvTypeParams":[[0]],"golang.org/x/tools/internal/typeparams.SetForNamed":[],"golang.org/x/tools/internal/typeparams.SetTypeParamConstraint":[],"golang.org/x/tools/internal/typeparams.StructuralTerms":[[0],[0]],"golang.org/x/tools/internal/typeparams.UnionTermSet":[[0],[0]],"golang.org/x/tools/internal/typeparams.UnpackIndexExpr":[[0],[0],[0],[0]],"golang.org/x/tools/internal/typeparams._NormalTerms":[[0],[0]],"golang.org/x/tools/internal/typeparams.computeTermSet":[[0],[0]],"golang.org/x/tools/internal/typeparams.computeTermSetInternal":[[0,1],[0]],"golang.org/x/tools/internal/typeparams.computeTermSetInternal$1":[],"golang.org/x/tools/internal/typeparams.computeTermSetInternal$2":[],"golang.org/x/tools/internal/typeparams.indentf":[],"golang.org/x/tools/internal/typeparams.init":[],"golang.org/x/tools/internal/typeparams.under":[[0]],"golang.org/x/tools/internal/typeparams/genericfeatures.ForPackage":[[]],"golang.org/x/tools/internal/typeparams/genericfeatures.ForPackage$1":[],"golang.org/x/tools/internal/typeparams/genericfeatures.init":[],"golang.org/x/tools/internal/typesinternal.ReadGo116ErrorData":[[0],[0],[0],[]],"golang.org/x/tools/internal/typesinternal.SetUsesCgo":[[]],"golang.org/x/tools/internal/typesinternal.init":[],"golang.org/x/tools/internal/typesinternal.init#1":[],"golang.org/x/tools/internal/typesinternal.init#1$1":[[]],"golang.org/x/tools/internal/typesinternal.init$1":[[]],"golang.org/x/tools/internal/xcontext.Detach":[[0]],"golang.org/x/tools/internal/xcontext.init":[],"golang.org/x/tools/playground.Proxy":[[]],"golang.org/x/tools/playground.bounce":[],"golang.org/x/tools/playground.init":[],"golang.org/x/tools/playground.init#1":[],"golang.org/x/tools/playground.passThru":[[0,1]],"golang.org/x/tools/playground.post":[[],[0,1,3]],"golang.org/x/tools/refactor/eg.NewTransformer":[[0,1,2,4],[1,2,3]],"golang.org/x/tools/refactor/eg.NewTransformer$1":[[]],"golang.org/x/tools/refactor/eg.WriteAST":[[1,2]],"golang.org/x/tools/refactor/eg.WriteAST$1":[],"golang.org/x/tools/refactor/eg.astString":[[]],"golang.org/x/tools/refactor/eg.funcSig":[[0,1]],"golang.org/x/tools/refactor/eg.init":[],"golang.org/x/tools/refactor/eg.isRef":[[0,1]],"golang.org/x/tools/refactor/eg.mergeTypeInfo":[],"golang.org/x/tools/refactor/eg.rvToExpr":[[0]],"golang.org/x/tools/refactor/eg.setValue":[],"golang.org/x/tools/refactor/eg.setValue$1":[],"golang.org/x/tools/refactor/eg.soleExpr":[[0],[]],"golang.org/x/tools/refactor/eg.stmtAndExpr":[[0],[0],[]],"golang.org/x/tools/refactor/eg.unparen":[[0]],"golang.org/x/tools/refactor/eg.updateTypeInfo":[],"golang.org/x/tools/refactor/importgraph.Build":[[],[],[]],"golang.org/x/tools/refactor/importgraph.Build$1":[],"golang.org/x/tools/refactor/importgraph.Build$1$1":[],"golang.org/x/tools/refactor/importgraph.Build$1$1$1":[],"golang.org/x/tools/refactor/importgraph.Build$1$1$1$1":[[0]],"golang.org/x/tools/refactor/importgraph.init":[],"golang.org/x/tools/refactor/rename.Main":[[0,1,2,3]],"golang.org/x/tools/refactor/rename.Main$1":[],"golang.org/x/tools/refactor/rename.Move":[[0,1,2]],"golang.org/x/tools/refactor/rename.ambiguityError":[[1]],"golang.org/x/tools/refactor/rename.containsHardErrors":[[]],"golang.org/x/tools/refactor/rename.deeper":[[]],"golang.org/x/tools/refactor/rename.deref":[[0]],"golang.org/x/tools/refactor/rename.diff":[[0]],"golang.org/x/tools/refactor/rename.enclosingBlock":[[0,1]],"golang.org/x/tools/refactor/rename.findFromObjects":[[0,1],[0,1]],"golang.org/x/tools/refactor/rename.findFromObjectsInFile":[[0,1],[0,1]],"golang.org/x/tools/refactor/rename.findObjects":[[0,1],[0,1]],"golang.org/x/tools/refactor/rename.forEachLexicalRef":[[]],"golang.org/x/tools/refactor/rename.forEachLexicalRef$1":[[]],"golang.org/x/tools/refactor/rename.funcDecl":[[0]],"golang.org/x/tools/refactor/rename.generated":[[]],"golang.org/x/tools/refactor/rename.identAtOffset":[[]],"golang.org/x/tools/refactor/rename.identAtOffset$1":[[]],"golang.org/x/tools/refactor/rename.importName":[[0,1,4]],"golang.org/x/tools/refactor/rename.init":[],"golang.org/x/tools/refactor/rename.init$1":[[0,1]],"golang.org/x/tools/refactor/rename.init$2":[],"golang.org/x/tools/refactor/rename.init$3":[[]],"golang.org/x/tools/refactor/rename.isDigit":[[0]],"golang.org/x/tools/refactor/rename.isInterface":[[]],"golang.org/x/tools/refactor/rename.isLetter":[[0]],"golang.org/x/tools/refactor/rename.isLocal":[[]],"golang.org/x/tools/refactor/rename.isPackageLevel":[[0]],"golang.org/x/tools/refactor/rename.isValidIdentifier":[[0]],"golang.org/x/tools/refactor/rename.lexicalLookup":[[0],[0,1]],"golang.org/x/tools/refactor/rename.loadProgram":[[0],[0]],"golang.org/x/tools/refactor/rename.loadProgram$1":[[0]],"golang.org/x/tools/refactor/rename.moveCmd":[[],[]],"golang.org/x/tools/refactor/rename.objectKind":[[]],"golang.org/x/tools/refactor/rename.parseFromFlag":[[1],[0,1]],"golang.org/x/tools/refactor/rename.parseImportPath":[[0]],"golang.org/x/tools/refactor/rename.parseObjectSpec":[[1]],"golang.org/x/tools/refactor/rename.parseOffsetFlag":[[1],[0,1]],"golang.org/x/tools/refactor/rename.plural":[[]],"golang.org/x/tools/refactor/rename.reallyWriteFile":[[0]],"golang.org/x/tools/refactor/rename.recv":[[0]],"golang.org/x/tools/refactor/rename.requiresGlobalRename":[[]],"golang.org/x/tools/refactor/rename.sameFile":[[]],"golang.org/x/tools/refactor/rename.sameLine":[[0,1,2]],"golang.org/x/tools/refactor/rename.searchDefs":[[0]],"golang.org/x/tools/refactor/rename.someUse":[[0]],"golang.org/x/tools/refactor/rename.srcDir":[[0],[1]],"golang.org/x/tools/refactor/rename.subpackages":[[]],"golang.org/x/tools/refactor/rename.subpackages$1":[],"golang.org/x/tools/refactor/rename.typeKind":[[]],"golang.org/x/tools/refactor/rename.typeSwitchVar":[[0,1]],"golang.org/x/tools/refactor/rename.unparen":[[0]],"golang.org/x/tools/refactor/satisfy.coreType":[[0]],"golang.org/x/tools/refactor/satisfy.deref":[[0]],"golang.org/x/tools/refactor/satisfy.init":[],"golang.org/x/tools/refactor/satisfy.instance":[[]],"golang.org/x/tools/refactor/satisfy.isInterface":[[]],"golang.org/x/tools/refactor/satisfy.unparen":[[0]],"golang.org/x/tools/txtar.Format":[[]],"golang.org/x/tools/txtar.Parse":[[0]],"golang.org/x/tools/txtar.ParseFile":[[],[0]],"golang.org/x/tools/txtar.findFileMarker":[[0],[0],[0]],"golang.org/x/tools/txtar.fixNL":[[0]],"golang.org/x/tools/txtar.init":[],"golang.org/x/tools/txtar.isMarker":[[0],[0]],"hash.init":[],"hash/adler32.Checksum":[[0]],"hash/adler32.New":[[]],"hash/adler32.appendUint32":[[0,1]],"hash/adler32.init":[],"hash/adler32.readUint32":[[0]],"hash/adler32.update":[[0,1]],"hash/crc32.Checksum":[[1]],"hash/crc32.ChecksumIEEE":[[]],"hash/crc32.MakeTable":[[]],"hash/crc32.New":[[0]],"hash/crc32.NewIEEE":[[]],"hash/crc32.Update":[[0,1]],"hash/crc32.appendUint32":[[0,1]],"hash/crc32.archAvailableCastagnoli":[[]],"hash/crc32.archAvailableIEEE":[[]],"hash/crc32.archInitCastagnoli":[],"hash/crc32.archInitIEEE":[],"hash/crc32.archUpdateCastagnoli":[[]],"hash/crc32.archUpdateIEEE":[[0]],"hash/crc32.castagnoliInit":[],"hash/crc32.castagnoliInit$1":[[0]],"hash/crc32.castagnoliSSE42":[[]],"hash/crc32.castagnoliSSE42Triple":[[],[],[]],"hash/crc32.castagnoliShift":[[0]],"hash/crc32.ieeeCLMUL":[[]],"hash/crc32.ieeeInit":[],"hash/crc32.ieeeInit$1":[[0]],"hash/crc32.init":[],"hash/crc32.readUint32":[[0]],"hash/crc32.simpleMakeTable":[[]],"hash/crc32.simplePopulateTable":[],"hash/crc32.simpleUpdate":[[0,1]],"hash/crc32.slicingMakeTable":[[]],"hash/crc32.slicingUpdate":[[0,1]],"hash/crc32.tableSum":[[]],"hash/crc64.Checksum":[[1]],"hash/crc64.MakeTable":[[0]],"hash/crc64.New":[[0]],"hash/crc64.Update":[[0,1]],"hash/crc64.appendUint64":[[0,1]],"hash/crc64.buildSlicing8Tables":[],"hash/crc64.buildSlicing8TablesOnce":[],"hash/crc64.init":[],"hash/crc64.makeSlicingBy8Table":[[0]],"hash/crc64.makeTable":[[0]],"hash/crc64.readUint64":[[0]],"hash/crc64.tableSum":[[]],"hash/crc64.update":[[0,1]],"hash/fnv.New128":[[]],"hash/fnv.New128a":[[]],"hash/fnv.New32":[[]],"hash/fnv.New32a":[[]],"hash/fnv.New64":[[]],"hash/fnv.New64a":[[]],"hash/fnv.appendUint32":[[0,1]],"hash/fnv.appendUint64":[[0,1]],"hash/fnv.init":[],"hash/fnv.readUint32":[[0]],"hash/fnv.readUint64":[[0]],"hash/maphash.Bytes":[[0]],"hash/maphash.MakeSeed":[[]],"hash/maphash.String":[[0]],"hash/maphash.init":[],"hash/maphash.rthash":[[2]],"hash/maphash.runtime_fastrand64":[[]],"hash/maphash.runtime_memhash":[[]],"html.EscapeString":[[0]],"html.UnescapeString":[[0]],"html.init":[],"html.populateMaps":[],"html.unescapeEntity":[[1],[2]],"html/template.HTMLEscape":[],"html/template.HTMLEscapeString":[[0]],"html/template.HTMLEscaper":[[0]],"html/template.IsTrue":[[0],[]],"html/template.JSEscape":[],"html/template.JSEscapeString":[[0]],"html/template.JSEscaper":[[0]],"html/template.Must":[[0]],"html/template.New":[[0]],"html/template.ParseFS":[[],[0,1]],"html/template.ParseFiles":[[0],[0]],"html/template.ParseGlob":[[0],[0]],"html/template.URLQueryEscaper":[[0]],"html/template.appendCmd":[[0,1]],"html/template.asciiAlpha":[[0]],"html/template.asciiAlphaNum":[[0]],"html/template.attrEscaper":[[0]],"html/template.attrType":[[0]],"html/template.commentEscaper":[[]],"html/template.contextAfterText":[[0],[]],"html/template.cssEscaper":[[0]],"html/template.cssValueFilter":[[0]],"html/template.decodeCSS":[[0]],"html/template.eatAttrName":[[1],[]],"html/template.eatTagName":[[1],[0]],"html/template.eatWhiteSpace":[[1]],"html/template.endsWithCSSKeyword":[[0,1]],"html/template.ensurePipelineContains":[],"html/template.errorf":[[0,1,2]],"html/template.escFnsEq":[[0,1]],"html/template.escapeTemplate":[[0,1,2]],"html/template.evalArgs":[[0]],"html/template.filterSrcsetElement":[],"html/template.hexDecode":[[0]],"html/template.htmlEscaper":[[0]],"html/template.htmlNameFilter":[[0]],"html/template.htmlNospaceEscaper":[[0]],"html/template.htmlReplacer":[[0,1]],"html/template.indexTagEnd":[[]],"html/template.indirect":[[0]],"html/template.indirectToJSONMarshaler":[[0]],"html/template.indirectToStringerOrError":[[0]],"html/template.init":[],"html/template.isCSSNmchar":[[0]],"html/template.isCSSSpace":[[]],"html/template.isComment":[[]],"html/template.isHTMLSpace":[[0]],"html/template.isHTMLSpaceOrASCIIAlnum":[[0]],"html/template.isHex":[[0]],"html/template.isInTag":[[]],"html/template.isJSIdentPart":[[]],"html/template.isJSType":[[]],"html/template.isSafeURL":[[]],"html/template.join":[[0,1,2]],"html/template.joinRange":[[0,1]],"html/template.jsRegexpEscaper":[[0]],"html/template.jsStrEscaper":[[0]],"html/template.jsValEscaper":[[0]],"html/template.makeEscaper":[[0]],"html/template.newIdentCmd":[[0,1]],"html/template.nextJSCtx":[[1]],"html/template.normalizeEscFn":[[0]],"html/template.nudge":[[0]],"html/template.parseFS":[[0],[1,2]],"html/template.parseFiles":[[0,2],[2]],"html/template.parseGlob":[[0,1],[1]],"html/template.processURLOnto":[[]],"html/template.rcdataEscaper":[[0]],"html/template.readFileFS":[[]],"html/template.readFileFS$1":[[0],[],[0]],"html/template.readFileOS":[[0],[],[0]],"html/template.replace":[[0,1]],"html/template.skipCSSSpace":[[0]],"html/template.srcsetFilterAndEscaper":[[0]],"html/template.stringify":[[0],[]],"html/template.stripTags":[[0]],"html/template.tAfterName":[[0],[]],"html/template.tAttr":[[0],[]],"html/template.tAttrName":[[0],[]],"html/template.tBeforeValue":[[0],[]],"html/template.tBlockCmt":[[0],[]],"html/template.tCSS":[[0],[]],"html/template.tCSSStr":[[0],[]],"html/template.tError":[[0],[]],"html/template.tHTMLCmt":[[0],[]],"html/template.tJS":[[0],[]],"html/template.tJSDelimited":[[0],[]],"html/template.tLineCmt":[[0],[]],"html/template.tSpecialTagEnd":[[0],[]],"html/template.tTag":[[0],[]],"html/template.tText":[[0,1],[]],"html/template.tURL":[[0],[]],"html/template.urlEscaper":[[0]],"html/template.urlFilter":[[0]],"html/template.urlNormalizer":[[0]],"html/template.urlProcessor":[[1]],"image.Decode":[[],[],[]],"image.DecodeConfig":[[0],[],[0]],"image.NewAlpha":[[0]],"image.NewAlpha16":[[0]],"image.NewCMYK":[[0]],"image.NewGray":[[0]],"image.NewGray16":[[0]],"image.NewNRGBA":[[0]],"image.NewNRGBA64":[[0]],"image.NewNYCbCrA":[[0,1]],"image.NewPaletted":[[0,1]],"image.NewRGBA":[[0]],"image.NewRGBA64":[[0]],"image.NewUniform":[[0]],"image.NewYCbCr":[[0,1]],"image.Pt":[[0,1]],"image.Rect":[[0,1,2,3]],"image.RegisterFormat":[],"image.add2NonNeg":[[0,1]],"image.asReader":[[0]],"image.init":[],"image.match":[[]],"image.mul3NonNeg":[[0,1,2]],"image.pixelBufferLength":[[0,1]],"image.sniff":[[]],"image.yCbCrSize":[[0],[0],[0],[0]],"image/color.CMYKToRGB":[[0,3],[1,3],[2,3]],"image/color.ModelFunc":[[0]],"image/color.RGBToCMYK":[[0,1,2],[0,1,2],[0,1,2],[0,1,2]],"image/color.RGBToYCbCr":[[0,1,2],[0,1,2],[0,1,2]],"image/color.YCbCrToRGB":[[0,2],[0,1,2],[0,1]],"image/color.alpha16Model":[[0]],"image/color.alphaModel":[[0]],"image/color.cmykModel":[[0]],"image/color.gray16Model":[[0]],"image/color.grayModel":[[0]],"image/color.init":[],"image/color.nYCbCrAModel":[[0]],"image/color.nrgba64Model":[[0]],"image/color.nrgbaModel":[[0]],"image/color.rgba64Model":[[0]],"image/color.rgbaModel":[[0]],"image/color.sqDiff":[[0,1]],"image/color.yCbCrModel":[[0]],"image/color/palette.init":[],"image/draw.Draw":[],"image/draw.DrawMask":[],"image/draw.clamp":[[0]],"image/draw.clip":[],"image/draw.drawCMYK":[],"image/draw.drawCopyOver":[],"image/draw.drawCopySrc":[],"image/draw.drawFillOver":[],"image/draw.drawFillSrc":[],"image/draw.drawGlyphOver":[],"image/draw.drawGray":[],"image/draw.drawGrayMaskOver":[],"image/draw.drawNRGBAOver":[],"image/draw.drawNRGBASrc":[],"image/draw.drawPaletted":[],"image/draw.drawPaletted$1":[[],[],[],[]],"image/draw.drawPaletted$2":[[],[],[],[]],"image/draw.drawPaletted$3":[[],[],[],[]],"image/draw.drawPaletted$4":[[],[],[],[]],"image/draw.drawRGBA":[],"image/draw.drawRGBA64ImageMaskOver":[],"image/draw.drawRGBAMaskOver":[],"image/draw.init":[],"image/draw.processBackward":[[1,3]],"image/draw.sqDiff":[[0,1]],"image/gif.Decode":[[],[]],"image/gif.DecodeAll":[[],[]],"image/gif.DecodeConfig":[[],[]],"image/gif.Encode":[[0,1]],"image/gif.EncodeAll":[[0,1]],"image/gif.encodeColorTable":[[],[]],"image/gif.init":[],"image/gif.init#1":[],"image/gif.log2":[[]],"image/gif.readByte":[[],[]],"image/gif.readFull":[[0]],"image/gif.uninterlace":[],"image/gif.writeUint16":[],"image/internal/imageutil.DrawYCbCr":[[]],"image/internal/imageutil.init":[],"image/jpeg.Decode":[[],[]],"image/jpeg.DecodeConfig":[[],[]],"image/jpeg.Encode":[[0]],"image/jpeg.div":[[0,1]],"image/jpeg.fdct":[],"image/jpeg.grayToY":[],"image/jpeg.idct":[],"image/jpeg.init":[],"image/jpeg.init#1":[],"image/jpeg.init#2":[],"image/jpeg.min":[[0,1]],"image/jpeg.rgbaToYCbCr":[],"image/jpeg.scale":[],"image/jpeg.toYCbCr":[],"image/jpeg.yCbCrToYCbCr":[],"image/png.Decode":[[0],[0]],"image/png.DecodeConfig":[[0],[0]],"image/png.Encode":[[0,1]],"image/png.abs":[[0]],"image/png.abs8":[[0]],"image/png.cbPaletted":[[0]],"image/png.filter":[[]],"image/png.filterPaeth":[],"image/png.init":[],"image/png.init#1":[],"image/png.levelToZlib":[[]],"image/png.min":[[0,1]],"image/png.opaque":[[]],"image/png.paeth":[[0,1,2]],"image/png.zeroMemory":[],"index/suffixarray.New":[[0]],"index/suffixarray.assignID_32":[[]],"index/suffixarray.assignID_64":[[]],"index/suffixarray.assignID_8_32":[[]],"index/suffixarray.assignID_8_64":[[]],"index/suffixarray.bucketMax_32":[],"index/suffixarray.bucketMax_64":[],"index/suffixarray.bucketMax_8_32":[],"index/suffixarray.bucketMax_8_64":[],"index/suffixarray.bucketMin_32":[],"index/suffixarray.bucketMin_64":[],"index/suffixarray.bucketMin_8_32":[],"index/suffixarray.bucketMin_8_64":[],"index/suffixarray.expand_32":[],"index/suffixarray.expand_64":[],"index/suffixarray.expand_8_32":[],"index/suffixarray.expand_8_64":[],"index/suffixarray.freq_32":[[1,2]],"index/suffixarray.freq_64":[[1,2]],"index/suffixarray.freq_8_32":[[1,2]],"index/suffixarray.freq_8_64":[[1,2]],"index/suffixarray.induceL_32":[],"index/suffixarray.induceL_64":[],"index/suffixarray.induceL_8_32":[],"index/suffixarray.induceL_8_64":[],"index/suffixarray.induceS_32":[],"index/suffixarray.induceS_64":[],"index/suffixarray.induceS_8_32":[],"index/suffixarray.induceS_8_64":[],"index/suffixarray.induceSubL_32":[],"index/suffixarray.induceSubL_64":[],"index/suffixarray.induceSubL_8_32":[],"index/suffixarray.induceSubL_8_64":[],"index/suffixarray.induceSubS_32":[],"index/suffixarray.induceSubS_64":[],"index/suffixarray.induceSubS_8_32":[],"index/suffixarray.induceSubS_8_64":[],"index/suffixarray.init":[],"index/suffixarray.length_32":[],"index/suffixarray.length_64":[],"index/suffixarray.length_8_32":[],"index/suffixarray.length_8_64":[],"index/suffixarray.map_32":[],"index/suffixarray.map_64":[],"index/suffixarray.placeLMS_32":[[]],"index/suffixarray.placeLMS_64":[[]],"index/suffixarray.placeLMS_8_32":[[]],"index/suffixarray.placeLMS_8_64":[[]],"index/suffixarray.readInt":[[1],[0]],"index/suffixarray.readSlice":[[],[0]],"index/suffixarray.recurse_32":[],"index/suffixarray.recurse_64":[],"index/suffixarray.sais_32":[],"index/suffixarray.sais_64":[],"index/suffixarray.sais_8_32":[],"index/suffixarray.sais_8_64":[],"index/suffixarray.text_32":[],"index/suffixarray.text_64":[],"index/suffixarray.unmap_32":[],"index/suffixarray.unmap_64":[],"index/suffixarray.unmap_8_32":[],"index/suffixarray.unmap_8_64":[],"index/suffixarray.writeInt":[[0]],"index/suffixarray.writeSlice":[[],[0]],"internal/abi.FuncPCABI0":[[]],"internal/abi.FuncPCABIInternal":[[]],"internal/abi.init":[],"internal/buildcfg.Check":[],"internal/buildcfg.Getgoextlinkenabled":[[]],"internal/buildcfg.ParseGOEXPERIMENT":[[],[2]],"internal/buildcfg.ParseGOEXPERIMENT$1":[],"internal/buildcfg.envOr":[[1]],"internal/buildcfg.expList":[[0]],"internal/buildcfg.goamd64":[[]],"internal/buildcfg.goarm":[[]],"internal/buildcfg.gomips":[[]],"internal/buildcfg.gomips64":[[]],"internal/buildcfg.goppc64":[[]],"internal/buildcfg.gowasm":[[]],"internal/buildcfg.init":[],"internal/buildcfg.init$1":[[]],"internal/bytealg.Compare":[[]],"internal/bytealg.Count":[[]],"internal/bytealg.CountString":[[]],"internal/bytealg.Cutover":[[0]],"internal/bytealg.Equal":[[0,1]],"internal/bytealg.HashStr":[[0],[]],"internal/bytealg.HashStrBytes":[[0],[]],"internal/bytealg.HashStrRev":[[0],[]],"internal/bytealg.HashStrRevBytes":[[0],[]],"internal/bytealg.Index":[[]],"internal/bytealg.IndexByte":[[]],"internal/bytealg.IndexByteString":[[]],"internal/bytealg.IndexRabinKarp":[[]],"internal/bytealg.IndexRabinKarpBytes":[[]],"internal/bytealg.IndexString":[[]],"internal/bytealg.abigen_runtime_cmpstring":[[]],"internal/bytealg.abigen_runtime_memequal":[[]],"internal/bytealg.abigen_runtime_memequal_varlen":[[]],"internal/bytealg.countGeneric":[[]],"internal/bytealg.countGenericString":[[]],"internal/bytealg.init":[],"internal/bytealg.init#1":[],"internal/cpu.Initialize":[],"internal/cpu.Name":[[]],"internal/cpu.appendBytes":[[0,1]],"internal/cpu.cpuid":[[],[],[],[]],"internal/cpu.doinit":[],"internal/cpu.getGOAMD64level":[[]],"internal/cpu.indexByte":[[]],"internal/cpu.init":[],"internal/cpu.isSet":[[0,1]],"internal/cpu.processOptions":[],"internal/cpu.xgetbv":[[],[]],"internal/fmtsort.Sort":[[0]],"internal/fmtsort.compare":[[]],"internal/fmtsort.floatCompare":[[]],"internal/fmtsort.init":[],"internal/fmtsort.isNaN":[[0]],"internal/fmtsort.nilCompare":[[],[]],"internal/goarch.init":[],"internal/godebug.Get":[[]],"internal/godebug.get":[[0]],"internal/godebug.init":[],"internal/goexperiment.init":[],"internal/goos.init":[],"internal/goroot.IsStandardPackage":[[0,2]],"internal/goroot.init":[],"internal/goversion.init":[],"internal/intern.Get":[[0]],"internal/intern.GetByString":[[0]],"internal/intern.finalize":[],"internal/intern.get":[[0]],"internal/intern.init":[],"internal/intern.keyFor":[[0]],"internal/intern.safeMap":[[]],"internal/itoa.Itoa":[[0]],"internal/itoa.Uitoa":[[0]],"internal/itoa.init":[],"internal/lazyregexp.New":[[0]],"internal/lazyregexp.init":[],"internal/nettrace.init":[],"internal/oserror.init":[],"internal/pkgbits.NewPkgDecoder":[[0,1]],"internal/pkgbits.NewPkgEncoder":[[0]],"internal/pkgbits.assert":[],"internal/pkgbits.errorf":[],"internal/pkgbits.fmtFrames":[[]],"internal/pkgbits.fmtFrames$1":[],"internal/pkgbits.init":[],"internal/pkgbits.walkFrames":[],"internal/poll.DupCloseOnExec":[[],[],[]],"internal/poll.IsPollDescriptor":[[]],"internal/poll.SendFile":[[3],[]],"internal/poll.accept":[[],[],[],[]],"internal/poll.consume":[],"internal/poll.convertErr":[[]],"internal/poll.dupCloseOnExecOld":[[],[],[]],"internal/poll.errClosing":[[]],"internal/poll.errnoErr":[[0]],"internal/poll.fcntl":[[],[]],"internal/poll.fdopendir":[[],[]],"internal/poll.ignoringEINTR":[[]],"internal/poll.ignoringEINTRIO":[[],[]],"internal/poll.init":[],"internal/poll.init$1":[],"internal/poll.newIovecWithBase":[[0]],"internal/poll.runtimeNano":[[]],"internal/poll.runtime_Semacquire":[],"internal/poll.runtime_Semrelease":[],"internal/poll.runtime_isPollServerDescriptor":[[]],"internal/poll.runtime_pollClose":[],"internal/poll.runtime_pollOpen":[[],[]],"internal/poll.runtime_pollReset":[[]],"internal/poll.runtime_pollServerInit":[],"internal/poll.runtime_pollSetDeadline":[],"internal/poll.runtime_pollUnblock":[],"internal/poll.runtime_pollWait":[[]],"internal/poll.runtime_pollWaitCanceled":[[]],"internal/poll.setDeadlineImpl":[[]],"internal/poll.writev":[[],[]],"internal/profile.Merge":[[0],[0]],"internal/profile.Parse":[[],[0]],"internal/profile.ParseTracebacks":[[0],[0]],"internal/profile.addString":[[0,1]],"internal/profile.addTracebackSample":[],"internal/profile.checkType":[[]],"internal/profile.combineHeaders":[[0],[0]],"internal/profile.compatibleValueTypes":[[0,1]],"internal/profile.cpuProfile":[[0,1],[0]],"internal/profile.decodeBool":[[]],"internal/profile.decodeField":[[1],[0,1]],"internal/profile.decodeInt64":[[]],"internal/profile.decodeInt64s":[[]],"internal/profile.decodeMessage":[[0]],"internal/profile.decodeString":[[]],"internal/profile.decodeStrings":[[]],"internal/profile.decodeUint64":[[]],"internal/profile.decodeUint64s":[[]],"internal/profile.decodeVarint":[[0],[0],[]],"internal/profile.encodeBool":[],"internal/profile.encodeBoolOpt":[],"internal/profile.encodeInt64":[],"internal/profile.encodeInt64Opt":[],"internal/profile.encodeInt64s":[],"internal/profile.encodeLength":[],"internal/profile.encodeMessage":[],"internal/profile.encodeString":[],"internal/profile.encodeStringOpt":[],"internal/profile.encodeStrings":[],"internal/profile.encodeUint64":[],"internal/profile.encodeUint64Opt":[],"internal/profile.encodeUint64s":[],"internal/profile.encodeVarint":[],"internal/profile.equalValueType":[[0,1]],"internal/profile.extractHexAddresses":[[],[]],"internal/profile.focusedAndNotIgnored":[[]],"internal/profile.focusedSample":[[1],[]],"internal/profile.get32b":[[0],[0]],"internal/profile.get32l":[[0],[0]],"internal/profile.get64b":[[0],[0]],"internal/profile.get64l":[[0],[0]],"internal/profile.getString":[[0],[2]],"internal/profile.init":[],"internal/profile.init$1":[[0]],"internal/profile.init$10":[[]],"internal/profile.init$11":[[0]],"internal/profile.init$12":[[]],"internal/profile.init$13":[[]],"internal/profile.init$14":[[]],"internal/profile.init$15":[[]],"internal/profile.init$16":[[]],"internal/profile.init$17":[[]],"internal/profile.init$18":[[]],"internal/profile.init$19":[[0]],"internal/profile.init$2":[[0]],"internal/profile.init$20":[[]],"internal/profile.init$21":[[]],"internal/profile.init$22":[[]],"internal/profile.init$23":[[]],"internal/profile.init$24":[[]],"internal/profile.init$25":[[]],"internal/profile.init$26":[[]],"internal/profile.init$27":[[]],"internal/profile.init$28":[[]],"internal/profile.init$29":[[]],"internal/profile.init$3":[[0]],"internal/profile.init$30":[[]],"internal/profile.init$31":[[]],"internal/profile.init$32":[[]],"internal/profile.init$33":[[]],"internal/profile.init$34":[[]],"internal/profile.init$35":[[]],"internal/profile.init$36":[[0]],"internal/profile.init$37":[[]],"internal/profile.init$38":[[]],"internal/profile.init$39":[[]],"internal/profile.init$4":[[0]],"internal/profile.init$40":[[]],"internal/profile.init$41":[[]],"internal/profile.init$42":[[]],"internal/profile.init$43":[[]],"internal/profile.init$5":[[0]],"internal/profile.init$6":[[]],"internal/profile.init$7":[[]],"internal/profile.init$8":[[]],"internal/profile.init$9":[[]],"internal/profile.isProfileType":[[]],"internal/profile.isSpaceOrComment":[[0]],"internal/profile.isZeroSample":[[]],"internal/profile.le32":[[0]],"internal/profile.le64":[[0]],"internal/profile.marshal":[[]],"internal/profile.parseAdditionalSections":[[1]],"internal/profile.parseCPU":[[0],[0]],"internal/profile.parseCPUSamples":[[0],[0],[]],"internal/profile.parseContention":[[0],[0]],"internal/profile.parseContentionSample":[[0,1,2],[],[0]],"internal/profile.parseCppContention":[[0],[0]],"internal/profile.parseGoCount":[[0],[0]],"internal/profile.parseHeap":[[0],[0]],"internal/profile.parseHeapSample":[[0,1],[0],[],[0]],"internal/profile.parseHexAddresses":[[]],"internal/profile.parseLegacy":[[],[0]],"internal/profile.parseMappingEntry":[[0],[]],"internal/profile.parseThread":[[],[0]],"internal/profile.parseThreadSample":[[0],[],[]],"internal/profile.parseUncompressed":[[],[0]],"internal/profile.scaleHeapSample":[[0,1,2],[0,1,2]],"internal/profile.sectionTrigger":[[]],"internal/profile.unmarshal":[[0]],"internal/race.Acquire":[],"internal/race.Disable":[],"internal/race.Enable":[],"internal/race.Errors":[[]],"internal/race.Read":[],"internal/race.ReadRange":[],"internal/race.Release":[],"internal/race.ReleaseMerge":[],"internal/race.Write":[],"internal/race.WriteRange":[],"internal/race.init":[],"internal/reflectlite.Swapper":[[]],"internal/reflectlite.Swapper$1":[],"internal/reflectlite.Swapper$2":[],"internal/reflectlite.Swapper$3":[],"internal/reflectlite.Swapper$4":[],"internal/reflectlite.Swapper$5":[],"internal/reflectlite.Swapper$6":[],"internal/reflectlite.Swapper$7":[],"internal/reflectlite.Swapper$8":[],"internal/reflectlite.Swapper$9":[],"internal/reflectlite.TypeOf":[[0]],"internal/reflectlite.ValueOf":[[0]],"internal/reflectlite.add":[[0,1]],"internal/reflectlite.arrayAt":[[0,1,2]],"internal/reflectlite.chanlen":[[]],"internal/reflectlite.directlyAssignable":[[0,1]],"internal/reflectlite.escapes":[],"internal/reflectlite.haveIdenticalType":[[0,1]],"internal/reflectlite.haveIdenticalUnderlyingType":[[0,1]],"internal/reflectlite.ifaceE2I":[],"internal/reflectlite.ifaceIndir":[[0]],"internal/reflectlite.implements":[[]],"internal/reflectlite.init":[],"internal/reflectlite.maplen":[[]],"internal/reflectlite.methodName":[[]],"internal/reflectlite.packEface":[[]],"internal/reflectlite.resolveNameOff":[[]],"internal/reflectlite.resolveTypeOff":[[]],"internal/reflectlite.toType":[[0]],"internal/reflectlite.typedmemmove":[],"internal/reflectlite.unpackEface":[[0]],"internal/reflectlite.unsafe_New":[[]],"internal/reflectlite.valueInterface":[[0]],"internal/singleflight.init":[],"internal/syscall/execenv.Default":[[],[]],"internal/syscall/execenv.init":[],"internal/syscall/unix.Fstatat":[[]],"internal/syscall/unix.GetEntropy":[[]],"internal/syscall/unix.IsNonblock":[[],[]],"internal/syscall/unix.Openat":[[],[]],"internal/syscall/unix.RecvfromInet4":[[],[]],"internal/syscall/unix.RecvfromInet6":[[],[]],"internal/syscall/unix.RecvmsgInet4":[[],[],[],[]],"internal/syscall/unix.RecvmsgInet6":[[],[],[],[]],"internal/syscall/unix.SendmsgNInet4":[[],[]],"internal/syscall/unix.SendmsgNInet6":[[],[]],"internal/syscall/unix.SendtoInet4":[[]],"internal/syscall/unix.SendtoInet6":[[]],"internal/syscall/unix.Unlinkat":[[]],"internal/syscall/unix.fcntl":[[],[]],"internal/syscall/unix.fstatat":[[]],"internal/syscall/unix.init":[],"internal/syscall/unix.libc_getentropy_trampoline":[],"internal/syscall/unix.openat":[[],[]],"internal/syscall/unix.syscall_syscall":[[],[],[]],"internal/syscall/unix.unlinkat":[[]],"internal/sysinfo.init":[],"internal/testlog.Getenv":[],"internal/testlog.Logger":[[]],"internal/testlog.Open":[],"internal/testlog.PanicOnExit0":[[]],"internal/testlog.SetLogger":[],"internal/testlog.SetPanicOnExit0":[],"internal/testlog.Stat":[],"internal/testlog.init":[],"internal/unsafeheader.init":[],"internal/xcoff.NewArchive":[[],[0]],"internal/xcoff.NewArchive$1":[[0],[0]],"internal/xcoff.NewFile":[[],[0]],"internal/xcoff.Open":[[],[0]],"internal/xcoff.OpenArchive":[[],[0]],"internal/xcoff.cstring":[[0]],"internal/xcoff.getString":[[0],[]],"internal/xcoff.init":[],"io.Copy":[[],[0,1]],"io.CopyBuffer":[[],[0,1]],"io.CopyN":[[2],[0,1,2]],"io.LimitReader":[[0,1]],"io.MultiReader":[[0]],"io.MultiWriter":[[0]],"io.NewSectionReader":[[0,1,2]],"io.NopCloser":[[0]],"io.Pipe":[[],[]],"io.ReadAll":[[],[0]],"io.ReadAtLeast":[[],[0]],"io.ReadFull":[[],[0]],"io.TeeReader":[[0,1]],"io.WriteString":[[],[0]],"io.copyBuffer":[[],[0,1]],"io.init":[],"io.init$1":[[]],"io/fs.FileInfoToDirEntry":[[0]],"io/fs.Glob":[[0,1],[0]],"io/fs.ReadDir":[[0],[0,1]],"io/fs.ReadDir$1":[[]],"io/fs.ReadFile":[[],[0,1]],"io/fs.Stat":[[],[0,1]],"io/fs.Sub":[[0,1],[1]],"io/fs.ValidPath":[[]],"io/fs.WalkDir":[[0,1]],"io/fs.cleanGlobPath":[[0]],"io/fs.errClosed":[[]],"io/fs.errExist":[[]],"io/fs.errInvalid":[[]],"io/fs.errNotExist":[[]],"io/fs.errPermission":[[]],"io/fs.glob":[[0,1,3],[]],"io/fs.globWithLimit":[[0,1],[0]],"io/fs.hasMeta":[[]],"io/fs.init":[],"io/fs.walkDir":[[0,1]],"io/ioutil.NopCloser":[[0]],"io/ioutil.ReadAll":[[],[0]],"io/ioutil.ReadDir":[[],[0]],"io/ioutil.ReadDir$1":[[]],"io/ioutil.ReadFile":[[],[0]],"io/ioutil.TempDir":[[0,1],[0,1]],"io/ioutil.TempFile":[[],[0,1]],"io/ioutil.WriteFile":[[0]],"io/ioutil.init":[],"log.Default":[[]],"log.Fatal":[],"log.Fatalf":[],"log.Fatalln":[],"log.Flags":[[]],"log.New":[[0,1,2]],"log.Output":[[1]],"log.Panic":[],"log.Panicf":[],"log.Panicln":[],"log.Prefix":[[]],"log.Print":[],"log.Printf":[],"log.Println":[],"log.SetFlags":[],"log.SetOutput":[],"log.SetPrefix":[],"log.Writer":[[]],"log.init":[],"log.itoa":[],"log/syslog.Dial":[[0,1,2,3],[0,1,2,3]],"log/syslog.New":[[0,1],[0,1]],"log/syslog.NewLogger":[[0,1],[0]],"log/syslog.init":[],"log/syslog.unixSyslog":[[],[]],"math.Abs":[[0]],"math.Acos":[[0]],"math.Acosh":[[0]],"math.Asin":[[0]],"math.Asinh":[[0]],"math.Atan":[[0]],"math.Atan2":[[0,1]],"math.Atanh":[[0]],"math.Cbrt":[[0]],"math.Ceil":[[0]],"math.Copysign":[[0,1]],"math.Cos":[[0]],"math.Cosh":[[0]],"math.Dim":[[0,1]],"math.Erf":[[0]],"math.Erfc":[[0]],"math.Erfcinv":[[0]],"math.Erfinv":[[0]],"math.Exp":[[0]],"math.Exp2":[[0]],"math.Expm1":[[0]],"math.FMA":[[0,1,2]],"math.Float32bits":[[0]],"math.Float32frombits":[[0]],"math.Float64bits":[[0]],"math.Float64frombits":[[0]],"math.Floor":[[0]],"math.Frexp":[[0],[0]],"math.Gamma":[[0]],"math.Hypot":[[0,1]],"math.Ilogb":[[0]],"math.Inf":[[]],"math.IsInf":[[0]],"math.IsNaN":[[0]],"math.J0":[[0]],"math.J1":[[0]],"math.Jn":[[0,1]],"math.Ldexp":[[0,1]],"math.Lgamma":[[0],[]],"math.Log":[[0]],"math.Log10":[[0]],"math.Log1p":[[0]],"math.Log2":[[0]],"math.Logb":[[0]],"math.Max":[[0,1]],"math.Min":[[0,1]],"math.Mod":[[0,1]],"math.Modf":[[0],[0]],"math.NaN":[[]],"math.Nextafter":[[0,1]],"math.Nextafter32":[[0,1]],"math.Pow":[[0,1]],"math.Pow10":[[]],"math.Remainder":[[0,1]],"math.Round":[[0]],"math.RoundToEven":[[0]],"math.Signbit":[[0]],"math.Sin":[[0]],"math.Sincos":[[0],[0]],"math.Sinh":[[0]],"math.Sqrt":[[0]],"math.Tan":[[0]],"math.Tanh":[[0]],"math.Trunc":[[0]],"math.Y0":[[0]],"math.Y1":[[0]],"math.Yn":[[1]],"math.acos":[[0]],"math.acosh":[[0]],"math.archAcos":[[]],"math.archAcosh":[[]],"math.archAsin":[[]],"math.archAsinh":[[]],"math.archAtan":[[]],"math.archAtan2":[[]],"math.archAtanh":[[]],"math.archCbrt":[[]],"math.archCeil":[[]],"math.archCos":[[]],"math.archCosh":[[]],"math.archErf":[[]],"math.archErfc":[[]],"math.archExp":[[]],"math.archExp2":[[]],"math.archExpm1":[[]],"math.archFloor":[[]],"math.archFrexp":[[],[]],"math.archHypot":[[]],"math.archLdexp":[[]],"math.archLog":[[]],"math.archLog10":[[]],"math.archLog1p":[[]],"math.archLog2":[[]],"math.archMax":[[]],"math.archMin":[[]],"math.archMod":[[]],"math.archModf":[[],[]],"math.archPow":[[]],"math.archRemainder":[[]],"math.archSin":[[]],"math.archSinh":[[]],"math.archSqrt":[[]],"math.archTan":[[]],"math.archTanh":[[]],"math.archTrunc":[[]],"math.asin":[[0]],"math.asinh":[[0]],"math.atan":[[0]],"math.atan2":[[0,1]],"math.atanh":[[0]],"math.cbrt":[[0]],"math.ceil":[[0]],"math.cos":[[0]],"math.cosh":[[0]],"math.erf":[[0]],"math.erfc":[[0]],"math.exp":[[0]],"math.exp2":[[0]],"math.expm1":[[0]],"math.expmulti":[[0,1,2]],"math.floor":[[0]],"math.frexp":[[0],[0]],"math.hypot":[[0,1]],"math.ilogb":[[0]],"math.init":[],"math.isNegInt":[[0]],"math.isOddInt":[[0]],"math.ldexp":[[0,1]],"math.log":[[0]],"math.log10":[[0]],"math.log1p":[[0]],"math.log2":[[0]],"math.lz":[[0,1]],"math.max":[[0,1]],"math.min":[[0,1]],"math.mod":[[0,1]],"math.modf":[[0],[0]],"math.nonzero":[[]],"math.normalize":[[0],[]],"math.pone":[[0]],"math.pow":[[0,1]],"math.pzero":[[0]],"math.qone":[[0]],"math.qzero":[[0]],"math.remainder":[[0,1]],"math.satan":[[0]],"math.shl":[[0,1,2],[1,2]],"math.shr":[[0,2],[0,1,2]],"math.shrcompress":[[0,2],[0,1,2]],"math.sin":[[0]],"math.sinPi":[[0]],"math.sinh":[[0]],"math.split":[[0],[0],[0]],"math.sqrt":[[0]],"math.stirling":[[0],[0]],"math.tan":[[0]],"math.tanh":[[0]],"math.trigReduce":[[0],[0]],"math.trunc":[[0]],"math.xatan":[[0]],"math.zero":[[]],"math/big.Jacobi":[[]],"math/big.NewFloat":[[0]],"math/big.NewInt":[[0]],"math/big.NewRat":[[]],"math/big.ParseFloat":[[0,1,2,3],[1],[0]],"math/big.addAt":[],"math/big.addMulVVW":[[]],"math/big.addMulVVW_g":[[0,1,2]],"math/big.addVV":[[]],"math/big.addVV_g":[[1,2]],"math/big.addVW":[[]],"math/big.addVW_g":[[1,2]],"math/big.addVWlarge":[[1,2]],"math/big.alias":[[0,1]],"math/big.appendZeros":[[0]],"math/big.basicMul":[],"math/big.basicSqr":[],"math/big.bigEndianWord":[[0]],"math/big.divWVW":[[1,2,3]],"math/big.divWW":[[0,1,2,3],[0,1,2,3]],"math/big.divisors":[[]],"math/big.euclidUpdate":[],"math/big.fmtE":[[3]],"math/big.fmtF":[[0,2]],"math/big.fnorm":[[0]],"math/big.getNat":[[]],"math/big.greaterThan":[[1,3]],"math/big.init":[],"math/big.karatsuba":[],"math/big.karatsubaAdd":[],"math/big.karatsubaLen":[[0]],"math/big.karatsubaSqr":[],"math/big.karatsubaSub":[],"math/big.lehmerSimulate":[[0,1],[0,1],[0,1],[0,1],[]],"math/big.lehmerUpdate":[],"math/big.low32":[[0]],"math/big.low64":[[0]],"math/big.makeAcc":[[]],"math/big.max":[[0,1]],"math/big.maxPow":[[0],[]],"math/big.min":[[0,1]],"math/big.msb32":[[0]],"math/big.msb64":[[0]],"math/big.mulAddVWW":[[]],"math/big.mulAddVWW_g":[[1,2,3]],"math/big.mulAddWWW_g":[[0,1,2],[0,1,2]],"math/big.mulDenom":[[0,1,2]],"math/big.mulWW":[[0,1],[0,1]],"math/big.newFloat":[[]],"math/big.nlz":[[0]],"math/big.pow":[[0]],"math/big.putNat":[],"math/big.quotToFloat32":[[0,1],[0,1]],"math/big.quotToFloat64":[[0,1],[0,1]],"math/big.ratTok":[[]],"math/big.reciprocalWord":[[0]],"math/big.roundShortest":[],"math/big.same":[[0,1]],"math/big.scanExponent":[[],[],[]],"math/big.scanSign":[[],[]],"math/big.shlVU":[[]],"math/big.shlVU_g":[[1,2]],"math/big.shouldRoundUp":[[0]],"math/big.shr":[],"math/big.shrVU":[[]],"math/big.shrVU_g":[[1,2]],"math/big.subVV":[[]],"math/big.subVV_g":[[1,2]],"math/big.subVW":[[]],"math/big.subVW_g":[[1,2]],"math/big.subVWlarge":[[1,2]],"math/big.three":[[]],"math/big.three$1":[],"math/big.trim":[],"math/big.umax32":[[0,1]],"math/big.validateBinaryOperands":[],"math/big.writeMultiple":[],"math/bits.Add":[[0,1,2],[0,1,2]],"math/bits.Add32":[[0,1,2],[0,1,2]],"math/bits.Add64":[[0,1,2],[0,1,2]],"math/bits.Div":[[0,1,2],[0,1,2]],"math/bits.Div32":[[0,1,2],[0,1,2]],"math/bits.Div64":[[0,1,2],[0,1,2]],"math/bits.LeadingZeros":[[0]],"math/bits.LeadingZeros16":[[0]],"math/bits.LeadingZeros32":[[0]],"math/bits.LeadingZeros64":[[0]],"math/bits.LeadingZeros8":[[0]],"math/bits.Len":[[0]],"math/bits.Len16":[[0]],"math/bits.Len32":[[0]],"math/bits.Len64":[[0]],"math/bits.Len8":[[0]],"math/bits.Mul":[[0,1],[0,1]],"math/bits.Mul32":[[0,1],[0,1]],"math/bits.Mul64":[[0,1],[0,1]],"math/bits.OnesCount":[[0]],"math/bits.OnesCount16":[[0]],"math/bits.OnesCount32":[[0]],"math/bits.OnesCount64":[[0]],"math/bits.OnesCount8":[[0]],"math/bits.Rem":[[0,1,2]],"math/bits.Rem32":[[0,1,2]],"math/bits.Rem64":[[0,1,2]],"math/bits.Reverse":[[0]],"math/bits.Reverse16":[[0]],"math/bits.Reverse32":[[0]],"math/bits.Reverse64":[[0]],"math/bits.Reverse8":[[0]],"math/bits.ReverseBytes":[[0]],"math/bits.ReverseBytes16":[[0]],"math/bits.ReverseBytes32":[[0]],"math/bits.ReverseBytes64":[[0]],"math/bits.RotateLeft":[[0,1]],"math/bits.RotateLeft16":[[0,1]],"math/bits.RotateLeft32":[[0,1]],"math/bits.RotateLeft64":[[0,1]],"math/bits.RotateLeft8":[[0,1]],"math/bits.Sub":[[0,1,2],[0,1,2]],"math/bits.Sub32":[[0,1,2],[0,1,2]],"math/bits.Sub64":[[0,1,2],[0,1,2]],"math/bits.TrailingZeros":[[]],"math/bits.TrailingZeros16":[[]],"math/bits.TrailingZeros32":[[]],"math/bits.TrailingZeros64":[[]],"math/bits.TrailingZeros8":[[0]],"math/bits.init":[],"math/cmplx.Abs":[[]],"math/cmplx.Acos":[[]],"math/cmplx.Acosh":[[]],"math/cmplx.Asin":[[0]],"math/cmplx.Asinh":[[0]],"math/cmplx.Atan":[[]],"math/cmplx.Atanh":[[]],"math/cmplx.Conj":[[]],"math/cmplx.Cos":[[]],"math/cmplx.Cosh":[[]],"math/cmplx.Cot":[[]],"math/cmplx.Exp":[[0]],"math/cmplx.Inf":[[]],"math/cmplx.IsInf":[[]],"math/cmplx.IsNaN":[[]],"math/cmplx.Log":[[]],"math/cmplx.Log10":[[]],"math/cmplx.NaN":[[]],"math/cmplx.Phase":[[]],"math/cmplx.Polar":[[],[]],"math/cmplx.Pow":[[]],"math/cmplx.Rect":[[]],"math/cmplx.Sin":[[0]],"math/cmplx.Sinh":[[]],"math/cmplx.Sqrt":[[]],"math/cmplx.Tan":[[0]],"math/cmplx.Tanh":[[0]],"math/cmplx.init":[],"math/cmplx.reducePi":[[0]],"math/cmplx.sinhcosh":[[0],[0]],"math/cmplx.tanSeries":[[]],"math/rand.ExpFloat64":[[]],"math/rand.Float32":[[]],"math/rand.Float64":[[]],"math/rand.Int":[[]],"math/rand.Int31":[[]],"math/rand.Int31n":[[0]],"math/rand.Int63":[[]],"math/rand.Int63n":[[0]],"math/rand.Intn":[[0]],"math/rand.New":[[0]],"math/rand.NewSource":[[]],"math/rand.NewZipf":[[0,1,2,3]],"math/rand.NormFloat64":[[]],"math/rand.Perm":[[]],"math/rand.Read":[[],[]],"math/rand.Seed":[],"math/rand.Shuffle":[],"math/rand.Uint32":[[]],"math/rand.Uint64":[[]],"math/rand.absInt32":[[0]],"math/rand.init":[],"math/rand.read":[[],[]],"math/rand.seedrand":[[0]],"mime.AddExtensionType":[[0]],"mime.ExtensionsByType":[[],[]],"mime.FormatMediaType":[[0,1]],"mime.ParseMediaType":[[0],[0],[]],"mime.TypeByExtension":[[]],"mime.checkMediaTypeDisposition":[[]],"mime.clearSyncMap":[],"mime.clearSyncMap$1":[[]],"mime.closeWord":[],"mime.consumeMediaParam":[[0],[0],[0]],"mime.consumeToken":[[0],[0]],"mime.consumeValue":[[0],[0]],"mime.decode":[[1],[1]],"mime.decode2231Enc":[[0],[]],"mime.fromHex":[[0],[0]],"mime.hasNonWhitespace":[[]],"mime.init":[],"mime.init#1":[],"mime.initMime":[],"mime.initMimeForTests":[[]],"mime.initMimeUnix":[],"mime.isNotTokenChar":[[]],"mime.isTSpecial":[[]],"mime.isToken":[[0]],"mime.isTokenChar":[[]],"mime.isUTF8":[[0]],"mime.ishex":[[]],"mime.loadMimeFile":[],"mime.loadMimeGlobsFile":[[0]],"mime.needsEncoding":[[]],"mime.percentHexUnescape":[[0],[0]],"mime.qDecode":[[0],[0]],"mime.readHexByte":[[0,1],[0,1]],"mime.setExtensionType":[[]],"mime.setMimeTypes":[],"mime.unhex":[[0]],"mime.writeQString":[],"mime/multipart.NewReader":[[0,1]],"mime/multipart.NewWriter":[[0]],"mime/multipart.escapeQuotes":[[0]],"mime/multipart.init":[],"mime/multipart.matchAfterPrefix":[[]],"mime/multipart.newPart":[[0],[0]],"mime/multipart.randomBoundary":[[]],"mime/multipart.scanUntilBoundary":[[],[4]],"mime/multipart.skipLWSPChar":[[0]],"mime/quotedprintable.NewReader":[[0]],"mime/quotedprintable.NewWriter":[[0]],"mime/quotedprintable.fromHex":[[0],[0]],"mime/quotedprintable.init":[],"mime/quotedprintable.isQPDiscardWhitespace":[[]],"mime/quotedprintable.isWhitespace":[[0]],"mime/quotedprintable.readHexByte":[[0],[0]],"net.CIDRMask":[[0]],"net.Dial":[[0,1],[0,1]],"net.DialIP":[[0,2],[0,1,2]],"net.DialTCP":[[0,2],[0,1,2]],"net.DialTimeout":[[0,1,2],[0,1,2]],"net.DialUDP":[[0,2],[0,1,2]],"net.DialUnix":[[0,2],[0,1,2]],"net.FileConn":[[],[0]],"net.FileListener":[[],[0]],"net.FilePacketConn":[[],[0]],"net.IPv4":[[0,1,2,3]],"net.IPv4Mask":[[0,1,2,3]],"net.InterfaceAddrs":[[],[]],"net.InterfaceByIndex":[[],[]],"net.InterfaceByName":[[],[]],"net.Interfaces":[[],[]],"net.JoinHostPort":[[0,1]],"net.Listen":[[0,1],[0,1]],"net.ListenIP":[[0,1],[0,1]],"net.ListenMulticastUDP":[[0,2],[0,2]],"net.ListenPacket":[[0,1],[0,1]],"net.ListenTCP":[[0,1],[0,1]],"net.ListenUDP":[[0,1],[0,1]],"net.ListenUnix":[[0,1],[0,1]],"net.ListenUnixgram":[[0,1],[0,1]],"net.LookupAddr":[[0],[0]],"net.LookupCNAME":[[0],[0]],"net.LookupHost":[[0],[0]],"net.LookupIP":[[],[0]],"net.LookupMX":[[],[0]],"net.LookupNS":[[],[0]],"net.LookupPort":[[0,1],[0,1]],"net.LookupSRV":[[],[],[0,1,2]],"net.LookupTXT":[[],[0]],"net.ParseCIDR":[[0],[0],[0]],"net.ParseIP":[[0]],"net.ParseMAC":[[0],[0]],"net.Pipe":[[],[]],"net.ResolveIPAddr":[[],[0,1]],"net.ResolveTCPAddr":[[],[0,1]],"net.ResolveUDPAddr":[[],[0,1]],"net.ResolveUnixAddr":[[0,1],[0]],"net.SplitHostPort":[[0],[0],[0]],"net.SplitHostPort$1":[[],[],[0,1]],"net.TCPAddrFromAddrPort":[[0]],"net.UDPAddrFromAddrPort":[[0]],"net._C2func_getaddrinfo":[[],[]],"net._C2func_getnameinfo":[[],[]],"net._Cfunc_GoString":[[]],"net._Cfunc_freeaddrinfo":[[]],"net._Cfunc_gai_strerror":[[]],"net._Cfunc_getaddrinfo":[[]],"net._Cfunc_getnameinfo":[[]],"net._Cgo_ptr":[[0]],"net._Cgo_use":[],"net._cgoCheckPointer":[],"net._cgoCheckResult":[],"net._cgo_runtime_cgocall":[[]],"net._cgo_runtime_gostring":[[]],"net.absDomainName":[[0]],"net.acquireThread":[],"net.acquireThread$1":[],"net.addrPortToSockaddrInet4":[[0],[0]],"net.addrPortToSockaddrInet6":[[0],[0]],"net.allFF":[[]],"net.appendHex":[[0,1]],"net.avoidDNS":[[]],"net.boolint":[[]],"net.cgoIPLookup":[],"net.cgoLookupAddrPTR":[[],[0]],"net.cgoLookupCNAME":[[1],[1],[]],"net.cgoLookupHost":[[],[1],[]],"net.cgoLookupIP":[[],[2],[]],"net.cgoLookupIPCNAME":[[],[1],[1]],"net.cgoLookupIPCNAME$1":[[],[]],"net.cgoLookupIPCNAME$2":[[]],"net.cgoLookupIPCNAME$2$1":[],"net.cgoLookupPTR":[[],[1],[]],"net.cgoLookupPort":[[],[1,2],[]],"net.cgoLookupServicePort":[[],[1,2]],"net.cgoLookupServicePort$1":[[],[]],"net.cgoLookupServicePort$2":[[]],"net.cgoLookupServicePort$2$1":[],"net.cgoNameinfoPTR":[[],[]],"net.cgoPortLookup":[],"net.cgoReverseLookup":[],"net.cgoSockaddr":[[1],[]],"net.cgoSockaddrInet4":[[]],"net.cgoSockaddrInet6":[[1]],"net.checkHeader":[[]],"net.checkResponse":[[]],"net.classifyScope":[[0]],"net.commonPrefixLen":[[]],"net.concurrentThreadsLimit":[[]],"net.copyIP":[[0]],"net.count":[[]],"net.countAnyByte":[[]],"net.dnsDefaultSearch":[[]],"net.dnsPacketRoundTrip":[[],[],[0]],"net.dnsReadConfig":[[0]],"net.dnsStreamRoundTrip":[[],[],[0]],"net.dtoi":[[0],[],[]],"net.dupSocket":[[],[]],"net.ensureRooted":[[0]],"net.equalASCIIName":[[]],"net.fastrandu":[[]],"net.favoriteAddrFamily":[[],[]],"net.fileConn":[[],[]],"net.fileListener":[[],[]],"net.filePacketConn":[[],[]],"net.filterAddrList":[[1],[3]],"net.foreachField":[[]],"net.foreachLine":[[]],"net.genericReadFrom":[[],[0,1]],"net.getFields":[[0]],"net.goDebugNetDNS":[[],[]],"net.goDebugNetDNS$1":[],"net.goLookupIPFiles":[[0]],"net.goLookupPort":[[0],[0,1]],"net.hasPrefix":[[0,1]],"net.hasUpperCase":[[]],"net.hexString":[[0]],"net.init":[],"net.init#1":[],"net.init$1":[[3],[3]],"net.init$2":[],"net.init$3":[],"net.init$4":[],"net.initConfVal":[],"net.initConfVal$1":[],"net.interfaceAddrTable":[[],[]],"net.interfaceByIndex":[[0],[]],"net.interfaceMessages":[[],[]],"net.interfaceMulticastAddrTable":[[],[]],"net.interfaceTable":[[],[]],"net.interfaceToIPv4Addr":[[],[]],"net.internetSocket":[[1,3,4],[2,3]],"net.ipAddrsEface":[[0]],"net.ipAttrOf":[[0]],"net.ipEmptyString":[[0]],"net.ipToSockaddr":[[2,3],[1]],"net.ipToSockaddrInet4":[[1],[0]],"net.ipToSockaddrInet6":[[1,2],[0]],"net.ipVersion":[[0]],"net.ipv4AddrToInterface":[[],[]],"net.ipv4only":[[0]],"net.ipv6only":[[0]],"net.isClosedChan":[[]],"net.isConnError":[[0]],"net.isDomainName":[[]],"net.isGateway":[[]],"net.isIPv4":[[0]],"net.isLocalhost":[[]],"net.isNotIPv4":[[0]],"net.isSpace":[[0]],"net.isZeros":[[]],"net.joinIPv4Group":[[]],"net.joinIPv6Group":[[]],"net.last":[[]],"net.linkFlags":[[]],"net.listenIPv4MulticastUDP":[[]],"net.listenIPv6MulticastUDP":[[]],"net.listenerBacklog":[[]],"net.listenerBacklog$1":[],"net.lookupIPReturn":[[0],[1]],"net.lookupPortMap":[[0],[0,1]],"net.lookupProtocol":[[],[1]],"net.lookupProtocolMap":[[],[0]],"net.lookupStaticAddr":[[0]],"net.lookupStaticHost":[[0]],"net.loopbackIP":[[]],"net.lowerASCII":[[0]],"net.lowerASCIIBytes":[],"net.makePipeDeadline":[[]],"net.mapErr":[[0]],"net.maxListenerBacklog":[[]],"net.minNonzeroTime":[[0,1]],"net.mustCIDR":[[0]],"net.networkNumberAndMask":[[0],[0]],"net.newFD":[[0,1,2,3],[]],"net.newFileFD":[[],[]],"net.newIPConn":[[0]],"net.newRawConn":[[0],[]],"net.newRawListener":[[0],[]],"net.newRequest":[[],[0],[0],[]],"net.newTCPConn":[[0]],"net.newUDPConn":[[0]],"net.newUnixConn":[[0]],"net.open":[[],[0]],"net.parseCriteria":[[],[]],"net.parseCriteria$1":[[]],"net.parseIPZone":[[0],[0]],"net.parseIPv4":[[0]],"net.parseIPv6":[[0]],"net.parseIPv6Zone":[[0],[0]],"net.parseLiteralIP":[[0]],"net.parseNSSConf":[[0]],"net.parseNSSConf$1":[[0]],"net.parseNSSConfFile":[[0]],"net.parseNetwork":[[1],[1],[1]],"net.parsePort":[[0],[]],"net.partialDeadline":[[0,1,2],[]],"net.randInt":[[]],"net.randIntn":[[0]],"net.readFull":[[],[0]],"net.readHosts":[],"net.readProtocols":[],"net.readServices":[],"net.releaseThread":[],"net.removeComment":[[0]],"net.reverseaddr":[[0],[0]],"net.roundDurationUp":[[0,1]],"net.selfConnect":[[0]],"net.sendFile":[[],[1],[]],"net.sendFile$1":[[]],"net.setDefaultListenerSockopts":[[]],"net.setDefaultMulticastSockopts":[[]],"net.setDefaultSockopts":[[]],"net.setIPv4MreqToInterface":[[]],"net.setIPv4MulticastInterface":[[]],"net.setIPv4MulticastLoopback":[[]],"net.setIPv6MulticastInterface":[[]],"net.setIPv6MulticastLoopback":[[]],"net.setKeepAlive":[[]],"net.setKeepAlivePeriod":[[]],"net.setLinger":[[]],"net.setNoDelay":[[]],"net.setReadBuffer":[[]],"net.setReadMsgCloseOnExec":[],"net.setWriteBuffer":[[]],"net.simpleMaskLength":[[]],"net.skipToAnswer":[[]],"net.sockaddrToIP":[[0]],"net.sockaddrToTCP":[[0]],"net.sockaddrToUDP":[[0]],"net.sockaddrToUnix":[[0]],"net.sockaddrToUnixgram":[[0]],"net.sockaddrToUnixpacket":[[0]],"net.socket":[[1,2,3,7],[6,7]],"net.sortByRFC6724":[],"net.sortByRFC6724withSrcs":[],"net.sotypeToNet":[[]],"net.splice":[[],[],[]],"net.splitAtBytes":[[0]],"net.splitHostZone":[[0],[0]],"net.spuriousENOTAVAIL":[[0]],"net.srcAddrs":[[0]],"net.stat":[[],[],[0]],"net.stringsEqualFold":[[]],"net.stringsHasPrefix":[[0,1]],"net.stringsHasSuffix":[[0,1]],"net.stringsHasSuffixFold":[[]],"net.stripIPv4Header":[[0,1]],"net.supportsIPv4":[[]],"net.supportsIPv4map":[[]],"net.supportsIPv6":[[]],"net.sysSocket":[[],[]],"net.systemConf":[[]],"net.trimSpace":[[0]],"net.ubtoa":[[]],"net.unixSocket":[[1,3],[1,2,3,4]],"net.withUnexpiredValuesPreserved":[[0]],"net.wrapSyscallError":[[0,1]],"net.xtoi":[[0],[],[]],"net.xtoi2":[[0],[]],"net/http.AllowQuerySemicolons":[[]],"net/http.AllowQuerySemicolons$1":[],"net/http.CanonicalHeaderKey":[[0]],"net/http.DetectContentType":[[]],"net/http.Error":[],"net/http.FS":[[0]],"net/http.FileServer":[[0]],"net/http.Get":[[],[0]],"net/http.Handle":[],"net/http.HandleFunc":[],"net/http.Head":[[],[0]],"net/http.ListenAndServe":[[0,1]],"net/http.ListenAndServeTLS":[[0,1,2,3]],"net/http.MaxBytesHandler":[[]],"net/http.MaxBytesHandler$1":[],"net/http.MaxBytesReader":[[0,1,2]],"net/http.NewFileTransport":[[0]],"net/http.NewRequest":[[0,1,2],[0,1]],"net/http.NewRequestWithContext":[[0,1,2,3],[1,2]],"net/http.NewRequestWithContext$1":[[],[]],"net/http.NewRequestWithContext$2":[[],[]],"net/http.NewRequestWithContext$3":[[],[]],"net/http.NewRequestWithContext$4":[[],[]],"net/http.NewServeMux":[[]],"net/http.NotFound":[],"net/http.NotFoundHandler":[[]],"net/http.ParseHTTPVersion":[[0],[0],[]],"net/http.ParseTime":[[0],[0]],"net/http.Post":[[],[0,2]],"net/http.PostForm":[[],[0,1]],"net/http.ProxyFromEnvironment":[[],[]],"net/http.ProxyURL":[[]],"net/http.ProxyURL$1":[[],[]],"net/http.ReadRequest":[[],[0]],"net/http.ReadResponse":[[0,1],[0,1]],"net/http.Redirect":[],"net/http.RedirectHandler":[[0,1]],"net/http.Serve":[[0,1]],"net/http.ServeContent":[],"net/http.ServeContent$1":[[],[]],"net/http.ServeFile":[],"net/http.ServeTLS":[[0,1,2,3]],"net/http.SetCookie":[],"net/http.StatusText":[[]],"net/http.StripPrefix":[[1]],"net/http.StripPrefix$1":[],"net/http.TimeoutHandler":[[0,1,2]],"net/http.alwaysFalse":[[]],"net/http.appendSorted":[[0,1]],"net/http.appendSorted$1":[[]],"net/http.appendTime":[[0,1]],"net/http.badRequestError":[[0]],"net/http.badStringError":[[0,1]],"net/http.basicAuth":[[]],"net/http.bodyAllowedForStatus":[[]],"net/http.bufioWriterPool":[[]],"net/http.canonicalAddr":[[0]],"net/http.checkIfMatch":[[]],"net/http.checkIfModifiedSince":[[]],"net/http.checkIfNoneMatch":[[]],"net/http.checkIfRange":[[]],"net/http.checkIfUnmodifiedSince":[[]],"net/http.checkPreconditions":[[],[1]],"net/http.checkWriteHeaderCode":[],"net/http.chunked":[[0]],"net/http.cleanHost":[[0]],"net/http.cleanPath":[[0]],"net/http.cloneMultipartFileHeader":[[0]],"net/http.cloneMultipartForm":[[0]],"net/http.cloneOrMakeHeader":[[0]],"net/http.cloneTLSConfig":[[0]],"net/http.cloneURL":[[0]],"net/http.cloneURLValues":[[0]],"net/http.containsDotDot":[[]],"net/http.copyValues":[],"net/http.defaultCheckRedirect":[[]],"net/http.defaultTransportDialContext":[[]],"net/http.dirList":[],"net/http.dirList$1":[[]],"net/http.envProxyFunc":[[]],"net/http.envProxyFunc$1":[],"net/http.etagStrongMatch":[[0]],"net/http.etagWeakMatch":[[0,1]],"net/http.fixLength":[[3],[3]],"net/http.fixPragmaCacheControl":[],"net/http.fixTrailer":[[],[]],"net/http.fixTrailer$1":[],"net/http.foreachHeaderElement":[],"net/http.hasPort":[[]],"net/http.hasToken":[[]],"net/http.hexEscapeNonASCII":[[0]],"net/http.htmlEscape":[[0]],"net/http.http1ServerSupportsRequest":[[]],"net/http.http2ConfigureServer":[[]],"net/http.http2ConfigureServer$1":[],"net/http.http2ConfigureTransport":[[]],"net/http.http2ConfigureTransports":[[0],[]],"net/http.http2NewFramer":[[0,1]],"net/http.http2NewFramer$1":[],"net/http.http2NewFramer$2":[[]],"net/http.http2NewPriorityWriteScheduler":[[0]],"net/http.http2NewRandomWriteScheduler":[[]],"net/http.http2ReadFrameHeader":[[],[0]],"net/http.http2actualContentLength":[[0]],"net/http.http2asciiEqualFold":[[]],"net/http.http2asciiToLower":[[0],[]],"net/http.http2authorityAddr":[[1]],"net/http.http2bodyAllowedForStatus":[[]],"net/http.http2buildCommonHeaderMaps":[],"net/http.http2buildCommonHeaderMapsOnce":[],"net/http.http2canRetryError":[[0]],"net/http.http2checkConnHeaders":[[0]],"net/http.http2checkValidHTTP2RequestHeaders":[[]],"net/http.http2checkWriteHeaderCode":[],"net/http.http2cloneHeader":[[0]],"net/http.http2commaSeparatedTrailers":[[0],[0]],"net/http.http2configureTransports":[[0],[]],"net/http.http2configureTransports$1":[[0]],"net/http.http2curGoroutineID":[[]],"net/http.http2cutoff64":[[0]],"net/http.http2encKV":[],"net/http.http2encodeHeaders":[],"net/http.http2errno":[[0]],"net/http.http2filterOutClientConn":[[0]],"net/http.http2foreachHeaderElement":[],"net/http.http2getDataBufferChunk":[[]],"net/http.http2h1ServerKeepAlivesDisabled":[[]],"net/http.http2handleHeaderListTooLong":[],"net/http.http2httpCodeString":[[0]],"net/http.http2isASCIIPrint":[[]],"net/http.http2isBadCipher":[[]],"net/http.http2isClosedConnError":[[]],"net/http.http2isConnectionCloseRequest":[[]],"net/http.http2isEOFOrNetReadError":[[0]],"net/http.http2isNoCachedConnError":[[]],"net/http.http2lower":[[0]],"net/http.http2lowerHeader":[[0],[]],"net/http.http2mustUint31":[[0]],"net/http.http2new400Handler":[[]],"net/http.http2new400Handler$1":[],"net/http.http2newBufferedWriter":[[0]],"net/http.http2newGoroutineLock":[[]],"net/http.http2parseContinuationFrame":[[1,3],[]],"net/http.http2parseDataFrame":[[0,1,3],[]],"net/http.http2parseGoAwayFrame":[[1,3],[]],"net/http.http2parseHeadersFrame":[[1,3],[1]],"net/http.http2parsePingFrame":[[1],[]],"net/http.http2parsePriorityFrame":[[1,3],[]],"net/http.http2parsePushPromise":[[1,3],[]],"net/http.http2parseRSTStreamFrame":[[1,3],[]],"net/http.http2parseSettingsFrame":[[1,3],[]],"net/http.http2parseUintBytes":[[0,1],[0,1]],"net/http.http2parseUnknownFrame":[[1,3],[]],"net/http.http2parseWindowUpdateFrame":[[1,3],[1]],"net/http.http2putDataBufferChunk":[],"net/http.http2readByte":[[0],[0],[]],"net/http.http2readFrameHeader":[[0],[1]],"net/http.http2readUint32":[[0],[0],[]],"net/http.http2registerHTTPSProtocol":[[]],"net/http.http2registerHTTPSProtocol$1":[],"net/http.http2serverConnBaseContext":[[1],[]],"net/http.http2shouldRetryDial":[[]],"net/http.http2shouldRetryRequest":[[0],[1]],"net/http.http2shouldSendReqContentLength":[[]],"net/http.http2splitHeaderBlock":[[0,1]],"net/http.http2strSliceContains":[[]],"net/http.http2streamError":[[0,1]],"net/http.http2summarizeFrame":[[]],"net/http.http2summarizeFrame$1":[[]],"net/http.http2terminalReadFrameError":[[0]],"net/http.http2tlsUnderlyingConn":[[0]],"net/http.http2traceFirstResponseByte":[],"net/http.http2traceGetConn":[],"net/http.http2traceGot100Continue":[],"net/http.http2traceGot1xxResponseFunc":[[0]],"net/http.http2traceGotConn":[],"net/http.http2traceHasWroteHeaderField":[[0]],"net/http.http2traceWait100Continue":[],"net/http.http2traceWroteHeaderField":[],"net/http.http2traceWroteHeaders":[],"net/http.http2traceWroteRequest":[],"net/http.http2typeFrameParser":[[0]],"net/http.http2validPseudoPath":[[0]],"net/http.http2validStreamID":[[0]],"net/http.http2validStreamIDOrZero":[[0]],"net/http.http2validWireHeaderFieldName":[[]],"net/http.http2writeEndsStream":[[0]],"net/http.idnaASCII":[[0],[0]],"net/http.init":[],"net/http.init#1":[],"net/http.init$1":[[]],"net/http.init$10":[[]],"net/http.init$11":[[]],"net/http.init$12":[[]],"net/http.init$13":[],"net/http.init$14":[[]],"net/http.init$15":[[]],"net/http.init$2":[[]],"net/http.init$3":[[]],"net/http.init$4":[[]],"net/http.init$5":[[]],"net/http.init$6":[[]],"net/http.init$7":[[]],"net/http.init$8":[[]],"net/http.init$9":[[]],"net/http.is408Message":[[0]],"net/http.isCommonNetReadError":[[]],"net/http.isCookieDomainName":[[]],"net/http.isCookieNameValid":[[0]],"net/http.isDomainOrSubdomain":[[0]],"net/http.isIdentity":[[0]],"net/http.isKnownInMemoryReader":[[]],"net/http.isNotToken":[[]],"net/http.isProtocolSwitchHeader":[[]],"net/http.isProtocolSwitchResponse":[[]],"net/http.isSlashRune":[[0]],"net/http.isTT":[[]],"net/http.isTokenBoundary":[[0]],"net/http.isUnsupportedTEError":[[]],"net/http.isWS":[[]],"net/http.isZeroTime":[[0]],"net/http.knownRoundTripperImpl":[[]],"net/http.localRedirect":[],"net/http.logf":[],"net/http.mapOpenError":[[0]],"net/http.mergeSetHeader":[],"net/http.newBufioReader":[[0]],"net/http.newBufioWriterSize":[[0]],"net/http.newLoggingConn":[[1]],"net/http.newPopulateResponseWriter":[[],[]],"net/http.newReadWriteCloserBody":[[0,1]],"net/http.newTextprotoReader":[[0]],"net/http.newTransferWriter":[[0],[0]],"net/http.noResponseBodyExpected":[[0]],"net/http.nop":[],"net/http.numLeadingCRorLF":[[]],"net/http.parseBasicAuth":[[],[],[]],"net/http.parseContentLength":[[0],[0]],"net/http.parseCookieValue":[[0],[]],"net/http.parsePostForm":[[],[0]],"net/http.parseRange":[[0,1],[]],"net/http.parseRequestLine":[[0],[0],[0],[]],"net/http.putBufioReader":[],"net/http.putBufioWriter":[],"net/http.putTextprotoReader":[],"net/http.rangesMIMESize":[[0]],"net/http.readCookies":[[0]],"net/http.readRequest":[[],[0]],"net/http.readRequest$1":[],"net/http.readSetCookies":[[0]],"net/http.readTransfer":[[0]],"net/http.redirectBehavior":[[0],[],[]],"net/http.refererForURL":[[0]],"net/http.registerOnHitEOF":[],"net/http.relevantCaller":[[]],"net/http.removeEmptyPort":[[0]],"net/http.removeZone":[[0]],"net/http.requestBodyRemains":[[0]],"net/http.requestMethodUsuallyLacksBody":[[]],"net/http.resetProxyConfig":[],"net/http.rewindBody":[[0],[]],"net/http.sanitizeCookieName":[[0]],"net/http.sanitizeCookiePath":[[0]],"net/http.sanitizeCookieValue":[[0]],"net/http.sanitizeOrWarn":[[2]],"net/http.scanETag":[[0],[0]],"net/http.seeUpcomingDoubleCRLF":[[]],"net/http.send":[[],[],[1]],"net/http.send$1":[],"net/http.serveContent":[],"net/http.serveContent$1":[],"net/http.serveFile":[],"net/http.serveFile$1":[[],[]],"net/http.setLastModified":[],"net/http.setRequestCancel":[[],[]],"net/http.setRequestCancel$1":[[]],"net/http.setRequestCancel$2":[],"net/http.setRequestCancel$3":[],"net/http.setRequestCancel$3$1":[],"net/http.setRequestCancel$4":[],"net/http.setupRewindBody":[[0]],"net/http.shouldClose":[[]],"net/http.shouldCopyHeaderOnRedirect":[[2]],"net/http.socksNewDialer":[[0,1]],"net/http.sockssplitHostPort":[[0],[0],[0]],"net/http.strSliceContains":[[]],"net/http.stringContainsCTLByte":[[]],"net/http.stripHostPort":[[0]],"net/http.stripPassword":[[0]],"net/http.sumRangesSize":[[0]],"net/http.suppressedHeaders":[[]],"net/http.timeBeforeContextDeadline":[[0,1]],"net/http.tlsRecordHeaderLooksLikeHTTP":[[]],"net/http.toHTTPError":[[],[]],"net/http.unwrapNopCloser":[[0],[]],"net/http.urlErrorOp":[[0]],"net/http.validCookieDomain":[[]],"net/http.validCookieExpires":[[0]],"net/http.validCookiePathByte":[[0]],"net/http.validCookieValueByte":[[0]],"net/http.validMethod":[[0]],"net/http.validNextProto":[[]],"net/http.valueOrDefault":[[0,1]],"net/http.writeNotModified":[],"net/http.writeStatusLine":[],"net/http/cgi.Request":[[],[]],"net/http/cgi.RequestFromMap":[[0],[0]],"net/http/cgi.Serve":[[]],"net/http/cgi.envMap":[[0]],"net/http/cgi.init":[],"net/http/cgi.init$1":[[]],"net/http/cgi.removeLeadingDuplicates":[[0]],"net/http/cgi.upperCaseAndUnderscore":[[0]],"net/http/cookiejar.New":[[0],[]],"net/http/cookiejar.adapt":[[0,1]],"net/http/cookiejar.canonicalHost":[[0],[0]],"net/http/cookiejar.defaultPath":[[0]],"net/http/cookiejar.encode":[[0,1],[1]],"net/http/cookiejar.encodeDigit":[[0]],"net/http/cookiejar.hasDotSuffix":[[0,1]],"net/http/cookiejar.hasPort":[[]],"net/http/cookiejar.init":[],"net/http/cookiejar.isIP":[[0]],"net/http/cookiejar.jarKey":[[0]],"net/http/cookiejar.toASCII":[[0],[0]],"net/http/fcgi.ProcessEnv":[[0]],"net/http/fcgi.Serve":[[0]],"net/http/fcgi.addFastCGIEnvToContext":[[]],"net/http/fcgi.encodeSize":[[]],"net/http/fcgi.filterOutUsedEnvVars":[[0]],"net/http/fcgi.init":[],"net/http/fcgi.newChild":[[0,1]],"net/http/fcgi.newConn":[[0]],"net/http/fcgi.newRequest":[[0,1]],"net/http/fcgi.newResponse":[[0,1]],"net/http/fcgi.newWriter":[[0,1,2]],"net/http/fcgi.readSize":[[0],[]],"net/http/fcgi.readString":[[0]],"net/http/httptest.NewRecorder":[[]],"net/http/httptest.NewRequest":[[2]],"net/http/httptest.NewServer":[[0]],"net/http/httptest.NewTLSServer":[[0]],"net/http/httptest.NewUnstartedServer":[[0]],"net/http/httptest.checkWriteHeaderCode":[],"net/http/httptest.init":[],"net/http/httptest.init#1":[],"net/http/httptest.newLocalListener":[[]],"net/http/httptest.parseContentLength":[[0]],"net/http/httptest.strSliceContainsPrefix":[[]],"net/http/httptrace.ContextClientTrace":[[0]],"net/http/httptrace.WithClientTrace":[[0,1]],"net/http/httptrace.WithClientTrace$1":[],"net/http/httptrace.WithClientTrace$2":[],"net/http/httptrace.init":[],"net/http/httputil.DumpRequest":[[],[0]],"net/http/httputil.DumpRequestOut":[[],[0]],"net/http/httputil.DumpRequestOut$1":[[],[]],"net/http/httputil.DumpRequestOut$2":[],"net/http/httputil.DumpResponse":[[],[0]],"net/http/httputil.NewChunkedReader":[[0]],"net/http/httputil.NewChunkedWriter":[[0]],"net/http/httputil.NewClientConn":[[0,1]],"net/http/httputil.NewProxyClientConn":[[0,1]],"net/http/httputil.NewServerConn":[[0,1]],"net/http/httputil.NewSingleHostReverseProxy":[[]],"net/http/httputil.NewSingleHostReverseProxy$1":[],"net/http/httputil.copyHeader":[],"net/http/httputil.drainBody":[[],[0],[0]],"net/http/httputil.init":[],"net/http/httputil.joinURLPath":[[0,1],[0,1]],"net/http/httputil.outgoingLength":[[0]],"net/http/httputil.removeConnectionHeaders":[],"net/http/httputil.shouldPanicOnCopyError":[[]],"net/http/httputil.singleJoiningSlash":[[0,1]],"net/http/httputil.upgradeType":[[0]],"net/http/httputil.valueOrDefault":[[0,1]],"net/http/internal.NewChunkedReader":[[0]],"net/http/internal.NewChunkedWriter":[[0]],"net/http/internal.init":[],"net/http/internal.isASCIISpace":[[0]],"net/http/internal.parseHexUint":[[0],[]],"net/http/internal.readChunkLine":[[0],[0]],"net/http/internal.removeChunkExtension":[[0],[]],"net/http/internal.trimTrailingWhitespace":[[0]],"net/http/internal/ascii.EqualFold":[[]],"net/http/internal/ascii.Is":[[]],"net/http/internal/ascii.IsPrint":[[]],"net/http/internal/ascii.ToLower":[[0],[]],"net/http/internal/ascii.init":[],"net/http/internal/ascii.lower":[[0]],"net/http/internal/testcert.init":[],"net/http/internal/testcert.testingKey":[[0]],"net/http/pprof.Cmdline":[],"net/http/pprof.Handler":[[0]],"net/http/pprof.Index":[],"net/http/pprof.Index$1":[[]],"net/http/pprof.Profile":[],"net/http/pprof.Symbol":[],"net/http/pprof.Trace":[],"net/http/pprof.collectProfile":[[],[]],"net/http/pprof.durationExceedsWriteTimeout":[[0,1]],"net/http/pprof.indexTmplExecute":[[0]],"net/http/pprof.init":[],"net/http/pprof.init#1":[],"net/http/pprof.serveError":[],"net/http/pprof.sleep":[],"net/internal/socktest.cookie":[[0,1,2]],"net/internal/socktest.familyString":[[]],"net/internal/socktest.init":[],"net/internal/socktest.protocolString":[[]],"net/internal/socktest.typeString":[[]],"net/mail.ParseAddress":[[0],[0]],"net/mail.ParseAddressList":[[],[0]],"net/mail.ParseDate":[[0],[]],"net/mail.ReadMessage":[[0],[0]],"net/mail.buildDateLayouts":[],"net/mail.init":[],"net/mail.init$1":[[],[0]],"net/mail.isAtext":[[0,1,2]],"net/mail.isMultibyte":[[0]],"net/mail.isQtext":[[0]],"net/mail.isVchar":[[0]],"net/mail.isWSP":[[0]],"net/mail.quoteString":[[0]],"net/netip.AddrFrom16":[[0]],"net/netip.AddrFrom4":[[0]],"net/netip.AddrFromSlice":[[0],[]],"net/netip.AddrPortFrom":[[0,1]],"net/netip.IPv4Unspecified":[[]],"net/netip.IPv6LinkLocalAllNodes":[[]],"net/netip.IPv6Unspecified":[[]],"net/netip.MustParseAddr":[[0]],"net/netip.MustParseAddrPort":[[0]],"net/netip.MustParsePrefix":[[0]],"net/netip.ParseAddr":[[0],[0]],"net/netip.ParseAddrPort":[[0],[0]],"net/netip.ParsePrefix":[[0],[0]],"net/netip.PrefixFrom":[[0,1]],"net/netip.appendDecimal":[[0,1]],"net/netip.appendHex":[[0,1]],"net/netip.appendHexPad":[[0,1]],"net/netip.bePutUint32":[],"net/netip.bePutUint64":[],"net/netip.beUint64":[[0]],"net/netip.init":[],"net/netip.ipv6Slice":[[0]],"net/netip.joinHostPort":[[0,1]],"net/netip.lePutUint16":[],"net/netip.leUint16":[[0]],"net/netip.mask6":[[0]],"net/netip.parseIPv4":[[0],[0]],"net/netip.parseIPv6":[[0],[0]],"net/netip.splitAddrPort":[[0],[0],[],[]],"net/netip.stringsLastIndexByte":[[]],"net/netip.u64CommonPrefixLen":[[0,1]],"net/rpc.Accept":[],"net/rpc.Dial":[[0,1],[0,1]],"net/rpc.DialHTTP":[[0,1],[0,1]],"net/rpc.DialHTTPPath":[[0,1],[0,1]],"net/rpc.HandleHTTP":[],"net/rpc.NewClient":[[0]],"net/rpc.NewClientWithCodec":[[0]],"net/rpc.NewServer":[[]],"net/rpc.Register":[[]],"net/rpc.RegisterName":[[0]],"net/rpc.ServeCodec":[],"net/rpc.ServeConn":[],"net/rpc.ServeRequest":[[0]],"net/rpc.init":[],"net/rpc.isExportedOrBuiltinType":[[]],"net/rpc.suitableMethods":[[0]],"net/rpc/jsonrpc.Dial":[[0,1],[0,1]],"net/rpc/jsonrpc.NewClient":[[0]],"net/rpc/jsonrpc.NewClientCodec":[[0]],"net/rpc/jsonrpc.NewServerCodec":[[0]],"net/rpc/jsonrpc.ServeConn":[],"net/rpc/jsonrpc.init":[],"net/smtp.CRAMMD5Auth":[[0,1]],"net/smtp.Dial":[[0],[0]],"net/smtp.NewClient":[[0,1],[0]],"net/smtp.PlainAuth":[[0,1,2,3]],"net/smtp.SendMail":[[0]],"net/smtp.init":[],"net/smtp.isLocalhost":[[0]],"net/smtp.validateLine":[[]],"net/textproto.CanonicalMIMEHeaderKey":[[0]],"net/textproto.Dial":[[0,1],[0,1]],"net/textproto.NewConn":[[0]],"net/textproto.NewReader":[[0]],"net/textproto.NewWriter":[[0]],"net/textproto.TrimBytes":[[0]],"net/textproto.TrimString":[[0]],"net/textproto.canonicalMIMEHeaderKey":[[0]],"net/textproto.init":[],"net/textproto.initCommonHeader":[],"net/textproto.isASCIILetter":[[0]],"net/textproto.isASCIISpace":[[0]],"net/textproto.mustHaveFieldNameColon":[[]],"net/textproto.noValidation":[[]],"net/textproto.parseCodeLine":[[0],[0],[0],[0]],"net/textproto.trim":[[0]],"net/textproto.validHeaderFieldByte":[[]],"net/url.JoinPath":[[0,1],[0]],"net/url.Parse":[[0],[0]],"net/url.ParseQuery":[[],[0]],"net/url.ParseRequestURI":[[0],[0]],"net/url.PathEscape":[[0]],"net/url.PathUnescape":[[0],[0]],"net/url.QueryEscape":[[0]],"net/url.QueryUnescape":[[0],[0]],"net/url.User":[[0]],"net/url.UserPassword":[[0,1]],"net/url.escape":[[0]],"net/url.getScheme":[[0],[0],[]],"net/url.init":[],"net/url.ishex":[[]],"net/url.parse":[[0],[0]],"net/url.parseAuthority":[[0],[0],[0]],"net/url.parseHost":[[0],[0]],"net/url.parseQuery":[[1]],"net/url.resolvePath":[[0,1]],"net/url.shouldEscape":[[0]],"net/url.splitHostPort":[[0],[0]],"net/url.stringContainsCTLByte":[[]],"net/url.unescape":[[0],[0]],"net/url.unhex":[[0]],"net/url.validEncoded":[[]],"net/url.validOptionalPort":[[]],"net/url.validUserinfo":[[]],"os.Chdir":[[0]],"os.Chmod":[[0]],"os.Chown":[[0]],"os.Chown$1":[[]],"os.Chtimes":[[0]],"os.Clearenv":[],"os.Create":[[],[0]],"os.CreateTemp":[[],[0,1]],"os.DirFS":[[0]],"os.Environ":[[]],"os.Executable":[[],[]],"os.Exit":[],"os.Expand":[[0]],"os.ExpandEnv":[[0]],"os.FindProcess":[[0],[]],"os.Getegid":[[]],"os.Getenv":[[]],"os.Geteuid":[[]],"os.Getgid":[[]],"os.Getgroups":[[],[]],"os.Getpagesize":[[]],"os.Getpid":[[]],"os.Getppid":[[]],"os.Getuid":[[]],"os.Getwd":[[],[]],"os.Hostname":[[],[]],"os.IsExist":[[0]],"os.IsNotExist":[[0]],"os.IsPathSeparator":[[0]],"os.IsPermission":[[0]],"os.IsTimeout":[[]],"os.Lchown":[[0]],"os.Lchown$1":[[]],"os.Link":[[0,1]],"os.Link$1":[[]],"os.LookupEnv":[[],[]],"os.Lstat":[[],[0]],"os.Mkdir":[[0]],"os.Mkdir$1":[[]],"os.MkdirAll":[[0]],"os.MkdirTemp":[[0,1],[0,1]],"os.NewFile":[[0,1]],"os.NewSyscallError":[[0,1]],"os.Open":[[],[0]],"os.OpenFile":[[1],[0]],"os.Pipe":[[],[],[]],"os.ReadDir":[[],[0]],"os.ReadDir$1":[[]],"os.ReadFile":[[],[0]],"os.Readlink":[[],[0]],"os.Remove":[[0]],"os.Remove$1":[[]],"os.Remove$2":[[]],"os.RemoveAll":[[0]],"os.Rename":[[0,1]],"os.SameFile":[[0,1]],"os.Setenv":[[]],"os.StartProcess":[[],[0,2]],"os.Stat":[[],[0]],"os.Symlink":[[0,1]],"os.Symlink$1":[[]],"os.TempDir":[[]],"os.Truncate":[[0]],"os.Truncate$1":[[]],"os.Unsetenv":[[]],"os.UserCacheDir":[[],[]],"os.UserConfigDir":[[],[]],"os.UserHomeDir":[[],[]],"os.WriteFile":[[0]],"os.adjustFileLimit":[],"os.atime":[[0]],"os.basename":[[0]],"os.chmod":[[0]],"os.chmod$1":[[]],"os.closedir":[[]],"os.containsAny":[[]],"os.dtToType":[[]],"os.endsWithDot":[[]],"os.epipecheck":[],"os.errClosed":[[]],"os.errDeadlineExceeded":[[]],"os.errNoDeadline":[[]],"os.executable":[[],[]],"os.fastrand":[[]],"os.fillFileStatFromSys":[],"os.findProcess":[[0],[]],"os.fixCount":[[0],[1]],"os.fixLongPath":[[0]],"os.fixRootDirectory":[[0]],"os.genericReadFrom":[[],[0,1]],"os.getShellName":[[0],[]],"os.hostname":[[],[]],"os.ignoringEINTR":[[]],"os.init":[],"os.init#1":[],"os.init#2":[],"os.isAlphaNum":[[0]],"os.isShellSpecialVar":[[]],"os.isWindowsNulName":[[]],"os.itox":[[0]],"os.joinPath":[[0,1]],"os.lastIndex":[[]],"os.lstatNolog":[[],[0]],"os.lstatNolog$1":[[]],"os.newFile":[[0,1]],"os.newFile$1":[[]],"os.newProcess":[[0,1]],"os.newRawConn":[[0],[]],"os.newUnixDirent":[[0,1,2],[0,1]],"os.nextRandom":[[]],"os.openFdAt":[[1],[]],"os.openFileNolog":[[],[0]],"os.prefixAndSuffix":[[0],[0],[]],"os.readdir_r":[[]],"os.removeAll":[[0]],"os.removeAllFrom":[[1]],"os.rename":[[0,1]],"os.rename$1":[[]],"os.runtime_args":[[]],"os.runtime_beforeExit":[],"os.sameFile":[[0,1]],"os.setStickyBit":[[0]],"os.sigpipe":[],"os.splitPath":[[0],[0]],"os.startProcess":[[],[0,2]],"os.statNolog":[[],[0]],"os.statNolog$1":[[]],"os.syscallMode":[[0]],"os.tempDir":[[]],"os.uitox":[[0]],"os.underlyingError":[[0]],"os.underlyingErrorIs":[[0]],"os.wrapSyscallError":[[0,1]],"os/exec.Command":[[0,1]],"os/exec.CommandContext":[[0,1,2]],"os/exec.LookPath":[[0],[0]],"os/exec.addCriticalEnv":[[0]],"os/exec.dedupEnv":[[0]],"os/exec.dedupEnvCase":[[1]],"os/exec.findExecutable":[[0]],"os/exec.init":[],"os/exec.interfaceEqual":[[0,1]],"os/exec.interfaceEqual$1":[],"os/exec.lookExtensions":[[0,1],[0,1]],"os/exec.minInt":[[0,1]],"os/exec.skipStdinCopyError":[[0]],"os/exec/internal/fdtest.Exists":[[]],"os/exec/internal/fdtest.init":[],"os/signal.Ignore":[],"os/signal.Ignored":[[]],"os/signal.Notify":[],"os/signal.Notify$1":[],"os/signal.Notify$1$1":[],"os/signal.NotifyContext":[[0,1],[]],"os/signal.NotifyContext$1":[],"os/signal.Reset":[],"os/signal.Stop":[],"os/signal.cancel":[],"os/signal.cancel$1":[],"os/signal.disableSignal":[],"os/signal.enableSignal":[],"os/signal.ignoreSignal":[],"os/signal.init":[],"os/signal.init#1":[],"os/signal.loop":[],"os/signal.process":[],"os/signal.signalIgnored":[[]],"os/signal.signalWaitUntilIdle":[],"os/signal.signal_disable":[],"os/signal.signal_enable":[],"os/signal.signal_ignore":[],"os/signal.signal_ignored":[[]],"os/signal.signal_recv":[[]],"os/signal.signum":[[0]],"os/signal/internal/pty.Open":[[],[],[]],"os/signal/internal/pty._C2func_grantpt":[[],[]],"os/signal/internal/pty._C2func_posix_openpt":[[],[]],"os/signal/internal/pty._C2func_unlockpt":[[],[]],"os/signal/internal/pty._Cfunc_GoString":[[]],"os/signal/internal/pty._Cfunc_close":[[]],"os/signal/internal/pty._Cfunc_grantpt":[[]],"os/signal/internal/pty._Cfunc_posix_openpt":[[]],"os/signal/internal/pty._Cfunc_ptsname":[[]],"os/signal/internal/pty._Cfunc_unlockpt":[[]],"os/signal/internal/pty._Cgo_ptr":[[0]],"os/signal/internal/pty._Cgo_use":[],"os/signal/internal/pty._cgoCheckPointer":[],"os/signal/internal/pty._cgoCheckResult":[],"os/signal/internal/pty._cgo_runtime_cgocall":[[]],"os/signal/internal/pty._cgo_runtime_gostring":[[]],"os/signal/internal/pty.init":[],"os/signal/internal/pty.ptyError":[[0,1]],"os/user.Current":[[],[]],"os/user.Current$1":[],"os/user.Lookup":[[],[0]],"os/user.LookupGroup":[[],[0]],"os/user.LookupGroupId":[[],[0]],"os/user.LookupId":[[],[0]],"os/user._Cfunc_GoString":[[]],"os/user._Cfunc__CMalloc":[[]],"os/user._Cfunc_free":[[]],"os/user._Cfunc_mygetgrgid_r":[[]],"os/user._Cfunc_mygetgrnam_r":[[]],"os/user._Cfunc_mygetgrouplist":[[]],"os/user._Cfunc_mygetpwnam_r":[[]],"os/user._Cfunc_mygetpwuid_r":[[]],"os/user._Cfunc_realloc":[[]],"os/user._Cfunc_sysconf":[[]],"os/user._Cgo_ptr":[[0]],"os/user._Cgo_use":[],"os/user._cgoCheckPointer":[],"os/user._cgoCheckResult":[],"os/user._cgo_cmalloc":[[]],"os/user._cgo_runtime_cgocall":[[]],"os/user._cgo_runtime_gostring":[[]],"os/user.alloc":[[]],"os/user.buildGroup":[[0]],"os/user.buildUser":[[0]],"os/user.current":[[],[]],"os/user.getGroupList":[[]],"os/user.groupRetry":[[0]],"os/user.init":[],"os/user.isSizeReasonable":[[0]],"os/user.listGroups":[[],[0]],"os/user.lookupGroup":[[],[0]],"os/user.lookupGroup$1":[[]],"os/user.lookupGroup$1$1":[[]],"os/user.lookupGroupId":[[],[0]],"os/user.lookupUnixGid":[[],[0]],"os/user.lookupUnixGid$1":[[]],"os/user.lookupUnixGid$1$1":[[]],"os/user.lookupUnixUid":[[],[0]],"os/user.lookupUnixUid$1":[[]],"os/user.lookupUnixUid$1$1":[[]],"os/user.lookupUser":[[],[0]],"os/user.lookupUser$1":[[]],"os/user.lookupUser$1$1":[[]],"os/user.lookupUserId":[[],[0]],"os/user.retryWithBuffer":[[]],"os/user.runtime_throw":[],"os/user.structPasswdForNegativeTest":[[]],"path.Base":[[0]],"path.Clean":[[0]],"path.Dir":[[0]],"path.Ext":[[0]],"path.IsAbs":[[0]],"path.Join":[[0]],"path.Match":[[],[]],"path.Split":[[0],[0]],"path.getEsc":[[0],[0],[]],"path.init":[],"path.lastSlash":[[]],"path.matchChunk":[[1],[],[]],"path.scanChunk":[[],[0],[0]],"path/filepath.Abs":[[0],[]],"path/filepath.Base":[[0]],"path/filepath.Clean":[[0]],"path/filepath.Dir":[[0]],"path/filepath.EvalSymlinks":[[0],[0]],"path/filepath.Ext":[[0]],"path/filepath.FromSlash":[[0]],"path/filepath.Glob":[[0],[]],"path/filepath.HasPrefix":[[0,1]],"path/filepath.IsAbs":[[0]],"path/filepath.Join":[[0]],"path/filepath.Match":[[],[]],"path/filepath.Rel":[[1],[0,1]],"path/filepath.Split":[[0],[0]],"path/filepath.SplitList":[[0]],"path/filepath.ToSlash":[[0]],"path/filepath.VolumeName":[[0]],"path/filepath.Walk":[[0]],"path/filepath.WalkDir":[[0]],"path/filepath.abs":[[0],[]],"path/filepath.cleanGlobPath":[[0]],"path/filepath.cleanGlobPathWindows":[[],[0]],"path/filepath.evalSymlinks":[[0],[0]],"path/filepath.getEsc":[[0],[0],[]],"path/filepath.glob":[[0,2],[]],"path/filepath.globWithLimit":[[0],[]],"path/filepath.hasMeta":[[0]],"path/filepath.init":[],"path/filepath.join":[[0]],"path/filepath.matchChunk":[[1],[],[]],"path/filepath.readDir":[[],[0]],"path/filepath.readDir$1":[[]],"path/filepath.readDirNames":[[],[0]],"path/filepath.sameWord":[[0,1]],"path/filepath.scanChunk":[[],[0],[0]],"path/filepath.splitList":[[0]],"path/filepath.unixAbs":[[0],[]],"path/filepath.volumeNameLen":[[]],"path/filepath.walk":[[0]],"path/filepath.walkDir":[[0]],"path/filepath.walkSymlinks":[[0],[0]],"plugin.Open":[[],[0]],"plugin._Cfunc_GoString":[[]],"plugin._Cfunc_pluginLookup":[[]],"plugin._Cfunc_pluginOpen":[[]],"plugin._Cfunc_realpath":[[]],"plugin._Cgo_ptr":[[0]],"plugin._Cgo_use":[],"plugin._cgoCheckPointer":[],"plugin._cgoCheckResult":[],"plugin._cgo_runtime_cgocall":[[]],"plugin._cgo_runtime_gostring":[[]],"plugin.doInit":[],"plugin.init":[],"plugin.lastmoduleinit":[[],[],[]],"plugin.lookup":[[0,1],[0,1]],"plugin.open":[[],[0]],"plugin.open$1":[[]],"plugin.open$2":[[]],"plugin.open$3":[[]],"reflect.Append":[[0]],"reflect.AppendSlice":[[0,1]],"reflect.ArrayOf":[[0,1]],"reflect.ArrayOf$1":[[]],"reflect.ChanOf":[[0,1]],"reflect.Copy":[[]],"reflect.DeepEqual":[[0,1]],"reflect.FuncOf":[[0,1]],"reflect.FuncOf$1":[[0]],"reflect.Indirect":[[0]],"reflect.MakeChan":[[0]],"reflect.MakeFunc":[[0,1]],"reflect.MakeMap":[[0]],"reflect.MakeMapWithSize":[[0]],"reflect.MakeSlice":[[0,1,2]],"reflect.MapOf":[[0,1]],"reflect.MapOf$1":[[]],"reflect.New":[[0]],"reflect.NewAt":[[0,1]],"reflect.PointerTo":[[0]],"reflect.PtrTo":[[0]],"reflect.Select":[[],[],[]],"reflect.SliceOf":[[0]],"reflect.StructOf":[[]],"reflect.StructOf$1":[[0]],"reflect.StructOf$2":[[0]],"reflect.StructOf$3":[[0]],"reflect.StructOf$4":[[0]],"reflect.StructOf$5":[[0]],"reflect.StructOf$6":[[]],"reflect.Swapper":[[]],"reflect.Swapper$1":[],"reflect.Swapper$2":[],"reflect.Swapper$3":[],"reflect.Swapper$4":[],"reflect.Swapper$5":[],"reflect.Swapper$6":[],"reflect.Swapper$7":[],"reflect.Swapper$8":[],"reflect.Swapper$9":[],"reflect.TypeOf":[[0]],"reflect.ValueOf":[[0]],"reflect.VisibleFields":[[0]],"reflect.Zero":[[0]],"reflect.add":[[0,1]],"reflect.addReflectOff":[[]],"reflect.addTypeBits":[],"reflect.align":[[0,1]],"reflect.appendGCProg":[[0,1]],"reflect.appendVarint":[[0,1]],"reflect.archFloat32FromReg":[[0]],"reflect.archFloat32ToReg":[[0]],"reflect.arrayAt":[[0,1,2]],"reflect.bucketOf":[[0,1]],"reflect.call":[],"reflect.callMethod":[],"reflect.callReflect":[],"reflect.chancap":[[]],"reflect.chanclose":[],"reflect.chanlen":[[]],"reflect.chanrecv":[[],[]],"reflect.chansend":[[]],"reflect.convertOp":[[]],"reflect.copyVal":[[0,1,2]],"reflect.cvtBytesString":[[1]],"reflect.cvtComplex":[[1]],"reflect.cvtDirect":[[0,1]],"reflect.cvtFloat":[[1]],"reflect.cvtFloatInt":[[1]],"reflect.cvtFloatUint":[[1]],"reflect.cvtI2I":[[1]],"reflect.cvtInt":[[1]],"reflect.cvtIntFloat":[[1]],"reflect.cvtIntString":[[1]],"reflect.cvtRunesString":[[1]],"reflect.cvtSliceArrayPtr":[[0,1]],"reflect.cvtStringBytes":[[1]],"reflect.cvtStringRunes":[[1]],"reflect.cvtT2I":[[1]],"reflect.cvtUint":[[1]],"reflect.cvtUintFloat":[[1]],"reflect.cvtUintString":[[1]],"reflect.deepValueEqual":[[0,1]],"reflect.deepValueEqual$1":[[1]],"reflect.deepValueEqual$2":[[0]],"reflect.directlyAssignable":[[]],"reflect.dumpPtrBitMap":[],"reflect.emitGCMask":[],"reflect.escapes":[],"reflect.floatFromReg":[],"reflect.floatToReg":[],"reflect.fnv1":[[0,1]],"reflect.funcLayout":[[0],[0],[0]],"reflect.funcLayout$1":[[]],"reflect.funcName":[[]],"reflect.funcStr":[[]],"reflect.grow":[[0,1],[0],[0,1]],"reflect.hashMightPanic":[[]],"reflect.haveIdenticalType":[[0,1]],"reflect.haveIdenticalUnderlyingType":[[]],"reflect.ifaceE2I":[],"reflect.ifaceIndir":[[0]],"reflect.implements":[[]],"reflect.init":[],"reflect.intFromReg":[],"reflect.intToReg":[],"reflect.isLetter":[[0]],"reflect.isReflexive":[[]],"reflect.isValidFieldName":[[]],"reflect.makeBytes":[[0,2]],"reflect.makeComplex":[[0,2]],"reflect.makeFloat":[[0,2]],"reflect.makeFloat32":[[0,2]],"reflect.makeFuncStub":[],"reflect.makeInt":[[0,2]],"reflect.makeMethodValue":[[1]],"reflect.makeRunes":[[0,2]],"reflect.makeString":[[0,2]],"reflect.makechan":[[]],"reflect.makemap":[[]],"reflect.mapaccess":[[]],"reflect.mapaccess_faststr":[[]],"reflect.mapassign":[],"reflect.mapassign_faststr":[],"reflect.mapdelete":[],"reflect.mapdelete_faststr":[],"reflect.mapiterelem":[[]],"reflect.mapiterinit":[],"reflect.mapiterkey":[[]],"reflect.mapiternext":[],"reflect.maplen":[[]],"reflect.memmove":[],"reflect.methodReceiver":[[1],[],[1]],"reflect.methodValueCall":[],"reflect.methodValueCallCodePtr":[[]],"reflect.moveMakeFuncArgPtrs":[],"reflect.needKeyUpdate":[[]],"reflect.newAbiDesc":[[0]],"reflect.newName":[[]],"reflect.overflowFloat32":[[0]],"reflect.packEface":[[]],"reflect.resolveNameOff":[[]],"reflect.resolveReflectName":[[]],"reflect.resolveReflectText":[[]],"reflect.resolveReflectType":[[]],"reflect.resolveTextOff":[[]],"reflect.resolveTypeOff":[[]],"reflect.rselect":[[],[]],"reflect.rtypeOff":[[0,1]],"reflect.runtimeStructField":[[0],[0]],"reflect.specialChannelAssignability":[[0,1]],"reflect.storeRcvr":[],"reflect.toType":[[0]],"reflect.typedmemclr":[],"reflect.typedmemclrpartial":[],"reflect.typedmemmove":[],"reflect.typedmemmovepartial":[],"reflect.typedslicecopy":[[]],"reflect.typehash":[[]],"reflect.typelinks":[[],[]],"reflect.typeptrdata":[[0]],"reflect.typesByString":[[]],"reflect.typesMustMatch":[],"reflect.unpackEface":[[0]],"reflect.unsafe_New":[[]],"reflect.unsafe_NewArray":[[]],"reflect.valueInterface":[[0]],"reflect.valueMethodName":[[]],"reflect.verifyNotInHeapPtr":[[]],"reflect.writeVarint":[[]],"regexp.Compile":[[0],[0]],"regexp.CompilePOSIX":[[0],[0]],"regexp.Match":[[0,1],[0]],"regexp.MatchReader":[[0,1],[0]],"regexp.MatchString":[[0,1],[0]],"regexp.MustCompile":[[0]],"regexp.MustCompilePOSIX":[[0]],"regexp.QuoteMeta":[[0]],"regexp.cleanupOnePass":[],"regexp.compile":[[0,1,2],[0,1]],"regexp.compileOnePass":[[0]],"regexp.extract":[[0],[0],[0],[]],"regexp.freeBitState":[],"regexp.freeOnePassMachine":[],"regexp.init":[],"regexp.init#1":[],"regexp.iop":[[0]],"regexp.makeOnePass":[[0]],"regexp.makeOnePass$1":[[]],"regexp.maxBitStateLen":[[]],"regexp.mergeRuneSets":[[],[]],"regexp.mergeRuneSets$1":[],"regexp.mergeRuneSets$2":[[]],"regexp.minInputLen":[[0]],"regexp.newBitState":[[]],"regexp.newLazyFlag":[[0,1]],"regexp.newOnePassMachine":[[]],"regexp.newQueue":[[]],"regexp.onePassCopy":[[0]],"regexp.onePassNext":[[0]],"regexp.onePassPrefix":[[0],[0],[0]],"regexp.quote":[[0]],"regexp.shouldBacktrack":[[]],"regexp.special":[[0]],"regexp/syntax.Compile":[[],[]],"regexp/syntax.EmptyOpContext":[[]],"regexp/syntax.IsWordChar":[[0]],"regexp/syntax.Parse":[[0,1],[0,1]],"regexp/syntax.appendClass":[[0,1]],"regexp/syntax.appendFoldedClass":[[0,1]],"regexp/syntax.appendFoldedRange":[[0,1,2]],"regexp/syntax.appendLiteral":[[0,1]],"regexp/syntax.appendNegatedClass":[[0,1]],"regexp/syntax.appendNegatedTable":[[0,1]],"regexp/syntax.appendRange":[[0,1,2]],"regexp/syntax.appendTable":[[0,1]],"regexp/syntax.bw":[],"regexp/syntax.checkUTF8":[[0]],"regexp/syntax.cleanAlt":[],"regexp/syntax.cleanClass":[[0]],"regexp/syntax.dumpInst":[],"regexp/syntax.dumpProg":[],"regexp/syntax.escape":[],"regexp/syntax.init":[],"regexp/syntax.isCharClass":[[0]],"regexp/syntax.isValidCaptureName":[[]],"regexp/syntax.isalnum":[[0]],"regexp/syntax.literalRegexp":[[0,1]],"regexp/syntax.makePatchList":[[0]],"regexp/syntax.matchRune":[[0,1]],"regexp/syntax.mergeCharClass":[],"regexp/syntax.minFoldRune":[[0]],"regexp/syntax.negateClass":[[0]],"regexp/syntax.nextRune":[[0],[0],[0]],"regexp/syntax.parse":[[0,1],[0,1]],"regexp/syntax.parse$1":[],"regexp/syntax.repeatIsValid":[[]],"regexp/syntax.simplify1":[[0,1,2,3]],"regexp/syntax.u32":[[0]],"regexp/syntax.unhex":[[0]],"regexp/syntax.unicodeTable":[[0],[0]],"regexp/syntax.writeRegexp":[],"runtime.BlockProfile":[[],[]],"runtime.Breakpoint":[],"runtime.CPUProfile":[[]],"runtime.Caller":[[],[],[],[]],"runtime.Callers":[[]],"runtime.CallersFrames":[[0]],"runtime.FuncForPC":[[]],"runtime.GC":[],"runtime.GOMAXPROCS":[[]],"runtime.GOROOT":[[]],"runtime.Goexit":[],"runtime.GoroutineProfile":[[],[]],"runtime.Gosched":[],"runtime.KeepAlive":[],"runtime.LockOSThread":[],"runtime.MemProfile":[[],[]],"runtime.MutexProfile":[[],[]],"runtime.NumCPU":[[]],"runtime.NumCgoCall":[[]],"runtime.NumGoroutine":[[]],"runtime.ReadMemStats":[],"runtime.ReadMemStats$1":[],"runtime.ReadTrace":[[]],"runtime.SetBlockProfileRate":[],"runtime.SetCPUProfileRate":[],"runtime.SetCgoTraceback":[],"runtime.SetFinalizer":[],"runtime.SetFinalizer$1":[],"runtime.SetFinalizer$2":[],"runtime.SetMutexProfileFraction":[[]],"runtime.Stack":[[]],"runtime.Stack$1":[],"runtime.StartTrace":[[]],"runtime.StartTrace$1":[],"runtime.StopTrace":[],"runtime.ThreadCreateProfile":[[],[]],"runtime.UnlockOSThread":[],"runtime.Version":[[]],"runtime._ExternalCode":[],"runtime._GC":[],"runtime._LostExternalCode":[],"runtime._LostSIGPROFDuringAtomic64":[],"runtime._System":[],"runtime._VDSO":[],"runtime._cgo_panic_internal":[],"runtime.abort":[],"runtime.abs":[[0]],"runtime.acquireLockRank":[],"runtime.acquireSudog":[[]],"runtime.acquirem":[[]],"runtime.acquirep":[],"runtime.activeModules":[[]],"runtime.add":[[0,1]],"runtime.add1":[[0]],"runtime.addAdjustedTimers":[],"runtime.addOneOpenDeferFrame":[],"runtime.addOneOpenDeferFrame$1":[],"runtime.addOneOpenDeferFrame$1$1":[[]],"runtime.addb":[[0,1]],"runtime.addfinalizer":[[]],"runtime.addmoduledata":[],"runtime.addrsToSummaryRange":[[1],[2]],"runtime.addspecial":[[]],"runtime.addtimer":[],"runtime.adjustSignalStack":[[]],"runtime.adjustctxt":[],"runtime.adjustdefers":[],"runtime.adjustframe":[[]],"runtime.adjustpanics":[],"runtime.adjustpointer":[],"runtime.adjustpointers":[],"runtime.adjustsudogs":[],"runtime.adjusttimers":[],"runtime.advanceEvacuationMark":[],"runtime.alginit":[],"runtime.alignDown":[[0,1]],"runtime.alignUp":[[0,1]],"runtime.allFrames":[[0]],"runtime.allGsSnapshot":[[]],"runtime.allgadd":[],"runtime.allocm":[[1]],"runtime.allocm$1":[],"runtime.allocmcache":[[]],"runtime.allocmcache$1":[],"runtime.appendIntStr":[[0]],"runtime.arenaBase":[[0]],"runtime.arenaIndex":[[0]],"runtime.args":[],"runtime.argv_index":[[0,1]],"runtime.asanpoison":[],"runtime.asanread":[],"runtime.asanregisterglobals":[],"runtime.asanunpoison":[],"runtime.asanwrite":[],"runtime.asmcgocall":[[]],"runtime.asmcgocall_no_g":[],"runtime.asminit":[],"runtime.assertE2I":[[0,1]],"runtime.assertE2I2":[[0,1]],"runtime.assertI2I":[[0,1]],"runtime.assertI2I2":[[0,1]],"runtime.assertLockHeld":[],"runtime.assertRankHeld":[],"runtime.assertWorldStopped":[],"runtime.assertWorldStoppedOrLockHeld":[],"runtime.asyncPreempt":[],"runtime.asyncPreempt2":[],"runtime.atoi":[[0],[]],"runtime.atoi32":[[0],[]],"runtime.atoi64":[[0],[]],"runtime.atomicAllG":[[],[]],"runtime.atomicAllGIndex":[[0,1]],"runtime.atomicstorep":[],"runtime.atomicwb":[],"runtime.badPointer":[],"runtime.badTimer":[],"runtime.badcgocallback":[],"runtime.badctxt":[],"runtime.badmcall":[],"runtime.badmcall2":[],"runtime.badmorestackg0":[],"runtime.badmorestackgsignal":[],"runtime.badreflectcall":[],"runtime.badsignal":[],"runtime.badsystemstack":[],"runtime.badunlockosthread":[],"runtime.beforeIdle":[[],[]],"runtime.bgscavenge":[],"runtime.bgsweep":[],"runtime.binarySearchTree":[[],[0],[1]],"runtime.block":[],"runtime.blockAlignSummaryRange":[[1],[2]],"runtime.blockableSig":[[]],"runtime.blockevent":[],"runtime.blocksampled":[[]],"runtime.bool2int":[[0]],"runtime.boring_registerCache":[],"runtime.boring_runtime_arg0":[[]],"runtime.breakpoint":[],"runtime.bucketEvacuated":[[0,1,2]],"runtime.bucketMask":[[0]],"runtime.bucketShift":[[0]],"runtime.bulkBarrierBitmap":[],"runtime.bulkBarrierPreWrite":[],"runtime.bulkBarrierPreWriteSrcOnly":[],"runtime.bytes":[[]],"runtime.bytesHash":[[]],"runtime.c128equal":[[0,1]],"runtime.c128hash":[[1]],"runtime.c64equal":[[0,1]],"runtime.c64hash":[[1]],"runtime.call1024":[],"runtime.call1048576":[],"runtime.call1073741824":[],"runtime.call128":[],"runtime.call131072":[],"runtime.call134217728":[],"runtime.call16":[],"runtime.call16384":[],"runtime.call16777216":[],"runtime.call2048":[],"runtime.call2097152":[],"runtime.call256":[],"runtime.call262144":[],"runtime.call268435456":[],"runtime.call32":[],"runtime.call32768":[],"runtime.call33554432":[],"runtime.call4096":[],"runtime.call4194304":[],"runtime.call512":[],"runtime.call524288":[],"runtime.call536870912":[],"runtime.call64":[],"runtime.call65536":[],"runtime.call67108864":[],"runtime.call8192":[],"runtime.call8388608":[],"runtime.callCgoSymbolizer":[],"runtime.callers":[[]],"runtime.callers$1":[],"runtime.canPreemptM":[[0]],"runtime.canpanic":[[]],"runtime.cansemacquire":[[]],"runtime.casGFromPreempted":[[]],"runtime.casGToPreemptScan":[],"runtime.casfrom_Gscanstatus":[],"runtime.casgcopystack":[[0]],"runtime.casgstatus":[],"runtime.casgstatus$1":[],"runtime.castogscanstatus":[[]],"runtime.cfuncname":[[0]],"runtime.cfuncnameFromNameoff":[[0]],"runtime.cgoCheckArg":[],"runtime.cgoCheckBits":[],"runtime.cgoCheckMemmove":[],"runtime.cgoCheckPointer":[],"runtime.cgoCheckResult":[],"runtime.cgoCheckSliceCopy":[],"runtime.cgoCheckTypedBlock":[],"runtime.cgoCheckTypedBlock$1":[],"runtime.cgoCheckUnknownPointer":[[0],[]],"runtime.cgoCheckUsingType":[],"runtime.cgoCheckWriteBarrier":[],"runtime.cgoCheckWriteBarrier$1":[],"runtime.cgoContextPCs":[],"runtime.cgoInRange":[[0,2]],"runtime.cgoIsGoPointer":[[]],"runtime.cgoSigtramp":[],"runtime.cgoUse":[],"runtime.cgocall":[[]],"runtime.cgocallback":[],"runtime.cgocallbackg":[],"runtime.cgocallbackg1":[],"runtime.cgocallbackg1$1":[],"runtime.cgounimpl":[],"runtime.chanbuf":[[0,1]],"runtime.chanparkcommit":[[]],"runtime.chanrecv":[[],[0,1]],"runtime.chanrecv$1":[],"runtime.chanrecv1":[],"runtime.chanrecv2":[[0,1]],"runtime.chansend":[[]],"runtime.chansend$1":[],"runtime.chansend1":[],"runtime.check":[],"runtime.checkASM":[[]],"runtime.checkIdleGCNoP":[[],[]],"runtime.checkRunqsNoP":[[]],"runtime.checkTimeouts":[],"runtime.checkTimers":[[1],[0],[]],"runtime.checkTimersNoP":[[0,2]],"runtime.checkdead":[],"runtime.checkdead$1":[],"runtime.checkmcount":[],"runtime.checkptrAlignment":[],"runtime.checkptrArithmetic":[],"runtime.checkptrBase":[[0]],"runtime.checkptrStraddles":[[0,1]],"runtime.chunkBase":[[0]],"runtime.chunkIndex":[[0]],"runtime.chunkPageIndex":[[0]],"runtime.cleantimers":[],"runtime.clearDeletedTimers":[],"runtime.clearSignalHandlers":[],"runtime.clearpools":[],"runtime.clobberfree":[],"runtime.close_trampoline":[],"runtime.closechan":[],"runtime.closefd":[[]],"runtime.closeonexec":[],"runtime.complex128div":[[]],"runtime.computeRZlog":[[]],"runtime.concatstring2":[[1,2]],"runtime.concatstring3":[[1,2,3]],"runtime.concatstring4":[[1,2,3,4]],"runtime.concatstring5":[[1,2,3,4,5]],"runtime.concatstrings":[[1]],"runtime.convI2I":[[0,1]],"runtime.convT":[[0]],"runtime.convT16":[[]],"runtime.convT32":[[]],"runtime.convT64":[[]],"runtime.convTnoptr":[[0]],"runtime.convTslice":[[]],"runtime.convTstring":[[]],"runtime.copysign":[[0,1]],"runtime.copystack":[],"runtime.countSub":[[0,1]],"runtime.countrunes":[[]],"runtime.cpuinit":[],"runtime.cputicks":[[]],"runtime.crash":[],"runtime.createfing":[],"runtime.crypto_x509_syscall":[[0,1,2,3,4,5,6]],"runtime.cstring":[[0]],"runtime.debugCallCheck":[[]],"runtime.debugCallCheck$1":[],"runtime.debugCallPanicked":[],"runtime.debugCallV2":[],"runtime.debugCallWrap":[],"runtime.debugCallWrap$1":[],"runtime.debugCallWrap$2":[],"runtime.debugCallWrap1":[],"runtime.debugCallWrap1$1":[],"runtime.debugCallWrap2":[],"runtime.debugCallWrap2$1":[],"runtime.debug_modinfo":[[]],"runtime.decoderune":[[0],[1]],"runtime.deductSweepCredit":[],"runtime.defaultMemProfileRate":[[0]],"runtime.deferCallSave":[],"runtime.deferproc":[],"runtime.deferprocStack":[],"runtime.deferreturn":[],"runtime.deltimer":[[]],"runtime.dematerializeGCProg":[],"runtime.dieFromSignal":[],"runtime.divRoundUp":[[0,1]],"runtime.divlu":[[0,1,2],[0,1,2]],"runtime.dlog":[[]],"runtime.doInit":[],"runtime.doRecordGoroutineProfile":[],"runtime.doRecordGoroutineProfile$1":[],"runtime.doSigPreempt":[],"runtime.doaddtimer":[],"runtime.dodeltimer":[[1]],"runtime.dodeltimer0":[],"runtime.dolockOSThread":[],"runtime.dopanic_m":[[]],"runtime.dounlockOSThread":[],"runtime.dropg":[],"runtime.dropm":[],"runtime.duffcopy":[],"runtime.duffzero":[],"runtime.dumpGCProg":[],"runtime.dumpbool":[],"runtime.dumpbv":[],"runtime.dumpfields":[],"runtime.dumpfinalizer":[],"runtime.dumpframe":[[]],"runtime.dumpgoroutine":[],"runtime.dumpgs":[],"runtime.dumpgs$1":[],"runtime.dumpgstatus":[],"runtime.dumpint":[],"runtime.dumpitabs":[],"runtime.dumpmemprof":[],"runtime.dumpmemprof_callback":[],"runtime.dumpmemrange":[],"runtime.dumpmemstats":[],"runtime.dumpms":[],"runtime.dumpobj":[],"runtime.dumpobjs":[],"runtime.dumpotherroot":[],"runtime.dumpparams":[],"runtime.dumpregs":[],"runtime.dumproots":[],"runtime.dumpslice":[],"runtime.dumpstr":[],"runtime.dumptype":[],"runtime.dwrite":[],"runtime.dwritebyte":[],"runtime.efaceHash":[[1]],"runtime.efaceOf":[[0]],"runtime.efaceeq":[[1,2]],"runtime.elideWrapperCalling":[[0]],"runtime.empty":[[0]],"runtime.encoderune":[[]],"runtime.endCheckmarks":[],"runtime.ensureSigM":[],"runtime.ensureSigM$1":[],"runtime.entersyscall":[],"runtime.entersyscall_gcwait":[],"runtime.entersyscall_sysmon":[],"runtime.entersyscallblock":[],"runtime.entersyscallblock$1":[],"runtime.entersyscallblock$2":[],"runtime.entersyscallblock_handoff":[],"runtime.envKeyEqual":[[0,1]],"runtime.environ":[[]],"runtime.eqslice":[[]],"runtime.evacuate":[],"runtime.evacuate_fast32":[],"runtime.evacuate_fast64":[],"runtime.evacuate_faststr":[],"runtime.evacuated":[[0]],"runtime.execute":[],"runtime.exit":[],"runtime.exitThread":[],"runtime.exit_trampoline":[],"runtime.exitsyscall":[],"runtime.exitsyscall$1":[],"runtime.exitsyscall0":[],"runtime.exitsyscallfast":[[]],"runtime.exitsyscallfast$1":[],"runtime.exitsyscallfast_pidle":[[]],"runtime.exitsyscallfast_reacquired":[],"runtime.exitsyscallfast_reacquired$1":[],"runtime.expandCgoFrames":[[0]],"runtime.extendRandom":[],"runtime.f32equal":[[0,1]],"runtime.f32hash":[[1]],"runtime.f32to64":[[0]],"runtime.f32toint32":[[0]],"runtime.f32toint64":[[0]],"runtime.f32touint64":[[0]],"runtime.f64equal":[[0,1]],"runtime.f64hash":[[1]],"runtime.f64to32":[[0]],"runtime.f64toint":[[0],[]],"runtime.f64toint32":[[0]],"runtime.f64toint64":[[0]],"runtime.f64touint64":[[0]],"runtime.fadd32":[[0,1]],"runtime.fadd64":[[0,1]],"runtime.fastexprand":[[0]],"runtime.fastlog2":[[0]],"runtime.fastrand":[[]],"runtime.fastrand64":[[]],"runtime.fastrandinit":[],"runtime.fastrandn":[[0]],"runtime.fastrandu":[[]],"runtime.fatal":[],"runtime.fatal$1":[],"runtime.fatalpanic":[],"runtime.fatalpanic$1":[],"runtime.fatalpanic$2":[],"runtime.fatalthrow":[],"runtime.fatalthrow$1":[],"runtime.fcmp64":[[],[]],"runtime.fcntl":[[]],"runtime.fcntl_trampoline":[],"runtime.fdiv32":[[0,1]],"runtime.fdiv64":[[0,1]],"runtime.feq32":[[]],"runtime.feq64":[[]],"runtime.fge32":[[]],"runtime.fge64":[[]],"runtime.fgt32":[[]],"runtime.fgt64":[[]],"runtime.fillAligned":[[0,1]],"runtime.fillAligned$1":[[0,1]],"runtime.fillstack":[],"runtime.findBitRange64":[[]],"runtime.findObject":[[0],[],[0]],"runtime.findRunnable":[[],[],[]],"runtime.findfunc":[[]],"runtime.findmoduledatap":[[]],"runtime.findnull":[[0]],"runtime.findnullw":[[]],"runtime.findsghi":[[0]],"runtime.finishsweep_m":[],"runtime.finq_callback":[],"runtime.fint32to32":[[0]],"runtime.fint32to64":[[0]],"runtime.fint64to32":[[0]],"runtime.fint64to64":[[0]],"runtime.fintto32":[[0]],"runtime.fintto64":[[0]],"runtime.fipstls_runtime_arg0":[[]],"runtime.float64Inf":[[]],"runtime.float64NegInf":[[]],"runtime.float64bits":[[0]],"runtime.float64frombits":[[0]],"runtime.flush":[],"runtime.flushallmcaches":[],"runtime.flushmcache":[],"runtime.fmtNSAsMS":[[0,1]],"runtime.fmul32":[[0,1]],"runtime.fmul64":[[0,1]],"runtime.fneg64":[[0]],"runtime.forEachG":[],"runtime.forEachGRace":[],"runtime.forEachP":[],"runtime.forcegchelper":[],"runtime.fpack32":[[0,1,2]],"runtime.fpack64":[[0,1,2]],"runtime.freeSomeWbufs":[[]],"runtime.freeSomeWbufs$1":[],"runtime.freeSpecial":[],"runtime.freeStackSpans":[],"runtime.freedefer":[],"runtime.freedeferfn":[],"runtime.freedeferpanic":[],"runtime.freemcache":[],"runtime.freemcache$1":[],"runtime.freezetheworld":[],"runtime.fsub64":[[0,1]],"runtime.fuint64to32":[[0]],"runtime.fuint64to64":[[0]],"runtime.full":[[0]],"runtime.funcMaxSPDelta":[[]],"runtime.funcdata":[[0,1]],"runtime.funcfile":[[0]],"runtime.funcline":[[0],[]],"runtime.funcline1":[[0],[]],"runtime.funcname":[[0]],"runtime.funcnameFromNameoff":[[0]],"runtime.funcpkgpath":[[0]],"runtime.funcspdelta":[[2]],"runtime.funpack32":[[0],[0],[0],[],[]],"runtime.funpack64":[[0],[0],[0],[],[]],"runtime.gcAssistAlloc":[],"runtime.gcAssistAlloc$1":[],"runtime.gcAssistAlloc1":[],"runtime.gcBgMarkPrepare":[],"runtime.gcBgMarkStartWorkers":[],"runtime.gcBgMarkWorker":[],"runtime.gcBgMarkWorker$1":[[]],"runtime.gcBgMarkWorker$2":[],"runtime.gcComputeStartingStackSize":[],"runtime.gcControllerCommit":[],"runtime.gcDrain":[],"runtime.gcDrainN":[[0]],"runtime.gcDumpObject":[],"runtime.gcFlushBgCredit":[],"runtime.gcMark":[],"runtime.gcMarkDone":[],"runtime.gcMarkDone$1":[],"runtime.gcMarkDone$1$1":[],"runtime.gcMarkDone$2":[],"runtime.gcMarkDone$3":[],"runtime.gcMarkRootCheck":[],"runtime.gcMarkRootCheck$1":[],"runtime.gcMarkRootPrepare":[],"runtime.gcMarkRootPrepare$1":[[0]],"runtime.gcMarkTermination":[],"runtime.gcMarkTermination$1":[],"runtime.gcMarkTermination$2":[],"runtime.gcMarkTermination$3":[],"runtime.gcMarkTermination$4":[],"runtime.gcMarkTermination$4$1":[],"runtime.gcMarkTinyAllocs":[],"runtime.gcMarkWorkAvailable":[[]],"runtime.gcPaceScavenger":[],"runtime.gcPaceSweeper":[],"runtime.gcParkAssist":[[]],"runtime.gcResetMarkState":[],"runtime.gcResetMarkState$1":[],"runtime.gcStart":[],"runtime.gcStart$1":[],"runtime.gcStart$2":[],"runtime.gcSweep":[],"runtime.gcTestIsReachable":[[]],"runtime.gcTestMoveStackOnNextCall":[],"runtime.gcTestPointerClass":[[]],"runtime.gcWaitOnMark":[],"runtime.gcWakeAllAssists":[],"runtime.gcWriteBarrier":[],"runtime.gcWriteBarrierBP":[],"runtime.gcWriteBarrierBX":[],"runtime.gcWriteBarrierCX":[],"runtime.gcWriteBarrierDX":[],"runtime.gcWriteBarrierR8":[],"runtime.gcWriteBarrierR9":[],"runtime.gcWriteBarrierSI":[],"runtime.gcallers":[[]],"runtime.gcd":[[0,1]],"runtime.gcenable":[],"runtime.gcinit":[],"runtime.gcmarknewobject":[],"runtime.gcount":[[]],"runtime.gcstopm":[],"runtime.gentraceback":[[]],"runtime.getArgInfo":[[0,1,3],[0,3]],"runtime.getArgInfoFast":[[0],[],[0]],"runtime.getCachedDlogger":[[]],"runtime.getLockRank":[[]],"runtime.getMCache":[[0]],"runtime.getPageSize":[[]],"runtime.getRandomData":[],"runtime.getStackMap":[[0,1],[0,1],[]],"runtime.getargp":[[]],"runtime.getcallerpc":[[]],"runtime.getcallersp":[[]],"runtime.getclosureptr":[[]],"runtime.getempty":[[]],"runtime.getempty$1":[],"runtime.getg":[[]],"runtime.getgcmask":[[0]],"runtime.getgcmaskcb":[[]],"runtime.getitab":[[0,1]],"runtime.getm":[[]],"runtime.getncpu":[[]],"runtime.getsig":[[]],"runtime.gfget":[[0]],"runtime.gfget$1":[],"runtime.gfget$2":[],"runtime.gfpurge":[],"runtime.gfput":[],"runtime.globrunqget":[[]],"runtime.globrunqput":[],"runtime.globrunqputbatch":[],"runtime.globrunqputhead":[],"runtime.goPanicIndex":[],"runtime.goPanicIndexU":[],"runtime.goPanicSlice3Acap":[],"runtime.goPanicSlice3AcapU":[],"runtime.goPanicSlice3Alen":[],"runtime.goPanicSlice3AlenU":[],"runtime.goPanicSlice3B":[],"runtime.goPanicSlice3BU":[],"runtime.goPanicSlice3C":[],"runtime.goPanicSlice3CU":[],"runtime.goPanicSliceAcap":[],"runtime.goPanicSliceAcapU":[],"runtime.goPanicSliceAlen":[],"runtime.goPanicSliceAlenU":[],"runtime.goPanicSliceB":[],"runtime.goPanicSliceBU":[],"runtime.goPanicSliceConvert":[],"runtime.goargs":[],"runtime.gobytes":[[]],"runtime.goenvs":[],"runtime.goenvs_unix":[],"runtime.goexit":[],"runtime.goexit0":[],"runtime.goexit1":[],"runtime.gogetenv":[[]],"runtime.gogo":[],"runtime.gopanic":[],"runtime.gopark":[],"runtime.goparkunlock":[],"runtime.gopreempt_m":[],"runtime.goready":[],"runtime.goready$1":[],"runtime.gorecover":[[]],"runtime.goroutineProfileWithLabels":[[],[]],"runtime.goroutineProfileWithLabelsConcurrent":[[],[]],"runtime.goroutineProfileWithLabelsConcurrent$1":[],"runtime.goroutineProfileWithLabelsConcurrent$2":[],"runtime.goroutineProfileWithLabelsConcurrent$3":[],"runtime.goroutineProfileWithLabelsSync":[[],[]],"runtime.goroutineProfileWithLabelsSync$1":[[]],"runtime.goroutineProfileWithLabelsSync$2":[],"runtime.goroutineProfileWithLabelsSync$3":[],"runtime.goroutineProfileWithLabelsSync$4":[],"runtime.goroutineProfileWithLabelsSync$4$1":[],"runtime.goroutineReady":[],"runtime.goroutineheader":[],"runtime.goschedImpl":[],"runtime.gosched_m":[],"runtime.goschedguarded":[],"runtime.goschedguarded_m":[],"runtime.gostartcall":[],"runtime.gostartcallfn":[],"runtime.gostring":[[]],"runtime.gostringn":[[]],"runtime.gostringnocopy":[[0]],"runtime.gostringw":[[]],"runtime.gotraceback":[[],[],[]],"runtime.goyield":[],"runtime.goyield_m":[],"runtime.greyobject":[],"runtime.growWork":[],"runtime.growWork_fast32":[],"runtime.growWork_fast64":[],"runtime.growWork_faststr":[],"runtime.growslice":[[0,1,2]],"runtime.gwrite":[],"runtime.handoff":[[0]],"runtime.handoffp":[],"runtime.hasPrefix":[[0,1]],"runtime.hashGrow":[],"runtime.heapBitsForAddr":[[0]],"runtime.heapBitsSetType":[],"runtime.heapBitsSetTypeGCProg":[],"runtime.heapRetained":[[]],"runtime.hexdumpWords":[],"runtime.ifaceHash":[[1]],"runtime.ifaceeq":[[1,2]],"runtime.inHeapOrStack":[[0]],"runtime.inPersistentAlloc":[[]],"runtime.inRange":[[1,3]],"runtime.inVDSOPage":[[]],"runtime.incidlelocked":[],"runtime.inf2one":[[0]],"runtime.inheap":[[]],"runtime.init":[],"runtime.init#1":[],"runtime.init#2":[],"runtime.init#3":[],"runtime.init#4":[],"runtime.init#5":[],"runtime.init#6":[],"runtime.init#7":[],"runtime.init#8":[],"runtime.initAlgAES":[],"runtime.initMetrics":[],"runtime.initMetrics$1":[],"runtime.initMetrics$10":[],"runtime.initMetrics$11":[],"runtime.initMetrics$12":[],"runtime.initMetrics$13":[],"runtime.initMetrics$14":[],"runtime.initMetrics$15":[],"runtime.initMetrics$16":[],"runtime.initMetrics$17":[],"runtime.initMetrics$18":[],"runtime.initMetrics$19":[],"runtime.initMetrics$2":[],"runtime.initMetrics$20":[],"runtime.initMetrics$21":[],"runtime.initMetrics$22":[],"runtime.initMetrics$23":[],"runtime.initMetrics$24":[],"runtime.initMetrics$25":[],"runtime.initMetrics$26":[],"runtime.initMetrics$27":[],"runtime.initMetrics$28":[],"runtime.initMetrics$29":[],"runtime.initMetrics$3":[],"runtime.initMetrics$30":[],"runtime.initMetrics$31":[],"runtime.initMetrics$32":[],"runtime.initMetrics$33":[],"runtime.initMetrics$4":[],"runtime.initMetrics$5":[],"runtime.initMetrics$6":[],"runtime.initMetrics$7":[],"runtime.initMetrics$8":[],"runtime.initMetrics$9":[],"runtime.initsig":[],"runtime.injectglist":[],"runtime.injectglist$1":[],"runtime.int32Hash":[[]],"runtime.int64Hash":[[]],"runtime.interequal":[[0,1]],"runtime.interhash":[[1]],"runtime.internal_cpu_getsysctlbyname":[[],[]],"runtime.intstring":[[]],"runtime.isAbortPC":[[]],"runtime.isAsyncSafePoint":[[],[1]],"runtime.isDirectIface":[[0]],"runtime.isEmpty":[[0]],"runtime.isExportedRuntime":[[0]],"runtime.isFinite":[[0]],"runtime.isInf":[[0]],"runtime.isNaN":[[0]],"runtime.isPowerOfTwo":[[0]],"runtime.isShrinkStackSafe":[[0]],"runtime.isSweepDone":[[]],"runtime.isSystemGoroutine":[[]],"runtime.itabAdd":[],"runtime.itabHashFunc":[[0,1]],"runtime.itab_callback":[],"runtime.itabsinit":[],"runtime.iterate_finq":[],"runtime.iterate_itabs":[],"runtime.iterate_memprof":[],"runtime.itoa":[[0,1]],"runtime.itoaDiv":[[0,1]],"runtime.kevent":[[]],"runtime.kevent_trampoline":[],"runtime.kqueue":[[]],"runtime.kqueue_trampoline":[],"runtime.less":[[0,1]],"runtime.levelIndexToOffAddr":[[1]],"runtime.lfnodeValidate":[],"runtime.lfstackPack":[[0,1]],"runtime.lfstackUnpack":[[0]],"runtime.libcCall":[[]],"runtime.libpreinit":[],"runtime.lock":[],"runtime.lock2":[],"runtime.lockInit":[],"runtime.lockOSThread":[],"runtime.lockWithRank":[],"runtime.lockWithRankMayAcquire":[],"runtime.lockedOSThread":[[]],"runtime.lockextra":[[]],"runtime.lowerASCII":[[0]],"runtime.mPark":[],"runtime.mProf_Flush":[],"runtime.mProf_FlushLocked":[],"runtime.mProf_Free":[],"runtime.mProf_Malloc":[],"runtime.mProf_Malloc$1":[],"runtime.mProf_NextCycle":[],"runtime.mProf_PostSweep":[],"runtime.mReserveID":[[]],"runtime.mStackIsSystemAllocated":[[]],"runtime.madvise":[],"runtime.madvise_trampoline":[],"runtime.main":[],"runtime.main$1":[],"runtime.main$2":[],"runtime.main_main":[],"runtime.makeAddrRange":[[0,1]],"runtime.makeBucketArray":[[0,1,2],[0,1,2]],"runtime.makeHeadTailIndex":[[0,1]],"runtime.makeLimiterEventStamp":[[0,1]],"runtime.makeSpanClass":[[0,1]],"runtime.makeStatDepSet":[[0]],"runtime.makechan":[[0,1]],"runtime.makechan64":[[0,1]],"runtime.makeheapobjbv":[[]],"runtime.makemap":[[0,2]],"runtime.makemap64":[[0,2]],"runtime.makemap_small":[[]],"runtime.makeslice":[[0,2]],"runtime.makeslice64":[[0,2]],"runtime.makeslicecopy":[[0,1]],"runtime.malg":[[]],"runtime.malg$1":[],"runtime.mallocgc":[[0]],"runtime.mallocinit":[],"runtime.mapaccess1":[[0,1]],"runtime.mapaccess1_fast32":[[0,1]],"runtime.mapaccess1_fast64":[[0,1]],"runtime.mapaccess1_faststr":[[0,1]],"runtime.mapaccess1_fat":[[0,1,3]],"runtime.mapaccess2":[[0,1],[]],"runtime.mapaccess2_fast32":[[0,1],[]],"runtime.mapaccess2_fast64":[[0,1],[]],"runtime.mapaccess2_faststr":[[0,1],[]],"runtime.mapaccess2_fat":[[0,1,3],[]],"runtime.mapaccessK":[[0,1],[0,1]],"runtime.mapassign":[[0,1]],"runtime.mapassign_fast32":[[0,1]],"runtime.mapassign_fast32ptr":[[0,1]],"runtime.mapassign_fast64":[[0,1]],"runtime.mapassign_fast64ptr":[[0,1]],"runtime.mapassign_faststr":[[0,1]],"runtime.mapclear":[],"runtime.mapdelete":[],"runtime.mapdelete_fast32":[],"runtime.mapdelete_fast64":[],"runtime.mapdelete_faststr":[],"runtime.mapiterinit":[],"runtime.mapiternext":[],"runtime.markBitsForAddr":[[0]],"runtime.markBitsForSpan":[[0]],"runtime.markroot":[[1]],"runtime.markroot$1":[],"runtime.markrootBlock":[[1,4]],"runtime.markrootFreeGStacks":[],"runtime.markrootSpans":[],"runtime.materializeGCProg":[[0]],"runtime.maxSearchAddr":[[]],"runtime.mayMoreStackMove":[],"runtime.mayMoreStackPreempt":[],"runtime.mcall":[],"runtime.mcommoninit":[],"runtime.mcount":[[]],"runtime.mdestroy":[],"runtime.mdump":[],"runtime.memclrHasPointers":[],"runtime.memclrNoHeapPointers":[],"runtime.memclrNoHeapPointersChunked":[],"runtime.memequal":[[]],"runtime.memequal0":[[]],"runtime.memequal128":[[0,1]],"runtime.memequal16":[[0,1]],"runtime.memequal32":[[0,1]],"runtime.memequal64":[[0,1]],"runtime.memequal8":[[0,1]],"runtime.memequal_varlen":[[]],"runtime.memhash":[[]],"runtime.memhash0":[[1]],"runtime.memhash128":[[]],"runtime.memhash16":[[]],"runtime.memhash32":[[]],"runtime.memhash32Fallback":[[0,1]],"runtime.memhash64":[[]],"runtime.memhash64Fallback":[[0,1]],"runtime.memhash8":[[]],"runtime.memhashFallback":[[0,1,2]],"runtime.memhash_varlen":[[]],"runtime.memmove":[],"runtime.mergeSummaries":[[0,1]],"runtime.metricsLock":[],"runtime.metricsUnlock":[],"runtime.mexit":[],"runtime.mget":[[]],"runtime.minit":[],"runtime.minitSignalMask":[],"runtime.minitSignalStack":[],"runtime.minitSignals":[],"runtime.mix":[[0,1]],"runtime.mlock":[],"runtime.mlock_trampoline":[],"runtime.mmap":[[0,1,2,3,4,5],[0,1,2,3,4,5]],"runtime.mmap_trampoline":[],"runtime.modTimer":[],"runtime.modtimer":[[]],"runtime.moduledataverify":[],"runtime.moduledataverify1":[],"runtime.modulesinit":[],"runtime.morestack":[],"runtime.morestack_noctxt":[],"runtime.morestackc":[],"runtime.moveTimers":[],"runtime.mpreinit":[],"runtime.mput":[],"runtime.msanfree":[],"runtime.msanmalloc":[],"runtime.msanmove":[],"runtime.msanread":[],"runtime.msanwrite":[],"runtime.msigrestore":[],"runtime.mspinning":[],"runtime.mstart":[],"runtime.mstart0":[],"runtime.mstart1":[],"runtime.mstart_stub":[],"runtime.mstartm0":[],"runtime.mulUintptr":[[0,1],[0,1]],"runtime.mullu":[[0,1],[0,1]],"runtime.munmap":[],"runtime.munmap_trampoline":[],"runtime.mutexevent":[],"runtime.nanotime":[[]],"runtime.nanotime1":[[]],"runtime.nanotime_trampoline":[],"runtime.needm":[],"runtime.net_fastrandu":[[]],"runtime.netpoll":[[]],"runtime.netpollBreak":[],"runtime.netpollDeadline":[],"runtime.netpollGenericInit":[],"runtime.netpollIsPollDescriptor":[[0]],"runtime.netpollReadDeadline":[],"runtime.netpollWriteDeadline":[],"runtime.netpollarm":[],"runtime.netpollblock":[[]],"runtime.netpollblockcommit":[[]],"runtime.netpollcheckerr":[[]],"runtime.netpollclose":[[]],"runtime.netpolldeadlineimpl":[],"runtime.netpollgoready":[],"runtime.netpollinit":[],"runtime.netpollinited":[[]],"runtime.netpollopen":[[]],"runtime.netpollready":[],"runtime.netpollunblock":[[]],"runtime.newAllocBits":[[]],"runtime.newArenaMayUnlock":[[]],"runtime.newBucket":[[0,1]],"runtime.newMarkBits":[[]],"runtime.newProfBuf":[[0]],"runtime.newSpecialsIter":[[0]],"runtime.newarray":[[0,1]],"runtime.newdefer":[[]],"runtime.newextram":[],"runtime.newm":[],"runtime.newm1":[],"runtime.newobject":[[0]],"runtime.newosproc":[],"runtime.newosproc0":[],"runtime.newproc":[],"runtime.newproc$1":[],"runtime.newproc1":[[0,2]],"runtime.newstack":[],"runtime.nextFreeFast":[[0]],"runtime.nextMarkBitArenaEpoch":[],"runtime.nextSample":[[]],"runtime.nextSampleNoFP":[[]],"runtime.nilfunc":[],"runtime.nilinterequal":[[0,1]],"runtime.nilinterhash":[[1]],"runtime.noSignalStack":[],"runtime.nobarrierWakeTime":[[0]],"runtime.noescape":[[0]],"runtime.nonblockingPipe":[[],[],[]],"runtime.noteclear":[],"runtime.notesleep":[],"runtime.notetsleep":[[]],"runtime.notetsleep_internal":[[]],"runtime.notetsleepg":[[]],"runtime.notewakeup":[],"runtime.notifyListAdd":[[]],"runtime.notifyListCheck":[],"runtime.notifyListNotifyAll":[],"runtime.notifyListNotifyOne":[],"runtime.notifyListWait":[],"runtime.offAddrToLevelIndex":[[1]],"runtime.oneNewExtraM":[],"runtime.open":[[]],"runtime.open_trampoline":[],"runtime.osPreemptExtEnter":[],"runtime.osPreemptExtExit":[],"runtime.osRelax":[],"runtime.osSetupTLS":[],"runtime.osStackAlloc":[],"runtime.osStackFree":[],"runtime.os_beforeExit":[],"runtime.os_fastrand":[[]],"runtime.os_runtime_args":[[]],"runtime.os_sigpipe":[],"runtime.osinit":[],"runtime.osyield":[],"runtime.osyield_no_g":[],"runtime.overLoadFactor":[[0,1]],"runtime.packPallocSum":[[0,1,2]],"runtime.pageIndexOf":[[],[0],[0]],"runtime.panicCheck1":[],"runtime.panicCheck2":[],"runtime.panicIndex":[],"runtime.panicIndexU":[],"runtime.panicSlice3Acap":[],"runtime.panicSlice3AcapU":[],"runtime.panicSlice3Alen":[],"runtime.panicSlice3AlenU":[],"runtime.panicSlice3B":[],"runtime.panicSlice3BU":[],"runtime.panicSlice3C":[],"runtime.panicSlice3CU":[],"runtime.panicSliceAcap":[],"runtime.panicSliceAcapU":[],"runtime.panicSliceAlen":[],"runtime.panicSliceAlenU":[],"runtime.panicSliceB":[],"runtime.panicSliceBU":[],"runtime.panicSliceConvert":[],"runtime.panicdivide":[],"runtime.panicdottypeE":[],"runtime.panicdottypeI":[],"runtime.panicfloat":[],"runtime.panicmakeslicecap":[],"runtime.panicmakeslicelen":[],"runtime.panicmem":[],"runtime.panicmemAddr":[],"runtime.panicnildottype":[],"runtime.panicoverflow":[],"runtime.panicshift":[],"runtime.panicunsafeslicelen":[],"runtime.panicunsafeslicenilptr":[],"runtime.panicwrap":[],"runtime.park_m":[],"runtime.parkunlock_c":[[]],"runtime.parseByteCount":[[0],[]],"runtime.parsedebugvars":[],"runtime.pcdatastart":[[0,1]],"runtime.pcdatavalue":[[3]],"runtime.pcdatavalue1":[[3]],"runtime.pcdatavalue2":[[],[0]],"runtime.pcvalue":[[3],[0]],"runtime.pcvalueCacheKey":[[0]],"runtime.persistentalloc":[[]],"runtime.persistentalloc$1":[],"runtime.persistentalloc1":[[0,1]],"runtime.pidleget":[[],[0]],"runtime.pidleput":[[1]],"runtime.pipe":[[],[],[]],"runtime.pipe_trampoline":[],"runtime.plugin_lastmoduleinit":[[],[],[]],"runtime.pluginftabverify":[],"runtime.pollFractionalWorkerExit":[[]],"runtime.pollWork":[[]],"runtime.poll_runtime_Semacquire":[],"runtime.poll_runtime_Semrelease":[],"runtime.poll_runtime_isPollServerDescriptor":[[0]],"runtime.poll_runtime_pollClose":[],"runtime.poll_runtime_pollOpen":[[0],[]],"runtime.poll_runtime_pollReset":[[]],"runtime.poll_runtime_pollServerInit":[],"runtime.poll_runtime_pollSetDeadline":[],"runtime.poll_runtime_pollUnblock":[],"runtime.poll_runtime_pollWait":[[]],"runtime.poll_runtime_pollWaitCanceled":[],"runtime.preemptM":[],"runtime.preemptPark":[],"runtime.preemptall":[[]],"runtime.preemptone":[[]],"runtime.prepGoExitFrame":[],"runtime.prepareFreeWorkbufs":[],"runtime.preprintpanics":[],"runtime.preprintpanics$1":[],"runtime.printAncestorTraceback":[],"runtime.printAncestorTracebackFuncInfo":[],"runtime.printArgs":[],"runtime.printArgs$1":[[1]],"runtime.printArgs$2":[],"runtime.printArgs$3":[],"runtime.printCgoTraceback":[],"runtime.printDebugLog":[],"runtime.printDebugLogPC":[],"runtime.printOneCgoTraceback":[[]],"runtime.printScavTrace":[],"runtime.printany":[],"runtime.printanycustomtype":[],"runtime.printbool":[],"runtime.printcomplex":[],"runtime.printcreatedby":[],"runtime.printcreatedby1":[],"runtime.printeface":[],"runtime.printfloat":[],"runtime.printhex":[],"runtime.printiface":[],"runtime.printint":[],"runtime.printlock":[],"runtime.printnl":[],"runtime.printpanics":[],"runtime.printpointer":[],"runtime.printslice":[],"runtime.printsp":[],"runtime.printstring":[],"runtime.printuint":[],"runtime.printuintptr":[],"runtime.printunlock":[],"runtime.procPin":[[]],"runtime.procUnpin":[],"runtime.procresize":[[]],"runtime.procyield":[],"runtime.profilealloc":[],"runtime.progToPointerMask":[[0]],"runtime.pthread_attr_getstacksize":[[]],"runtime.pthread_attr_getstacksize_trampoline":[],"runtime.pthread_attr_init":[[]],"runtime.pthread_attr_init_trampoline":[],"runtime.pthread_attr_setdetachstate":[[]],"runtime.pthread_attr_setdetachstate_trampoline":[],"runtime.pthread_cond_init":[[]],"runtime.pthread_cond_init_trampoline":[],"runtime.pthread_cond_signal":[[]],"runtime.pthread_cond_signal_trampoline":[],"runtime.pthread_cond_timedwait_relative_np":[[]],"runtime.pthread_cond_timedwait_relative_np_trampoline":[],"runtime.pthread_cond_wait":[[]],"runtime.pthread_cond_wait_trampoline":[],"runtime.pthread_create":[[]],"runtime.pthread_create_trampoline":[],"runtime.pthread_kill":[],"runtime.pthread_kill_trampoline":[],"runtime.pthread_mutex_init":[[]],"runtime.pthread_mutex_init_trampoline":[],"runtime.pthread_mutex_lock":[[]],"runtime.pthread_mutex_lock_trampoline":[],"runtime.pthread_mutex_unlock":[[]],"runtime.pthread_mutex_unlock_trampoline":[],"runtime.pthread_self":[[]],"runtime.pthread_self_trampoline":[],"runtime.publicationBarrier":[],"runtime.putCachedDlogger":[[]],"runtime.putempty":[],"runtime.putfull":[],"runtime.queuefinalizer":[],"runtime.r4":[[0]],"runtime.r8":[[0]],"runtime.raceReadObjectPC":[],"runtime.raceWriteObjectPC":[],"runtime.raceacquire":[],"runtime.raceacquirectx":[],"runtime.raceacquireg":[],"runtime.racectxend":[],"runtime.racefingo":[],"runtime.racefini":[],"runtime.racefree":[],"runtime.racegoend":[],"runtime.racegostart":[[]],"runtime.raceinit":[[],[]],"runtime.racemalloc":[],"runtime.racemapshadow":[],"runtime.racenotify":[],"runtime.raceproccreate":[[]],"runtime.raceprocdestroy":[],"runtime.racereadpc":[],"runtime.racereadrangepc":[],"runtime.racerelease":[],"runtime.racereleaseacquire":[],"runtime.racereleaseacquireg":[],"runtime.racereleaseg":[],"runtime.racereleasemerge":[],"runtime.racereleasemergeg":[],"runtime.racesync":[],"runtime.racewritepc":[],"runtime.racewriterangepc":[],"runtime.raise":[],"runtime.raise_trampoline":[],"runtime.raisebadsignal":[],"runtime.raiseproc":[],"runtime.raiseproc_trampoline":[],"runtime.rawbyteslice":[[]],"runtime.rawruneslice":[[]],"runtime.rawstring":[[],[]],"runtime.rawstringtmp":[[],[0]],"runtime.read":[[]],"runtime.readGCStats":[],"runtime.readGCStats$1":[],"runtime.readGCStats_m":[],"runtime.readGOGC":[[]],"runtime.readGOMEMLIMIT":[[]],"runtime.readMetrics":[],"runtime.readUnaligned32":[[0]],"runtime.readUnaligned64":[[0]],"runtime.read_trampoline":[],"runtime.readgstatus":[[0]],"runtime.readmemstats_m":[],"runtime.readvarint":[[],[0]],"runtime.readvarintUnsafe":[[0],[0]],"runtime.ready":[],"runtime.readyWithTime":[],"runtime.record":[],"runtime.recordForPanic":[],"runtime.recordspan":[],"runtime.recovery":[],"runtime.recv":[],"runtime.recvDirect":[],"runtime.reentersyscall":[],"runtime.reentersyscall$1":[],"runtime.reflectOffsLock":[],"runtime.reflectOffsUnlock":[],"runtime.reflect_addReflectOff":[[0]],"runtime.reflect_chancap":[[0]],"runtime.reflect_chanclose":[],"runtime.reflect_chanlen":[[0]],"runtime.reflect_chanrecv":[[],[0,2]],"runtime.reflect_chansend":[[]],"runtime.reflect_gcbits":[[0]],"runtime.reflect_ifaceE2I":[],"runtime.reflect_makechan":[[0,1]],"runtime.reflect_makemap":[[0]],"runtime.reflect_mapaccess":[[0,1]],"runtime.reflect_mapaccess_faststr":[[0,1]],"runtime.reflect_mapassign":[],"runtime.reflect_mapassign_faststr":[],"runtime.reflect_mapdelete":[],"runtime.reflect_mapdelete_faststr":[],"runtime.reflect_mapiterelem":[[0]],"runtime.reflect_mapiterinit":[],"runtime.reflect_mapiterkey":[[0]],"runtime.reflect_mapiternext":[],"runtime.reflect_maplen":[[0]],"runtime.reflect_memclrNoHeapPointers":[],"runtime.reflect_memmove":[],"runtime.reflect_resolveNameOff":[[1]],"runtime.reflect_resolveTextOff":[[1]],"runtime.reflect_resolveTypeOff":[[1]],"runtime.reflect_rselect":[[],[]],"runtime.reflect_typedmemclr":[],"runtime.reflect_typedmemclrpartial":[],"runtime.reflect_typedmemmove":[],"runtime.reflect_typedmemmovepartial":[],"runtime.reflect_typedslicecopy":[[1,2]],"runtime.reflect_typehash":[[2]],"runtime.reflect_typelinks":[[],[]],"runtime.reflect_unsafe_New":[[0]],"runtime.reflect_unsafe_NewArray":[[0,1]],"runtime.reflect_verifyNotInHeapPtr":[[0]],"runtime.reflectcall":[],"runtime.reflectcallmove":[],"runtime.reflectlite_chanlen":[[0]],"runtime.reflectlite_ifaceE2I":[],"runtime.reflectlite_maplen":[[0]],"runtime.reflectlite_resolveNameOff":[[1]],"runtime.reflectlite_resolveTypeOff":[[1]],"runtime.reflectlite_typedmemmove":[],"runtime.reflectlite_unsafe_New":[[0]],"runtime.releaseLockRank":[],"runtime.releaseSudog":[],"runtime.releasem":[],"runtime.releasep":[[]],"runtime.removefinalizer":[],"runtime.removespecial":[[]],"runtime.resetForSleep":[[]],"runtime.resetTimer":[[]],"runtime.resetspinning":[],"runtime.resettimer":[[]],"runtime.resolveNameOff":[[1]],"runtime.resolveTypeOff":[[1]],"runtime.restoreGsignalStack":[],"runtime.resumeG":[],"runtime.retake":[[]],"runtime.retpolineAX":[],"runtime.retpolineBP":[],"runtime.retpolineBX":[],"runtime.retpolineCX":[],"runtime.retpolineDI":[],"runtime.retpolineDX":[],"runtime.retpolineR10":[],"runtime.retpolineR11":[],"runtime.retpolineR12":[],"runtime.retpolineR13":[],"runtime.retpolineR14":[],"runtime.retpolineR15":[],"runtime.retpolineR8":[],"runtime.retpolineR9":[],"runtime.retpolineSI":[],"runtime.return0":[],"runtime.round2":[[]],"runtime.roundupsize":[[0]],"runtime.rt0_go":[],"runtime.runGCProg":[[0,1,2]],"runtime.runOneTimer":[],"runtime.runOpenDeferFrame":[[1]],"runtime.runPerThreadSyscall":[],"runtime.runSafePointFn":[],"runtime.runfinq":[],"runtime.runqdrain":[[0],[]],"runtime.runqempty":[[]],"runtime.runqget":[[0],[]],"runtime.runqgrab":[[0]],"runtime.runqput":[],"runtime.runqputbatch":[],"runtime.runqputbatch$1":[[0]],"runtime.runqputslow":[[]],"runtime.runqsteal":[[0]],"runtime.runtime_debug_WriteHeapDump":[],"runtime.runtime_debug_WriteHeapDump$1":[],"runtime.runtime_debug_freeOSMemory":[],"runtime.runtime_debug_freeOSMemory$1":[],"runtime.runtime_expandFinalInlineFrame":[[0]],"runtime.runtime_getProfLabel":[[]],"runtime.runtime_goroutineProfileWithLabels":[[],[]],"runtime.runtime_pprof_readProfile":[[],[],[]],"runtime.runtime_pprof_runtime_cyclesPerSecond":[[]],"runtime.runtime_setProfLabel":[],"runtime.runtimer":[[0]],"runtime.save":[],"runtime.saveAncestors":[[]],"runtime.saveblockevent":[],"runtime.saveg":[],"runtime.sbrk0":[[]],"runtime.scanConservative":[],"runtime.scanConservative$1":[[]],"runtime.scanblock":[],"runtime.scanframeworker":[],"runtime.scanobject":[],"runtime.scanstack":[[0]],"runtime.scanstack$1":[[]],"runtime.schedEnableUser":[],"runtime.schedEnabled":[[]],"runtime.schedinit":[],"runtime.schedtrace":[],"runtime.schedtrace$1":[],"runtime.schedule":[],"runtime.selectgo":[[1],[]],"runtime.selectgo$1":[[]],"runtime.selectgo$2":[],"runtime.selectgo$3":[],"runtime.selectnbrecv":[[],[0,1]],"runtime.selectnbsend":[[]],"runtime.selectsetpc":[],"runtime.sellock":[],"runtime.selparkcommit":[[]],"runtime.selunlock":[],"runtime.semacquire":[],"runtime.semacquire1":[],"runtime.semacreate":[],"runtime.semasleep":[[]],"runtime.semawakeup":[],"runtime.semrelease":[],"runtime.semrelease1":[],"runtime.send":[],"runtime.sendDirect":[],"runtime.setCheckmark":[[]],"runtime.setGCPercent":[[]],"runtime.setGCPercent$1":[],"runtime.setGCPhase":[],"runtime.setGNoWB":[],"runtime.setGsignalStack":[],"runtime.setMNoWB":[],"runtime.setMaxStack":[[]],"runtime.setMaxThreads":[[]],"runtime.setMemoryLimit":[[]],"runtime.setMemoryLimit$1":[],"runtime.setNonblock":[],"runtime.setPanicOnFault":[[]],"runtime.setProcessCPUProfiler":[],"runtime.setProcessCPUProfilerTimer":[],"runtime.setSignalstackSP":[],"runtime.setThreadCPUProfiler":[],"runtime.setThreadCPUProfilerHz":[],"runtime.setTraceback":[],"runtime.setcpuprofilerate":[],"runtime.setg":[],"runtime.setitimer":[],"runtime.setitimer_trampoline":[],"runtime.setprofilebucket":[],"runtime.setsig":[],"runtime.setsigsegv":[],"runtime.setsigstack":[],"runtime.settls":[],"runtime.shade":[],"runtime.shouldPushSigpanic":[[]],"runtime.showframe":[[0]],"runtime.showfuncinfo":[[0]],"runtime.shrinkstack":[],"runtime.siftdownTimer":[],"runtime.siftupTimer":[[1]],"runtime.sigFetchG":[[]],"runtime.sigInitIgnored":[],"runtime.sigInstallGoHandler":[[]],"runtime.sigNotOnStack":[],"runtime.sigNoteSetup":[],"runtime.sigNoteSleep":[],"runtime.sigNoteWakeup":[],"runtime.sigaction":[],"runtime.sigaction_trampoline":[],"runtime.sigaddset":[],"runtime.sigaltstack":[],"runtime.sigaltstack_trampoline":[],"runtime.sigblock":[],"runtime.sigdelset":[],"runtime.sigdisable":[],"runtime.sigenable":[],"runtime.sigfwd":[],"runtime.sigfwdgo":[[]],"runtime.sighandler":[],"runtime.sigignore":[],"runtime.signalDuringFork":[],"runtime.signalM":[],"runtime.signalWaitUntilIdle":[],"runtime.signal_disable":[],"runtime.signal_enable":[],"runtime.signal_ignore":[],"runtime.signal_ignored":[[0]],"runtime.signal_recv":[[]],"runtime.signalstack":[],"runtime.signame":[[]],"runtime.sigpanic":[],"runtime.sigpanic0":[],"runtime.sigpipe":[],"runtime.sigprocmask":[],"runtime.sigprocmask_trampoline":[],"runtime.sigprof":[],"runtime.sigprofNonGo":[],"runtime.sigprofNonGoPC":[],"runtime.sigsave":[],"runtime.sigsend":[[]],"runtime.sigtramp":[],"runtime.sigtrampgo":[],"runtime.slicebytetostring":[[]],"runtime.slicebytetostringtmp":[[]],"runtime.slicecopy":[[1,3]],"runtime.slicerunetostring":[[]],"runtime.spanHasNoSpecials":[],"runtime.spanHasSpecials":[],"runtime.spanOf":[[]],"runtime.spanOfHeap":[[]],"runtime.spanOfUnchecked":[[]],"runtime.spillArgs":[],"runtime.stackalloc":[[0]],"runtime.stackcache_clear":[],"runtime.stackcacherefill":[],"runtime.stackcacherelease":[],"runtime.stackcheck":[],"runtime.stackfree":[],"runtime.stackinit":[],"runtime.stacklog2":[[]],"runtime.stackmapdata":[[0,1]],"runtime.stackpoolalloc":[[0]],"runtime.stackpoolfree":[],"runtime.startCheckmarks":[],"runtime.startPCforTrace":[[0]],"runtime.startTemplateThread":[],"runtime.startTheWorld":[],"runtime.startTheWorld$1":[],"runtime.startTheWorldGC":[],"runtime.startTheWorldWithSema":[[]],"runtime.startTimer":[],"runtime.startlockedm":[],"runtime.startm":[],"runtime.startpanic_m":[[]],"runtime.stealWork":[[],[],[0],[],[]],"runtime.step":[[0],[]],"runtime.stkbucket":[[0,1,2]],"runtime.stkobjinit":[],"runtime.stopTheWorld":[],"runtime.stopTheWorld$1":[],"runtime.stopTheWorldGC":[],"runtime.stopTheWorldWithSema":[],"runtime.stopTimer":[[]],"runtime.stoplockedm":[],"runtime.stopm":[],"runtime.strequal":[[0,1]],"runtime.strhash":[[]],"runtime.strhashFallback":[[0,1]],"runtime.stringDataOnStack":[[0]],"runtime.stringHash":[[]],"runtime.stringStructOf":[[0]],"runtime.stringtoslicebyte":[[0,1]],"runtime.stringtoslicerune":[[0,1]],"runtime.subtract1":[[0]],"runtime.subtractb":[[0,1]],"runtime.suspendG":[[0]],"runtime.sweepone":[[]],"runtime.sweepone$1":[],"runtime.sync_atomic_CompareAndSwapPointer":[[]],"runtime.sync_atomic_CompareAndSwapUintptr":[[]],"runtime.sync_atomic_StorePointer":[],"runtime.sync_atomic_StoreUintptr":[],"runtime.sync_atomic_SwapPointer":[[]],"runtime.sync_atomic_SwapUintptr":[[]],"runtime.sync_atomic_runtime_procPin":[[]],"runtime.sync_atomic_runtime_procUnpin":[],"runtime.sync_fastrandn":[[0]],"runtime.sync_fatal":[],"runtime.sync_nanotime":[[]],"runtime.sync_runtime_Semacquire":[],"runtime.sync_runtime_SemacquireMutex":[],"runtime.sync_runtime_Semrelease":[],"runtime.sync_runtime_canSpin":[[]],"runtime.sync_runtime_doSpin":[],"runtime.sync_runtime_procPin":[[]],"runtime.sync_runtime_procUnpin":[],"runtime.sync_runtime_registerPoolCleanup":[],"runtime.sync_throw":[],"runtime.syncadjustsudogs":[[1,2]],"runtime.sysAlloc":[[0]],"runtime.sysAllocOS":[[0]],"runtime.sysFault":[],"runtime.sysFaultOS":[],"runtime.sysFree":[],"runtime.sysFreeOS":[],"runtime.sysHugePage":[],"runtime.sysHugePageOS":[],"runtime.sysMap":[],"runtime.sysMapOS":[],"runtime.sysReserve":[[0,1]],"runtime.sysReserveAligned":[[0,1,2],[1,2]],"runtime.sysReserveOS":[[0,1]],"runtime.sysUnused":[],"runtime.sysUnusedOS":[],"runtime.sysUsed":[],"runtime.sysUsedOS":[],"runtime.sysargs":[],"runtime.syscall":[],"runtime.syscall6":[],"runtime.syscall6X":[],"runtime.syscallPtr":[],"runtime.syscallX":[],"runtime.syscall_Exit":[],"runtime.syscall_Getpagesize":[[]],"runtime.syscall_cgocaller":[[1]],"runtime.syscall_rawSyscall":[[0,1,2,3],[0,1,2,3],[0,1,2,3]],"runtime.syscall_rawSyscall6":[[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6]],"runtime.syscall_runtime_AfterExec":[],"runtime.syscall_runtime_AfterFork":[],"runtime.syscall_runtime_AfterForkInChild":[],"runtime.syscall_runtime_BeforeExec":[],"runtime.syscall_runtime_BeforeFork":[],"runtime.syscall_runtime_envs":[[]],"runtime.syscall_setenv_c":[],"runtime.syscall_syscall":[[0,1,2,3],[0,1,2,3],[0,1,2,3]],"runtime.syscall_syscall6":[[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6]],"runtime.syscall_syscall6X":[[0,1,2,3,4,5,6],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6]],"runtime.syscall_syscallPtr":[[0,1,2,3],[0,1,2,3],[0,1,2,3]],"runtime.syscall_syscallX":[[0,1,2,3],[0,1,2,3],[0,1,2,3]],"runtime.syscall_unsetenv_c":[],"runtime.syscall_x509":[],"runtime.sysctl":[[]],"runtime.sysctl_trampoline":[],"runtime.sysctlbyname":[[]],"runtime.sysctlbynameInt32":[[],[]],"runtime.sysctlbyname_trampoline":[],"runtime.sysmon":[],"runtime.systemstack":[],"runtime.systemstack_switch":[],"runtime.templateThread":[],"runtime.testAtomic64":[],"runtime.throw":[],"runtime.throw$1":[],"runtime.tickspersecond":[[]],"runtime.timeHistogramMetricsBuckets":[[]],"runtime.timeSleep":[],"runtime.timeSleepUntil":[[]],"runtime.time_now":[[],[],[]],"runtime.timediv":[[]],"runtime.tooManyOverflowBuckets":[[0,1]],"runtime.tophash":[[0]],"runtime.traceAcquireBuffer":[[],[],[]],"runtime.traceAppend":[[0,1]],"runtime.traceBufPtrOf":[[0]],"runtime.traceCPUSample":[],"runtime.traceEvent":[],"runtime.traceEventLocked":[],"runtime.traceFlush":[[]],"runtime.traceFrameForPC":[[2],[0]],"runtime.traceFullDequeue":[[]],"runtime.traceFullQueue":[],"runtime.traceGCDone":[],"runtime.traceGCMarkAssistDone":[],"runtime.traceGCMarkAssistStart":[],"runtime.traceGCSTWDone":[],"runtime.traceGCSTWStart":[],"runtime.traceGCStart":[],"runtime.traceGCSweepDone":[],"runtime.traceGCSweepSpan":[],"runtime.traceGCSweepStart":[],"runtime.traceGoCreate":[],"runtime.traceGoEnd":[],"runtime.traceGoPark":[],"runtime.traceGoPreempt":[],"runtime.traceGoSched":[],"runtime.traceGoStart":[],"runtime.traceGoSysBlock":[],"runtime.traceGoSysCall":[],"runtime.traceGoSysExit":[],"runtime.traceGoUnpark":[],"runtime.traceGomaxprocs":[],"runtime.traceHeapAlloc":[],"runtime.traceHeapGoal":[],"runtime.traceProcFree":[],"runtime.traceProcStart":[],"runtime.traceProcStop":[],"runtime.traceReadCPU":[],"runtime.traceReader":[[]],"runtime.traceReaderAvailable":[[]],"runtime.traceReleaseBuffer":[],"runtime.traceStackID":[[]],"runtime.traceString":[[2],[0]],"runtime.trace_userLog":[],"runtime.trace_userRegion":[],"runtime.trace_userTaskCreate":[],"runtime.trace_userTaskEnd":[],"runtime.tracealloc":[],"runtime.tracealloc$1":[],"runtime.traceback":[],"runtime.traceback1":[],"runtime.tracebackCgoContext":[[3]],"runtime.tracebackHexdump":[],"runtime.tracebackHexdump$1":[[]],"runtime.tracebackothers":[],"runtime.tracebackothers$1":[],"runtime.tracebacktrap":[],"runtime.tracefree":[],"runtime.tracefree$1":[],"runtime.tracegc":[],"runtime.tryRecordGoroutineProfile":[],"runtime.tryRecordGoroutineProfileWB":[],"runtime.trygetfull":[[]],"runtime.typeBitsBulkBarrier":[],"runtime.typedmemclr":[],"runtime.typedmemmove":[],"runtime.typedslicecopy":[[2,4]],"runtime.typehash":[[2]],"runtime.typelinksinit":[],"runtime.typesEqual":[[0,1]],"runtime.unblocksig":[],"runtime.unimplemented":[],"runtime.unlock":[],"runtime.unlock2":[],"runtime.unlockOSThread":[],"runtime.unlockWithRank":[],"runtime.unlockextra":[],"runtime.unminit":[],"runtime.unminitSignals":[],"runtime.unreachableMethod":[],"runtime.unsafeslice":[],"runtime.unsafeslice64":[],"runtime.unsafeslicecheckptr":[],"runtime.unspillArgs":[],"runtime.unwindm":[],"runtime.updateTimer0When":[],"runtime.updateTimerModifiedEarliest":[],"runtime.updateTimerPMask":[],"runtime.usesLibcall":[[]],"runtime.usleep":[],"runtime.usleep_no_g":[],"runtime.usleep_trampoline":[],"runtime.validSIGPROF":[[]],"runtime.verifyTimerHeap":[],"runtime.wakeNetPoller":[],"runtime.wakefing":[[]],"runtime.wakep":[],"runtime.walltime":[[],[]],"runtime.walltime_trampoline":[],"runtime.wantAsyncPreempt":[[0]],"runtime.wbBufFlush":[],"runtime.wbBufFlush$1":[],"runtime.wbBufFlush1":[],"runtime.wirep":[],"runtime.worldStarted":[],"runtime.worldStopped":[],"runtime.write":[[]],"runtime.write1":[[]],"runtime.writeErr":[],"runtime.write_trampoline":[],"runtime.writeheapdump_m":[],"runtime/cgo.NewHandle":[[]],"runtime/cgo._Cgo_ptr":[[0]],"runtime/cgo._Cgo_use":[],"runtime/cgo._cgoCheckPointer":[],"runtime/cgo._cgoCheckResult":[],"runtime/cgo._cgo_panic":[],"runtime/cgo._cgo_runtime_cgocall":[[]],"runtime/cgo._runtime_cgo_panic_internal":[],"runtime/cgo.init":[],"runtime/debug.FreeOSMemory":[],"runtime/debug.ParseBuildInfo":[[],[0]],"runtime/debug.ParseBuildInfo$1":[],"runtime/debug.ParseBuildInfo$2":[[0],[]],"runtime/debug.PrintStack":[],"runtime/debug.ReadBuildInfo":[[],[]],"runtime/debug.ReadGCStats":[],"runtime/debug.ReadGCStats$1":[[]],"runtime/debug.SetGCPercent":[[]],"runtime/debug.SetMaxStack":[[]],"runtime/debug.SetMaxThreads":[[]],"runtime/debug.SetMemoryLimit":[[]],"runtime/debug.SetPanicOnFault":[[]],"runtime/debug.SetTraceback":[],"runtime/debug.Stack":[[]],"runtime/debug.WriteHeapDump":[],"runtime/debug.freeOSMemory":[],"runtime/debug.init":[],"runtime/debug.modinfo":[[]],"runtime/debug.quoteKey":[[0]],"runtime/debug.quoteValue":[[0]],"runtime/debug.readGCStats":[],"runtime/debug.setGCPercent":[[]],"runtime/debug.setMaxStack":[[]],"runtime/debug.setMaxThreads":[[]],"runtime/debug.setMemoryLimit":[[]],"runtime/debug.setPanicOnFault":[[]],"runtime/internal/atomic.And":[],"runtime/internal/atomic.And8":[],"runtime/internal/atomic.Cas":[[]],"runtime/internal/atomic.Cas64":[[]],"runtime/internal/atomic.CasRel":[[]],"runtime/internal/atomic.Casint32":[[]],"runtime/internal/atomic.Casint64":[[]],"runtime/internal/atomic.Casp1":[[]],"runtime/internal/atomic.Casuintptr":[[]],"runtime/internal/atomic.Load":[[0]],"runtime/internal/atomic.Load64":[[0]],"runtime/internal/atomic.Load8":[[0]],"runtime/internal/atomic.LoadAcq":[[0]],"runtime/internal/atomic.LoadAcq64":[[0]],"runtime/internal/atomic.LoadAcquintptr":[[0]],"runtime/internal/atomic.Loadint32":[[]],"runtime/internal/atomic.Loadint64":[[]],"runtime/internal/atomic.Loadp":[[0]],"runtime/internal/atomic.Loaduint":[[]],"runtime/internal/atomic.Loaduintptr":[[]],"runtime/internal/atomic.Or":[],"runtime/internal/atomic.Or8":[],"runtime/internal/atomic.Store":[],"runtime/internal/atomic.Store64":[],"runtime/internal/atomic.Store8":[],"runtime/internal/atomic.StoreRel":[],"runtime/internal/atomic.StoreRel64":[],"runtime/internal/atomic.StoreReluintptr":[],"runtime/internal/atomic.Storeint32":[],"runtime/internal/atomic.Storeint64":[],"runtime/internal/atomic.StorepNoWB":[],"runtime/internal/atomic.Storeuintptr":[],"runtime/internal/atomic.Xadd":[[]],"runtime/internal/atomic.Xadd64":[[]],"runtime/internal/atomic.Xaddint32":[[]],"runtime/internal/atomic.Xaddint64":[[]],"runtime/internal/atomic.Xadduintptr":[[]],"runtime/internal/atomic.Xchg":[[]],"runtime/internal/atomic.Xchg64":[[]],"runtime/internal/atomic.Xchgint32":[[]],"runtime/internal/atomic.Xchgint64":[[]],"runtime/internal/atomic.Xchguintptr":[[]],"runtime/internal/atomic.init":[],"runtime/internal/atomic.panicUnaligned":[],"runtime/internal/math.Mul64":[[0,1],[0,1]],"runtime/internal/math.MulUintptr":[[0,1],[0,1]],"runtime/internal/math.init":[],"runtime/internal/sys.Bswap32":[[0]],"runtime/internal/sys.Bswap64":[[0]],"runtime/internal/sys.Ctz32":[[0]],"runtime/internal/sys.Ctz64":[[0]],"runtime/internal/sys.Ctz8":[[]],"runtime/internal/sys.LeadingZeros64":[[]],"runtime/internal/sys.LeadingZeros8":[[]],"runtime/internal/sys.Len64":[[]],"runtime/internal/sys.Len8":[[]],"runtime/internal/sys.OnesCount64":[[0]],"runtime/internal/sys.Prefetch":[],"runtime/internal/sys.PrefetchStreamed":[],"runtime/internal/sys.TrailingZeros64":[[]],"runtime/internal/sys.TrailingZeros8":[[]],"runtime/internal/sys.init":[],"runtime/metrics.All":[[]],"runtime/metrics.Read":[],"runtime/metrics.init":[],"runtime/metrics.runtime_readMetrics":[],"runtime/pprof.Do":[],"runtime/pprof.ForLabels":[],"runtime/pprof.Label":[[0,1],[]],"runtime/pprof.Labels":[[0]],"runtime/pprof.Lookup":[[0]],"runtime/pprof.NewProfile":[[0]],"runtime/pprof.Profiles":[[]],"runtime/pprof.Profiles$1":[[]],"runtime/pprof.SetGoroutineLabels":[],"runtime/pprof.StartCPUProfile":[[]],"runtime/pprof.StopCPUProfile":[],"runtime/pprof.WithLabels":[[0]],"runtime/pprof.WriteHeapProfile":[[0]],"runtime/pprof.addMaxRSS":[],"runtime/pprof.allFrames":[[0],[]],"runtime/pprof.countBlock":[[]],"runtime/pprof.countGoroutine":[[]],"runtime/pprof.countHeap":[[]],"runtime/pprof.countMutex":[[]],"runtime/pprof.countThreadCreate":[[]],"runtime/pprof.elfBuildID":[[],[0]],"runtime/pprof.init":[],"runtime/pprof.labelValue":[[0]],"runtime/pprof.lockProfiles":[],"runtime/pprof.lostProfileEvent":[],"runtime/pprof.newProfileBuilder":[[0]],"runtime/pprof.parseProcSelfMaps":[],"runtime/pprof.parseProcSelfMaps$1":[[]],"runtime/pprof.printCountCycleProfile":[[]],"runtime/pprof.printCountProfile":[[]],"runtime/pprof.printCountProfile$1":[[]],"runtime/pprof.printCountProfile$2":[],"runtime/pprof.printStackRecord":[],"runtime/pprof.profileWriter":[],"runtime/pprof.readProfile":[[],[],[]],"runtime/pprof.runtime_cyclesPerSecond":[[]],"runtime/pprof.runtime_expandFinalInlineFrame":[[]],"runtime/pprof.runtime_getProfLabel":[[]],"runtime/pprof.runtime_goroutineProfileWithLabels":[[],[]],"runtime/pprof.runtime_setProfLabel":[],"runtime/pprof.scaleBlockProfile":[[0],[1]],"runtime/pprof.scaleHeapSample":[[0,1,2],[0,1,2]],"runtime/pprof.scaleMutexProfile":[[0],[1]],"runtime/pprof.unlockProfiles":[],"runtime/pprof.writeAlloc":[[0]],"runtime/pprof.writeBlock":[[0]],"runtime/pprof.writeGoroutine":[[0]],"runtime/pprof.writeGoroutineStacks":[[0]],"runtime/pprof.writeHeap":[[0]],"runtime/pprof.writeHeapInternal":[[0]],"runtime/pprof.writeHeapInternal$1":[[]],"runtime/pprof.writeHeapProto":[[]],"runtime/pprof.writeHeapProto$1":[],"runtime/pprof.writeMutex":[[0]],"runtime/pprof.writeProfileInternal":[[0]],"runtime/pprof.writeProfileInternal$1":[[]],"runtime/pprof.writeRuntimeProfile":[[]],"runtime/pprof.writeThreadCreate":[[]],"runtime/pprof.writeThreadCreate$1":[[],[]],"runtime/race.init":[],"runtime/trace.IsEnabled":[[]],"runtime/trace.Log":[],"runtime/trace.Logf":[],"runtime/trace.NewTask":[[0],[]],"runtime/trace.Start":[[]],"runtime/trace.Start$1":[],"runtime/trace.StartRegion":[[0,1]],"runtime/trace.Stop":[],"runtime/trace.WithRegion":[],"runtime/trace.fromContext":[[0]],"runtime/trace.init":[],"runtime/trace.newID":[[]],"runtime/trace.userLog":[],"runtime/trace.userRegion":[],"runtime/trace.userTaskCreate":[],"runtime/trace.userTaskEnd":[],"sort.Find":[[0],[0]],"sort.Float64s":[],"sort.Float64sAreSorted":[[]],"sort.Ints":[],"sort.IntsAreSorted":[[]],"sort.IsSorted":[[]],"sort.Reverse":[[0]],"sort.Search":[[0]],"sort.SearchFloat64s":[[]],"sort.SearchFloat64s$1":[[]],"sort.SearchInts":[[]],"sort.SearchInts$1":[[]],"sort.SearchStrings":[[]],"sort.SearchStrings$1":[[]],"sort.Slice":[],"sort.SliceIsSorted":[[]],"sort.SliceStable":[],"sort.Sort":[],"sort.Stable":[],"sort.Strings":[],"sort.StringsAreSorted":[[]],"sort.breakPatterns":[],"sort.breakPatterns_func":[],"sort.choosePivot":[[1,2],[]],"sort.choosePivot_func":[[1,2],[]],"sort.heapSort":[],"sort.heapSort_func":[],"sort.init":[],"sort.insertionSort":[],"sort.insertionSort_func":[],"sort.isNaN":[[0]],"sort.median":[[1,2,3]],"sort.medianAdjacent":[[1]],"sort.medianAdjacent_func":[[1]],"sort.median_func":[[1,2,3]],"sort.nextPowerOfTwo":[[0]],"sort.order2":[[1,2],[1,2]],"sort.order2_func":[[1,2],[1,2]],"sort.partialInsertionSort":[[]],"sort.partialInsertionSort_func":[[]],"sort.partition":[[2],[]],"sort.partitionEqual":[[1]],"sort.partitionEqual_func":[[1]],"sort.partition_func":[[2],[]],"sort.pdqsort":[],"sort.pdqsort_func":[],"sort.reverseRange":[],"sort.reverseRange_func":[],"sort.rotate":[],"sort.rotate_func":[],"sort.siftDown":[],"sort.siftDown_func":[],"sort.stable":[],"sort.stable_func":[],"sort.swapRange":[],"sort.swapRange_func":[],"sort.symMerge":[],"sort.symMerge_func":[],"strconv.AppendBool":[[0]],"strconv.AppendFloat":[[0,1,2,3]],"strconv.AppendInt":[[0,1,2]],"strconv.AppendQuote":[[0,1]],"strconv.AppendQuoteRune":[[]],"strconv.AppendQuoteRuneToASCII":[[]],"strconv.AppendQuoteRuneToGraphic":[[]],"strconv.AppendQuoteToASCII":[[0,1]],"strconv.AppendQuoteToGraphic":[[0,1]],"strconv.AppendUint":[[0,1,2]],"strconv.Atoi":[[0],[0]],"strconv.CanBackquote":[[]],"strconv.FormatBool":[[]],"strconv.FormatComplex":[[1,2]],"strconv.FormatFloat":[[0,1,2]],"strconv.FormatInt":[[0,1]],"strconv.FormatUint":[[0,1]],"strconv.IsGraphic":[[0]],"strconv.IsPrint":[[0]],"strconv.Itoa":[[0]],"strconv.ParseBool":[[],[0]],"strconv.ParseComplex":[[],[0]],"strconv.ParseFloat":[[0],[0]],"strconv.ParseInt":[[0,1,2],[0,1,2]],"strconv.ParseUint":[[0,1,2],[0,1,2]],"strconv.Quote":[[0]],"strconv.QuoteRune":[[]],"strconv.QuoteRuneToASCII":[[]],"strconv.QuoteRuneToGraphic":[[]],"strconv.QuoteToASCII":[[0]],"strconv.QuoteToGraphic":[[0]],"strconv.QuotedPrefix":[[0],[]],"strconv.Unquote":[[0],[]],"strconv.UnquoteChar":[[0],[],[0],[]],"strconv.appendEscapedRune":[[0,1]],"strconv.appendQuotedRuneWith":[[2]],"strconv.appendQuotedWith":[[0,1,2]],"strconv.atof32":[[0],[],[0]],"strconv.atof32exact":[[0],[]],"strconv.atof64":[[0],[],[0]],"strconv.atof64exact":[[0],[]],"strconv.atofHex":[[1,2,3],[0]],"strconv.baseError":[[0,1,2]],"strconv.bigFtoa":[[0,1,2]],"strconv.bitSizeError":[[0,1,2]],"strconv.bsearch16":[[]],"strconv.bsearch32":[[]],"strconv.commonPrefixLenIgnoreCase":[[]],"strconv.computeBounds":[[0],[0],[0],[1]],"strconv.contains":[[]],"strconv.convErr":[[0],[0,1]],"strconv.digitZero":[[]],"strconv.divisibleByPower5":[[]],"strconv.divmod1e9":[[0],[0]],"strconv.eiselLemire32":[[0,1],[]],"strconv.eiselLemire64":[[0,1],[]],"strconv.fmtB":[[3,4]],"strconv.fmtE":[[2]],"strconv.fmtF":[[0,2]],"strconv.fmtX":[[5]],"strconv.formatBits":[[0,1,2],[1,2]],"strconv.formatDecimal":[],"strconv.formatDigits":[[0,3,5]],"strconv.genericFtoa":[[0,1,2,3]],"strconv.index":[[]],"strconv.init":[],"strconv.isInGraphicList":[[0]],"strconv.isPowerOfTwo":[[0]],"strconv.leftShift":[],"strconv.lower":[[0]],"strconv.max":[[0,1]],"strconv.min":[[0,1]],"strconv.mulByLog10Log2":[[0]],"strconv.mulByLog2Log10":[[0]],"strconv.mult128bitPow10":[[0],[1,2],[0]],"strconv.mult64bitPow10":[[0],[1,2],[0]],"strconv.parseFloatPrefix":[[0],[],[0]],"strconv.prefixIsLessThan":[[0,1]],"strconv.quoteRuneWith":[[1]],"strconv.quoteWith":[[0,1]],"strconv.rangeError":[[0,1]],"strconv.readFloat":[[0],[0],[],[],[],[],[]],"strconv.rightShift":[],"strconv.roundShortest":[],"strconv.ryuDigits":[],"strconv.ryuDigits32":[],"strconv.ryuFtoaFixed32":[],"strconv.ryuFtoaFixed64":[],"strconv.ryuFtoaShortest":[],"strconv.shouldRoundUp":[[0]],"strconv.small":[[]],"strconv.special":[[],[],[]],"strconv.syntaxError":[[0,1]],"strconv.trim":[],"strconv.underscoreOK":[[]],"strconv.unhex":[[0],[]],"strconv.unquote":[[0],[0],[]],"strings.Clone":[[]],"strings.Compare":[[]],"strings.Contains":[[]],"strings.ContainsAny":[[0]],"strings.ContainsRune":[[0]],"strings.Count":[[]],"strings.Cut":[[0],[0],[]],"strings.EqualFold":[[0,1]],"strings.Fields":[[0]],"strings.FieldsFunc":[[0]],"strings.HasPrefix":[[0,1]],"strings.HasSuffix":[[0,1]],"strings.Index":[[]],"strings.IndexAny":[[0]],"strings.IndexByte":[[]],"strings.IndexFunc":[[0]],"strings.IndexRune":[[0]],"strings.Join":[[0,1]],"strings.LastIndex":[[]],"strings.LastIndexAny":[[]],"strings.LastIndexByte":[[]],"strings.LastIndexFunc":[[]],"strings.Map":[[1]],"strings.NewReader":[[0]],"strings.NewReplacer":[[0]],"strings.Repeat":[[0]],"strings.Replace":[[0,2]],"strings.ReplaceAll":[[0,2]],"strings.Split":[[0]],"strings.SplitAfter":[[0]],"strings.SplitAfterN":[[0]],"strings.SplitN":[[0]],"strings.Title":[[0]],"strings.Title$1":[[0]],"strings.ToLower":[[0]],"strings.ToLowerSpecial":[[1]],"strings.ToTitle":[[0]],"strings.ToTitleSpecial":[[1]],"strings.ToUpper":[[0]],"strings.ToUpperSpecial":[[1]],"strings.ToValidUTF8":[[0,1]],"strings.Trim":[[0]],"strings.TrimFunc":[[0]],"strings.TrimLeft":[[0]],"strings.TrimLeftFunc":[[0]],"strings.TrimPrefix":[[0]],"strings.TrimRight":[[0]],"strings.TrimRightFunc":[[0]],"strings.TrimSpace":[[0]],"strings.TrimSuffix":[[0]],"strings.explode":[[0]],"strings.genSplit":[[0]],"strings.getStringWriter":[[0]],"strings.indexFunc":[[0]],"strings.init":[],"strings.isSeparator":[[0]],"strings.lastIndexFunc":[[]],"strings.longestCommonSuffix":[[]],"strings.makeASCIISet":[[0],[]],"strings.makeGenericReplacer":[[0]],"strings.makeSingleStringReplacer":[[0,1]],"strings.makeStringFinder":[[0]],"strings.max":[[0,1]],"strings.noescape":[[0]],"strings.trimLeftASCII":[[0]],"strings.trimLeftByte":[[0]],"strings.trimLeftUnicode":[[0]],"strings.trimRightASCII":[[0]],"strings.trimRightByte":[[0]],"strings.trimRightUnicode":[[0]],"sync.NewCond":[[0]],"sync.fastrandn":[[]],"sync.fatal":[],"sync.indexLocal":[[0,1]],"sync.init":[],"sync.init#1":[],"sync.init#2":[],"sync.loadPoolChainElt":[[]],"sync.newEntry":[[0]],"sync.poolCleanup":[],"sync.poolRaceAddr":[[]],"sync.runtime_LoadAcquintptr":[[]],"sync.runtime_Semacquire":[],"sync.runtime_SemacquireMutex":[],"sync.runtime_Semrelease":[],"sync.runtime_StoreReluintptr":[[]],"sync.runtime_canSpin":[[]],"sync.runtime_doSpin":[],"sync.runtime_nanotime":[[]],"sync.runtime_notifyListAdd":[[]],"sync.runtime_notifyListCheck":[],"sync.runtime_notifyListNotifyAll":[],"sync.runtime_notifyListNotifyOne":[],"sync.runtime_notifyListWait":[],"sync.runtime_procPin":[[]],"sync.runtime_procUnpin":[],"sync.runtime_registerPoolCleanup":[],"sync.storePoolChainElt":[],"sync.throw":[],"sync/atomic.AddInt32":[[]],"sync/atomic.AddInt64":[[]],"sync/atomic.AddUint32":[[]],"sync/atomic.AddUint64":[[]],"sync/atomic.AddUintptr":[[]],"sync/atomic.CompareAndSwapInt32":[[]],"sync/atomic.CompareAndSwapInt64":[[]],"sync/atomic.CompareAndSwapPointer":[[]],"sync/atomic.CompareAndSwapUint32":[[]],"sync/atomic.CompareAndSwapUint64":[[]],"sync/atomic.CompareAndSwapUintptr":[[]],"sync/atomic.LoadInt32":[[]],"sync/atomic.LoadInt64":[[]],"sync/atomic.LoadPointer":[[]],"sync/atomic.LoadUint32":[[]],"sync/atomic.LoadUint64":[[]],"sync/atomic.LoadUintptr":[[]],"sync/atomic.StoreInt32":[],"sync/atomic.StoreInt64":[],"sync/atomic.StorePointer":[],"sync/atomic.StoreUint32":[],"sync/atomic.StoreUint64":[],"sync/atomic.StoreUintptr":[],"sync/atomic.SwapInt32":[[]],"sync/atomic.SwapInt64":[[]],"sync/atomic.SwapPointer":[[]],"sync/atomic.SwapUint32":[[]],"sync/atomic.SwapUint64":[[]],"sync/atomic.SwapUintptr":[[]],"sync/atomic.b32":[[]],"sync/atomic.init":[],"sync/atomic.runtime_procPin":[],"sync/atomic.runtime_procUnpin":[],"syscall.Accept":[[],[],[]],"syscall.Access":[[]],"syscall.Adjtime":[[]],"syscall.Bind":[[]],"syscall.BpfBuflen":[[],[]],"syscall.BpfDatalink":[[],[]],"syscall.BpfHeadercmpl":[[],[]],"syscall.BpfInterface":[[1],[]],"syscall.BpfJump":[[0,1,2,3]],"syscall.BpfStats":[[],[]],"syscall.BpfStmt":[[0,1]],"syscall.BpfTimeout":[[],[]],"syscall.BytePtrFromString":[[0],[]],"syscall.ByteSliceFromString":[[0],[]],"syscall.Chdir":[[]],"syscall.CheckBpfVersion":[[]],"syscall.Chflags":[[]],"syscall.Chmod":[[]],"syscall.Chown":[[]],"syscall.Chroot":[[]],"syscall.Clearenv":[],"syscall.Close":[[]],"syscall.CloseOnExec":[],"syscall.CmsgLen":[[0]],"syscall.CmsgSpace":[[0]],"syscall.Connect":[[]],"syscall.Dup":[[],[]],"syscall.Dup2":[[]],"syscall.Environ":[[]],"syscall.Exchangedata":[[]],"syscall.Exec":[[]],"syscall.Exit":[],"syscall.Fchdir":[[]],"syscall.Fchflags":[[]],"syscall.Fchmod":[[]],"syscall.Fchown":[[]],"syscall.FcntlFlock":[[]],"syscall.Flock":[[]],"syscall.FlushBpf":[[]],"syscall.ForkExec":[[],[]],"syscall.Fpathconf":[[],[]],"syscall.Fstat":[[]],"syscall.Fstatfs":[[]],"syscall.Fsync":[[]],"syscall.Ftruncate":[[]],"syscall.Futimes":[[]],"syscall.Getdirentries":[[],[]],"syscall.Getdtablesize":[[]],"syscall.Getegid":[[]],"syscall.Getenv":[[],[]],"syscall.Geteuid":[[]],"syscall.Getfsstat":[[],[]],"syscall.Getgid":[[]],"syscall.Getgroups":[[],[]],"syscall.Getpagesize":[[]],"syscall.Getpeername":[[],[]],"syscall.Getpgid":[[],[]],"syscall.Getpgrp":[[]],"syscall.Getpid":[[]],"syscall.Getppid":[[]],"syscall.Getpriority":[[],[]],"syscall.Getrlimit":[[]],"syscall.Getrusage":[[]],"syscall.Getsid":[[],[]],"syscall.Getsockname":[[],[]],"syscall.GetsockoptByte":[[],[]],"syscall.GetsockoptICMPv6Filter":[[],[]],"syscall.GetsockoptIPMreq":[[],[]],"syscall.GetsockoptIPv6MTUInfo":[[],[]],"syscall.GetsockoptIPv6Mreq":[[],[]],"syscall.GetsockoptInet4Addr":[[],[]],"syscall.GetsockoptInt":[[],[]],"syscall.Gettimeofday":[[]],"syscall.Getuid":[[]],"syscall.Getwd":[[],[]],"syscall.Issetugid":[[]],"syscall.Kevent":[[],[]],"syscall.Kill":[[]],"syscall.Kqueue":[[],[]],"syscall.Lchown":[[]],"syscall.Link":[[]],"syscall.Listen":[[]],"syscall.Lstat":[[]],"syscall.Mkdir":[[]],"syscall.Mkfifo":[[]],"syscall.Mknod":[[]],"syscall.Mlock":[[]],"syscall.Mlockall":[[]],"syscall.Mmap":[[],[]],"syscall.Mprotect":[[]],"syscall.Munlock":[[]],"syscall.Munlockall":[[]],"syscall.Munmap":[[]],"syscall.NsecToTimespec":[[0]],"syscall.NsecToTimeval":[[0]],"syscall.Open":[[],[]],"syscall.ParseDirent":[[],[],[0,2]],"syscall.ParseRoutingMessage":[[0],[]],"syscall.ParseRoutingSockaddr":[[0],[]],"syscall.ParseSocketControlMessage":[[0],[]],"syscall.ParseUnixRights":[[0],[]],"syscall.Pathconf":[[],[]],"syscall.Pipe":[[]],"syscall.Pread":[[],[]],"syscall.PtraceAttach":[[]],"syscall.PtraceDetach":[[]],"syscall.Pwrite":[[],[]],"syscall.RawSyscall":[[],[],[]],"syscall.RawSyscall6":[[],[],[]],"syscall.Read":[[],[]],"syscall.ReadDirent":[[],[]],"syscall.Readlink":[[],[]],"syscall.Recvfrom":[[],[],[]],"syscall.Recvmsg":[[],[1,2],[1,2],[],[]],"syscall.Rename":[[]],"syscall.Revoke":[[]],"syscall.Rmdir":[[]],"syscall.RouteRIB":[[],[]],"syscall.Seek":[[],[]],"syscall.Select":[[]],"syscall.Sendfile":[[3],[]],"syscall.Sendmsg":[[]],"syscall.SendmsgN":[[],[]],"syscall.Sendto":[[]],"syscall.SetBpf":[[]],"syscall.SetBpfBuflen":[[1],[]],"syscall.SetBpfDatalink":[[1],[]],"syscall.SetBpfHeadercmpl":[[]],"syscall.SetBpfImmediate":[[]],"syscall.SetBpfInterface":[[]],"syscall.SetBpfPromisc":[[]],"syscall.SetBpfTimeout":[[]],"syscall.SetKevent":[],"syscall.SetNonblock":[[]],"syscall.Setegid":[[]],"syscall.Setenv":[[]],"syscall.Seteuid":[[]],"syscall.Setgid":[[]],"syscall.Setgroups":[[]],"syscall.Setlogin":[[]],"syscall.Setpgid":[[]],"syscall.Setpriority":[[]],"syscall.Setprivexec":[[]],"syscall.Setregid":[[]],"syscall.Setreuid":[[]],"syscall.Setrlimit":[[]],"syscall.Setsid":[[],[]],"syscall.SetsockoptByte":[[]],"syscall.SetsockoptICMPv6Filter":[[]],"syscall.SetsockoptIPMreq":[[]],"syscall.SetsockoptIPv6Mreq":[[]],"syscall.SetsockoptInet4Addr":[[]],"syscall.SetsockoptInt":[[]],"syscall.SetsockoptLinger":[[]],"syscall.SetsockoptString":[[]],"syscall.SetsockoptTimeval":[[]],"syscall.Settimeofday":[[]],"syscall.Setuid":[[]],"syscall.Shutdown":[[]],"syscall.SlicePtrFromStrings":[[],[]],"syscall.Socket":[[],[]],"syscall.Socketpair":[[],[]],"syscall.StartProcess":[[],[],[]],"syscall.Stat":[[]],"syscall.Statfs":[[]],"syscall.StringBytePtr":[[0]],"syscall.StringByteSlice":[[0]],"syscall.StringSlicePtr":[[0]],"syscall.Symlink":[[]],"syscall.Sync":[[]],"syscall.Syscall":[[],[],[]],"syscall.Syscall6":[[],[],[]],"syscall.Syscall9":[[],[],[]],"syscall.Sysctl":[[],[]],"syscall.SysctlUint32":[[],[]],"syscall.TimespecToNsec":[[0]],"syscall.TimevalToNsec":[[0]],"syscall.Truncate":[[]],"syscall.Umask":[[]],"syscall.Undelete":[[]],"syscall.UnixRights":[[]],"syscall.Unlink":[[]],"syscall.Unmount":[[]],"syscall.Unsetenv":[[]],"syscall.Utimes":[[]],"syscall.UtimesNano":[[]],"syscall.Wait4":[[],[]],"syscall.Write":[[],[]],"syscall.accept":[[],[]],"syscall.anyToSockaddr":[[0],[]],"syscall.asanRead":[],"syscall.asanWrite":[],"syscall.bind":[[]],"syscall.clen":[[]],"syscall.closedir":[[]],"syscall.cmsgAlignOf":[[0]],"syscall.connect":[[]],"syscall.copyenv":[],"syscall.direntIno":[[0],[]],"syscall.direntNamlen":[[0],[]],"syscall.direntReclen":[[0],[]],"syscall.errnoErr":[[0]],"syscall.execve":[[]],"syscall.exit":[[]],"syscall.faketimeWrite":[[]],"syscall.fcntl":[[],[]],"syscall.fcntlPtr":[[],[]],"syscall.fdopendir":[[],[]],"syscall.fork":[[],[]],"syscall.forkAndExecInChild":[[],[]],"syscall.forkExec":[[],[]],"syscall.forkExecPipe":[[]],"syscall.fstatat":[[]],"syscall.futimes":[[]],"syscall.getcwd":[[],[]],"syscall.getgroups":[[],[]],"syscall.getpeername":[[]],"syscall.getsockname":[[]],"syscall.getsockopt":[[]],"syscall.init":[],"syscall.init#1":[],"syscall.ioctl":[[]],"syscall.ioctlPtr":[[]],"syscall.kevent":[[],[]],"syscall.kill":[[]],"syscall.libc_accept_trampoline":[],"syscall.libc_access_trampoline":[],"syscall.libc_adjtime_trampoline":[],"syscall.libc_bind_trampoline":[],"syscall.libc_chdir_trampoline":[],"syscall.libc_chflags_trampoline":[],"syscall.libc_chmod_trampoline":[],"syscall.libc_chown_trampoline":[],"syscall.libc_chroot_trampoline":[],"syscall.libc_close_trampoline":[],"syscall.libc_closedir_trampoline":[],"syscall.libc_connect_trampoline":[],"syscall.libc_dup2_trampoline":[],"syscall.libc_dup_trampoline":[],"syscall.libc_exchangedata_trampoline":[],"syscall.libc_execve_trampoline":[],"syscall.libc_exit_trampoline":[],"syscall.libc_fchdir_trampoline":[],"syscall.libc_fchflags_trampoline":[],"syscall.libc_fchmod_trampoline":[],"syscall.libc_fchown_trampoline":[],"syscall.libc_fcntl_trampoline":[],"syscall.libc_fdopendir_trampoline":[],"syscall.libc_flock_trampoline":[],"syscall.libc_fork_trampoline":[],"syscall.libc_fpathconf_trampoline":[],"syscall.libc_fstat64_trampoline":[],"syscall.libc_fstatat64_trampoline":[],"syscall.libc_fstatfs64_trampoline":[],"syscall.libc_fsync_trampoline":[],"syscall.libc_ftruncate_trampoline":[],"syscall.libc_futimes_trampoline":[],"syscall.libc_getcwd_trampoline":[],"syscall.libc_getdtablesize_trampoline":[],"syscall.libc_getegid_trampoline":[],"syscall.libc_geteuid_trampoline":[],"syscall.libc_getfsstat_trampoline":[],"syscall.libc_getgid_trampoline":[],"syscall.libc_getgroups_trampoline":[],"syscall.libc_getpeername_trampoline":[],"syscall.libc_getpgid_trampoline":[],"syscall.libc_getpgrp_trampoline":[],"syscall.libc_getpid_trampoline":[],"syscall.libc_getppid_trampoline":[],"syscall.libc_getpriority_trampoline":[],"syscall.libc_getrlimit_trampoline":[],"syscall.libc_getrusage_trampoline":[],"syscall.libc_getsid_trampoline":[],"syscall.libc_getsockname_trampoline":[],"syscall.libc_getsockopt_trampoline":[],"syscall.libc_gettimeofday_trampoline":[],"syscall.libc_getuid_trampoline":[],"syscall.libc_ioctl_trampoline":[],"syscall.libc_issetugid_trampoline":[],"syscall.libc_kevent_trampoline":[],"syscall.libc_kill_trampoline":[],"syscall.libc_kqueue_trampoline":[],"syscall.libc_lchown_trampoline":[],"syscall.libc_link_trampoline":[],"syscall.libc_listen_trampoline":[],"syscall.libc_lseek_trampoline":[],"syscall.libc_lstat64_trampoline":[],"syscall.libc_mkdir_trampoline":[],"syscall.libc_mkfifo_trampoline":[],"syscall.libc_mknod_trampoline":[],"syscall.libc_mlock_trampoline":[],"syscall.libc_mlockall_trampoline":[],"syscall.libc_mmap_trampoline":[],"syscall.libc_mprotect_trampoline":[],"syscall.libc_munlock_trampoline":[],"syscall.libc_munlockall_trampoline":[],"syscall.libc_munmap_trampoline":[],"syscall.libc_open_trampoline":[],"syscall.libc_openat_trampoline":[],"syscall.libc_pathconf_trampoline":[],"syscall.libc_pipe_trampoline":[],"syscall.libc_pread_trampoline":[],"syscall.libc_ptrace_trampoline":[],"syscall.libc_pwrite_trampoline":[],"syscall.libc_read_trampoline":[],"syscall.libc_readdir_r_trampoline":[],"syscall.libc_readlink_trampoline":[],"syscall.libc_recvfrom_trampoline":[],"syscall.libc_recvmsg_trampoline":[],"syscall.libc_rename_trampoline":[],"syscall.libc_revoke_trampoline":[],"syscall.libc_rmdir_trampoline":[],"syscall.libc_select_trampoline":[],"syscall.libc_sendfile_trampoline":[],"syscall.libc_sendmsg_trampoline":[],"syscall.libc_sendto_trampoline":[],"syscall.libc_setegid_trampoline":[],"syscall.libc_seteuid_trampoline":[],"syscall.libc_setgid_trampoline":[],"syscall.libc_setgroups_trampoline":[],"syscall.libc_setlogin_trampoline":[],"syscall.libc_setpgid_trampoline":[],"syscall.libc_setpriority_trampoline":[],"syscall.libc_setprivexec_trampoline":[],"syscall.libc_setregid_trampoline":[],"syscall.libc_setreuid_trampoline":[],"syscall.libc_setrlimit_trampoline":[],"syscall.libc_setsid_trampoline":[],"syscall.libc_setsockopt_trampoline":[],"syscall.libc_settimeofday_trampoline":[],"syscall.libc_setuid_trampoline":[],"syscall.libc_shutdown_trampoline":[],"syscall.libc_socket_trampoline":[],"syscall.libc_socketpair_trampoline":[],"syscall.libc_stat64_trampoline":[],"syscall.libc_statfs64_trampoline":[],"syscall.libc_symlink_trampoline":[],"syscall.libc_sync_trampoline":[],"syscall.libc_sysctl_trampoline":[],"syscall.libc_truncate_trampoline":[],"syscall.libc_umask_trampoline":[],"syscall.libc_undelete_trampoline":[],"syscall.libc_unlink_trampoline":[],"syscall.libc_unlinkat_trampoline":[],"syscall.libc_unmount_trampoline":[],"syscall.libc_utimensat_trampoline":[],"syscall.libc_utimes_trampoline":[],"syscall.libc_wait4_trampoline":[],"syscall.libc_write_trampoline":[],"syscall.libc_writev_trampoline":[],"syscall.mmap":[[],[]],"syscall.msanRead":[],"syscall.msanWrite":[],"syscall.munmap":[[]],"syscall.nametomib":[[],[]],"syscall.openat":[[],[]],"syscall.parseLinkLayerAddr":[[0],[0],[]],"syscall.parseNetworkLayerAddr":[[],[]],"syscall.parseSockaddrInet":[[0],[]],"syscall.parseSockaddrLink":[[0],[]],"syscall.pipe":[[]],"syscall.pread":[[],[]],"syscall.ptrace":[[]],"syscall.ptrace1":[[]],"syscall.pwrite":[[],[]],"syscall.rawSyscall":[[],[],[]],"syscall.rawSyscall6":[[],[],[]],"syscall.read":[[],[]],"syscall.readInt":[[0],[]],"syscall.readIntBE":[[0]],"syscall.readIntLE":[[0]],"syscall.readdir_r":[[]],"syscall.readlen":[[],[]],"syscall.recvfrom":[[],[]],"syscall.recvfromInet4":[[],[]],"syscall.recvfromInet6":[[],[]],"syscall.recvmsg":[[],[]],"syscall.recvmsgInet4":[[],[1,2],[1,2],[]],"syscall.recvmsgInet6":[[],[1,2],[1,2],[]],"syscall.recvmsgRaw":[[],[1,2,4],[1,2,4],[]],"syscall.rsaAlignOf":[[0]],"syscall.runtime_AfterExec":[],"syscall.runtime_AfterFork":[],"syscall.runtime_AfterForkInChild":[],"syscall.runtime_BeforeExec":[],"syscall.runtime_BeforeFork":[],"syscall.runtime_envs":[[]],"syscall.sendfile":[[3],[]],"syscall.sendmsg":[[],[]],"syscall.sendmsgN":[[],[]],"syscall.sendmsgNInet4":[[],[]],"syscall.sendmsgNInet6":[[],[]],"syscall.sendto":[[]],"syscall.sendtoInet4":[[]],"syscall.sendtoInet6":[[]],"syscall.setTimespec":[[0,1]],"syscall.setTimeval":[[0,1]],"syscall.setenv_c":[],"syscall.setgroups":[[]],"syscall.setsockopt":[[]],"syscall.socket":[[],[]],"syscall.socketControlMessageHeaderAndData":[[0],[0],[]],"syscall.socketpair":[[]],"syscall.syscall":[[],[],[]],"syscall.syscall6":[[],[],[]],"syscall.syscall6X":[[],[],[]],"syscall.syscallPtr":[[],[],[]],"syscall.syscallX":[[],[],[]],"syscall.sysctl":[[]],"syscall.unlinkat":[[]],"syscall.unsetenv_c":[],"syscall.utimensat":[[]],"syscall.utimes":[[]],"syscall.wait4":[[],[]],"syscall.write":[[],[]],"syscall.writelen":[[],[]],"syscall.writev":[[],[]],"testing.AllocsPerRun":[[0]],"testing.Benchmark":[[0]],"testing.CoverMode":[[]],"testing.Coverage":[[]],"testing.Init":[],"testing.Main":[],"testing.MainStart":[[0,1,2,3,4]],"testing.RegisterCover":[],"testing.RunBenchmarks":[],"testing.RunExamples":[[]],"testing.RunTests":[[0]],"testing.Short":[[]],"testing.Verbose":[[]],"testing.benchmarkName":[[0]],"testing.callerName":[[]],"testing.coverReport":[],"testing.coverReport$1":[],"testing.fRunner":[],"testing.fRunner$1":[],"testing.fRunner$1$1":[],"testing.fRunner$1$2":[],"testing.fRunner$2":[],"testing.fmtDuration":[[]],"testing.init":[],"testing.initBenchmarkFlags":[],"testing.initFuzzFlags":[],"testing.isSpace":[[]],"testing.isWindowsRetryable":[[]],"testing.listTests":[],"testing.max":[[0,1]],"testing.min":[[0,1]],"testing.mustBeNil":[],"testing.newChattyPrinter":[[0]],"testing.newMatcher":[[0,1]],"testing.newTestContext":[[0,1]],"testing.parseCpuList":[],"testing.parseSubtestNumber":[[0],[0]],"testing.pcToName":[[0]],"testing.prettyPrint":[],"testing.removeAll":[[0]],"testing.rewrite":[[]],"testing.runBenchmarks":[[0,1]],"testing.runBenchmarks$1":[],"testing.runExample":[[]],"testing.runExample$1":[],"testing.runExample$2":[],"testing.runExamples":[[],[]],"testing.runFuzzTests":[[],[]],"testing.runFuzzing":[[0,1]],"testing.runTests":[[0,2],[0,2]],"testing.runTests$1":[],"testing.shouldFailFast":[[]],"testing.sortLines":[[0]],"testing.splitRegexp":[[0]],"testing.tRunner":[],"testing.tRunner$1":[],"testing.tRunner$1$1":[],"testing.tRunner$1$2":[],"testing.tRunner$2":[],"testing.toOutputDir":[[0]],"text/scanner.TokenString":[[0]],"text/scanner.digitVal":[[0]],"text/scanner.init":[],"text/scanner.invalidSep":[[]],"text/scanner.isDecimal":[[0]],"text/scanner.isHex":[[0]],"text/scanner.litname":[[]],"text/scanner.lower":[[0]],"text/tabwriter.NewWriter":[[]],"text/tabwriter.init":[],"text/template.HTMLEscape":[],"text/template.HTMLEscapeString":[[0]],"text/template.HTMLEscaper":[[0]],"text/template.IsTrue":[[0],[]],"text/template.JSEscape":[],"text/template.JSEscapeString":[[0]],"text/template.JSEscaper":[[0]],"text/template.Must":[[0]],"text/template.New":[[0]],"text/template.ParseFS":[[],[0,1]],"text/template.ParseFiles":[[0],[0]],"text/template.ParseGlob":[[0],[0]],"text/template.URLQueryEscaper":[[0]],"text/template.addFuncs":[],"text/template.addValueFuncs":[],"text/template.and":[[]],"text/template.basicKind":[[],[]],"text/template.builtinFuncs":[[]],"text/template.builtinFuncs$1":[],"text/template.builtins":[[]],"text/template.call":[[0],[0,1]],"text/template.canBeNil":[[0]],"text/template.canCompare":[[1]],"text/template.createValueFuncs":[[]],"text/template.doublePercent":[[0]],"text/template.eq":[[],[0,1]],"text/template.errRecover":[],"text/template.evalArgs":[[0]],"text/template.findFunction":[[0,1],[],[]],"text/template.ge":[[0,1],[]],"text/template.goodFunc":[[]],"text/template.goodName":[[]],"text/template.gt":[[0,1],[0,1]],"text/template.index":[[0,1],[0,1]],"text/template.indexArg":[[0],[0]],"text/template.indirect":[[0],[]],"text/template.indirectInterface":[[0]],"text/template.init":[],"text/template.initMaxExecDepth":[[]],"text/template.intLike":[[]],"text/template.isHexInt":[[0]],"text/template.isNil":[[0]],"text/template.isRuneInt":[[0]],"text/template.isTrue":[[0],[]],"text/template.jsIsSpecial":[[0]],"text/template.le":[[0,1],[0,1]],"text/template.length":[[0],[0]],"text/template.lt":[[0,1],[]],"text/template.ne":[[],[0,1]],"text/template.not":[[0]],"text/template.or":[[]],"text/template.parseFS":[[0],[1,2]],"text/template.parseFiles":[[0,2],[2]],"text/template.parseGlob":[[0,1],[1]],"text/template.prepareArg":[[0,1],[0,1]],"text/template.printableValue":[[0],[]],"text/template.readFileFS":[[]],"text/template.readFileFS$1":[[0],[],[0]],"text/template.readFileOS":[[0],[],[0]],"text/template.safeCall":[[0],[0]],"text/template.safeCall$1":[],"text/template.slice":[[0,1],[0,1]],"text/template.truth":[[0]],"text/template/parse.IsEmptyTree":[[]],"text/template/parse.New":[[0,1]],"text/template/parse.NewIdentifier":[[0]],"text/template/parse.Parse":[[],[]],"text/template/parse.hasLeftTrimMarker":[[0]],"text/template/parse.hasRightTrimMarker":[[0]],"text/template/parse.init":[],"text/template/parse.isAlphaNumeric":[[0]],"text/template/parse.isSpace":[[0]],"text/template/parse.leftTrimLength":[[]],"text/template/parse.lex":[[0,1,2,3,4,5,6]],"text/template/parse.lexChar":[[]],"text/template/parse.lexComment":[[]],"text/template/parse.lexField":[[]],"text/template/parse.lexFieldOrVariable":[[]],"text/template/parse.lexIdentifier":[[]],"text/template/parse.lexInsideAction":[[]],"text/template/parse.lexLeftDelim":[[]],"text/template/parse.lexNumber":[[]],"text/template/parse.lexQuote":[[]],"text/template/parse.lexRawQuote":[[]],"text/template/parse.lexRightDelim":[[]],"text/template/parse.lexSpace":[[]],"text/template/parse.lexText":[[]],"text/template/parse.lexVariable":[[]],"text/template/parse.rightTrimLength":[[]],"time.After":[[0]],"time.AfterFunc":[[0,1]],"time.Date":[[0,1,2,3,4,5,6,7]],"time.FixedZone":[[0]],"time.LoadLocation":[[0],[0]],"time.LoadLocation$1":[],"time.LoadLocationFromTZData":[[0,1],[]],"time.NewTicker":[[0]],"time.NewTimer":[[0]],"time.Now":[[]],"time.Parse":[[1],[0,1]],"time.ParseDuration":[[0],[0]],"time.ParseInLocation":[[1,2],[0,1]],"time.Since":[[0]],"time.Sleep":[],"time.Tick":[[0]],"time.Unix":[[0,1]],"time.UnixMicro":[[0]],"time.UnixMilli":[[0]],"time.Until":[[0]],"time.absClock":[[0],[0],[0]],"time.absDate":[[0],[0],[0],[0]],"time.absWeekday":[[0]],"time.appendInt":[[0,1]],"time.atoi":[[0],[]],"time.byteString":[[0]],"time.closefd":[],"time.commaOrPeriod":[[0]],"time.containsDotDot":[[]],"time.cutspace":[[0]],"time.daysIn":[[]],"time.daysSinceEpoch":[[0]],"time.digitsLen":[[0]],"time.div":[[0,1],[0,1]],"time.findZone":[[]],"time.fmtFrac":[[],[1]],"time.fmtInt":[[]],"time.formatNano":[[0,1]],"time.get2":[[0]],"time.get4":[[0]],"time.getnum":[[0],[0],[]],"time.getnum3":[[0],[0],[]],"time.goFunc":[],"time.gorootZoneSource":[[0],[]],"time.init":[],"time.initLocal":[],"time.interrupt":[],"time.isDigit":[[0,1]],"time.isLeap":[[0]],"time.leadingFraction":[[0],[],[0]],"time.leadingInt":[[0],[0],[]],"time.lessThanHalf":[[0,1]],"time.loadLocation":[[0],[0,1]],"time.loadTzinfo":[[],[0,1]],"time.loadTzinfoFromDirOrZip":[[],[0,1]],"time.loadTzinfoFromZip":[[],[0,1]],"time.lookup":[[],[1],[]],"time.match":[[]],"time.modTimer":[],"time.nextStdChunk":[[0],[],[0]],"time.norm":[[0,1,2],[1,2]],"time.now":[[],[],[]],"time.open":[[],[]],"time.parse":[[1,2,3],[0,1]],"time.parseGMT":[[]],"time.parseNanoseconds":[[0],[],[]],"time.parseSignedOffset":[[]],"time.parseTimeZone":[[],[]],"time.preadn":[[]],"time.quote":[[0]],"time.read":[[],[]],"time.readFile":[[],[0]],"time.registerLoadFromEmbeddedTZData":[],"time.resetTimer":[[]],"time.runtimeNano":[[]],"time.sendTime":[],"time.separator":[[]],"time.skip":[[0],[]],"time.startTimer":[],"time.startsWithLowerCase":[[0]],"time.stdFracSecond":[[0,1]],"time.stopTimer":[[]],"time.tzruleTime":[[0,1,2]],"time.tzset":[[0],[0],[0,1,2],[0,2],[],[]],"time.tzsetName":[[0],[0],[]],"time.tzsetNum":[[0],[0],[]],"time.tzsetOffset":[[0],[0],[]],"time.tzsetRule":[[0],[0],[]],"time.unixTime":[[0,1]],"time.when":[[0]],"time/tzdata.get2s":[[0]],"time/tzdata.get4s":[[0]],"time/tzdata.init":[],"time/tzdata.init#1":[],"time/tzdata.loadFromEmbeddedTZData":[[],[0]],"time/tzdata.registerLoadFromEmbeddedTZData":[],"unicode.In":[[]],"unicode.Is":[[0,1]],"unicode.IsControl":[[]],"unicode.IsDigit":[[0]],"unicode.IsGraphic":[[]],"unicode.IsLetter":[[0]],"unicode.IsLower":[[0]],"unicode.IsMark":[[0]],"unicode.IsNumber":[[0]],"unicode.IsOneOf":[[]],"unicode.IsPrint":[[]],"unicode.IsPunct":[[0]],"unicode.IsSpace":[[0]],"unicode.IsSymbol":[[0]],"unicode.IsTitle":[[0]],"unicode.IsUpper":[[0]],"unicode.SimpleFold":[[0]],"unicode.To":[[0,1]],"unicode.ToLower":[[0]],"unicode.ToTitle":[[0]],"unicode.ToUpper":[[0]],"unicode.init":[],"unicode.is16":[[0,1]],"unicode.is32":[[0,1]],"unicode.isExcludingLatin":[[0,1]],"unicode.to":[[0,1,2],[]],"unicode/utf16.Decode":[[0]],"unicode/utf16.DecodeRune":[[0,1]],"unicode/utf16.Encode":[[0]],"unicode/utf16.EncodeRune":[[0],[0]],"unicode/utf16.IsSurrogate":[[0]],"unicode/utf16.init":[],"unicode/utf8.AppendRune":[[0,1]],"unicode/utf8.DecodeLastRune":[[0],[]],"unicode/utf8.DecodeLastRuneInString":[[0],[]],"unicode/utf8.DecodeRune":[[0],[]],"unicode/utf8.DecodeRuneInString":[[0],[]],"unicode/utf8.EncodeRune":[[]],"unicode/utf8.FullRune":[[]],"unicode/utf8.FullRuneInString":[[]],"unicode/utf8.RuneCount":[[]],"unicode/utf8.RuneCountInString":[[]],"unicode/utf8.RuneLen":[[]],"unicode/utf8.RuneStart":[[0]],"unicode/utf8.Valid":[[]],"unicode/utf8.ValidRune":[[]],"unicode/utf8.ValidString":[[]],"unicode/utf8.appendRuneNonASCII":[[0,1]],"unicode/utf8.init":[],"unsafe.init":[],"vendor/golang.org/x/crypto/chacha20.HChaCha20":[[],[]],"vendor/golang.org/x/crypto/chacha20.NewUnauthenticatedCipher":[[],[]],"vendor/golang.org/x/crypto/chacha20.addXor":[],"vendor/golang.org/x/crypto/chacha20.hChaCha20":[[0],[]],"vendor/golang.org/x/crypto/chacha20.init":[],"vendor/golang.org/x/crypto/chacha20.newUnauthenticatedCipher":[[0],[]],"vendor/golang.org/x/crypto/chacha20.quarterRound":[[0,1,2,3],[0,1,2,3],[0,1,2,3],[0,1,2,3]],"vendor/golang.org/x/crypto/chacha20poly1305.New":[[],[]],"vendor/golang.org/x/crypto/chacha20poly1305.NewX":[[],[]],"vendor/golang.org/x/crypto/chacha20poly1305.chacha20Poly1305Open":[[]],"vendor/golang.org/x/crypto/chacha20poly1305.chacha20Poly1305Seal":[],"vendor/golang.org/x/crypto/chacha20poly1305.init":[],"vendor/golang.org/x/crypto/chacha20poly1305.setupState":[],"vendor/golang.org/x/crypto/chacha20poly1305.sliceForAppend":[[0],[0]],"vendor/golang.org/x/crypto/chacha20poly1305.writeUint64":[],"vendor/golang.org/x/crypto/chacha20poly1305.writeWithPadding":[],"vendor/golang.org/x/crypto/cryptobyte.NewBuilder":[[0]],"vendor/golang.org/x/crypto/cryptobyte.NewFixedBuilder":[[0]],"vendor/golang.org/x/crypto/cryptobyte.asn1Signed":[[]],"vendor/golang.org/x/crypto/cryptobyte.asn1Unsigned":[[]],"vendor/golang.org/x/crypto/cryptobyte.checkASN1Integer":[[]],"vendor/golang.org/x/crypto/cryptobyte.init":[],"vendor/golang.org/x/crypto/cryptobyte.isValidOID":[[]],"vendor/golang.org/x/crypto/cryptobyte/asn1.init":[],"vendor/golang.org/x/crypto/curve25519.ScalarBaseMult":[],"vendor/golang.org/x/crypto/curve25519.ScalarMult":[],"vendor/golang.org/x/crypto/curve25519.X25519":[[],[]],"vendor/golang.org/x/crypto/curve25519.checkBasepoint":[],"vendor/golang.org/x/crypto/curve25519.init":[],"vendor/golang.org/x/crypto/curve25519.init#1":[],"vendor/golang.org/x/crypto/curve25519.x25519":[[0],[]],"vendor/golang.org/x/crypto/curve25519/internal/field.addMul64":[[0,1,2]],"vendor/golang.org/x/crypto/curve25519/internal/field.feMul":[],"vendor/golang.org/x/crypto/curve25519/internal/field.feMulGeneric":[],"vendor/golang.org/x/crypto/curve25519/internal/field.feSquare":[],"vendor/golang.org/x/crypto/curve25519/internal/field.feSquareGeneric":[],"vendor/golang.org/x/crypto/curve25519/internal/field.init":[],"vendor/golang.org/x/crypto/curve25519/internal/field.mask64Bits":[[0]],"vendor/golang.org/x/crypto/curve25519/internal/field.mul51":[[0,1],[0,1]],"vendor/golang.org/x/crypto/curve25519/internal/field.mul64":[[0,1]],"vendor/golang.org/x/crypto/curve25519/internal/field.shiftRightBy51":[[0]],"vendor/golang.org/x/crypto/hkdf.Expand":[[2]],"vendor/golang.org/x/crypto/hkdf.Extract":[[]],"vendor/golang.org/x/crypto/hkdf.New":[[3]],"vendor/golang.org/x/crypto/hkdf.init":[],"vendor/golang.org/x/crypto/internal/poly1305.New":[[]],"vendor/golang.org/x/crypto/internal/poly1305.Sum":[],"vendor/golang.org/x/crypto/internal/poly1305.Verify":[[0]],"vendor/golang.org/x/crypto/internal/poly1305.add128":[[0,1]],"vendor/golang.org/x/crypto/internal/poly1305.bitsAdd64":[[0,1,2],[0,1,2]],"vendor/golang.org/x/crypto/internal/poly1305.bitsMul64":[[0,1],[0,1]],"vendor/golang.org/x/crypto/internal/poly1305.bitsSub64":[[0,1,2],[0,1,2]],"vendor/golang.org/x/crypto/internal/poly1305.finalize":[],"vendor/golang.org/x/crypto/internal/poly1305.init":[],"vendor/golang.org/x/crypto/internal/poly1305.initialize":[],"vendor/golang.org/x/crypto/internal/poly1305.mul64":[[0,1]],"vendor/golang.org/x/crypto/internal/poly1305.newMACGeneric":[[]],"vendor/golang.org/x/crypto/internal/poly1305.select64":[[0,1,2]],"vendor/golang.org/x/crypto/internal/poly1305.shiftRightBy2":[[0]],"vendor/golang.org/x/crypto/internal/poly1305.sumGeneric":[],"vendor/golang.org/x/crypto/internal/poly1305.update":[],"vendor/golang.org/x/crypto/internal/poly1305.updateGeneric":[],"vendor/golang.org/x/crypto/internal/subtle.AnyOverlap":[[0,1]],"vendor/golang.org/x/crypto/internal/subtle.InexactOverlap":[[0,1]],"vendor/golang.org/x/crypto/internal/subtle.init":[],"vendor/golang.org/x/net/dns/dnsmessage.MustNewName":[[]],"vendor/golang.org/x/net/dns/dnsmessage.NewBuilder":[[0,1]],"vendor/golang.org/x/net/dns/dnsmessage.NewName":[[],[]],"vendor/golang.org/x/net/dns/dnsmessage.init":[],"vendor/golang.org/x/net/dns/dnsmessage.packBytes":[[0,1]],"vendor/golang.org/x/net/dns/dnsmessage.packClass":[[0,1]],"vendor/golang.org/x/net/dns/dnsmessage.packText":[[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.packType":[[0,1]],"vendor/golang.org/x/net/dns/dnsmessage.packUint16":[[0,1]],"vendor/golang.org/x/net/dns/dnsmessage.packUint32":[[0,1]],"vendor/golang.org/x/net/dns/dnsmessage.printBool":[[]],"vendor/golang.org/x/net/dns/dnsmessage.printByteSlice":[[0]],"vendor/golang.org/x/net/dns/dnsmessage.printPaddedUint8":[[0]],"vendor/golang.org/x/net/dns/dnsmessage.printString":[[0]],"vendor/golang.org/x/net/dns/dnsmessage.printUint16":[[]],"vendor/golang.org/x/net/dns/dnsmessage.printUint32":[[]],"vendor/golang.org/x/net/dns/dnsmessage.printUint8Bytes":[[0,1]],"vendor/golang.org/x/net/dns/dnsmessage.skipClass":[[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.skipName":[[0,1],[]],"vendor/golang.org/x/net/dns/dnsmessage.skipResource":[[0,1],[]],"vendor/golang.org/x/net/dns/dnsmessage.skipType":[[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.skipUint16":[[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.skipUint32":[[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackAAAAResource":[[],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackAResource":[[],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackBytes":[[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackCNAMEResource":[[],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackClass":[[0],[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackMXResource":[[0],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackNSResource":[[],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackOPTResource":[[0],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackPTRResource":[[],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackResourceBody":[[0,2],[1,2],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackSOAResource":[[0],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackSRVResource":[[0],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackTXTResource":[[0],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackText":[[0],[0,1],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackType":[[0],[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackUint16":[[0],[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackUint32":[[0],[1],[]],"vendor/golang.org/x/net/dns/dnsmessage.unpackUnknownResource":[[0],[]],"vendor/golang.org/x/net/http/httpguts.HeaderValuesContainsToken":[[]],"vendor/golang.org/x/net/http/httpguts.IsTokenRune":[[]],"vendor/golang.org/x/net/http/httpguts.PunycodeHostPort":[[0],[0]],"vendor/golang.org/x/net/http/httpguts.ValidHeaderFieldName":[[]],"vendor/golang.org/x/net/http/httpguts.ValidHeaderFieldValue":[[]],"vendor/golang.org/x/net/http/httpguts.ValidHostHeader":[[]],"vendor/golang.org/x/net/http/httpguts.ValidTrailerHeader":[[]],"vendor/golang.org/x/net/http/httpguts.headerValueContainsToken":[[]],"vendor/golang.org/x/net/http/httpguts.init":[],"vendor/golang.org/x/net/http/httpguts.isASCII":[[]],"vendor/golang.org/x/net/http/httpguts.isCTL":[[0]],"vendor/golang.org/x/net/http/httpguts.isLWS":[[0]],"vendor/golang.org/x/net/http/httpguts.isNotToken":[[]],"vendor/golang.org/x/net/http/httpguts.isOWS":[[0]],"vendor/golang.org/x/net/http/httpguts.lowerASCII":[[0]],"vendor/golang.org/x/net/http/httpguts.tokenEqual":[[]],"vendor/golang.org/x/net/http/httpguts.trimOWS":[[0]],"vendor/golang.org/x/net/http/httpproxy.FromEnvironment":[[]],"vendor/golang.org/x/net/http/httpproxy.canonicalAddr":[[0]],"vendor/golang.org/x/net/http/httpproxy.getEnvAny":[[]],"vendor/golang.org/x/net/http/httpproxy.hasPort":[[]],"vendor/golang.org/x/net/http/httpproxy.idnaASCII":[[0],[0]],"vendor/golang.org/x/net/http/httpproxy.init":[],"vendor/golang.org/x/net/http/httpproxy.isASCII":[[]],"vendor/golang.org/x/net/http/httpproxy.parseProxy":[[0],[0]],"vendor/golang.org/x/net/http2/hpack.AppendHuffmanString":[[0]],"vendor/golang.org/x/net/http2/hpack.HuffmanDecode":[[],[0]],"vendor/golang.org/x/net/http2/hpack.HuffmanDecodeToString":[[],[]],"vendor/golang.org/x/net/http2/hpack.HuffmanEncodeLength":[[]],"vendor/golang.org/x/net/http2/hpack.NewDecoder":[[0,1]],"vendor/golang.org/x/net/http2/hpack.NewEncoder":[[0]],"vendor/golang.org/x/net/http2/hpack.appendByteToHuffmanCode":[[0,1],[1]],"vendor/golang.org/x/net/http2/hpack.appendHpackString":[[0,1]],"vendor/golang.org/x/net/http2/hpack.appendIndexed":[[0,1]],"vendor/golang.org/x/net/http2/hpack.appendIndexedName":[[0,1,2]],"vendor/golang.org/x/net/http2/hpack.appendNewName":[[0,1]],"vendor/golang.org/x/net/http2/hpack.appendTableSize":[[0,1]],"vendor/golang.org/x/net/http2/hpack.appendVarInt":[[0,1,2]],"vendor/golang.org/x/net/http2/hpack.buildRootHuffmanNode":[],"vendor/golang.org/x/net/http2/hpack.encodeTypeByte":[[]],"vendor/golang.org/x/net/http2/hpack.getRootHuffmanNode":[[]],"vendor/golang.org/x/net/http2/hpack.huffmanDecode":[[]],"vendor/golang.org/x/net/http2/hpack.init":[],"vendor/golang.org/x/net/http2/hpack.init$1":[[]],"vendor/golang.org/x/net/http2/hpack.newInternalNode":[[]],"vendor/golang.org/x/net/http2/hpack.newStaticTable":[[]],"vendor/golang.org/x/net/http2/hpack.readVarInt":[[0,1],[1],[]],"vendor/golang.org/x/net/idna.BidiRule":[[]],"vendor/golang.org/x/net/idna.BidiRule$1":[],"vendor/golang.org/x/net/idna.CheckHyphens":[[]],"vendor/golang.org/x/net/idna.CheckHyphens$1":[],"vendor/golang.org/x/net/idna.CheckJoiners":[[]],"vendor/golang.org/x/net/idna.CheckJoiners$1":[],"vendor/golang.org/x/net/idna.MapForLookup":[[]],"vendor/golang.org/x/net/idna.MapForLookup$1":[],"vendor/golang.org/x/net/idna.New":[[]],"vendor/golang.org/x/net/idna.RemoveLeadingDots":[[]],"vendor/golang.org/x/net/idna.RemoveLeadingDots$1":[],"vendor/golang.org/x/net/idna.StrictDomainName":[[]],"vendor/golang.org/x/net/idna.StrictDomainName$1":[],"vendor/golang.org/x/net/idna.ToASCII":[[0],[0]],"vendor/golang.org/x/net/idna.ToUnicode":[[0],[0]],"vendor/golang.org/x/net/idna.Transitional":[[]],"vendor/golang.org/x/net/idna.Transitional$1":[],"vendor/golang.org/x/net/idna.ValidateForRegistration":[[]],"vendor/golang.org/x/net/idna.ValidateForRegistration$1":[],"vendor/golang.org/x/net/idna.ValidateLabels":[[]],"vendor/golang.org/x/net/idna.ValidateLabels$1":[],"vendor/golang.org/x/net/idna.VerifyDNSLength":[[]],"vendor/golang.org/x/net/idna.VerifyDNSLength$1":[],"vendor/golang.org/x/net/idna.adapt":[[0,1]],"vendor/golang.org/x/net/idna.apply":[],"vendor/golang.org/x/net/idna.ascii":[[]],"vendor/golang.org/x/net/idna.decode":[[0],[0]],"vendor/golang.org/x/net/idna.decodeDigit":[[0],[]],"vendor/golang.org/x/net/idna.encode":[[0,1],[1]],"vendor/golang.org/x/net/idna.encodeDigit":[[0]],"vendor/golang.org/x/net/idna.init":[],"vendor/golang.org/x/net/idna.madd":[[0,1,2],[]],"vendor/golang.org/x/net/idna.newIdnaTrie":[[]],"vendor/golang.org/x/net/idna.normalize":[[1],[],[]],"vendor/golang.org/x/net/idna.punyError":[[0]],"vendor/golang.org/x/net/idna.validateAndMap":[[1],[1],[1]],"vendor/golang.org/x/net/idna.validateFromPunycode":[[1]],"vendor/golang.org/x/net/idna.validateRegistration":[[1],[1],[1]],"vendor/golang.org/x/net/route.FetchRIB":[[],[]],"vendor/golang.org/x/net/route.ParseRIB":[[1],[]],"vendor/golang.org/x/net/route.addrsSpace":[[]],"vendor/golang.org/x/net/route.init":[],"vendor/golang.org/x/net/route.init#1":[],"vendor/golang.org/x/net/route.marshalAddrs":[[],[]],"vendor/golang.org/x/net/route.parseAddrs":[[2],[]],"vendor/golang.org/x/net/route.parseDefaultAddr":[[0],[]],"vendor/golang.org/x/net/route.parseInetAddr":[[1],[]],"vendor/golang.org/x/net/route.parseKernelInetAddr":[[1],[],[]],"vendor/golang.org/x/net/route.parseKernelLinkAddr":[[1],[1],[]],"vendor/golang.org/x/net/route.parseLinkAddr":[[0],[]],"vendor/golang.org/x/net/route.probeRoutingStack":[[],[]],"vendor/golang.org/x/net/route.roundup":[[0]],"vendor/golang.org/x/net/route.sysctl":[[]],"vendor/golang.org/x/sys/cpu.archInit":[],"vendor/golang.org/x/sys/cpu.cpuid":[[],[],[],[]],"vendor/golang.org/x/sys/cpu.hostByteOrder":[[]],"vendor/golang.org/x/sys/cpu.init":[],"vendor/golang.org/x/sys/cpu.init#1":[],"vendor/golang.org/x/sys/cpu.initOptions":[],"vendor/golang.org/x/sys/cpu.isSet":[[0,1]],"vendor/golang.org/x/sys/cpu.processOptions":[],"vendor/golang.org/x/sys/cpu.xgetbv":[[],[]],"vendor/golang.org/x/text/secure/bidirule.Direction":[[]],"vendor/golang.org/x/text/secure/bidirule.DirectionString":[[]],"vendor/golang.org/x/text/secure/bidirule.New":[[]],"vendor/golang.org/x/text/secure/bidirule.Valid":[[0]],"vendor/golang.org/x/text/secure/bidirule.ValidString":[[0]],"vendor/golang.org/x/text/secure/bidirule.init":[],"vendor/golang.org/x/text/secure/bidirule.init#1":[],"vendor/golang.org/x/text/transform.Append":[[1],[],[]],"vendor/golang.org/x/text/transform.Bytes":[[],[],[]],"vendor/golang.org/x/text/transform.Chain":[[]],"vendor/golang.org/x/text/transform.NewReader":[[0,1]],"vendor/golang.org/x/text/transform.NewWriter":[[0,1]],"vendor/golang.org/x/text/transform.RemoveFunc":[[0]],"vendor/golang.org/x/text/transform.String":[[1],[],[]],"vendor/golang.org/x/text/transform.doAppend":[[2],[],[]],"vendor/golang.org/x/text/transform.grow":[[0]],"vendor/golang.org/x/text/transform.init":[],"vendor/golang.org/x/text/unicode/bidi.AppendReverse":[[0]],"vendor/golang.org/x/text/unicode/bidi.DefaultDirection":[[]],"vendor/golang.org/x/text/unicode/bidi.DefaultDirection$1":[],"vendor/golang.org/x/text/unicode/bidi.Lookup":[[0],[]],"vendor/golang.org/x/text/unicode/bidi.LookupRune":[[],[]],"vendor/golang.org/x/text/unicode/bidi.LookupString":[[0],[]],"vendor/golang.org/x/text/unicode/bidi.ReverseString":[[0]],"vendor/golang.org/x/text/unicode/bidi.calculateOrdering":[[1]],"vendor/golang.org/x/text/unicode/bidi.computeMultilineReordering":[[1]],"vendor/golang.org/x/text/unicode/bidi.computeReordering":[[]],"vendor/golang.org/x/text/unicode/bidi.init":[],"vendor/golang.org/x/text/unicode/bidi.isRemovedByX9":[[]],"vendor/golang.org/x/text/unicode/bidi.isWhitespace":[[]],"vendor/golang.org/x/text/unicode/bidi.maxLevel":[[0,1]],"vendor/golang.org/x/text/unicode/bidi.newBidiTrie":[[]],"vendor/golang.org/x/text/unicode/bidi.newParagraph":[[0,1,2,3],[1,3]],"vendor/golang.org/x/text/unicode/bidi.resolvePairedBrackets":[],"vendor/golang.org/x/text/unicode/bidi.setLevels":[],"vendor/golang.org/x/text/unicode/bidi.setTypes":[],"vendor/golang.org/x/text/unicode/bidi.typeForLevel":[[]],"vendor/golang.org/x/text/unicode/bidi.validateLineBreaks":[[0,1]],"vendor/golang.org/x/text/unicode/bidi.validateParagraphEmbeddingLevel":[[0]],"vendor/golang.org/x/text/unicode/bidi.validatePbTypes":[[0]],"vendor/golang.org/x/text/unicode/bidi.validatePbValues":[[]],"vendor/golang.org/x/text/unicode/bidi.validateTypes":[[]],"vendor/golang.org/x/text/unicode/norm.appendFlush":[[]],"vendor/golang.org/x/text/unicode/norm.appendQuick":[[0,1]],"vendor/golang.org/x/text/unicode/norm.buildRecompMap":[],"vendor/golang.org/x/text/unicode/norm.cmpNormalBytes":[[]],"vendor/golang.org/x/text/unicode/norm.combine":[[0,1]],"vendor/golang.org/x/text/unicode/norm.compInfo":[[0,1]],"vendor/golang.org/x/text/unicode/norm.decomposeHangul":[[]],"vendor/golang.org/x/text/unicode/norm.decomposeSegment":[[0,1]],"vendor/golang.org/x/text/unicode/norm.decomposeToLastBoundary":[],"vendor/golang.org/x/text/unicode/norm.doAppend":[[0,1,2]],"vendor/golang.org/x/text/unicode/norm.doAppendInner":[[0]],"vendor/golang.org/x/text/unicode/norm.doNormComposed":[[0]],"vendor/golang.org/x/text/unicode/norm.doNormDecomposed":[[0]],"vendor/golang.org/x/text/unicode/norm.flushTransform":[[]],"vendor/golang.org/x/text/unicode/norm.init":[],"vendor/golang.org/x/text/unicode/norm.inputBytes":[[0]],"vendor/golang.org/x/text/unicode/norm.inputString":[[0]],"vendor/golang.org/x/text/unicode/norm.isHangul":[[0]],"vendor/golang.org/x/text/unicode/norm.isHangulString":[[0]],"vendor/golang.org/x/text/unicode/norm.isHangulWithoutJamoT":[[0]],"vendor/golang.org/x/text/unicode/norm.isJamoVT":[[0]],"vendor/golang.org/x/text/unicode/norm.lastBoundary":[[]],"vendor/golang.org/x/text/unicode/norm.lastRuneStart":[[1],[]],"vendor/golang.org/x/text/unicode/norm.lookupInfoNFC":[[0]],"vendor/golang.org/x/text/unicode/norm.lookupInfoNFKC":[[0]],"vendor/golang.org/x/text/unicode/norm.newNfcTrie":[[]],"vendor/golang.org/x/text/unicode/norm.newNfkcTrie":[[]],"vendor/golang.org/x/text/unicode/norm.nextASCIIBytes":[[0]],"vendor/golang.org/x/text/unicode/norm.nextASCIIString":[[0]],"vendor/golang.org/x/text/unicode/norm.nextCGJCompose":[[0]],"vendor/golang.org/x/text/unicode/norm.nextCGJDecompose":[[0]],"vendor/golang.org/x/text/unicode/norm.nextComposed":[[0]],"vendor/golang.org/x/text/unicode/norm.nextDecomposed":[[0]],"vendor/golang.org/x/text/unicode/norm.nextDone":[[]],"vendor/golang.org/x/text/unicode/norm.nextHangul":[[0]],"vendor/golang.org/x/text/unicode/norm.nextMulti":[[0]],"vendor/golang.org/x/text/unicode/norm.nextMultiNorm":[[0]],"vendor/golang.org/x/text/unicode/norm.patchTail":[[]]}